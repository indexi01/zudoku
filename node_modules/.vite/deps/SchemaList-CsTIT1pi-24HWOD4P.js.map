{
  "version": 3,
  "sources": ["../../zudoku/src/lib/plugins/openapi/SchemaList.tsx"],
  "sourcesContent": ["import slugify from \"@sindresorhus/slugify\";\nimport { useSuspenseQuery } from \"@tanstack/react-query\";\nimport {\n  ChevronRightIcon,\n  ChevronsDownUpIcon,\n  ChevronsUpDownIcon,\n} from \"lucide-react\";\nimport { Button } from \"zudoku/ui/Button.js\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"zudoku/ui/Collapsible.js\";\nimport { CategoryHeading } from \"../../components/CategoryHeading.js\";\nimport { Heading } from \"../../components/Heading.js\";\nimport { Markdown, ProseClasses } from \"../../components/Markdown.js\";\nimport { Toc } from \"../../components/navigation/Toc.js\";\nimport { cn } from \"../../util/cn.js\";\nimport { useCreateQuery } from \"./client/useCreateQuery.js\";\nimport { useOasConfig } from \"./context.js\";\nimport { graphql } from \"./graphql/gql.js\";\nimport { SchemaView } from \"./schema/SchemaView.js\";\n\nconst GET_SCHEMAS = graphql(/* GraphQL */ `\n  query GetSchemas($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      title\n      description\n      summary\n      components {\n        schemas {\n          name\n          schema\n          extensions\n        }\n      }\n    }\n  }\n`);\n\nexport function SchemaList() {\n  const { input, type, versions, version, options } = useOasConfig();\n  const schemasQuery = useCreateQuery(GET_SCHEMAS, {\n    input,\n    type,\n  });\n  const { data } = useSuspenseQuery(schemasQuery);\n\n  const schemas = data.schema.components?.schemas ?? [];\n\n  if (!schemas.length) {\n    return <div>No schemas found</div>;\n  }\n\n  const hasMultipleVersions = Object.entries(versions).length > 1;\n  const showVersions =\n    options?.showVersionSelect === \"always\" ||\n    (hasMultipleVersions && options?.showVersionSelect !== \"hide\");\n\n  return (\n    <div\n      className=\"grid grid-cols-[--sidecar-grid-cols] gap-8 justify-between\"\n      data-pagefind-filter=\"section:openapi\"\n      data-pagefind-meta=\"section:openapi\"\n    >\n      <div className=\"pt-[--padding-content-top] pb-[--padding-content-bottom]\">\n        <Collapsible className=\"w-full\">\n          <div className=\"flex flex-col gap-y-4 sm:flex-row justify-around items-start sm:items-end\">\n            <div className=\"flex-1\">\n              <CategoryHeading>{data.schema.title}</CategoryHeading>\n              <Heading\n                level={1}\n                id=\"schemas\"\n                registerSidebarAnchor\n                className=\"mb-0\"\n              >\n                Schemas\n                {showVersions && (\n                  <span className=\"text-xl text-muted-foreground ml-1.5\">\n                    ({version})\n                  </span>\n                )}\n              </Heading>\n            </div>\n            {data.schema.description && (\n              <CollapsibleTrigger className=\"flex items-center gap-1 text-sm font-medium text-muted-foreground group\">\n                <span>API information</span>\n                <ChevronsUpDownIcon\n                  className=\"group-data-[state=open]:hidden translate-y-px\"\n                  size={14}\n                />\n                <ChevronsDownUpIcon\n                  className=\"group-data-[state=closed]:hidden translate-y-px\"\n                  size={13}\n                />\n              </CollapsibleTrigger>\n            )}\n          </div>\n          {data.schema.description && (\n            <CollapsibleContent className=\"CollapsibleContent\">\n              <div\n                className={cn(\n                  ProseClasses,\n                  \"pt-4 max-w-full prose-img:max-w-prose\",\n                )}\n              >\n                <Markdown\n                  className=\"border rounded bg-muted/25 border-border px-2.5 md:px-4\"\n                  content={data.schema.description}\n                />\n              </div>\n            </CollapsibleContent>\n          )}\n        </Collapsible>\n        <hr className=\"my-8\" />\n        <div className=\"flex flex-col gap-y-5\">\n          {schemas.map((schema) => (\n            <Collapsible key={schema.name} className=\"group\" defaultOpen>\n              <Heading\n                registerSidebarAnchor\n                level={2}\n                className=\"flex items-center gap-1 justify-between w-fit\"\n                id={slugify(schema.name)}\n              >\n                {schema.name}{\" \"}\n                <CollapsibleTrigger asChild>\n                  <Button variant=\"ghost\" size=\"icon\" className=\"size-6\">\n                    <ChevronRightIcon\n                      size={16}\n                      className=\"group-data-[state=open]:rotate-90 transition cursor-pointer\"\n                    />\n                  </Button>\n                </CollapsibleTrigger>\n              </Heading>\n              <CollapsibleContent className=\"mt-4 CollapsibleContent\">\n                <SchemaView schema={schema.schema} />\n              </CollapsibleContent>\n            </Collapsible>\n          ))}\n        </div>\n      </div>\n      <Toc\n        entries={schemas.map((schema) => ({\n          id: slugify(schema.name),\n          value: schema.name,\n          depth: 1,\n        }))}\n      />\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": ["GET_SCHEMAS", "graphql", "SchemaList", "input", "type", "versions", "version", "options", "useOasConfig", "schemasQuery", "useCreateQuery", "data", "useSuspenseQuery", "schemas", "_a", "jsx", "hasMultipleVersions", "showVersions", "jsxs", "Collapsible", "CategoryHeading", "Heading", "CollapsibleTrigger", "ChevronsUpDownIcon", "ChevronsDownUpIcon", "CollapsibleContent", "cn", "ProseClasses", "Markdown", "schema", "slugify", "Button", "ChevronRightIcon", "SchemaView", "Toc"]
}
