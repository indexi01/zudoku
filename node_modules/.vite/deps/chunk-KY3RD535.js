import {
  $,
  Ce,
  CheckboxItem2,
  CollapsibleContent,
  CollapsibleTrigger,
  Combination_default,
  Content,
  Content2 as Content22,
  D,
  FocusScope,
  Group2,
  H as H2,
  Item,
  Item2,
  ItemIndicator2,
  Kt,
  Label2,
  Le,
  Overlay,
  Portal as Portal2,
  Portal2 as Portal22,
  Qe,
  RadioItem2,
  Re,
  Root,
  Root2 as Root3,
  Root23 as Root22,
  Root3 as Root4,
  Separator2,
  SubContent2,
  SubTrigger2,
  Trigger2 as Trigger,
  Wt,
  Ye,
  _t,
  createCollection,
  createRovingFocusGroupScope,
  cs,
  et,
  fs,
  g,
  hideOthers,
  i,
  j,
  j2,
  js,
  l,
  l2,
  ls,
  m,
  p,
  p2,
  s,
  t,
  u,
  useDirection,
  useFocusGuards,
  vt,
  wt,
  x
} from "./chunk-6HIU6SLM.js";
import {
  H,
  an
} from "./chunk-DCQBGROG.js";
import {
  Anchor2 as Anchor,
  Arrow,
  Check,
  ChevronDown,
  ChevronRight,
  ChevronUp,
  Circle,
  CirclePlay,
  Content as Content2,
  DismissableLayer,
  Dot,
  Info,
  Lightbulb,
  LogIn,
  Portal,
  Presence,
  Primitive,
  Root2,
  Search,
  ShieldAlert,
  Slot,
  TriangleAlert,
  VisuallyHidden,
  We,
  X,
  composeEventHandlers,
  composeRefs,
  createContextScope,
  createPopperScope,
  createSlot,
  useCallbackRef,
  useComposedRefs,
  useControllableState,
  useId,
  useLayoutEffect2,
  useSize
} from "./chunk-VSGZQHBI.js";
import {
  require_jsx_runtime
} from "./chunk-LYJUZW3I.js";
import {
  ae
} from "./chunk-T7IJB7TU.js";
import {
  require_react_dom
} from "./chunk-VJA3Q2RH.js";
import {
  require_react
} from "./chunk-TJE776R7.js";
import {
  __toESM
} from "./chunk-WOOG5QLI.js";

// node_modules/zudoku/lib/Select-Dg5R11Dx.js
var l3 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-select/dist/index.mjs
var React2 = __toESM(require_react(), 1);
var ReactDOM = __toESM(require_react_dom(), 1);

// node_modules/@radix-ui/number/dist/index.mjs
function clamp(value, [min, max]) {
  return Math.min(max, Math.max(min, value));
}

// node_modules/@radix-ui/react-use-previous/dist/index.mjs
var React = __toESM(require_react(), 1);
function usePrevious(value) {
  const ref = React.useRef({ value, previous: value });
  return React.useMemo(() => {
    if (ref.current.value !== value) {
      ref.current.previous = ref.current.value;
      ref.current.value = value;
    }
    return ref.current.previous;
  }, [value]);
}

// node_modules/@radix-ui/react-select/dist/index.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var OPEN_KEYS = [" ", "Enter", "ArrowUp", "ArrowDown"];
var SELECTION_KEYS = [" ", "Enter"];
var SELECT_NAME = "Select";
var [Collection, useCollection, createCollectionScope] = createCollection(SELECT_NAME);
var [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [
  createCollectionScope,
  createPopperScope
]);
var usePopperScope = createPopperScope();
var [SelectProvider, useSelectContext] = createSelectContext(SELECT_NAME);
var [SelectNativeOptionsProvider, useSelectNativeOptionsContext] = createSelectContext(SELECT_NAME);
var Select = (props) => {
  const {
    __scopeSelect,
    children,
    open: openProp,
    defaultOpen,
    onOpenChange,
    value: valueProp,
    defaultValue,
    onValueChange,
    dir,
    name,
    autoComplete,
    disabled,
    required,
    form
  } = props;
  const popperScope = usePopperScope(__scopeSelect);
  const [trigger, setTrigger] = React2.useState(null);
  const [valueNode, setValueNode] = React2.useState(null);
  const [valueNodeHasChildren, setValueNodeHasChildren] = React2.useState(false);
  const direction = useDirection(dir);
  const [open = false, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  const [value, setValue] = useControllableState({
    prop: valueProp,
    defaultProp: defaultValue,
    onChange: onValueChange
  });
  const triggerPointerDownPosRef = React2.useRef(null);
  const isFormControl = trigger ? form || !!trigger.closest("form") : true;
  const [nativeOptionsSet, setNativeOptionsSet] = React2.useState(/* @__PURE__ */ new Set());
  const nativeSelectKey = Array.from(nativeOptionsSet).map((option) => option.props.value).join(";");
  return (0, import_jsx_runtime.jsx)(Root2, { ...popperScope, children: (0, import_jsx_runtime.jsxs)(
    SelectProvider,
    {
      required,
      scope: __scopeSelect,
      trigger,
      onTriggerChange: setTrigger,
      valueNode,
      onValueNodeChange: setValueNode,
      valueNodeHasChildren,
      onValueNodeHasChildrenChange: setValueNodeHasChildren,
      contentId: useId(),
      value,
      onValueChange: setValue,
      open,
      onOpenChange: setOpen,
      dir: direction,
      triggerPointerDownPosRef,
      disabled,
      children: [
        (0, import_jsx_runtime.jsx)(Collection.Provider, { scope: __scopeSelect, children: (0, import_jsx_runtime.jsx)(
          SelectNativeOptionsProvider,
          {
            scope: props.__scopeSelect,
            onNativeOptionAdd: React2.useCallback((option) => {
              setNativeOptionsSet((prev) => new Set(prev).add(option));
            }, []),
            onNativeOptionRemove: React2.useCallback((option) => {
              setNativeOptionsSet((prev) => {
                const optionsSet = new Set(prev);
                optionsSet.delete(option);
                return optionsSet;
              });
            }, []),
            children
          }
        ) }),
        isFormControl ? (0, import_jsx_runtime.jsxs)(
          BubbleSelect,
          {
            "aria-hidden": true,
            required,
            tabIndex: -1,
            name,
            autoComplete,
            value,
            onChange: (event) => setValue(event.target.value),
            disabled,
            form,
            children: [
              value === void 0 ? (0, import_jsx_runtime.jsx)("option", { value: "" }) : null,
              Array.from(nativeOptionsSet)
            ]
          },
          nativeSelectKey
        ) : null
      ]
    }
  ) });
};
Select.displayName = SELECT_NAME;
var TRIGGER_NAME = "SelectTrigger";
var SelectTrigger = React2.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, disabled = false, ...triggerProps } = props;
    const popperScope = usePopperScope(__scopeSelect);
    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);
    const isDisabled = context.disabled || disabled;
    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);
    const getItems = useCollection(__scopeSelect);
    const pointerTypeRef = React2.useRef("touch");
    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {
      const enabledItems = getItems().filter((item) => !item.disabled);
      const currentItem = enabledItems.find((item) => item.value === context.value);
      const nextItem = findNextItem(enabledItems, search, currentItem);
      if (nextItem !== void 0) {
        context.onValueChange(nextItem.value);
      }
    });
    const handleOpen = (pointerEvent) => {
      if (!isDisabled) {
        context.onOpenChange(true);
        resetTypeahead();
      }
      if (pointerEvent) {
        context.triggerPointerDownPosRef.current = {
          x: Math.round(pointerEvent.pageX),
          y: Math.round(pointerEvent.pageY)
        };
      }
    };
    return (0, import_jsx_runtime.jsx)(Anchor, { asChild: true, ...popperScope, children: (0, import_jsx_runtime.jsx)(
      Primitive.button,
      {
        type: "button",
        role: "combobox",
        "aria-controls": context.contentId,
        "aria-expanded": context.open,
        "aria-required": context.required,
        "aria-autocomplete": "none",
        dir: context.dir,
        "data-state": context.open ? "open" : "closed",
        disabled: isDisabled,
        "data-disabled": isDisabled ? "" : void 0,
        "data-placeholder": shouldShowPlaceholder(context.value) ? "" : void 0,
        ...triggerProps,
        ref: composedRefs,
        onClick: composeEventHandlers(triggerProps.onClick, (event) => {
          event.currentTarget.focus();
          if (pointerTypeRef.current !== "mouse") {
            handleOpen(event);
          }
        }),
        onPointerDown: composeEventHandlers(triggerProps.onPointerDown, (event) => {
          pointerTypeRef.current = event.pointerType;
          const target = event.target;
          if (target.hasPointerCapture(event.pointerId)) {
            target.releasePointerCapture(event.pointerId);
          }
          if (event.button === 0 && event.ctrlKey === false && event.pointerType === "mouse") {
            handleOpen(event);
            event.preventDefault();
          }
        }),
        onKeyDown: composeEventHandlers(triggerProps.onKeyDown, (event) => {
          const isTypingAhead = searchRef.current !== "";
          const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
          if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);
          if (isTypingAhead && event.key === " ") return;
          if (OPEN_KEYS.includes(event.key)) {
            handleOpen();
            event.preventDefault();
          }
        })
      }
    ) });
  }
);
SelectTrigger.displayName = TRIGGER_NAME;
var VALUE_NAME = "SelectValue";
var SelectValue = React2.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, className, style, children, placeholder = "", ...valueProps } = props;
    const context = useSelectContext(VALUE_NAME, __scopeSelect);
    const { onValueNodeHasChildrenChange } = context;
    const hasChildren = children !== void 0;
    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);
    useLayoutEffect2(() => {
      onValueNodeHasChildrenChange(hasChildren);
    }, [onValueNodeHasChildrenChange, hasChildren]);
    return (0, import_jsx_runtime.jsx)(
      Primitive.span,
      {
        ...valueProps,
        ref: composedRefs,
        style: { pointerEvents: "none" },
        children: shouldShowPlaceholder(context.value) ? (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: placeholder }) : children
      }
    );
  }
);
SelectValue.displayName = VALUE_NAME;
var ICON_NAME = "SelectIcon";
var SelectIcon = React2.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, children, ...iconProps } = props;
    return (0, import_jsx_runtime.jsx)(Primitive.span, { "aria-hidden": true, ...iconProps, ref: forwardedRef, children: children || "▼" });
  }
);
SelectIcon.displayName = ICON_NAME;
var PORTAL_NAME = "SelectPortal";
var SelectPortal = (props) => {
  return (0, import_jsx_runtime.jsx)(Portal, { asChild: true, ...props });
};
SelectPortal.displayName = PORTAL_NAME;
var CONTENT_NAME = "SelectContent";
var SelectContent = React2.forwardRef(
  (props, forwardedRef) => {
    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);
    const [fragment, setFragment] = React2.useState();
    useLayoutEffect2(() => {
      setFragment(new DocumentFragment());
    }, []);
    if (!context.open) {
      const frag = fragment;
      return frag ? ReactDOM.createPortal(
        (0, import_jsx_runtime.jsx)(SelectContentProvider, { scope: props.__scopeSelect, children: (0, import_jsx_runtime.jsx)(Collection.Slot, { scope: props.__scopeSelect, children: (0, import_jsx_runtime.jsx)("div", { children: props.children }) }) }),
        frag
      ) : null;
    }
    return (0, import_jsx_runtime.jsx)(SelectContentImpl, { ...props, ref: forwardedRef });
  }
);
SelectContent.displayName = CONTENT_NAME;
var CONTENT_MARGIN = 10;
var [SelectContentProvider, useSelectContentContext] = createSelectContext(CONTENT_NAME);
var CONTENT_IMPL_NAME = "SelectContentImpl";
var Slot2 = createSlot("SelectContent.RemoveScroll");
var SelectContentImpl = React2.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeSelect,
      position = "item-aligned",
      onCloseAutoFocus,
      onEscapeKeyDown,
      onPointerDownOutside,
      //
      // PopperContent props
      side,
      sideOffset,
      align,
      alignOffset,
      arrowPadding,
      collisionBoundary,
      collisionPadding,
      sticky,
      hideWhenDetached,
      avoidCollisions,
      //
      ...contentProps
    } = props;
    const context = useSelectContext(CONTENT_NAME, __scopeSelect);
    const [content, setContent] = React2.useState(null);
    const [viewport, setViewport] = React2.useState(null);
    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));
    const [selectedItem, setSelectedItem] = React2.useState(null);
    const [selectedItemText, setSelectedItemText] = React2.useState(
      null
    );
    const getItems = useCollection(__scopeSelect);
    const [isPositioned, setIsPositioned] = React2.useState(false);
    const firstValidItemFoundRef = React2.useRef(false);
    React2.useEffect(() => {
      if (content) return hideOthers(content);
    }, [content]);
    useFocusGuards();
    const focusFirst = React2.useCallback(
      (candidates) => {
        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);
        const [lastItem] = restItems.slice(-1);
        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
        for (const candidate of candidates) {
          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
          candidate == null ? void 0 : candidate.scrollIntoView({ block: "nearest" });
          if (candidate === firstItem && viewport) viewport.scrollTop = 0;
          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;
          candidate == null ? void 0 : candidate.focus();
          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
        }
      },
      [getItems, viewport]
    );
    const focusSelectedItem = React2.useCallback(
      () => focusFirst([selectedItem, content]),
      [focusFirst, selectedItem, content]
    );
    React2.useEffect(() => {
      if (isPositioned) {
        focusSelectedItem();
      }
    }, [isPositioned, focusSelectedItem]);
    const { onOpenChange, triggerPointerDownPosRef } = context;
    React2.useEffect(() => {
      if (content) {
        let pointerMoveDelta = { x: 0, y: 0 };
        const handlePointerMove = (event) => {
          var _a, _b;
          pointerMoveDelta = {
            x: Math.abs(Math.round(event.pageX) - (((_a = triggerPointerDownPosRef.current) == null ? void 0 : _a.x) ?? 0)),
            y: Math.abs(Math.round(event.pageY) - (((_b = triggerPointerDownPosRef.current) == null ? void 0 : _b.y) ?? 0))
          };
        };
        const handlePointerUp = (event) => {
          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {
            event.preventDefault();
          } else {
            if (!content.contains(event.target)) {
              onOpenChange(false);
            }
          }
          document.removeEventListener("pointermove", handlePointerMove);
          triggerPointerDownPosRef.current = null;
        };
        if (triggerPointerDownPosRef.current !== null) {
          document.addEventListener("pointermove", handlePointerMove);
          document.addEventListener("pointerup", handlePointerUp, { capture: true, once: true });
        }
        return () => {
          document.removeEventListener("pointermove", handlePointerMove);
          document.removeEventListener("pointerup", handlePointerUp, { capture: true });
        };
      }
    }, [content, onOpenChange, triggerPointerDownPosRef]);
    React2.useEffect(() => {
      const close = () => onOpenChange(false);
      window.addEventListener("blur", close);
      window.addEventListener("resize", close);
      return () => {
        window.removeEventListener("blur", close);
        window.removeEventListener("resize", close);
      };
    }, [onOpenChange]);
    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {
      const enabledItems = getItems().filter((item) => !item.disabled);
      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);
      const nextItem = findNextItem(enabledItems, search, currentItem);
      if (nextItem) {
        setTimeout(() => nextItem.ref.current.focus());
      }
    });
    const itemRefCallback = React2.useCallback(
      (node, value, disabled) => {
        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
        const isSelectedItem = context.value !== void 0 && context.value === value;
        if (isSelectedItem || isFirstValidItem) {
          setSelectedItem(node);
          if (isFirstValidItem) firstValidItemFoundRef.current = true;
        }
      },
      [context.value]
    );
    const handleItemLeave = React2.useCallback(() => content == null ? void 0 : content.focus(), [content]);
    const itemTextRefCallback = React2.useCallback(
      (node, value, disabled) => {
        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
        const isSelectedItem = context.value !== void 0 && context.value === value;
        if (isSelectedItem || isFirstValidItem) {
          setSelectedItemText(node);
        }
      },
      [context.value]
    );
    const SelectPosition = position === "popper" ? SelectPopperPosition : SelectItemAlignedPosition;
    const popperContentProps = SelectPosition === SelectPopperPosition ? {
      side,
      sideOffset,
      align,
      alignOffset,
      arrowPadding,
      collisionBoundary,
      collisionPadding,
      sticky,
      hideWhenDetached,
      avoidCollisions
    } : {};
    return (0, import_jsx_runtime.jsx)(
      SelectContentProvider,
      {
        scope: __scopeSelect,
        content,
        viewport,
        onViewportChange: setViewport,
        itemRefCallback,
        selectedItem,
        onItemLeave: handleItemLeave,
        itemTextRefCallback,
        focusSelectedItem,
        selectedItemText,
        position,
        isPositioned,
        searchRef,
        children: (0, import_jsx_runtime.jsx)(Combination_default, { as: Slot2, allowPinchZoom: true, children: (0, import_jsx_runtime.jsx)(
          FocusScope,
          {
            asChild: true,
            trapped: context.open,
            onMountAutoFocus: (event) => {
              event.preventDefault();
            },
            onUnmountAutoFocus: composeEventHandlers(onCloseAutoFocus, (event) => {
              var _a;
              (_a = context.trigger) == null ? void 0 : _a.focus({ preventScroll: true });
              event.preventDefault();
            }),
            children: (0, import_jsx_runtime.jsx)(
              DismissableLayer,
              {
                asChild: true,
                disableOutsidePointerEvents: true,
                onEscapeKeyDown,
                onPointerDownOutside,
                onFocusOutside: (event) => event.preventDefault(),
                onDismiss: () => context.onOpenChange(false),
                children: (0, import_jsx_runtime.jsx)(
                  SelectPosition,
                  {
                    role: "listbox",
                    id: context.contentId,
                    "data-state": context.open ? "open" : "closed",
                    dir: context.dir,
                    onContextMenu: (event) => event.preventDefault(),
                    ...contentProps,
                    ...popperContentProps,
                    onPlaced: () => setIsPositioned(true),
                    ref: composedRefs,
                    style: {
                      // flex layout so we can place the scroll buttons properly
                      display: "flex",
                      flexDirection: "column",
                      // reset the outline by default as the content MAY get focused
                      outline: "none",
                      ...contentProps.style
                    },
                    onKeyDown: composeEventHandlers(contentProps.onKeyDown, (event) => {
                      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
                      if (event.key === "Tab") event.preventDefault();
                      if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);
                      if (["ArrowUp", "ArrowDown", "Home", "End"].includes(event.key)) {
                        const items = getItems().filter((item) => !item.disabled);
                        let candidateNodes = items.map((item) => item.ref.current);
                        if (["ArrowUp", "End"].includes(event.key)) {
                          candidateNodes = candidateNodes.slice().reverse();
                        }
                        if (["ArrowUp", "ArrowDown"].includes(event.key)) {
                          const currentElement = event.target;
                          const currentIndex = candidateNodes.indexOf(currentElement);
                          candidateNodes = candidateNodes.slice(currentIndex + 1);
                        }
                        setTimeout(() => focusFirst(candidateNodes));
                        event.preventDefault();
                      }
                    })
                  }
                )
              }
            )
          }
        ) })
      }
    );
  }
);
SelectContentImpl.displayName = CONTENT_IMPL_NAME;
var ITEM_ALIGNED_POSITION_NAME = "SelectItemAlignedPosition";
var SelectItemAlignedPosition = React2.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, onPlaced, ...popperProps } = props;
  const context = useSelectContext(CONTENT_NAME, __scopeSelect);
  const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);
  const [contentWrapper, setContentWrapper] = React2.useState(null);
  const [content, setContent] = React2.useState(null);
  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));
  const getItems = useCollection(__scopeSelect);
  const shouldExpandOnScrollRef = React2.useRef(false);
  const shouldRepositionRef = React2.useRef(true);
  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;
  const position = React2.useCallback(() => {
    if (context.trigger && context.valueNode && contentWrapper && content && viewport && selectedItem && selectedItemText) {
      const triggerRect = context.trigger.getBoundingClientRect();
      const contentRect = content.getBoundingClientRect();
      const valueNodeRect = context.valueNode.getBoundingClientRect();
      const itemTextRect = selectedItemText.getBoundingClientRect();
      if (context.dir !== "rtl") {
        const itemTextOffset = itemTextRect.left - contentRect.left;
        const left = valueNodeRect.left - itemTextOffset;
        const leftDelta = triggerRect.left - left;
        const minContentWidth = triggerRect.width + leftDelta;
        const contentWidth = Math.max(minContentWidth, contentRect.width);
        const rightEdge = window.innerWidth - CONTENT_MARGIN;
        const clampedLeft = clamp(left, [
          CONTENT_MARGIN,
          // Prevents the content from going off the starting edge of the
          // viewport. It may still go off the ending edge, but this can be
          // controlled by the user since they may want to manage overflow in a
          // specific way.
          // https://github.com/radix-ui/primitives/issues/2049
          Math.max(CONTENT_MARGIN, rightEdge - contentWidth)
        ]);
        contentWrapper.style.minWidth = minContentWidth + "px";
        contentWrapper.style.left = clampedLeft + "px";
      } else {
        const itemTextOffset = contentRect.right - itemTextRect.right;
        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;
        const rightDelta = window.innerWidth - triggerRect.right - right;
        const minContentWidth = triggerRect.width + rightDelta;
        const contentWidth = Math.max(minContentWidth, contentRect.width);
        const leftEdge = window.innerWidth - CONTENT_MARGIN;
        const clampedRight = clamp(right, [
          CONTENT_MARGIN,
          Math.max(CONTENT_MARGIN, leftEdge - contentWidth)
        ]);
        contentWrapper.style.minWidth = minContentWidth + "px";
        contentWrapper.style.right = clampedRight + "px";
      }
      const items = getItems();
      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;
      const itemsHeight = viewport.scrollHeight;
      const contentStyles = window.getComputedStyle(content);
      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);
      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);
      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);
      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);
      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth;
      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);
      const viewportStyles = window.getComputedStyle(viewport);
      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);
      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);
      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;
      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;
      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;
      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;
      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;
      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;
      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;
      if (willAlignWithoutTopOverflow) {
        const isLastItem = items.length > 0 && selectedItem === items[items.length - 1].ref.current;
        contentWrapper.style.bottom = "0px";
        const viewportOffsetBottom = content.clientHeight - viewport.offsetTop - viewport.offsetHeight;
        const clampedTriggerMiddleToBottomEdge = Math.max(
          triggerMiddleToBottomEdge,
          selectedItemHalfHeight + // viewport might have padding bottom, include it to avoid a scrollable viewport
          (isLastItem ? viewportPaddingBottom : 0) + viewportOffsetBottom + contentBorderBottomWidth
        );
        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;
        contentWrapper.style.height = height + "px";
      } else {
        const isFirstItem = items.length > 0 && selectedItem === items[0].ref.current;
        contentWrapper.style.top = "0px";
        const clampedTopEdgeToTriggerMiddle = Math.max(
          topEdgeToTriggerMiddle,
          contentBorderTopWidth + viewport.offsetTop + // viewport might have padding top, include it to avoid a scrollable viewport
          (isFirstItem ? viewportPaddingTop : 0) + selectedItemHalfHeight
        );
        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;
        contentWrapper.style.height = height + "px";
        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;
      }
      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;
      contentWrapper.style.minHeight = minContentHeight + "px";
      contentWrapper.style.maxHeight = availableHeight + "px";
      onPlaced == null ? void 0 : onPlaced();
      requestAnimationFrame(() => shouldExpandOnScrollRef.current = true);
    }
  }, [
    getItems,
    context.trigger,
    context.valueNode,
    contentWrapper,
    content,
    viewport,
    selectedItem,
    selectedItemText,
    context.dir,
    onPlaced
  ]);
  useLayoutEffect2(() => position(), [position]);
  const [contentZIndex, setContentZIndex] = React2.useState();
  useLayoutEffect2(() => {
    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);
  }, [content]);
  const handleScrollButtonChange = React2.useCallback(
    (node) => {
      if (node && shouldRepositionRef.current === true) {
        position();
        focusSelectedItem == null ? void 0 : focusSelectedItem();
        shouldRepositionRef.current = false;
      }
    },
    [position, focusSelectedItem]
  );
  return (0, import_jsx_runtime.jsx)(
    SelectViewportProvider,
    {
      scope: __scopeSelect,
      contentWrapper,
      shouldExpandOnScrollRef,
      onScrollButtonChange: handleScrollButtonChange,
      children: (0, import_jsx_runtime.jsx)(
        "div",
        {
          ref: setContentWrapper,
          style: {
            display: "flex",
            flexDirection: "column",
            position: "fixed",
            zIndex: contentZIndex
          },
          children: (0, import_jsx_runtime.jsx)(
            Primitive.div,
            {
              ...popperProps,
              ref: composedRefs,
              style: {
                // When we get the height of the content, it includes borders. If we were to set
                // the height without having `boxSizing: 'border-box'` it would be too big.
                boxSizing: "border-box",
                // We need to ensure the content doesn't get taller than the wrapper
                maxHeight: "100%",
                ...popperProps.style
              }
            }
          )
        }
      )
    }
  );
});
SelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;
var POPPER_POSITION_NAME = "SelectPopperPosition";
var SelectPopperPosition = React2.forwardRef((props, forwardedRef) => {
  const {
    __scopeSelect,
    align = "start",
    collisionPadding = CONTENT_MARGIN,
    ...popperProps
  } = props;
  const popperScope = usePopperScope(__scopeSelect);
  return (0, import_jsx_runtime.jsx)(
    Content2,
    {
      ...popperScope,
      ...popperProps,
      ref: forwardedRef,
      align,
      collisionPadding,
      style: {
        // Ensure border-box for floating-ui calculations
        boxSizing: "border-box",
        ...popperProps.style,
        // re-namespace exposed content custom properties
        ...{
          "--radix-select-content-transform-origin": "var(--radix-popper-transform-origin)",
          "--radix-select-content-available-width": "var(--radix-popper-available-width)",
          "--radix-select-content-available-height": "var(--radix-popper-available-height)",
          "--radix-select-trigger-width": "var(--radix-popper-anchor-width)",
          "--radix-select-trigger-height": "var(--radix-popper-anchor-height)"
        }
      }
    }
  );
});
SelectPopperPosition.displayName = POPPER_POSITION_NAME;
var [SelectViewportProvider, useSelectViewportContext] = createSelectContext(CONTENT_NAME, {});
var VIEWPORT_NAME = "SelectViewport";
var SelectViewport = React2.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, nonce, ...viewportProps } = props;
    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);
    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);
    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);
    const prevScrollTopRef = React2.useRef(0);
    return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      (0, import_jsx_runtime.jsx)(
        "style",
        {
          dangerouslySetInnerHTML: {
            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`
          },
          nonce
        }
      ),
      (0, import_jsx_runtime.jsx)(Collection.Slot, { scope: __scopeSelect, children: (0, import_jsx_runtime.jsx)(
        Primitive.div,
        {
          "data-radix-select-viewport": "",
          role: "presentation",
          ...viewportProps,
          ref: composedRefs,
          style: {
            // we use position: 'relative' here on the `viewport` so that when we call
            // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport
            // (independent of the scrollUpButton).
            position: "relative",
            flex: 1,
            // Viewport should only be scrollable in the vertical direction.
            // This won't work in vertical writing modes, so we'll need to
            // revisit this if/when that is supported
            // https://developer.chrome.com/blog/vertical-form-controls
            overflow: "hidden auto",
            ...viewportProps.style
          },
          onScroll: composeEventHandlers(viewportProps.onScroll, (event) => {
            const viewport = event.currentTarget;
            const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;
            if ((shouldExpandOnScrollRef == null ? void 0 : shouldExpandOnScrollRef.current) && contentWrapper) {
              const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);
              if (scrolledBy > 0) {
                const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;
                const cssMinHeight = parseFloat(contentWrapper.style.minHeight);
                const cssHeight = parseFloat(contentWrapper.style.height);
                const prevHeight = Math.max(cssMinHeight, cssHeight);
                if (prevHeight < availableHeight) {
                  const nextHeight = prevHeight + scrolledBy;
                  const clampedNextHeight = Math.min(availableHeight, nextHeight);
                  const heightDiff = nextHeight - clampedNextHeight;
                  contentWrapper.style.height = clampedNextHeight + "px";
                  if (contentWrapper.style.bottom === "0px") {
                    viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;
                    contentWrapper.style.justifyContent = "flex-end";
                  }
                }
              }
            }
            prevScrollTopRef.current = viewport.scrollTop;
          })
        }
      ) })
    ] });
  }
);
SelectViewport.displayName = VIEWPORT_NAME;
var GROUP_NAME = "SelectGroup";
var [SelectGroupContextProvider, useSelectGroupContext] = createSelectContext(GROUP_NAME);
var SelectGroup = React2.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, ...groupProps } = props;
    const groupId = useId();
    return (0, import_jsx_runtime.jsx)(SelectGroupContextProvider, { scope: __scopeSelect, id: groupId, children: (0, import_jsx_runtime.jsx)(Primitive.div, { role: "group", "aria-labelledby": groupId, ...groupProps, ref: forwardedRef }) });
  }
);
SelectGroup.displayName = GROUP_NAME;
var LABEL_NAME = "SelectLabel";
var SelectLabel = React2.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, ...labelProps } = props;
    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);
    return (0, import_jsx_runtime.jsx)(Primitive.div, { id: groupContext.id, ...labelProps, ref: forwardedRef });
  }
);
SelectLabel.displayName = LABEL_NAME;
var ITEM_NAME = "SelectItem";
var [SelectItemContextProvider, useSelectItemContext] = createSelectContext(ITEM_NAME);
var SelectItem = React2.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeSelect,
      value,
      disabled = false,
      textValue: textValueProp,
      ...itemProps
    } = props;
    const context = useSelectContext(ITEM_NAME, __scopeSelect);
    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);
    const isSelected = context.value === value;
    const [textValue, setTextValue] = React2.useState(textValueProp ?? "");
    const [isFocused, setIsFocused] = React2.useState(false);
    const composedRefs = useComposedRefs(
      forwardedRef,
      (node) => {
        var _a;
        return (_a = contentContext.itemRefCallback) == null ? void 0 : _a.call(contentContext, node, value, disabled);
      }
    );
    const textId = useId();
    const pointerTypeRef = React2.useRef("touch");
    const handleSelect = () => {
      if (!disabled) {
        context.onValueChange(value);
        context.onOpenChange(false);
      }
    };
    if (value === "") {
      throw new Error(
        "A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder."
      );
    }
    return (0, import_jsx_runtime.jsx)(
      SelectItemContextProvider,
      {
        scope: __scopeSelect,
        value,
        disabled,
        textId,
        isSelected,
        onItemTextChange: React2.useCallback((node) => {
          setTextValue((prevTextValue) => prevTextValue || ((node == null ? void 0 : node.textContent) ?? "").trim());
        }, []),
        children: (0, import_jsx_runtime.jsx)(
          Collection.ItemSlot,
          {
            scope: __scopeSelect,
            value,
            disabled,
            textValue,
            children: (0, import_jsx_runtime.jsx)(
              Primitive.div,
              {
                role: "option",
                "aria-labelledby": textId,
                "data-highlighted": isFocused ? "" : void 0,
                "aria-selected": isSelected && isFocused,
                "data-state": isSelected ? "checked" : "unchecked",
                "aria-disabled": disabled || void 0,
                "data-disabled": disabled ? "" : void 0,
                tabIndex: disabled ? void 0 : -1,
                ...itemProps,
                ref: composedRefs,
                onFocus: composeEventHandlers(itemProps.onFocus, () => setIsFocused(true)),
                onBlur: composeEventHandlers(itemProps.onBlur, () => setIsFocused(false)),
                onClick: composeEventHandlers(itemProps.onClick, () => {
                  if (pointerTypeRef.current !== "mouse") handleSelect();
                }),
                onPointerUp: composeEventHandlers(itemProps.onPointerUp, () => {
                  if (pointerTypeRef.current === "mouse") handleSelect();
                }),
                onPointerDown: composeEventHandlers(itemProps.onPointerDown, (event) => {
                  pointerTypeRef.current = event.pointerType;
                }),
                onPointerMove: composeEventHandlers(itemProps.onPointerMove, (event) => {
                  var _a;
                  pointerTypeRef.current = event.pointerType;
                  if (disabled) {
                    (_a = contentContext.onItemLeave) == null ? void 0 : _a.call(contentContext);
                  } else if (pointerTypeRef.current === "mouse") {
                    event.currentTarget.focus({ preventScroll: true });
                  }
                }),
                onPointerLeave: composeEventHandlers(itemProps.onPointerLeave, (event) => {
                  var _a;
                  if (event.currentTarget === document.activeElement) {
                    (_a = contentContext.onItemLeave) == null ? void 0 : _a.call(contentContext);
                  }
                }),
                onKeyDown: composeEventHandlers(itemProps.onKeyDown, (event) => {
                  var _a;
                  const isTypingAhead = ((_a = contentContext.searchRef) == null ? void 0 : _a.current) !== "";
                  if (isTypingAhead && event.key === " ") return;
                  if (SELECTION_KEYS.includes(event.key)) handleSelect();
                  if (event.key === " ") event.preventDefault();
                })
              }
            )
          }
        )
      }
    );
  }
);
SelectItem.displayName = ITEM_NAME;
var ITEM_TEXT_NAME = "SelectItemText";
var SelectItemText = React2.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, className, style, ...itemTextProps } = props;
    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);
    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);
    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);
    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);
    const [itemTextNode, setItemTextNode] = React2.useState(null);
    const composedRefs = useComposedRefs(
      forwardedRef,
      (node) => setItemTextNode(node),
      itemContext.onItemTextChange,
      (node) => {
        var _a;
        return (_a = contentContext.itemTextRefCallback) == null ? void 0 : _a.call(contentContext, node, itemContext.value, itemContext.disabled);
      }
    );
    const textContent = itemTextNode == null ? void 0 : itemTextNode.textContent;
    const nativeOption = React2.useMemo(
      () => (0, import_jsx_runtime.jsx)("option", { value: itemContext.value, disabled: itemContext.disabled, children: textContent }, itemContext.value),
      [itemContext.disabled, itemContext.value, textContent]
    );
    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;
    useLayoutEffect2(() => {
      onNativeOptionAdd(nativeOption);
      return () => onNativeOptionRemove(nativeOption);
    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);
    return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      (0, import_jsx_runtime.jsx)(Primitive.span, { id: itemContext.textId, ...itemTextProps, ref: composedRefs }),
      itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren ? ReactDOM.createPortal(itemTextProps.children, context.valueNode) : null
    ] });
  }
);
SelectItemText.displayName = ITEM_TEXT_NAME;
var ITEM_INDICATOR_NAME = "SelectItemIndicator";
var SelectItemIndicator = React2.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, ...itemIndicatorProps } = props;
    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);
    return itemContext.isSelected ? (0, import_jsx_runtime.jsx)(Primitive.span, { "aria-hidden": true, ...itemIndicatorProps, ref: forwardedRef }) : null;
  }
);
SelectItemIndicator.displayName = ITEM_INDICATOR_NAME;
var SCROLL_UP_BUTTON_NAME = "SelectScrollUpButton";
var SelectScrollUpButton = React2.forwardRef((props, forwardedRef) => {
  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);
  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);
  const [canScrollUp, setCanScrollUp] = React2.useState(false);
  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);
  useLayoutEffect2(() => {
    if (contentContext.viewport && contentContext.isPositioned) {
      let handleScroll2 = function() {
        const canScrollUp2 = viewport.scrollTop > 0;
        setCanScrollUp(canScrollUp2);
      };
      var handleScroll = handleScroll2;
      const viewport = contentContext.viewport;
      handleScroll2();
      viewport.addEventListener("scroll", handleScroll2);
      return () => viewport.removeEventListener("scroll", handleScroll2);
    }
  }, [contentContext.viewport, contentContext.isPositioned]);
  return canScrollUp ? (0, import_jsx_runtime.jsx)(
    SelectScrollButtonImpl,
    {
      ...props,
      ref: composedRefs,
      onAutoScroll: () => {
        const { viewport, selectedItem } = contentContext;
        if (viewport && selectedItem) {
          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;
        }
      }
    }
  ) : null;
});
SelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;
var SCROLL_DOWN_BUTTON_NAME = "SelectScrollDownButton";
var SelectScrollDownButton = React2.forwardRef((props, forwardedRef) => {
  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);
  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);
  const [canScrollDown, setCanScrollDown] = React2.useState(false);
  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);
  useLayoutEffect2(() => {
    if (contentContext.viewport && contentContext.isPositioned) {
      let handleScroll2 = function() {
        const maxScroll = viewport.scrollHeight - viewport.clientHeight;
        const canScrollDown2 = Math.ceil(viewport.scrollTop) < maxScroll;
        setCanScrollDown(canScrollDown2);
      };
      var handleScroll = handleScroll2;
      const viewport = contentContext.viewport;
      handleScroll2();
      viewport.addEventListener("scroll", handleScroll2);
      return () => viewport.removeEventListener("scroll", handleScroll2);
    }
  }, [contentContext.viewport, contentContext.isPositioned]);
  return canScrollDown ? (0, import_jsx_runtime.jsx)(
    SelectScrollButtonImpl,
    {
      ...props,
      ref: composedRefs,
      onAutoScroll: () => {
        const { viewport, selectedItem } = contentContext;
        if (viewport && selectedItem) {
          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;
        }
      }
    }
  ) : null;
});
SelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;
var SelectScrollButtonImpl = React2.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;
  const contentContext = useSelectContentContext("SelectScrollButton", __scopeSelect);
  const autoScrollTimerRef = React2.useRef(null);
  const getItems = useCollection(__scopeSelect);
  const clearAutoScrollTimer = React2.useCallback(() => {
    if (autoScrollTimerRef.current !== null) {
      window.clearInterval(autoScrollTimerRef.current);
      autoScrollTimerRef.current = null;
    }
  }, []);
  React2.useEffect(() => {
    return () => clearAutoScrollTimer();
  }, [clearAutoScrollTimer]);
  useLayoutEffect2(() => {
    var _a;
    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);
    (_a = activeItem == null ? void 0 : activeItem.ref.current) == null ? void 0 : _a.scrollIntoView({ block: "nearest" });
  }, [getItems]);
  return (0, import_jsx_runtime.jsx)(
    Primitive.div,
    {
      "aria-hidden": true,
      ...scrollIndicatorProps,
      ref: forwardedRef,
      style: { flexShrink: 0, ...scrollIndicatorProps.style },
      onPointerDown: composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {
        if (autoScrollTimerRef.current === null) {
          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);
        }
      }),
      onPointerMove: composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {
        var _a;
        (_a = contentContext.onItemLeave) == null ? void 0 : _a.call(contentContext);
        if (autoScrollTimerRef.current === null) {
          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);
        }
      }),
      onPointerLeave: composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {
        clearAutoScrollTimer();
      })
    }
  );
});
var SEPARATOR_NAME = "SelectSeparator";
var SelectSeparator = React2.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, ...separatorProps } = props;
    return (0, import_jsx_runtime.jsx)(Primitive.div, { "aria-hidden": true, ...separatorProps, ref: forwardedRef });
  }
);
SelectSeparator.displayName = SEPARATOR_NAME;
var ARROW_NAME = "SelectArrow";
var SelectArrow = React2.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, ...arrowProps } = props;
    const popperScope = usePopperScope(__scopeSelect);
    const context = useSelectContext(ARROW_NAME, __scopeSelect);
    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);
    return context.open && contentContext.position === "popper" ? (0, import_jsx_runtime.jsx)(Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef }) : null;
  }
);
SelectArrow.displayName = ARROW_NAME;
function shouldShowPlaceholder(value) {
  return value === "" || value === void 0;
}
var BubbleSelect = React2.forwardRef(
  (props, forwardedRef) => {
    const { value, ...selectProps } = props;
    const ref = React2.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    const prevValue = usePrevious(value);
    React2.useEffect(() => {
      const select = ref.current;
      const selectProto = window.HTMLSelectElement.prototype;
      const descriptor = Object.getOwnPropertyDescriptor(
        selectProto,
        "value"
      );
      const setValue = descriptor.set;
      if (prevValue !== value && setValue) {
        const event = new Event("change", { bubbles: true });
        setValue.call(select, value);
        select.dispatchEvent(event);
      }
    }, [prevValue, value]);
    return (0, import_jsx_runtime.jsx)(VisuallyHidden, { asChild: true, children: (0, import_jsx_runtime.jsx)("select", { ...selectProps, ref: composedRefs, defaultValue: value }) });
  }
);
BubbleSelect.displayName = "BubbleSelect";
function useTypeaheadSearch(onSearchChange) {
  const handleSearchChange = useCallbackRef(onSearchChange);
  const searchRef = React2.useRef("");
  const timerRef = React2.useRef(0);
  const handleTypeaheadSearch = React2.useCallback(
    (key) => {
      const search = searchRef.current + key;
      handleSearchChange(search);
      (function updateSearch(value) {
        searchRef.current = value;
        window.clearTimeout(timerRef.current);
        if (value !== "") timerRef.current = window.setTimeout(() => updateSearch(""), 1e3);
      })(search);
    },
    [handleSearchChange]
  );
  const resetTypeahead = React2.useCallback(() => {
    searchRef.current = "";
    window.clearTimeout(timerRef.current);
  }, []);
  React2.useEffect(() => {
    return () => window.clearTimeout(timerRef.current);
  }, []);
  return [searchRef, handleTypeaheadSearch, resetTypeahead];
}
function findNextItem(items, search, currentItem) {
  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);
  const normalizedSearch = isRepeated ? search[0] : search;
  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;
  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));
  const excludeCurrentItem = normalizedSearch.length === 1;
  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v4) => v4 !== currentItem);
  const nextItem = wrappedItems.find(
    (item) => item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())
  );
  return nextItem !== currentItem ? nextItem : void 0;
}
function wrapArray(array, startIndex) {
  return array.map((_3, index) => array[(startIndex + index) % array.length]);
}
var Root23 = Select;
var Trigger2 = SelectTrigger;
var Value = SelectValue;
var Icon = SelectIcon;
var Portal3 = SelectPortal;
var Content23 = SelectContent;
var Viewport = SelectViewport;
var Label = SelectLabel;
var Item3 = SelectItem;
var ItemText = SelectItemText;
var ItemIndicator = SelectItemIndicator;
var ScrollUpButton = SelectScrollUpButton;
var ScrollDownButton = SelectScrollDownButton;
var Separator = SelectSeparator;

// node_modules/zudoku/lib/Select-Dg5R11Dx.js
var M = (s5) => {
  throw TypeError(s5);
};
var j3 = (s5, t3, e2) => t3.has(s5) || M("Cannot " + e2);
var r = (s5, t3, e2) => (j3(s5, t3, "read from private field"), e2 ? e2.call(s5) : t3.get(s5));
var x2 = (s5, t3, e2) => t3.has(s5) ? M("Cannot add the same private member more than once") : t3 instanceof WeakSet ? t3.add(s5) : t3.set(s5, e2);
var y = (s5, t3, e2, a2) => (j3(s5, t3, "write to private field"), a2 ? a2.call(s5, e2) : t3.set(s5, e2), e2);
var g2 = (s5, t3, e2) => (j3(s5, t3, "access private method"), e2);
var h;
var m2;
var n;
var c;
var u2;
var N;
var C;
var I;
var A = (I = class extends Qe {
  constructor(t3, e2) {
    super();
    x2(this, u2);
    x2(this, h);
    x2(this, m2);
    x2(this, n);
    x2(this, c);
    y(this, h, t3), this.setOptions(e2), this.bindMethods(), g2(this, u2, N).call(this);
  }
  bindMethods() {
    this.mutate = this.mutate.bind(this), this.reset = this.reset.bind(this);
  }
  setOptions(t3) {
    var a2;
    const e2 = this.options;
    this.options = r(this, h).defaultMutationOptions(t3), Ce(this.options, e2) || r(this, h).getMutationCache().notify({
      type: "observerOptionsUpdated",
      mutation: r(this, n),
      observer: this
    }), e2 != null && e2.mutationKey && this.options.mutationKey && Re(e2.mutationKey) !== Re(this.options.mutationKey) ? this.reset() : ((a2 = r(this, n)) == null ? void 0 : a2.state.status) === "pending" && r(this, n).setOptions(this.options);
  }
  onUnsubscribe() {
    var t3;
    this.hasListeners() || (t3 = r(this, n)) == null || t3.removeObserver(this);
  }
  onMutationUpdate(t3) {
    g2(this, u2, N).call(this), g2(this, u2, C).call(this, t3);
  }
  getCurrentResult() {
    return r(this, m2);
  }
  reset() {
    var t3;
    (t3 = r(this, n)) == null || t3.removeObserver(this), y(this, n, void 0), g2(this, u2, N).call(this), g2(this, u2, C).call(this);
  }
  mutate(t3, e2) {
    var a2;
    return y(this, c, e2), (a2 = r(this, n)) == null || a2.removeObserver(this), y(this, n, r(this, h).getMutationCache().build(r(this, h), this.options)), r(this, n).addObserver(this), r(this, n).execute(t3);
  }
}, h = /* @__PURE__ */ new WeakMap(), m2 = /* @__PURE__ */ new WeakMap(), n = /* @__PURE__ */ new WeakMap(), c = /* @__PURE__ */ new WeakMap(), u2 = /* @__PURE__ */ new WeakSet(), N = function() {
  var e2;
  const t3 = ((e2 = r(this, n)) == null ? void 0 : e2.state) ?? H2();
  y(this, m2, {
    ...t3,
    isPending: t3.status === "pending",
    isSuccess: t3.status === "success",
    isError: t3.status === "error",
    isIdle: t3.status === "idle",
    mutate: this.mutate,
    reset: this.reset
  });
}, C = function(t3) {
  Le.batch(() => {
    var e2, a2, d2, w, f3, S2, R3, O2;
    if (r(this, c) && this.hasListeners()) {
      const b = r(this, m2).variables, v4 = r(this, m2).context;
      (t3 == null ? void 0 : t3.type) === "success" ? ((a2 = (e2 = r(this, c)).onSuccess) == null || a2.call(e2, t3.data, b, v4), (w = (d2 = r(this, c)).onSettled) == null || w.call(d2, t3.data, null, b, v4)) : (t3 == null ? void 0 : t3.type) === "error" && ((S2 = (f3 = r(this, c)).onError) == null || S2.call(f3, t3.error, b, v4), (O2 = (R3 = r(this, c)).onSettled) == null || O2.call(
        R3,
        void 0,
        t3.error,
        b,
        v4
      ));
    }
    this.listeners.forEach((b) => {
      b(r(this, m2));
    });
  });
}, I);
function et2(s5, t3) {
  const e2 = vt(t3), [a2] = l3.useState(
    () => new A(
      e2,
      s5
    )
  );
  l3.useEffect(() => {
    a2.setOptions(s5);
  }, [a2, s5]);
  const d2 = l3.useSyncExternalStore(
    l3.useCallback(
      (f3) => a2.subscribe(Le.batchCalls(f3)),
      [a2]
    ),
    () => a2.getCurrentResult(),
    () => a2.getCurrentResult()
  ), w = l3.useCallback(
    (f3, S2) => {
      a2.mutate(f3, S2).catch(Ye);
    },
    [a2]
  );
  if (d2.error && Kt(a2.options.throwOnError, [d2.error]))
    throw d2.error;
  return { ...d2, mutate: w, mutateAsync: d2.mutate };
}
var st = Root23;
var rt = Value;
var Q = l3.forwardRef(({ className: s5, children: t3, ...e2 }, a2) => ae.jsxs(
  Trigger2,
  {
    ref: a2,
    className: We(
      "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
      s5
    ),
    ...e2,
    children: [
      ae.jsx("span", { className: "truncate", children: t3 }),
      ae.jsx(Icon, { asChild: true, children: ae.jsx(ChevronDown, { className: "flex-shrink-0 h-4 w-4 opacity-50" }) })
    ]
  }
));
Q.displayName = Trigger2.displayName;
var B = l3.forwardRef(({ className: s5, ...t3 }, e2) => ae.jsx(
  ScrollUpButton,
  {
    ref: e2,
    className: We(
      "flex cursor-default items-center justify-center py-1",
      s5
    ),
    ...t3,
    children: ae.jsx(ChevronUp, { className: "h-4 w-4" })
  }
));
B.displayName = ScrollUpButton.displayName;
var D2 = l3.forwardRef(({ className: s5, ...t3 }, e2) => ae.jsx(
  ScrollDownButton,
  {
    ref: e2,
    className: We(
      "flex cursor-default items-center justify-center py-1",
      s5
    ),
    ...t3,
    children: ae.jsx(ChevronDown, { className: "h-4 w-4" })
  }
));
D2.displayName = ScrollDownButton.displayName;
var F = l3.forwardRef(({ className: s5, children: t3, position: e2 = "popper", ...a2 }, d2) => ae.jsx(Portal3, { children: ae.jsxs(
  Content23,
  {
    ref: d2,
    className: We(
      "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      e2 === "popper" && "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
      s5
    ),
    position: e2,
    ...a2,
    children: [
      ae.jsx(B, {}),
      ae.jsx(
        Viewport,
        {
          className: We(
            e2 === "popper" && "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]",
            "divide-y"
          ),
          children: t3
        }
      ),
      ae.jsx(D2, {})
    ]
  }
) }));
F.displayName = Content23.displayName;
var H3 = l3.forwardRef(({ className: s5, ...t3 }, e2) => ae.jsx(
  Label,
  {
    ref: e2,
    className: We("py-1.5 pl-8 pr-2 text-sm font-semibold", s5),
    ...t3
  }
));
H3.displayName = Label.displayName;
var J = l3.forwardRef(({ className: s5, children: t3, ...e2 }, a2) => ae.jsxs(
  Item3,
  {
    ref: a2,
    className: We(
      "relative flex w-full cursor-default select-none items-center py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      s5
    ),
    ...e2,
    children: [
      ae.jsx("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: ae.jsx(ItemIndicator, { children: ae.jsx(Check, { className: "h-4 w-4" }) }) }),
      ae.jsx(ItemText, { children: t3 })
    ]
  }
));
J.displayName = Item3.displayName;
var W = l3.forwardRef(({ className: s5, ...t3 }, e2) => ae.jsx(
  Separator,
  {
    ref: e2,
    className: We("-mx-1 my-1 h-px bg-muted", s5),
    ...t3
  }
));
W.displayName = Separator.displayName;

// node_modules/@radix-ui/react-tabs/dist/index.mjs
var React3 = __toESM(require_react(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var TABS_NAME = "Tabs";
var [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [
  createRovingFocusGroupScope
]);
var useRovingFocusGroupScope = createRovingFocusGroupScope();
var [TabsProvider, useTabsContext] = createTabsContext(TABS_NAME);
var Tabs = React3.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeTabs,
      value: valueProp,
      onValueChange,
      defaultValue,
      orientation = "horizontal",
      dir,
      activationMode = "automatic",
      ...tabsProps
    } = props;
    const direction = useDirection(dir);
    const [value, setValue] = useControllableState({
      prop: valueProp,
      onChange: onValueChange,
      defaultProp: defaultValue
    });
    return (0, import_jsx_runtime2.jsx)(
      TabsProvider,
      {
        scope: __scopeTabs,
        baseId: useId(),
        value,
        onValueChange: setValue,
        orientation,
        dir: direction,
        activationMode,
        children: (0, import_jsx_runtime2.jsx)(
          Primitive.div,
          {
            dir: direction,
            "data-orientation": orientation,
            ...tabsProps,
            ref: forwardedRef
          }
        )
      }
    );
  }
);
Tabs.displayName = TABS_NAME;
var TAB_LIST_NAME = "TabsList";
var TabsList = React3.forwardRef(
  (props, forwardedRef) => {
    const { __scopeTabs, loop = true, ...listProps } = props;
    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);
    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);
    return (0, import_jsx_runtime2.jsx)(
      Root3,
      {
        asChild: true,
        ...rovingFocusGroupScope,
        orientation: context.orientation,
        dir: context.dir,
        loop,
        children: (0, import_jsx_runtime2.jsx)(
          Primitive.div,
          {
            role: "tablist",
            "aria-orientation": context.orientation,
            ...listProps,
            ref: forwardedRef
          }
        )
      }
    );
  }
);
TabsList.displayName = TAB_LIST_NAME;
var TRIGGER_NAME2 = "TabsTrigger";
var TabsTrigger = React3.forwardRef(
  (props, forwardedRef) => {
    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;
    const context = useTabsContext(TRIGGER_NAME2, __scopeTabs);
    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);
    const triggerId = makeTriggerId(context.baseId, value);
    const contentId = makeContentId(context.baseId, value);
    const isSelected = value === context.value;
    return (0, import_jsx_runtime2.jsx)(
      Item,
      {
        asChild: true,
        ...rovingFocusGroupScope,
        focusable: !disabled,
        active: isSelected,
        children: (0, import_jsx_runtime2.jsx)(
          Primitive.button,
          {
            type: "button",
            role: "tab",
            "aria-selected": isSelected,
            "aria-controls": contentId,
            "data-state": isSelected ? "active" : "inactive",
            "data-disabled": disabled ? "" : void 0,
            disabled,
            id: triggerId,
            ...triggerProps,
            ref: forwardedRef,
            onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {
              if (!disabled && event.button === 0 && event.ctrlKey === false) {
                context.onValueChange(value);
              } else {
                event.preventDefault();
              }
            }),
            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
              if ([" ", "Enter"].includes(event.key)) context.onValueChange(value);
            }),
            onFocus: composeEventHandlers(props.onFocus, () => {
              const isAutomaticActivation = context.activationMode !== "manual";
              if (!isSelected && !disabled && isAutomaticActivation) {
                context.onValueChange(value);
              }
            })
          }
        )
      }
    );
  }
);
TabsTrigger.displayName = TRIGGER_NAME2;
var CONTENT_NAME2 = "TabsContent";
var TabsContent = React3.forwardRef(
  (props, forwardedRef) => {
    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;
    const context = useTabsContext(CONTENT_NAME2, __scopeTabs);
    const triggerId = makeTriggerId(context.baseId, value);
    const contentId = makeContentId(context.baseId, value);
    const isSelected = value === context.value;
    const isMountAnimationPreventedRef = React3.useRef(isSelected);
    React3.useEffect(() => {
      const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);
      return () => cancelAnimationFrame(rAF);
    }, []);
    return (0, import_jsx_runtime2.jsx)(Presence, { present: forceMount || isSelected, children: ({ present }) => (0, import_jsx_runtime2.jsx)(
      Primitive.div,
      {
        "data-state": isSelected ? "active" : "inactive",
        "data-orientation": context.orientation,
        role: "tabpanel",
        "aria-labelledby": triggerId,
        hidden: !present,
        id: contentId,
        tabIndex: 0,
        ...contentProps,
        ref: forwardedRef,
        style: {
          ...props.style,
          animationDuration: isMountAnimationPreventedRef.current ? "0s" : void 0
        },
        children: present && children
      }
    ) });
  }
);
TabsContent.displayName = CONTENT_NAME2;
function makeTriggerId(baseId, value) {
  return `${baseId}-trigger-${value}`;
}
function makeContentId(baseId, value) {
  return `${baseId}-content-${value}`;
}
var Root24 = Tabs;
var List = TabsList;
var Trigger3 = TabsTrigger;
var Content3 = TabsContent;

// node_modules/zudoku/lib/ui/Tabs.js
var o = __toESM(require_react(), 1);
var m3 = Root24;
var r2 = o.forwardRef(({ className: i3, ...s5 }, t3) => ae.jsx(
  List,
  {
    ref: t3,
    className: We(
      "inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground",
      i3
    ),
    ...s5
  }
));
r2.displayName = List.displayName;
var f = o.forwardRef(({ className: i3, ...s5 }, t3) => ae.jsx(
  Trigger3,
  {
    ref: t3,
    className: We(
      "inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow",
      i3
    ),
    ...s5
  }
));
f.displayName = Trigger3.displayName;
var c2 = o.forwardRef(({ className: i3, ...s5 }, t3) => ae.jsx(
  Content3,
  {
    ref: t3,
    className: We(
      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
      i3
    ),
    ...s5
  }
));
c2.displayName = Content3.displayName;

// node_modules/zudoku/lib/ui/Card.js
var d = __toESM(require_react(), 1);
var t2 = d.forwardRef(({ className: a2, ...e2 }, r3) => ae.jsx(
  "div",
  {
    ref: r3,
    className: We(
      "rounded-xl border bg-card text-card-foreground shadow-sm",
      a2
    ),
    ...e2
  }
));
t2.displayName = "Card";
var i2 = d.forwardRef(({ className: a2, ...e2 }, r3) => ae.jsx(
  "div",
  {
    ref: r3,
    className: We("flex flex-col space-y-1.5 p-6", a2),
    ...e2
  }
));
i2.displayName = "CardHeader";
var m4 = d.forwardRef(({ className: a2, ...e2 }, r3) => ae.jsx(
  "h3",
  {
    ref: r3,
    className: We("font-semibold leading-none tracking-tight", a2),
    ...e2
  }
));
m4.displayName = "CardTitle";
var c3 = d.forwardRef(({ className: a2, ...e2 }, r3) => ae.jsx(
  "p",
  {
    ref: r3,
    className: We("text-sm text-muted-foreground", a2),
    ...e2
  }
));
c3.displayName = "CardDescription";
var n2 = d.forwardRef(({ className: a2, ...e2 }, r3) => ae.jsx("div", { ref: r3, className: We("p-6 pt-0", a2), ...e2 }));
n2.displayName = "CardContent";
var f2 = d.forwardRef(({ className: a2, ...e2 }, r3) => ae.jsx(
  "div",
  {
    ref: r3,
    className: We("flex items-center p-6 pt-0", a2),
    ...e2
  }
));
f2.displayName = "CardFooter";

// node_modules/zudoku/lib/index-Ba_X7EnR.js
var v3 = __toESM(require_react(), 1);
var import_react2 = __toESM(require_react(), 1);

// node_modules/zudoku/lib/index.esm-D2ZUREQN.js
var import_react = __toESM(require_react(), 1);
var ge = (e2) => e2.type === "checkbox";
var ue = (e2) => e2 instanceof Date;
var j4 = (e2) => e2 == null;
var ft = (e2) => typeof e2 == "object";
var U = (e2) => !j4(e2) && !Array.isArray(e2) && ft(e2) && !ue(e2);
var yt = (e2) => U(e2) && e2.target ? ge(e2.target) ? e2.target.checked : e2.target.value : e2;
var Mt = (e2) => e2.substring(0, e2.search(/\.\d+(\.|$)/)) || e2;
var _t2 = (e2, s5) => e2.has(Mt(s5));
var Nt = (e2) => {
  const s5 = e2.constructor && e2.constructor.prototype;
  return U(s5) && s5.hasOwnProperty("isPrototypeOf");
};
var We2 = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function T(e2) {
  let s5;
  const t3 = Array.isArray(e2), i3 = typeof FileList < "u" ? e2 instanceof FileList : false;
  if (e2 instanceof Date)
    s5 = new Date(e2);
  else if (e2 instanceof Set)
    s5 = new Set(e2);
  else if (!(We2 && (e2 instanceof Blob || i3)) && (t3 || U(e2)))
    if (s5 = t3 ? [] : {}, !t3 && !Nt(e2))
      s5 = e2;
    else
      for (const n4 in e2)
        e2.hasOwnProperty(n4) && (s5[n4] = T(e2[n4]));
  else
    return e2;
  return s5;
}
var he = (e2) => Array.isArray(e2) ? e2.filter(Boolean) : [];
var O = (e2) => e2 === void 0;
var c4 = (e2, s5, t3) => {
  if (!s5 || !U(e2))
    return t3;
  const i3 = he(s5.split(/[,[\].]+?/)).reduce((n4, u3) => j4(n4) ? n4 : n4[u3], e2);
  return O(i3) || i3 === e2 ? O(e2[s5]) ? t3 : e2[s5] : i3;
};
var Q2 = (e2) => typeof e2 == "boolean";
var qe = (e2) => /^\w*$/.test(e2);
var gt = (e2) => he(e2.replace(/["|']|\]/g, "").split(/\.|\[/));
var C2 = (e2, s5, t3) => {
  let i3 = -1;
  const n4 = qe(s5) ? [s5] : gt(s5), u3 = n4.length, f3 = u3 - 1;
  for (; ++i3 < u3; ) {
    const y2 = n4[i3];
    let F3 = t3;
    if (i3 !== f3) {
      const x3 = e2[y2];
      F3 = U(x3) || Array.isArray(x3) ? x3 : isNaN(+n4[i3 + 1]) ? {} : [];
    }
    if (y2 === "__proto__" || y2 === "constructor" || y2 === "prototype")
      return;
    e2[y2] = F3, e2 = e2[y2];
  }
};
var me = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
};
var ee = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
};
var ie = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
};
var ht = import_react.default.createContext(null);
var xe = () => import_react.default.useContext(ht);
var sr = (e2) => {
  const { children: s5, ...t3 } = e2;
  return import_react.default.createElement(ht.Provider, { value: t3 }, s5);
};
var vt2 = (e2, s5, t3, i3 = true) => {
  const n4 = {
    defaultValues: s5._defaultValues
  };
  for (const u3 in e2)
    Object.defineProperty(n4, u3, {
      get: () => {
        const f3 = u3;
        return s5._proxyFormState[f3] !== ee.all && (s5._proxyFormState[f3] = !i3 || ee.all), t3 && (t3[f3] = true), e2[f3];
      }
    });
  return n4;
};
function Bt(e2) {
  const s5 = xe(), { control: t3 = s5.control, disabled: i3, name: n4, exact: u3 } = e2 || {}, [f3, y2] = import_react.default.useState(t3._formState), F3 = import_react.default.useRef({
    isDirty: false,
    isLoading: false,
    dirtyFields: false,
    touchedFields: false,
    validatingFields: false,
    isValidating: false,
    isValid: false,
    errors: false
  }), x3 = import_react.default.useRef(n4);
  return x3.current = n4, import_react.default.useEffect(() => t3._subscribe({
    name: x3.current,
    formState: F3.current,
    exact: u3,
    callback: (w) => {
      !i3 && y2({
        ...t3._formState,
        ...w
      });
    }
  }), [t3, i3, u3]), import_react.default.useEffect(() => {
    F3.current.isValid && t3._setValid(true);
  }, [t3]), import_react.default.useMemo(() => vt2(f3, t3, F3.current, false), [f3, t3]);
}
var se = (e2) => typeof e2 == "string";
var bt = (e2, s5, t3, i3, n4) => se(e2) ? (i3 && s5.watch.add(e2), c4(t3, e2, n4)) : Array.isArray(e2) ? e2.map((u3) => (i3 && s5.watch.add(u3), c4(t3, u3))) : (i3 && (s5.watchAll = true), t3);
function It(e2) {
  const s5 = xe(), { control: t3 = s5.control, name: i3, defaultValue: n4, disabled: u3, exact: f3 } = e2 || {}, y2 = import_react.default.useRef(i3), F3 = import_react.default.useRef(n4);
  y2.current = i3, import_react.default.useEffect(() => t3._subscribe({
    name: y2.current,
    formState: {
      values: true
    },
    exact: f3,
    callback: (p3) => !u3 && w(bt(y2.current, t3._names, p3.values || t3._formValues, false, F3.current))
  }), [t3, u3, f3]);
  const [x3, w] = import_react.default.useState(t3._getWatch(i3, n4));
  return import_react.default.useEffect(() => t3._removeUnmounted()), x3;
}
function Pt(e2) {
  const s5 = xe(), { name: t3, disabled: i3, control: n4 = s5.control, shouldUnregister: u3 } = e2, f3 = _t2(n4._names.array, t3), y2 = It({
    control: n4,
    name: t3,
    defaultValue: c4(n4._formValues, t3, c4(n4._defaultValues, t3, e2.defaultValue)),
    exact: true
  }), F3 = Bt({
    control: n4,
    name: t3,
    exact: true
  }), x3 = import_react.default.useRef(e2), w = import_react.default.useRef(n4.register(t3, {
    ...e2.rules,
    value: y2,
    ...Q2(e2.disabled) ? { disabled: e2.disabled } : {}
  })), p3 = import_react.default.useMemo(() => Object.defineProperties({}, {
    invalid: {
      enumerable: true,
      get: () => !!c4(F3.errors, t3)
    },
    isDirty: {
      enumerable: true,
      get: () => !!c4(F3.dirtyFields, t3)
    },
    isTouched: {
      enumerable: true,
      get: () => !!c4(F3.touchedFields, t3)
    },
    isValidating: {
      enumerable: true,
      get: () => !!c4(F3.validatingFields, t3)
    },
    error: {
      enumerable: true,
      get: () => c4(F3.errors, t3)
    }
  }), [F3, t3]), A2 = import_react.default.useCallback((P) => w.current.onChange({
    target: {
      value: yt(P),
      name: t3
    },
    type: me.CHANGE
  }), [t3]), R3 = import_react.default.useCallback(() => w.current.onBlur({
    target: {
      value: c4(n4._formValues, t3),
      name: t3
    },
    type: me.BLUR
  }), [t3, n4._formValues]), G2 = import_react.default.useCallback((P) => {
    const W2 = c4(n4._fields, t3);
    W2 && P && (W2._f.ref = {
      focus: () => P.focus(),
      select: () => P.select(),
      setCustomValidity: (m6) => P.setCustomValidity(m6),
      reportValidity: () => P.reportValidity()
    });
  }, [n4._fields, t3]), I4 = import_react.default.useMemo(() => ({
    name: t3,
    value: y2,
    ...Q2(i3) || F3.disabled ? { disabled: F3.disabled || i3 } : {},
    onChange: A2,
    onBlur: R3,
    ref: G2
  }), [t3, i3, F3.disabled, A2, R3, G2, y2]);
  return import_react.default.useEffect(() => {
    const P = n4._options.shouldUnregister || u3;
    n4.register(t3, {
      ...x3.current.rules,
      ...Q2(x3.current.disabled) ? { disabled: x3.current.disabled } : {}
    });
    const W2 = (m6, Y) => {
      const $3 = c4(n4._fields, m6);
      $3 && $3._f && ($3._f.mount = Y);
    };
    if (W2(t3, true), P) {
      const m6 = T(c4(n4._options.defaultValues, t3));
      C2(n4._defaultValues, t3, m6), O(c4(n4._formValues, t3)) && C2(n4._formValues, t3, m6);
    }
    return !f3 && n4.register(t3), () => {
      (f3 ? P && !n4._state.action : P) ? n4.unregister(t3) : W2(t3, false);
    };
  }, [t3, n4, f3, u3]), import_react.default.useEffect(() => {
    n4._setDisabledField({
      disabled: i3,
      name: t3
    });
  }, [i3, t3, n4]), import_react.default.useMemo(() => ({
    field: I4,
    formState: F3,
    fieldState: p3
  }), [I4, F3, p3]);
}
var ir = (e2) => e2.render(Pt(e2));
var Wt2 = (e2, s5, t3, i3, n4) => s5 ? {
  ...t3[e2],
  types: {
    ...t3[e2] && t3[e2].types ? t3[e2].types : {},
    [i3]: n4 || true
  }
} : {};
var z = (e2) => Array.isArray(e2) ? e2 : [e2];
var st2 = () => {
  let e2 = [];
  return {
    get observers() {
      return e2;
    },
    next: (n4) => {
      for (const u3 of e2)
        u3.next && u3.next(n4);
    },
    subscribe: (n4) => (e2.push(n4), {
      unsubscribe: () => {
        e2 = e2.filter((u3) => u3 !== n4);
      }
    }),
    unsubscribe: () => {
      e2 = [];
    }
  };
};
var Be = (e2) => j4(e2) || !ft(e2);
function le(e2, s5) {
  if (Be(e2) || Be(s5))
    return e2 === s5;
  if (ue(e2) && ue(s5))
    return e2.getTime() === s5.getTime();
  const t3 = Object.keys(e2), i3 = Object.keys(s5);
  if (t3.length !== i3.length)
    return false;
  for (const n4 of t3) {
    const u3 = e2[n4];
    if (!i3.includes(n4))
      return false;
    if (n4 !== "ref") {
      const f3 = s5[n4];
      if (ue(u3) && ue(f3) || U(u3) && U(f3) || Array.isArray(u3) && Array.isArray(f3) ? !le(u3, f3) : u3 !== f3)
        return false;
    }
  }
  return true;
}
var H4 = (e2) => U(e2) && !Object.keys(e2).length;
var He = (e2) => e2.type === "file";
var te = (e2) => typeof e2 == "function";
var Fe = (e2) => {
  if (!We2)
    return false;
  const s5 = e2 ? e2.ownerDocument : 0;
  return e2 instanceof (s5 && s5.defaultView ? s5.defaultView.HTMLElement : HTMLElement);
};
var mt = (e2) => e2.type === "select-multiple";
var $e = (e2) => e2.type === "radio";
var qt = (e2) => $e(e2) || ge(e2);
var pe = (e2) => Fe(e2) && e2.isConnected;
function Ht(e2, s5) {
  const t3 = s5.slice(0, -1).length;
  let i3 = 0;
  for (; i3 < t3; )
    e2 = O(e2) ? i3++ : e2[s5[i3++]];
  return e2;
}
function $t(e2) {
  for (const s5 in e2)
    if (e2.hasOwnProperty(s5) && !O(e2[s5]))
      return false;
  return true;
}
function B2(e2, s5) {
  const t3 = Array.isArray(s5) ? s5 : qe(s5) ? [s5] : gt(s5), i3 = t3.length === 1 ? e2 : Ht(e2, t3), n4 = t3.length - 1, u3 = t3[n4];
  return i3 && delete i3[u3], n4 !== 0 && (U(i3) && H4(i3) || Array.isArray(i3) && $t(i3)) && B2(e2, t3.slice(0, -1)), e2;
}
var Ft = (e2) => {
  for (const s5 in e2)
    if (te(e2[s5]))
      return true;
  return false;
};
function Ae(e2, s5 = {}) {
  const t3 = Array.isArray(e2);
  if (U(e2) || t3)
    for (const i3 in e2)
      Array.isArray(e2[i3]) || U(e2[i3]) && !Ft(e2[i3]) ? (s5[i3] = Array.isArray(e2[i3]) ? [] : {}, Ae(e2[i3], s5[i3])) : j4(e2[i3]) || (s5[i3] = true);
  return s5;
}
function At(e2, s5, t3) {
  const i3 = Array.isArray(e2);
  if (U(e2) || i3)
    for (const n4 in e2)
      Array.isArray(e2[n4]) || U(e2[n4]) && !Ft(e2[n4]) ? O(s5) || Be(t3[n4]) ? t3[n4] = Array.isArray(e2[n4]) ? Ae(e2[n4], []) : { ...Ae(e2[n4]) } : At(e2[n4], j4(s5) ? {} : s5[n4], t3[n4]) : t3[n4] = !le(e2[n4], s5[n4]);
  return t3;
}
var ye = (e2, s5) => At(e2, s5, Ae(s5));
var it = {
  value: false,
  isValid: false
};
var at = { value: true, isValid: true };
var Vt = (e2) => {
  if (Array.isArray(e2)) {
    if (e2.length > 1) {
      const s5 = e2.filter((t3) => t3 && t3.checked && !t3.disabled).map((t3) => t3.value);
      return { value: s5, isValid: !!s5.length };
    }
    return e2[0].checked && !e2[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e2[0].attributes && !O(e2[0].attributes.value) ? O(e2[0].value) || e2[0].value === "" ? at : { value: e2[0].value, isValid: true } : at
    ) : it;
  }
  return it;
};
var xt = (e2, { valueAsNumber: s5, valueAsDate: t3, setValueAs: i3 }) => O(e2) ? e2 : s5 ? e2 === "" ? NaN : e2 && +e2 : t3 && se(e2) ? new Date(e2) : i3 ? i3(e2) : e2;
var nt = {
  isValid: false,
  value: null
};
var St = (e2) => Array.isArray(e2) ? e2.reduce((s5, t3) => t3 && t3.checked && !t3.disabled ? {
  isValid: true,
  value: t3.value
} : s5, nt) : nt;
function lt(e2) {
  const s5 = e2.ref;
  return He(s5) ? s5.files : $e(s5) ? St(e2.refs).value : mt(s5) ? [...s5.selectedOptions].map(({ value: t3 }) => t3) : ge(s5) ? Vt(e2.refs).value : xt(O(s5.value) ? e2.ref.value : s5.value, e2);
}
var jt = (e2, s5, t3, i3) => {
  const n4 = {};
  for (const u3 of e2) {
    const f3 = c4(s5, u3);
    f3 && C2(n4, u3, f3._f);
  }
  return {
    criteriaMode: t3,
    names: [...e2],
    fields: n4,
    shouldUseNativeValidation: i3
  };
};
var Ve = (e2) => e2 instanceof RegExp;
var _e = (e2) => O(e2) ? e2 : Ve(e2) ? e2.source : U(e2) ? Ve(e2.value) ? e2.value.source : e2.value : e2;
var ce = (e2) => ({
  isOnSubmit: !e2 || e2 === ee.onSubmit,
  isOnBlur: e2 === ee.onBlur,
  isOnChange: e2 === ee.onChange,
  isOnAll: e2 === ee.all,
  isOnTouch: e2 === ee.onTouched
});
var ut = "AsyncFunction";
var Kt2 = (e2) => !!e2 && !!e2.validate && !!(te(e2.validate) && e2.validate.constructor.name === ut || U(e2.validate) && Object.values(e2.validate).find((s5) => s5.constructor.name === ut));
var zt = (e2) => e2.mount && (e2.required || e2.min || e2.max || e2.maxLength || e2.minLength || e2.pattern || e2.validate);
var Ie = (e2, s5, t3) => !t3 && (s5.watchAll || s5.watch.has(e2) || [...s5.watch].some((i3) => e2.startsWith(i3) && /^\.\w+/.test(e2.slice(i3.length))));
var de = (e2, s5, t3, i3) => {
  for (const n4 of t3 || Object.keys(e2)) {
    const u3 = c4(e2, n4);
    if (u3) {
      const { _f: f3, ...y2 } = u3;
      if (f3) {
        if (f3.refs && f3.refs[0] && s5(f3.refs[0], n4) && !i3)
          return true;
        if (f3.ref && s5(f3.ref, f3.name) && !i3)
          return true;
        if (de(y2, s5))
          break;
      } else if (U(y2) && de(y2, s5))
        break;
    }
  }
};
function ot(e2, s5, t3) {
  const i3 = c4(e2, t3);
  if (i3 || qe(t3))
    return {
      error: i3,
      name: t3
    };
  const n4 = t3.split(".");
  for (; n4.length; ) {
    const u3 = n4.join("."), f3 = c4(s5, u3), y2 = c4(e2, u3);
    if (f3 && !Array.isArray(f3) && t3 !== u3)
      return { name: t3 };
    if (y2 && y2.type)
      return {
        name: u3,
        error: y2
      };
    n4.pop();
  }
  return {
    name: t3
  };
}
var Gt = (e2, s5, t3, i3) => {
  t3(e2);
  const { name: n4, ...u3 } = e2;
  return H4(u3) || Object.keys(u3).length >= Object.keys(s5).length || Object.keys(u3).find((f3) => s5[f3] === (!i3 || ee.all));
};
var Yt = (e2, s5, t3) => !e2 || !s5 || e2 === s5 || z(e2).some((i3) => i3 && (t3 ? i3 === s5 : i3.startsWith(s5) || s5.startsWith(i3)));
var Jt = (e2, s5, t3, i3, n4) => n4.isOnAll ? false : !t3 && n4.isOnTouch ? !(s5 || e2) : (t3 ? i3.isOnBlur : n4.isOnBlur) ? !e2 : (t3 ? i3.isOnChange : n4.isOnChange) ? e2 : true;
var Qt = (e2, s5) => !he(c4(e2, s5)).length && B2(e2, s5);
var wt2 = (e2, s5, t3) => {
  const i3 = z(c4(e2, t3));
  return C2(i3, "root", s5[t3]), C2(e2, t3, i3), e2;
};
var be = (e2) => se(e2);
function ct(e2, s5, t3 = "validate") {
  if (be(e2) || Array.isArray(e2) && e2.every(be) || Q2(e2) && !e2)
    return {
      type: t3,
      message: be(e2) ? e2 : "",
      ref: s5
    };
}
var oe = (e2) => U(e2) && !Ve(e2) ? e2 : {
  value: e2,
  message: ""
};
var Pe = async (e2, s5, t3, i3, n4, u3) => {
  const { ref: f3, refs: y2, required: F3, maxLength: x3, minLength: w, min: p3, max: A2, pattern: R3, validate: G2, name: I4, valueAsNumber: P, mount: W2 } = e2._f, m6 = c4(t3, I4);
  if (!W2 || s5.has(I4))
    return {};
  const Y = y2 ? y2[0] : f3, $3 = (E2) => {
    n4 && Y.reportValidity && (Y.setCustomValidity(Q2(E2) ? "" : E2 || ""), Y.reportValidity());
  }, M2 = {}, b = $e(f3), h2 = ge(f3), V2 = b || h2, D3 = (P || He(f3)) && O(f3.value) && O(m6) || Fe(f3) && f3.value === "" || m6 === "" || Array.isArray(m6) && !m6.length, J3 = Wt2.bind(null, I4, i3, M2), X3 = (E2, S2, L2, K2 = ie.maxLength, Z2 = ie.minLength) => {
    const re3 = E2 ? S2 : L2;
    M2[I4] = {
      type: E2 ? K2 : Z2,
      message: re3,
      ref: f3,
      ...J3(E2 ? K2 : Z2, re3)
    };
  };
  if (u3 ? !Array.isArray(m6) || !m6.length : F3 && (!V2 && (D3 || j4(m6)) || Q2(m6) && !m6 || h2 && !Vt(y2).isValid || b && !St(y2).isValid)) {
    const { value: E2, message: S2 } = be(F3) ? { value: !!F3, message: F3 } : oe(F3);
    if (E2 && (M2[I4] = {
      type: ie.required,
      message: S2,
      ref: Y,
      ...J3(ie.required, S2)
    }, !i3))
      return $3(S2), M2;
  }
  if (!D3 && (!j4(p3) || !j4(A2))) {
    let E2, S2;
    const L2 = oe(A2), K2 = oe(p3);
    if (!j4(m6) && !isNaN(m6)) {
      const Z2 = f3.valueAsNumber || m6 && +m6;
      j4(L2.value) || (E2 = Z2 > L2.value), j4(K2.value) || (S2 = Z2 < K2.value);
    } else {
      const Z2 = f3.valueAsDate || new Date(m6), re3 = (ve3) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + ve3), ae2 = f3.type == "time", fe3 = f3.type == "week";
      se(L2.value) && m6 && (E2 = ae2 ? re3(m6) > re3(L2.value) : fe3 ? m6 > L2.value : Z2 > new Date(L2.value)), se(K2.value) && m6 && (S2 = ae2 ? re3(m6) < re3(K2.value) : fe3 ? m6 < K2.value : Z2 < new Date(K2.value));
    }
    if ((E2 || S2) && (X3(!!E2, L2.message, K2.message, ie.max, ie.min), !i3))
      return $3(M2[I4].message), M2;
  }
  if ((x3 || w) && !D3 && (se(m6) || u3 && Array.isArray(m6))) {
    const E2 = oe(x3), S2 = oe(w), L2 = !j4(E2.value) && m6.length > +E2.value, K2 = !j4(S2.value) && m6.length < +S2.value;
    if ((L2 || K2) && (X3(L2, E2.message, S2.message), !i3))
      return $3(M2[I4].message), M2;
  }
  if (R3 && !D3 && se(m6)) {
    const { value: E2, message: S2 } = oe(R3);
    if (Ve(E2) && !m6.match(E2) && (M2[I4] = {
      type: ie.pattern,
      message: S2,
      ref: f3,
      ...J3(ie.pattern, S2)
    }, !i3))
      return $3(S2), M2;
  }
  if (G2) {
    if (te(G2)) {
      const E2 = await G2(m6, t3), S2 = ct(E2, Y);
      if (S2 && (M2[I4] = {
        ...S2,
        ...J3(ie.validate, S2.message)
      }, !i3))
        return $3(S2.message), M2;
    } else if (U(G2)) {
      let E2 = {};
      for (const S2 in G2) {
        if (!H4(E2) && !i3)
          break;
        const L2 = ct(await G2[S2](m6, t3), Y, S2);
        L2 && (E2 = {
          ...L2,
          ...J3(S2, L2.message)
        }, $3(L2.message), i3 && (M2[I4] = E2));
      }
      if (!H4(E2) && (M2[I4] = {
        ref: Y,
        ...E2
      }, !i3))
        return M2;
    }
  }
  return $3(true), M2;
};
var Xt = {
  mode: ee.onSubmit,
  reValidateMode: ee.onChange,
  shouldFocusError: true
};
function Zt(e2 = {}) {
  let s5 = {
    ...Xt,
    ...e2
  }, t3 = {
    submitCount: 0,
    isDirty: false,
    isLoading: te(s5.defaultValues),
    isValidating: false,
    isSubmitted: false,
    isSubmitting: false,
    isSubmitSuccessful: false,
    isValid: false,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: s5.errors || {},
    disabled: s5.disabled || false
  };
  const i3 = {};
  let n4 = U(s5.defaultValues) || U(s5.values) ? T(s5.values || s5.defaultValues) || {} : {}, u3 = s5.shouldUnregister ? {} : T(n4), f3 = {
    action: false,
    mount: false,
    watch: false
  }, y2 = {
    mount: /* @__PURE__ */ new Set(),
    disabled: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, F3, x3 = 0;
  const w = {
    isDirty: false,
    dirtyFields: false,
    validatingFields: false,
    touchedFields: false,
    isValidating: false,
    isValid: false,
    errors: false
  };
  let p3 = {
    ...w
  };
  const A2 = {
    array: st2(),
    state: st2()
  }, R3 = ce(s5.mode), G2 = ce(s5.reValidateMode), I4 = s5.criteriaMode === ee.all, P = (r3) => (a2) => {
    clearTimeout(x3), x3 = setTimeout(r3, a2);
  }, W2 = async (r3) => {
    if (!s5.disabled && (w.isValid || p3.isValid || r3)) {
      const a2 = s5.resolver ? H4((await D3()).errors) : await X3(i3, true);
      a2 !== t3.isValid && A2.state.next({
        isValid: a2
      });
    }
  }, m6 = (r3, a2) => {
    !s5.disabled && (w.isValidating || w.validatingFields || p3.isValidating || p3.validatingFields) && ((r3 || Array.from(y2.mount)).forEach((l4) => {
      l4 && (a2 ? C2(t3.validatingFields, l4, a2) : B2(t3.validatingFields, l4));
    }), A2.state.next({
      validatingFields: t3.validatingFields,
      isValidating: !H4(t3.validatingFields)
    }));
  }, Y = (r3, a2 = [], l4, _3, d2 = true, o3 = true) => {
    if (_3 && l4 && !s5.disabled) {
      if (f3.action = true, o3 && Array.isArray(c4(i3, r3))) {
        const g3 = l4(c4(i3, r3), _3.argA, _3.argB);
        d2 && C2(i3, r3, g3);
      }
      if (o3 && Array.isArray(c4(t3.errors, r3))) {
        const g3 = l4(c4(t3.errors, r3), _3.argA, _3.argB);
        d2 && C2(t3.errors, r3, g3), Qt(t3.errors, r3);
      }
      if ((w.touchedFields || p3.touchedFields) && o3 && Array.isArray(c4(t3.touchedFields, r3))) {
        const g3 = l4(c4(t3.touchedFields, r3), _3.argA, _3.argB);
        d2 && C2(t3.touchedFields, r3, g3);
      }
      (w.dirtyFields || p3.dirtyFields) && (t3.dirtyFields = ye(n4, u3)), A2.state.next({
        name: r3,
        isDirty: S2(r3, a2),
        dirtyFields: t3.dirtyFields,
        errors: t3.errors,
        isValid: t3.isValid
      });
    } else
      C2(u3, r3, a2);
  }, $3 = (r3, a2) => {
    C2(t3.errors, r3, a2), A2.state.next({
      errors: t3.errors
    });
  }, M2 = (r3) => {
    t3.errors = r3, A2.state.next({
      errors: t3.errors,
      isValid: false
    });
  }, b = (r3, a2, l4, _3) => {
    const d2 = c4(i3, r3);
    if (d2) {
      const o3 = c4(u3, r3, O(l4) ? c4(n4, r3) : l4);
      O(o3) || _3 && _3.defaultChecked || a2 ? C2(u3, r3, a2 ? o3 : lt(d2._f)) : Z2(r3, o3), f3.mount && W2();
    }
  }, h2 = (r3, a2, l4, _3, d2) => {
    let o3 = false, g3 = false;
    const k2 = {
      name: r3
    };
    if (!s5.disabled) {
      if (!l4 || _3) {
        (w.isDirty || p3.isDirty) && (g3 = t3.isDirty, t3.isDirty = k2.isDirty = S2(), o3 = g3 !== k2.isDirty);
        const N3 = le(c4(n4, r3), a2);
        g3 = !!c4(t3.dirtyFields, r3), N3 ? B2(t3.dirtyFields, r3) : C2(t3.dirtyFields, r3, true), k2.dirtyFields = t3.dirtyFields, o3 = o3 || (w.dirtyFields || p3.dirtyFields) && g3 !== !N3;
      }
      if (l4) {
        const N3 = c4(t3.touchedFields, r3);
        N3 || (C2(t3.touchedFields, r3, l4), k2.touchedFields = t3.touchedFields, o3 = o3 || (w.touchedFields || p3.touchedFields) && N3 !== l4);
      }
      o3 && d2 && A2.state.next(k2);
    }
    return o3 ? k2 : {};
  }, V2 = (r3, a2, l4, _3) => {
    const d2 = c4(t3.errors, r3), o3 = (w.isValid || p3.isValid) && Q2(a2) && t3.isValid !== a2;
    if (s5.delayError && l4 ? (F3 = P(() => $3(r3, l4)), F3(s5.delayError)) : (clearTimeout(x3), F3 = null, l4 ? C2(t3.errors, r3, l4) : B2(t3.errors, r3)), (l4 ? !le(d2, l4) : d2) || !H4(_3) || o3) {
      const g3 = {
        ..._3,
        ...o3 && Q2(a2) ? { isValid: a2 } : {},
        errors: t3.errors,
        name: r3
      };
      t3 = {
        ...t3,
        ...g3
      }, A2.state.next(g3);
    }
  }, D3 = async (r3) => {
    m6(r3, true);
    const a2 = await s5.resolver(u3, s5.context, jt(r3 || y2.mount, i3, s5.criteriaMode, s5.shouldUseNativeValidation));
    return m6(r3), a2;
  }, J3 = async (r3) => {
    const { errors: a2 } = await D3(r3);
    if (r3)
      for (const l4 of r3) {
        const _3 = c4(a2, l4);
        _3 ? C2(t3.errors, l4, _3) : B2(t3.errors, l4);
      }
    else
      t3.errors = a2;
    return a2;
  }, X3 = async (r3, a2, l4 = {
    valid: true
  }) => {
    for (const _3 in r3) {
      const d2 = r3[_3];
      if (d2) {
        const { _f: o3, ...g3 } = d2;
        if (o3) {
          const k2 = y2.array.has(o3.name), N3 = d2._f && Kt2(d2._f);
          N3 && w.validatingFields && m6([_3], true);
          const q2 = await Pe(d2, y2.disabled, u3, I4, s5.shouldUseNativeValidation && !a2, k2);
          if (N3 && w.validatingFields && m6([_3]), q2[o3.name] && (l4.valid = false, a2))
            break;
          !a2 && (c4(q2, o3.name) ? k2 ? wt2(t3.errors, q2, o3.name) : C2(t3.errors, o3.name, q2[o3.name]) : B2(t3.errors, o3.name));
        }
        !H4(g3) && await X3(g3, a2, l4);
      }
    }
    return l4.valid;
  }, E2 = () => {
    for (const r3 of y2.unMount) {
      const a2 = c4(i3, r3);
      a2 && (a2._f.refs ? a2._f.refs.every((l4) => !pe(l4)) : !pe(a2._f.ref)) && we2(r3);
    }
    y2.unMount = /* @__PURE__ */ new Set();
  }, S2 = (r3, a2) => !s5.disabled && (r3 && a2 && C2(u3, r3, a2), !le(je2(), n4)), L2 = (r3, a2, l4) => bt(r3, y2, {
    ...f3.mount ? u3 : O(a2) ? n4 : se(r3) ? { [r3]: a2 } : a2
  }, l4, a2), K2 = (r3) => he(c4(f3.mount ? u3 : n4, r3, s5.shouldUnregister ? c4(n4, r3, []) : [])), Z2 = (r3, a2, l4 = {}) => {
    const _3 = c4(i3, r3);
    let d2 = a2;
    if (_3) {
      const o3 = _3._f;
      o3 && (!o3.disabled && C2(u3, r3, xt(a2, o3)), d2 = Fe(o3.ref) && j4(a2) ? "" : a2, mt(o3.ref) ? [...o3.ref.options].forEach((g3) => g3.selected = d2.includes(g3.value)) : o3.refs ? ge(o3.ref) ? o3.refs.length > 1 ? o3.refs.forEach((g3) => (!g3.defaultChecked || !g3.disabled) && (g3.checked = Array.isArray(d2) ? !!d2.find((k2) => k2 === g3.value) : d2 === g3.value)) : o3.refs[0] && (o3.refs[0].checked = !!d2) : o3.refs.forEach((g3) => g3.checked = g3.value === d2) : He(o3.ref) ? o3.ref.value = "" : (o3.ref.value = d2, o3.ref.type || A2.state.next({
        name: r3,
        values: T(u3)
      })));
    }
    (l4.shouldDirty || l4.shouldTouch) && h2(r3, d2, l4.shouldTouch, l4.shouldDirty, true), l4.shouldValidate && Se3(r3);
  }, re3 = (r3, a2, l4) => {
    for (const _3 in a2) {
      const d2 = a2[_3], o3 = `${r3}.${_3}`, g3 = c4(i3, o3);
      (y2.array.has(r3) || U(d2) || g3 && !g3._f) && !ue(d2) ? re3(o3, d2, l4) : Z2(o3, d2, l4);
    }
  }, ae2 = (r3, a2, l4 = {}) => {
    const _3 = c4(i3, r3), d2 = y2.array.has(r3), o3 = T(a2);
    C2(u3, r3, o3), d2 ? (A2.array.next({
      name: r3,
      values: T(u3)
    }), (w.isDirty || w.dirtyFields || p3.isDirty || p3.dirtyFields) && l4.shouldDirty && A2.state.next({
      name: r3,
      dirtyFields: ye(n4, u3),
      isDirty: S2(r3, o3)
    })) : _3 && !_3._f && !j4(o3) ? re3(r3, o3, l4) : Z2(r3, o3, l4), Ie(r3, y2) && A2.state.next({ ...t3 }), A2.state.next({
      name: f3.mount ? r3 : void 0,
      values: T(u3)
    });
  }, fe3 = async (r3) => {
    f3.mount = true;
    const a2 = r3.target;
    let l4 = a2.name, _3 = true;
    const d2 = c4(i3, l4), o3 = (g3) => {
      _3 = Number.isNaN(g3) || ue(g3) && isNaN(g3.getTime()) || le(g3, c4(u3, l4, g3));
    };
    if (d2) {
      let g3, k2;
      const N3 = a2.type ? lt(d2._f) : yt(r3), q2 = r3.type === me.BLUR || r3.type === me.FOCUS_OUT, Tt2 = !zt(d2._f) && !s5.resolver && !c4(t3.errors, l4) && !d2._f.deps || Jt(q2, c4(t3.touchedFields, l4), t3.isSubmitted, G2, R3), De2 = Ie(l4, y2, q2);
      C2(u3, l4, N3), q2 ? (d2._f.onBlur && d2._f.onBlur(r3), F3 && F3(0)) : d2._f.onChange && d2._f.onChange(r3);
      const Ee3 = h2(l4, N3, q2), Lt = !H4(Ee3) || De2;
      if (!q2 && A2.state.next({
        name: l4,
        type: r3.type,
        values: T(u3)
      }), Tt2)
        return (w.isValid || p3.isValid) && (s5.mode === "onBlur" ? q2 && W2() : q2 || W2()), Lt && A2.state.next({ name: l4, ...De2 ? {} : Ee3 });
      if (!q2 && De2 && A2.state.next({ ...t3 }), s5.resolver) {
        const { errors: tt2 } = await D3([l4]);
        if (o3(N3), _3) {
          const Ut = ot(t3.errors, i3, l4), rt2 = ot(tt2, i3, Ut.name || l4);
          g3 = rt2.error, l4 = rt2.name, k2 = H4(tt2);
        }
      } else
        m6([l4], true), g3 = (await Pe(d2, y2.disabled, u3, I4, s5.shouldUseNativeValidation))[l4], m6([l4]), o3(N3), _3 && (g3 ? k2 = false : (w.isValid || p3.isValid) && (k2 = await X3(i3, true)));
      _3 && (d2._f.deps && Se3(d2._f.deps), V2(l4, k2, g3, Ee3));
    }
  }, ve3 = (r3, a2) => {
    if (c4(t3.errors, a2) && r3.focus)
      return r3.focus(), 1;
  }, Se3 = async (r3, a2 = {}) => {
    let l4, _3;
    const d2 = z(r3);
    if (s5.resolver) {
      const o3 = await J3(O(r3) ? r3 : d2);
      l4 = H4(o3), _3 = r3 ? !d2.some((g3) => c4(o3, g3)) : l4;
    } else r3 ? (_3 = (await Promise.all(d2.map(async (o3) => {
      const g3 = c4(i3, o3);
      return await X3(g3 && g3._f ? { [o3]: g3 } : g3);
    }))).every(Boolean), !(!_3 && !t3.isValid) && W2()) : _3 = l4 = await X3(i3);
    return A2.state.next({
      ...!se(r3) || (w.isValid || p3.isValid) && l4 !== t3.isValid ? {} : { name: r3 },
      ...s5.resolver || !r3 ? { isValid: l4 } : {},
      errors: t3.errors
    }), a2.shouldFocus && !_3 && de(i3, ve3, r3 ? d2 : y2.mount), _3;
  }, je2 = (r3) => {
    const a2 = {
      ...f3.mount ? u3 : n4
    };
    return O(r3) ? a2 : se(r3) ? c4(a2, r3) : r3.map((l4) => c4(a2, l4));
  }, Ke2 = (r3, a2) => ({
    invalid: !!c4((a2 || t3).errors, r3),
    isDirty: !!c4((a2 || t3).dirtyFields, r3),
    error: c4((a2 || t3).errors, r3),
    isValidating: !!c4(t3.validatingFields, r3),
    isTouched: !!c4((a2 || t3).touchedFields, r3)
  }), kt2 = (r3) => {
    r3 && z(r3).forEach((a2) => B2(t3.errors, a2)), A2.state.next({
      errors: r3 ? t3.errors : {}
    });
  }, ze3 = (r3, a2, l4) => {
    const _3 = (c4(i3, r3, { _f: {} })._f || {}).ref, d2 = c4(t3.errors, r3) || {}, { ref: o3, message: g3, type: k2, ...N3 } = d2;
    C2(t3.errors, r3, {
      ...N3,
      ...a2,
      ref: _3
    }), A2.state.next({
      name: r3,
      errors: t3.errors,
      isValid: false
    }), l4 && l4.shouldFocus && _3 && _3.focus && _3.focus();
  }, Dt = (r3, a2) => te(r3) ? A2.state.subscribe({
    next: (l4) => r3(L2(void 0, a2), l4)
  }) : L2(r3, a2, true), Ge = (r3) => A2.state.subscribe({
    next: (a2) => {
      Yt(r3.name, a2.name, r3.exact) && Gt(a2, r3.formState || w, Rt2, r3.reRenderRoot) && r3.callback({
        values: { ...u3 },
        ...t3,
        ...a2
      });
    }
  }).unsubscribe, Et = (r3) => (f3.mount = true, p3 = {
    ...p3,
    ...r3.formState
  }, Ge({
    ...r3,
    formState: p3
  })), we2 = (r3, a2 = {}) => {
    for (const l4 of r3 ? z(r3) : y2.mount)
      y2.mount.delete(l4), y2.array.delete(l4), a2.keepValue || (B2(i3, l4), B2(u3, l4)), !a2.keepError && B2(t3.errors, l4), !a2.keepDirty && B2(t3.dirtyFields, l4), !a2.keepTouched && B2(t3.touchedFields, l4), !a2.keepIsValidating && B2(t3.validatingFields, l4), !s5.shouldUnregister && !a2.keepDefaultValue && B2(n4, l4);
    A2.state.next({
      values: T(u3)
    }), A2.state.next({
      ...t3,
      ...a2.keepDirty ? { isDirty: S2() } : {}
    }), !a2.keepIsValid && W2();
  }, Ye2 = ({ disabled: r3, name: a2 }) => {
    (Q2(r3) && f3.mount || r3 || y2.disabled.has(a2)) && (r3 ? y2.disabled.add(a2) : y2.disabled.delete(a2));
  }, ke3 = (r3, a2 = {}) => {
    let l4 = c4(i3, r3);
    const _3 = Q2(a2.disabled) || Q2(s5.disabled);
    return C2(i3, r3, {
      ...l4 || {},
      _f: {
        ...l4 && l4._f ? l4._f : { ref: { name: r3 } },
        name: r3,
        mount: true,
        ...a2
      }
    }), y2.mount.add(r3), l4 ? Ye2({
      disabled: Q2(a2.disabled) ? a2.disabled : s5.disabled,
      name: r3
    }) : b(r3, true, a2.value), {
      ..._3 ? { disabled: a2.disabled || s5.disabled } : {},
      ...s5.progressive ? {
        required: !!a2.required,
        min: _e(a2.min),
        max: _e(a2.max),
        minLength: _e(a2.minLength),
        maxLength: _e(a2.maxLength),
        pattern: _e(a2.pattern)
      } : {},
      name: r3,
      onChange: fe3,
      onBlur: fe3,
      ref: (d2) => {
        if (d2) {
          ke3(r3, a2), l4 = c4(i3, r3);
          const o3 = O(d2.value) && d2.querySelectorAll && d2.querySelectorAll("input,select,textarea")[0] || d2, g3 = qt(o3), k2 = l4._f.refs || [];
          if (g3 ? k2.find((N3) => N3 === o3) : o3 === l4._f.ref)
            return;
          C2(i3, r3, {
            _f: {
              ...l4._f,
              ...g3 ? {
                refs: [
                  ...k2.filter(pe),
                  o3,
                  ...Array.isArray(c4(n4, r3)) ? [{}] : []
                ],
                ref: { type: o3.type, name: r3 }
              } : { ref: o3 }
            }
          }), b(r3, false, void 0, o3);
        } else
          l4 = c4(i3, r3, {}), l4._f && (l4._f.mount = false), (s5.shouldUnregister || a2.shouldUnregister) && !(_t2(y2.array, r3) && f3.action) && y2.unMount.add(r3);
      }
    };
  }, Je = () => s5.shouldFocusError && de(i3, ve3, y2.mount), pt2 = (r3) => {
    Q2(r3) && (A2.state.next({ disabled: r3 }), de(i3, (a2, l4) => {
      const _3 = c4(i3, l4);
      _3 && (a2.disabled = _3._f.disabled || r3, Array.isArray(_3._f.refs) && _3._f.refs.forEach((d2) => {
        d2.disabled = _3._f.disabled || r3;
      }));
    }, 0, false));
  }, Qe2 = (r3, a2) => async (l4) => {
    let _3;
    l4 && (l4.preventDefault && l4.preventDefault(), l4.persist && l4.persist());
    let d2 = T(u3);
    if (A2.state.next({
      isSubmitting: true
    }), s5.resolver) {
      const { errors: o3, values: g3 } = await D3();
      t3.errors = o3, d2 = g3;
    } else
      await X3(i3);
    if (y2.disabled.size)
      for (const o3 of y2.disabled)
        C2(d2, o3, void 0);
    if (B2(t3.errors, "root"), H4(t3.errors)) {
      A2.state.next({
        errors: {}
      });
      try {
        await r3(d2, l4);
      } catch (o3) {
        _3 = o3;
      }
    } else
      a2 && await a2({ ...t3.errors }, l4), Je(), setTimeout(Je);
    if (A2.state.next({
      isSubmitted: true,
      isSubmitting: false,
      isSubmitSuccessful: H4(t3.errors) && !_3,
      submitCount: t3.submitCount + 1,
      errors: t3.errors
    }), _3)
      throw _3;
  }, Ct2 = (r3, a2 = {}) => {
    c4(i3, r3) && (O(a2.defaultValue) ? ae2(r3, T(c4(n4, r3))) : (ae2(r3, a2.defaultValue), C2(n4, r3, T(a2.defaultValue))), a2.keepTouched || B2(t3.touchedFields, r3), a2.keepDirty || (B2(t3.dirtyFields, r3), t3.isDirty = a2.defaultValue ? S2(r3, T(c4(n4, r3))) : S2()), a2.keepError || (B2(t3.errors, r3), w.isValid && W2()), A2.state.next({ ...t3 }));
  }, Xe2 = (r3, a2 = {}) => {
    const l4 = r3 ? T(r3) : n4, _3 = T(l4), d2 = H4(r3), o3 = d2 ? n4 : _3;
    if (a2.keepDefaultValues || (n4 = l4), !a2.keepValues) {
      if (a2.keepDirtyValues) {
        const g3 = /* @__PURE__ */ new Set([
          ...y2.mount,
          ...Object.keys(ye(n4, u3))
        ]);
        for (const k2 of Array.from(g3))
          c4(t3.dirtyFields, k2) ? C2(o3, k2, c4(u3, k2)) : ae2(k2, c4(o3, k2));
      } else {
        if (We2 && O(r3))
          for (const g3 of y2.mount) {
            const k2 = c4(i3, g3);
            if (k2 && k2._f) {
              const N3 = Array.isArray(k2._f.refs) ? k2._f.refs[0] : k2._f.ref;
              if (Fe(N3)) {
                const q2 = N3.closest("form");
                if (q2) {
                  q2.reset();
                  break;
                }
              }
            }
          }
        for (const g3 of y2.mount)
          ae2(g3, c4(o3, g3));
      }
      u3 = T(o3), A2.array.next({
        values: { ...o3 }
      }), A2.state.next({
        values: { ...o3 }
      });
    }
    y2 = {
      mount: a2.keepDirtyValues ? y2.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      disabled: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: false,
      focus: ""
    }, f3.mount = !w.isValid || !!a2.keepIsValid || !!a2.keepDirtyValues, f3.watch = !!s5.shouldUnregister, A2.state.next({
      submitCount: a2.keepSubmitCount ? t3.submitCount : 0,
      isDirty: d2 ? false : a2.keepDirty ? t3.isDirty : !!(a2.keepDefaultValues && !le(r3, n4)),
      isSubmitted: a2.keepIsSubmitted ? t3.isSubmitted : false,
      dirtyFields: d2 ? {} : a2.keepDirtyValues ? a2.keepDefaultValues && u3 ? ye(n4, u3) : t3.dirtyFields : a2.keepDefaultValues && r3 ? ye(n4, r3) : a2.keepDirty ? t3.dirtyFields : {},
      touchedFields: a2.keepTouched ? t3.touchedFields : {},
      errors: a2.keepErrors ? t3.errors : {},
      isSubmitSuccessful: a2.keepIsSubmitSuccessful ? t3.isSubmitSuccessful : false,
      isSubmitting: false
    });
  }, Ze = (r3, a2) => Xe2(te(r3) ? r3(u3) : r3, a2), Ot2 = (r3, a2 = {}) => {
    const l4 = c4(i3, r3), _3 = l4 && l4._f;
    if (_3) {
      const d2 = _3.refs ? _3.refs[0] : _3.ref;
      d2.focus && (d2.focus(), a2.shouldSelect && te(d2.select) && d2.select());
    }
  }, Rt2 = (r3) => {
    t3 = {
      ...t3,
      ...r3
    };
  }, et3 = {
    control: {
      register: ke3,
      unregister: we2,
      getFieldState: Ke2,
      handleSubmit: Qe2,
      setError: ze3,
      _subscribe: Ge,
      _runSchema: D3,
      _getWatch: L2,
      _getDirty: S2,
      _setValid: W2,
      _setFieldArray: Y,
      _setDisabledField: Ye2,
      _setErrors: M2,
      _getFieldArray: K2,
      _reset: Xe2,
      _resetDefaultValues: () => te(s5.defaultValues) && s5.defaultValues().then((r3) => {
        Ze(r3, s5.resetOptions), A2.state.next({
          isLoading: false
        });
      }),
      _removeUnmounted: E2,
      _disableForm: pt2,
      _subjects: A2,
      _proxyFormState: w,
      get _fields() {
        return i3;
      },
      get _formValues() {
        return u3;
      },
      get _state() {
        return f3;
      },
      set _state(r3) {
        f3 = r3;
      },
      get _defaultValues() {
        return n4;
      },
      get _names() {
        return y2;
      },
      set _names(r3) {
        y2 = r3;
      },
      get _formState() {
        return t3;
      },
      get _options() {
        return s5;
      },
      set _options(r3) {
        s5 = {
          ...s5,
          ...r3
        };
      }
    },
    subscribe: Et,
    trigger: Se3,
    register: ke3,
    handleSubmit: Qe2,
    watch: Dt,
    setValue: ae2,
    getValues: je2,
    reset: Ze,
    resetField: Ct2,
    clearErrors: kt2,
    unregister: we2,
    setError: ze3,
    setFocus: Ot2,
    getFieldState: Ke2
  };
  return {
    ...et3,
    formControl: et3
  };
}
var ne = () => {
  const e2 = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (s5) => {
    const t3 = (Math.random() * 16 + e2) % 16 | 0;
    return (s5 == "x" ? t3 : t3 & 3 | 8).toString(16);
  });
};
var Ce2 = (e2, s5, t3 = {}) => t3.shouldFocus || O(t3.shouldFocus) ? t3.focusName || `${e2}.${O(t3.focusIndex) ? s5 : t3.focusIndex}.` : "";
var Oe = (e2, s5) => [
  ...e2,
  ...z(s5)
];
var Re2 = (e2) => Array.isArray(e2) ? e2.map(() => {
}) : void 0;
function Te(e2, s5, t3) {
  return [
    ...e2.slice(0, s5),
    ...z(t3),
    ...e2.slice(s5)
  ];
}
var Le2 = (e2, s5, t3) => Array.isArray(e2) ? (O(e2[t3]) && (e2[t3] = void 0), e2.splice(t3, 0, e2.splice(s5, 1)[0]), e2) : [];
var Ue = (e2, s5) => [
  ...z(s5),
  ...z(e2)
];
function er(e2, s5) {
  let t3 = 0;
  const i3 = [...e2];
  for (const n4 of s5)
    i3.splice(n4 - t3, 1), t3++;
  return he(i3).length ? i3 : [];
}
var Me = (e2, s5) => O(s5) ? [] : er(e2, z(s5).sort((t3, i3) => t3 - i3));
var Ne = (e2, s5, t3) => {
  [e2[s5], e2[t3]] = [e2[t3], e2[s5]];
};
var dt = (e2, s5, t3) => (e2[s5] = t3, e2);
function ar(e2) {
  const s5 = xe(), { control: t3 = s5.control, name: i3, keyName: n4 = "id", shouldUnregister: u3, rules: f3 } = e2, [y2, F3] = import_react.default.useState(t3._getFieldArray(i3)), x3 = import_react.default.useRef(t3._getFieldArray(i3).map(ne)), w = import_react.default.useRef(y2), p3 = import_react.default.useRef(i3), A2 = import_react.default.useRef(false);
  p3.current = i3, w.current = y2, t3._names.array.add(i3), f3 && t3.register(i3, f3), import_react.default.useEffect(() => t3._subjects.array.subscribe({
    next: ({ values: b, name: h2 }) => {
      if (h2 === p3.current || !h2) {
        const V2 = c4(b, p3.current);
        Array.isArray(V2) && (F3(V2), x3.current = V2.map(ne));
      }
    }
  }).unsubscribe, [t3]);
  const R3 = import_react.default.useCallback((b) => {
    A2.current = true, t3._setFieldArray(i3, b);
  }, [t3, i3]), G2 = (b, h2) => {
    const V2 = z(T(b)), D3 = Oe(t3._getFieldArray(i3), V2);
    t3._names.focus = Ce2(i3, D3.length - 1, h2), x3.current = Oe(x3.current, V2.map(ne)), R3(D3), F3(D3), t3._setFieldArray(i3, D3, Oe, {
      argA: Re2(b)
    });
  }, I4 = (b, h2) => {
    const V2 = z(T(b)), D3 = Ue(t3._getFieldArray(i3), V2);
    t3._names.focus = Ce2(i3, 0, h2), x3.current = Ue(x3.current, V2.map(ne)), R3(D3), F3(D3), t3._setFieldArray(i3, D3, Ue, {
      argA: Re2(b)
    });
  }, P = (b) => {
    const h2 = Me(t3._getFieldArray(i3), b);
    x3.current = Me(x3.current, b), R3(h2), F3(h2), !Array.isArray(c4(t3._fields, i3)) && C2(t3._fields, i3, void 0), t3._setFieldArray(i3, h2, Me, {
      argA: b
    });
  }, W2 = (b, h2, V2) => {
    const D3 = z(T(h2)), J3 = Te(t3._getFieldArray(i3), b, D3);
    t3._names.focus = Ce2(i3, b, V2), x3.current = Te(x3.current, b, D3.map(ne)), R3(J3), F3(J3), t3._setFieldArray(i3, J3, Te, {
      argA: b,
      argB: Re2(h2)
    });
  }, m6 = (b, h2) => {
    const V2 = t3._getFieldArray(i3);
    Ne(V2, b, h2), Ne(x3.current, b, h2), R3(V2), F3(V2), t3._setFieldArray(i3, V2, Ne, {
      argA: b,
      argB: h2
    }, false);
  }, Y = (b, h2) => {
    const V2 = t3._getFieldArray(i3);
    Le2(V2, b, h2), Le2(x3.current, b, h2), R3(V2), F3(V2), t3._setFieldArray(i3, V2, Le2, {
      argA: b,
      argB: h2
    }, false);
  }, $3 = (b, h2) => {
    const V2 = T(h2), D3 = dt(t3._getFieldArray(i3), b, V2);
    x3.current = [...D3].map((J3, X3) => !J3 || X3 === b ? ne() : x3.current[X3]), R3(D3), F3([...D3]), t3._setFieldArray(i3, D3, dt, {
      argA: b,
      argB: V2
    }, true, false);
  }, M2 = (b) => {
    const h2 = z(T(b));
    x3.current = h2.map(ne), R3([...h2]), F3([...h2]), t3._setFieldArray(i3, [...h2], (V2) => V2, {}, true, false);
  };
  return import_react.default.useEffect(() => {
    if (t3._state.action = false, Ie(i3, t3._names) && t3._subjects.state.next({
      ...t3._formState
    }), A2.current && (!ce(t3._options.mode).isOnSubmit || t3._formState.isSubmitted) && !ce(t3._options.reValidateMode).isOnSubmit)
      if (t3._options.resolver)
        t3._runSchema([i3]).then((b) => {
          const h2 = c4(b.errors, i3), V2 = c4(t3._formState.errors, i3);
          (V2 ? !h2 && V2.type || h2 && (V2.type !== h2.type || V2.message !== h2.message) : h2 && h2.type) && (h2 ? C2(t3._formState.errors, i3, h2) : B2(t3._formState.errors, i3), t3._subjects.state.next({
            errors: t3._formState.errors
          }));
        });
      else {
        const b = c4(t3._fields, i3);
        b && b._f && !(ce(t3._options.reValidateMode).isOnSubmit && ce(t3._options.mode).isOnSubmit) && Pe(b, t3._names.disabled, t3._formValues, t3._options.criteriaMode === ee.all, t3._options.shouldUseNativeValidation, true).then((h2) => !H4(h2) && t3._subjects.state.next({
          errors: wt2(t3._formState.errors, h2, i3)
        }));
      }
    t3._subjects.state.next({
      name: i3,
      values: T(t3._formValues)
    }), t3._names.focus && de(t3._fields, (b, h2) => {
      if (t3._names.focus && h2.startsWith(t3._names.focus) && b.focus)
        return b.focus(), 1;
    }), t3._names.focus = "", t3._setValid(), A2.current = false;
  }, [y2, i3, t3]), import_react.default.useEffect(() => (!c4(t3._formValues, i3) && t3._setFieldArray(i3), () => {
    const b = (h2, V2) => {
      const D3 = c4(t3._fields, h2);
      D3 && D3._f && (D3._f.mount = V2);
    };
    t3._options.shouldUnregister || u3 ? t3.unregister(i3) : b(i3, false);
  }), [i3, t3, n4, u3]), {
    swap: import_react.default.useCallback(m6, [R3, i3, t3]),
    move: import_react.default.useCallback(Y, [R3, i3, t3]),
    prepend: import_react.default.useCallback(I4, [R3, i3, t3]),
    append: import_react.default.useCallback(G2, [R3, i3, t3]),
    remove: import_react.default.useCallback(P, [R3, i3, t3]),
    insert: import_react.default.useCallback(W2, [R3, i3, t3]),
    update: import_react.default.useCallback($3, [R3, i3, t3]),
    replace: import_react.default.useCallback(M2, [R3, i3, t3]),
    fields: import_react.default.useMemo(() => y2.map((b, h2) => ({
      ...b,
      [n4]: x3.current[h2] || ne()
    })), [y2, n4])
  };
}
function nr(e2 = {}) {
  const s5 = import_react.default.useRef(void 0), t3 = import_react.default.useRef(void 0), [i3, n4] = import_react.default.useState({
    isDirty: false,
    isValidating: false,
    isLoading: te(e2.defaultValues),
    isSubmitted: false,
    isSubmitting: false,
    isSubmitSuccessful: false,
    isValid: false,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e2.errors || {},
    disabled: e2.disabled || false,
    defaultValues: te(e2.defaultValues) ? void 0 : e2.defaultValues
  });
  s5.current || (s5.current = {
    ...e2.formControl ? e2.formControl : Zt(e2),
    formState: i3
  }, e2.formControl && e2.defaultValues && !te(e2.defaultValues) && e2.formControl.reset(e2.defaultValues, e2.resetOptions));
  const u3 = s5.current.control;
  return u3._options = e2, import_react.default.useLayoutEffect(() => u3._subscribe({
    formState: u3._proxyFormState,
    callback: () => n4({ ...u3._formState }),
    reRenderRoot: true
  }), [u3]), import_react.default.useEffect(() => u3._disableForm(e2.disabled), [u3, e2.disabled]), import_react.default.useEffect(() => {
    if (u3._proxyFormState.isDirty) {
      const f3 = u3._getDirty();
      f3 !== i3.isDirty && u3._subjects.state.next({
        isDirty: f3
      });
    }
  }, [u3, i3.isDirty]), import_react.default.useEffect(() => {
    e2.values && !le(e2.values, t3.current) ? (u3._reset(e2.values, u3._options.resetOptions), t3.current = e2.values, n4((f3) => ({ ...f3 }))) : u3._resetDefaultValues();
  }, [e2.values, u3]), import_react.default.useEffect(() => {
    e2.errors && !H4(e2.errors) && u3._setErrors(e2.errors);
  }, [e2.errors, u3]), import_react.default.useEffect(() => {
    u3._state.mount || (u3._setValid(), u3._state.mount = true), u3._state.watch && (u3._state.watch = false, u3._subjects.state.next({ ...u3._formState })), u3._removeUnmounted();
  }), import_react.default.useEffect(() => {
    e2.shouldUnregister && u3._subjects.state.next({
      values: u3._getWatch()
    });
  }, [e2.shouldUnregister, u3]), s5.current.formState = vt2(i3, u3), s5.current;
}

// node_modules/@radix-ui/react-checkbox/dist/index.mjs
var React4 = __toESM(require_react(), 1);
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var CHECKBOX_NAME = "Checkbox";
var [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);
var [CheckboxProvider, useCheckboxContext] = createCheckboxContext(CHECKBOX_NAME);
var Checkbox = React4.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeCheckbox,
      name,
      checked: checkedProp,
      defaultChecked,
      required,
      disabled,
      value = "on",
      onCheckedChange,
      form,
      ...checkboxProps
    } = props;
    const [button, setButton] = React4.useState(null);
    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));
    const hasConsumerStoppedPropagationRef = React4.useRef(false);
    const isFormControl = button ? form || !!button.closest("form") : true;
    const [checked = false, setChecked] = useControllableState({
      prop: checkedProp,
      defaultProp: defaultChecked,
      onChange: onCheckedChange
    });
    const initialCheckedStateRef = React4.useRef(checked);
    React4.useEffect(() => {
      const form2 = button == null ? void 0 : button.form;
      if (form2) {
        const reset = () => setChecked(initialCheckedStateRef.current);
        form2.addEventListener("reset", reset);
        return () => form2.removeEventListener("reset", reset);
      }
    }, [button, setChecked]);
    return (0, import_jsx_runtime3.jsxs)(CheckboxProvider, { scope: __scopeCheckbox, state: checked, disabled, children: [
      (0, import_jsx_runtime3.jsx)(
        Primitive.button,
        {
          type: "button",
          role: "checkbox",
          "aria-checked": isIndeterminate(checked) ? "mixed" : checked,
          "aria-required": required,
          "data-state": getState(checked),
          "data-disabled": disabled ? "" : void 0,
          disabled,
          value,
          ...checkboxProps,
          ref: composedRefs,
          onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
            if (event.key === "Enter") event.preventDefault();
          }),
          onClick: composeEventHandlers(props.onClick, (event) => {
            setChecked((prevChecked) => isIndeterminate(prevChecked) ? true : !prevChecked);
            if (isFormControl) {
              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();
            }
          })
        }
      ),
      isFormControl && (0, import_jsx_runtime3.jsx)(
        BubbleInput,
        {
          control: button,
          bubbles: !hasConsumerStoppedPropagationRef.current,
          name,
          value,
          checked,
          required,
          disabled,
          form,
          style: { transform: "translateX(-100%)" },
          defaultChecked: isIndeterminate(defaultChecked) ? false : defaultChecked
        }
      )
    ] });
  }
);
Checkbox.displayName = CHECKBOX_NAME;
var INDICATOR_NAME = "CheckboxIndicator";
var CheckboxIndicator = React4.forwardRef(
  (props, forwardedRef) => {
    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;
    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);
    return (0, import_jsx_runtime3.jsx)(Presence, { present: forceMount || isIndeterminate(context.state) || context.state === true, children: (0, import_jsx_runtime3.jsx)(
      Primitive.span,
      {
        "data-state": getState(context.state),
        "data-disabled": context.disabled ? "" : void 0,
        ...indicatorProps,
        ref: forwardedRef,
        style: { pointerEvents: "none", ...props.style }
      }
    ) });
  }
);
CheckboxIndicator.displayName = INDICATOR_NAME;
var BubbleInput = (props) => {
  const { control, checked, bubbles = true, defaultChecked, ...inputProps } = props;
  const ref = React4.useRef(null);
  const prevChecked = usePrevious(checked);
  const controlSize = useSize(control);
  React4.useEffect(() => {
    const input = ref.current;
    const inputProto = window.HTMLInputElement.prototype;
    const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
    const setChecked = descriptor.set;
    if (prevChecked !== checked && setChecked) {
      const event = new Event("click", { bubbles });
      input.indeterminate = isIndeterminate(checked);
      setChecked.call(input, isIndeterminate(checked) ? false : checked);
      input.dispatchEvent(event);
    }
  }, [prevChecked, checked, bubbles]);
  const defaultCheckedRef = React4.useRef(isIndeterminate(checked) ? false : checked);
  return (0, import_jsx_runtime3.jsx)(
    "input",
    {
      type: "checkbox",
      "aria-hidden": true,
      defaultChecked: defaultChecked ?? defaultCheckedRef.current,
      ...inputProps,
      tabIndex: -1,
      ref,
      style: {
        ...props.style,
        ...controlSize,
        position: "absolute",
        pointerEvents: "none",
        opacity: 0,
        margin: 0
      }
    }
  );
};
function isIndeterminate(checked) {
  return checked === "indeterminate";
}
function getState(checked) {
  return isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
}
var Root5 = Checkbox;
var Indicator = CheckboxIndicator;

// node_modules/@radix-ui/react-popover/dist/index.mjs
var React5 = __toESM(require_react(), 1);
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
var POPOVER_NAME = "Popover";
var [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [
  createPopperScope
]);
var usePopperScope2 = createPopperScope();
var [PopoverProvider, usePopoverContext] = createPopoverContext(POPOVER_NAME);
var Popover = (props) => {
  const {
    __scopePopover,
    children,
    open: openProp,
    defaultOpen,
    onOpenChange,
    modal = false
  } = props;
  const popperScope = usePopperScope2(__scopePopover);
  const triggerRef = React5.useRef(null);
  const [hasCustomAnchor, setHasCustomAnchor] = React5.useState(false);
  const [open = false, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_jsx_runtime4.jsx)(Root2, { ...popperScope, children: (0, import_jsx_runtime4.jsx)(
    PopoverProvider,
    {
      scope: __scopePopover,
      contentId: useId(),
      triggerRef,
      open,
      onOpenChange: setOpen,
      onOpenToggle: React5.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
      hasCustomAnchor,
      onCustomAnchorAdd: React5.useCallback(() => setHasCustomAnchor(true), []),
      onCustomAnchorRemove: React5.useCallback(() => setHasCustomAnchor(false), []),
      modal,
      children
    }
  ) });
};
Popover.displayName = POPOVER_NAME;
var ANCHOR_NAME = "PopoverAnchor";
var PopoverAnchor = React5.forwardRef(
  (props, forwardedRef) => {
    const { __scopePopover, ...anchorProps } = props;
    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);
    const popperScope = usePopperScope2(__scopePopover);
    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;
    React5.useEffect(() => {
      onCustomAnchorAdd();
      return () => onCustomAnchorRemove();
    }, [onCustomAnchorAdd, onCustomAnchorRemove]);
    return (0, import_jsx_runtime4.jsx)(Anchor, { ...popperScope, ...anchorProps, ref: forwardedRef });
  }
);
PopoverAnchor.displayName = ANCHOR_NAME;
var TRIGGER_NAME3 = "PopoverTrigger";
var PopoverTrigger = React5.forwardRef(
  (props, forwardedRef) => {
    const { __scopePopover, ...triggerProps } = props;
    const context = usePopoverContext(TRIGGER_NAME3, __scopePopover);
    const popperScope = usePopperScope2(__scopePopover);
    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);
    const trigger = (0, import_jsx_runtime4.jsx)(
      Primitive.button,
      {
        type: "button",
        "aria-haspopup": "dialog",
        "aria-expanded": context.open,
        "aria-controls": context.contentId,
        "data-state": getState2(context.open),
        ...triggerProps,
        ref: composedTriggerRef,
        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)
      }
    );
    return context.hasCustomAnchor ? trigger : (0, import_jsx_runtime4.jsx)(Anchor, { asChild: true, ...popperScope, children: trigger });
  }
);
PopoverTrigger.displayName = TRIGGER_NAME3;
var PORTAL_NAME2 = "PopoverPortal";
var [PortalProvider, usePortalContext] = createPopoverContext(PORTAL_NAME2, {
  forceMount: void 0
});
var PopoverPortal = (props) => {
  const { __scopePopover, forceMount, children, container } = props;
  const context = usePopoverContext(PORTAL_NAME2, __scopePopover);
  return (0, import_jsx_runtime4.jsx)(PortalProvider, { scope: __scopePopover, forceMount, children: (0, import_jsx_runtime4.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime4.jsx)(Portal, { asChild: true, container, children }) }) });
};
PopoverPortal.displayName = PORTAL_NAME2;
var CONTENT_NAME3 = "PopoverContent";
var PopoverContent = React5.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext(CONTENT_NAME3, props.__scopePopover);
    const { forceMount = portalContext.forceMount, ...contentProps } = props;
    const context = usePopoverContext(CONTENT_NAME3, props.__scopePopover);
    return (0, import_jsx_runtime4.jsx)(Presence, { present: forceMount || context.open, children: context.modal ? (0, import_jsx_runtime4.jsx)(PopoverContentModal, { ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime4.jsx)(PopoverContentNonModal, { ...contentProps, ref: forwardedRef }) });
  }
);
PopoverContent.displayName = CONTENT_NAME3;
var Slot3 = createSlot("PopoverContent.RemoveScroll");
var PopoverContentModal = React5.forwardRef(
  (props, forwardedRef) => {
    const context = usePopoverContext(CONTENT_NAME3, props.__scopePopover);
    const contentRef = React5.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, contentRef);
    const isRightClickOutsideRef = React5.useRef(false);
    React5.useEffect(() => {
      const content = contentRef.current;
      if (content) return hideOthers(content);
    }, []);
    return (0, import_jsx_runtime4.jsx)(Combination_default, { as: Slot3, allowPinchZoom: true, children: (0, import_jsx_runtime4.jsx)(
      PopoverContentImpl,
      {
        ...props,
        ref: composedRefs,
        trapFocus: context.open,
        disableOutsidePointerEvents: true,
        onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {
          var _a;
          event.preventDefault();
          if (!isRightClickOutsideRef.current) (_a = context.triggerRef.current) == null ? void 0 : _a.focus();
        }),
        onPointerDownOutside: composeEventHandlers(
          props.onPointerDownOutside,
          (event) => {
            const originalEvent = event.detail.originalEvent;
            const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
            const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
            isRightClickOutsideRef.current = isRightClick;
          },
          { checkForDefaultPrevented: false }
        ),
        onFocusOutside: composeEventHandlers(
          props.onFocusOutside,
          (event) => event.preventDefault(),
          { checkForDefaultPrevented: false }
        )
      }
    ) });
  }
);
var PopoverContentNonModal = React5.forwardRef(
  (props, forwardedRef) => {
    const context = usePopoverContext(CONTENT_NAME3, props.__scopePopover);
    const hasInteractedOutsideRef = React5.useRef(false);
    const hasPointerDownOutsideRef = React5.useRef(false);
    return (0, import_jsx_runtime4.jsx)(
      PopoverContentImpl,
      {
        ...props,
        ref: forwardedRef,
        trapFocus: false,
        disableOutsidePointerEvents: false,
        onCloseAutoFocus: (event) => {
          var _a, _b;
          (_a = props.onCloseAutoFocus) == null ? void 0 : _a.call(props, event);
          if (!event.defaultPrevented) {
            if (!hasInteractedOutsideRef.current) (_b = context.triggerRef.current) == null ? void 0 : _b.focus();
            event.preventDefault();
          }
          hasInteractedOutsideRef.current = false;
          hasPointerDownOutsideRef.current = false;
        },
        onInteractOutside: (event) => {
          var _a, _b;
          (_a = props.onInteractOutside) == null ? void 0 : _a.call(props, event);
          if (!event.defaultPrevented) {
            hasInteractedOutsideRef.current = true;
            if (event.detail.originalEvent.type === "pointerdown") {
              hasPointerDownOutsideRef.current = true;
            }
          }
          const target = event.target;
          const targetIsTrigger = (_b = context.triggerRef.current) == null ? void 0 : _b.contains(target);
          if (targetIsTrigger) event.preventDefault();
          if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current) {
            event.preventDefault();
          }
        }
      }
    );
  }
);
var PopoverContentImpl = React5.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopePopover,
      trapFocus,
      onOpenAutoFocus,
      onCloseAutoFocus,
      disableOutsidePointerEvents,
      onEscapeKeyDown,
      onPointerDownOutside,
      onFocusOutside,
      onInteractOutside,
      ...contentProps
    } = props;
    const context = usePopoverContext(CONTENT_NAME3, __scopePopover);
    const popperScope = usePopperScope2(__scopePopover);
    useFocusGuards();
    return (0, import_jsx_runtime4.jsx)(
      FocusScope,
      {
        asChild: true,
        loop: true,
        trapped: trapFocus,
        onMountAutoFocus: onOpenAutoFocus,
        onUnmountAutoFocus: onCloseAutoFocus,
        children: (0, import_jsx_runtime4.jsx)(
          DismissableLayer,
          {
            asChild: true,
            disableOutsidePointerEvents,
            onInteractOutside,
            onEscapeKeyDown,
            onPointerDownOutside,
            onFocusOutside,
            onDismiss: () => context.onOpenChange(false),
            children: (0, import_jsx_runtime4.jsx)(
              Content2,
              {
                "data-state": getState2(context.open),
                role: "dialog",
                id: context.contentId,
                ...popperScope,
                ...contentProps,
                ref: forwardedRef,
                style: {
                  ...contentProps.style,
                  // re-namespace exposed content custom properties
                  ...{
                    "--radix-popover-content-transform-origin": "var(--radix-popper-transform-origin)",
                    "--radix-popover-content-available-width": "var(--radix-popper-available-width)",
                    "--radix-popover-content-available-height": "var(--radix-popper-available-height)",
                    "--radix-popover-trigger-width": "var(--radix-popper-anchor-width)",
                    "--radix-popover-trigger-height": "var(--radix-popper-anchor-height)"
                  }
                }
              }
            )
          }
        )
      }
    );
  }
);
var CLOSE_NAME = "PopoverClose";
var PopoverClose = React5.forwardRef(
  (props, forwardedRef) => {
    const { __scopePopover, ...closeProps } = props;
    const context = usePopoverContext(CLOSE_NAME, __scopePopover);
    return (0, import_jsx_runtime4.jsx)(
      Primitive.button,
      {
        type: "button",
        ...closeProps,
        ref: forwardedRef,
        onClick: composeEventHandlers(props.onClick, () => context.onOpenChange(false))
      }
    );
  }
);
PopoverClose.displayName = CLOSE_NAME;
var ARROW_NAME2 = "PopoverArrow";
var PopoverArrow = React5.forwardRef(
  (props, forwardedRef) => {
    const { __scopePopover, ...arrowProps } = props;
    const popperScope = usePopperScope2(__scopePopover);
    return (0, import_jsx_runtime4.jsx)(Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef });
  }
);
PopoverArrow.displayName = ARROW_NAME2;
function getState2(open) {
  return open ? "open" : "closed";
}
var Root25 = Popover;
var Portal4 = PopoverPortal;
var Content24 = PopoverContent;

// node_modules/zudoku/lib/index-CuBIgTKC.js
var n3 = __toESM(require_react(), 1);
var se2 = 1;
var ke = 0.9;
var Se = 0.8;
var Ie2 = 0.17;
var Z = 0.1;
var _ = 0.999;
var xe2 = 0.9999;
var Re3 = 0.99;
var Ce3 = /[\\\/_+.#"@\[\(\{&]/;
var Ae2 = /[\\\/_+.#"@\[\(\{&]/g;
var Me2 = /[\s-]/;
var ve = /[\s-]/g;
function te2(t3, l4, r3, f3, u3, c5, d2) {
  if (c5 === l4.length) return u3 === t3.length ? se2 : Re3;
  var m6 = `${u3},${c5}`;
  if (d2[m6] !== void 0) return d2[m6];
  for (var b = f3.charAt(c5), i3 = r3.indexOf(b, u3), p3 = 0, h2, I4, E2, x3; i3 >= 0; ) h2 = te2(t3, l4, r3, f3, i3 + 1, c5 + 1, d2), h2 > p3 && (i3 === u3 ? h2 *= se2 : Ce3.test(t3.charAt(i3 - 1)) ? (h2 *= Se, E2 = t3.slice(u3, i3 - 1).match(Ae2), E2 && u3 > 0 && (h2 *= Math.pow(_, E2.length))) : Me2.test(t3.charAt(i3 - 1)) ? (h2 *= ke, x3 = t3.slice(u3, i3 - 1).match(ve), x3 && u3 > 0 && (h2 *= Math.pow(_, x3.length))) : (h2 *= Ie2, u3 > 0 && (h2 *= Math.pow(_, i3 - u3))), t3.charAt(i3) !== l4.charAt(c5) && (h2 *= xe2)), (h2 < Z && r3.charAt(i3 - 1) === f3.charAt(c5 + 1) || f3.charAt(c5 + 1) === f3.charAt(c5) && r3.charAt(i3 - 1) !== f3.charAt(c5)) && (I4 = te2(t3, l4, r3, f3, i3 + 1, c5 + 2, d2), I4 * Z > h2 && (h2 = I4 * Z)), h2 > p3 && (p3 = h2), i3 = r3.indexOf(b, i3 + 1);
  return d2[m6] = p3, p3;
}
function fe(t3) {
  return t3.toLowerCase().replace(ve, " ");
}
function $e2(t3, l4, r3) {
  return t3 = r3 && r3.length > 0 ? `${t3 + " " + r3.join(" ")}` : t3, te2(t3, l4, fe(t3), fe(l4), 0, 0, {});
}
var V = '[cmdk-group=""]';
var ee2 = '[cmdk-group-items=""]';
var De = '[cmdk-group-heading=""]';
var pe2 = '[cmdk-item=""]';
var me2 = `${pe2}:not([aria-disabled="true"])`;
var re = "cmdk-item-select";
var F2 = "data-value";
var Fe2 = (t3, l4, r3) => $e2(t3, l4, r3);
var he2 = n3.createContext(void 0);
var L = () => n3.useContext(he2);
var ge2 = n3.createContext(void 0);
var ne2 = () => n3.useContext(ge2);
var be2 = n3.createContext(void 0);
var we = n3.forwardRef((t3, l4) => {
  let r3 = K(() => {
    var e2, o3;
    return { search: "", value: (o3 = (e2 = t3.value) != null ? e2 : t3.defaultValue) != null ? o3 : "", selectedItemId: void 0, filtered: { count: 0, items: /* @__PURE__ */ new Map(), groups: /* @__PURE__ */ new Set() } };
  }), f3 = K(() => /* @__PURE__ */ new Set()), u3 = K(() => /* @__PURE__ */ new Map()), c5 = K(() => /* @__PURE__ */ new Map()), d2 = K(() => /* @__PURE__ */ new Set()), m6 = ye2(t3), { label: b, children: i3, value: p3, onValueChange: h2, filter: I4, shouldFilter: E2, loop: x3, disablePointerSelection: H5 = false, vimBindings: A2 = true, ...O2 } = t3, N3 = useId(), le3 = useId(), T3 = useId(), M2 = n3.useRef(null), w = He2();
  $2(() => {
    if (p3 !== void 0) {
      let e2 = p3.trim();
      r3.current.value = e2, k2.emit();
    }
  }, [p3]), $2(() => {
    w(6, ue2);
  }, []);
  let k2 = n3.useMemo(() => ({ subscribe: (e2) => (d2.current.add(e2), () => d2.current.delete(e2)), snapshot: () => r3.current, setState: (e2, o3, s5) => {
    var a2, v4, g3, S2;
    if (!Object.is(r3.current[e2], o3)) {
      if (r3.current[e2] = o3, e2 === "search") X3(), G2(), w(1, J3);
      else if (e2 === "value") {
        if (document.activeElement.hasAttribute("cmdk-input") || document.activeElement.hasAttribute("cmdk-root")) {
          let y2 = document.getElementById(T3);
          y2 ? y2.focus() : (a2 = document.getElementById(N3)) == null || a2.focus();
        }
        if (w(7, () => {
          var y2;
          r3.current.selectedItemId = (y2 = D3()) == null ? void 0 : y2.id, k2.emit();
        }), s5 || w(5, ue2), ((v4 = m6.current) == null ? void 0 : v4.value) !== void 0) {
          let y2 = o3 ?? "";
          (S2 = (g3 = m6.current).onValueChange) == null || S2.call(g3, y2);
          return;
        }
      }
      k2.emit();
    }
  }, emit: () => {
    d2.current.forEach((e2) => e2());
  } }), []), W2 = n3.useMemo(() => ({ value: (e2, o3, s5) => {
    var a2;
    o3 !== ((a2 = c5.current.get(e2)) == null ? void 0 : a2.value) && (c5.current.set(e2, { value: o3, keywords: s5 }), r3.current.filtered.items.set(e2, ae2(o3, s5)), w(2, () => {
      G2(), k2.emit();
    }));
  }, item: (e2, o3) => (f3.current.add(e2), o3 && (u3.current.has(o3) ? u3.current.get(o3).add(e2) : u3.current.set(o3, /* @__PURE__ */ new Set([e2]))), w(3, () => {
    X3(), G2(), r3.current.value || J3(), k2.emit();
  }), () => {
    c5.current.delete(e2), f3.current.delete(e2), r3.current.filtered.items.delete(e2);
    let s5 = D3();
    w(4, () => {
      X3(), (s5 == null ? void 0 : s5.getAttribute("id")) === e2 && J3(), k2.emit();
    });
  }), group: (e2) => (u3.current.has(e2) || u3.current.set(e2, /* @__PURE__ */ new Set()), () => {
    c5.current.delete(e2), u3.current.delete(e2);
  }), filter: () => m6.current.shouldFilter, label: b || t3["aria-label"], getDisablePointerSelection: () => m6.current.disablePointerSelection, listId: N3, inputId: T3, labelId: le3, listInnerRef: M2 }), []);
  function ae2(e2, o3) {
    var s5, a2;
    let v4 = (a2 = (s5 = m6.current) == null ? void 0 : s5.filter) != null ? a2 : Fe2;
    return e2 ? v4(e2, r3.current.search, o3) : 0;
  }
  function G2() {
    if (!r3.current.search || m6.current.shouldFilter === false) return;
    let e2 = r3.current.filtered.items, o3 = [];
    r3.current.filtered.groups.forEach((a2) => {
      let v4 = u3.current.get(a2), g3 = 0;
      v4.forEach((S2) => {
        let y2 = e2.get(S2);
        g3 = Math.max(y2, g3);
      }), o3.push([a2, g3]);
    });
    let s5 = M2.current;
    q2().sort((a2, v4) => {
      var g3, S2;
      let y2 = a2.getAttribute("id"), B4 = v4.getAttribute("id");
      return ((g3 = e2.get(B4)) != null ? g3 : 0) - ((S2 = e2.get(y2)) != null ? S2 : 0);
    }).forEach((a2) => {
      let v4 = a2.closest(ee2);
      v4 ? v4.appendChild(a2.parentElement === v4 ? a2 : a2.closest(`${ee2} > *`)) : s5.appendChild(a2.parentElement === s5 ? a2 : a2.closest(`${ee2} > *`));
    }), o3.sort((a2, v4) => v4[1] - a2[1]).forEach((a2) => {
      var v4;
      let g3 = (v4 = M2.current) == null ? void 0 : v4.querySelector(`${V}[${F2}="${encodeURIComponent(a2[0])}"]`);
      g3 == null || g3.parentElement.appendChild(g3);
    });
  }
  function J3() {
    let e2 = q2().find((s5) => s5.getAttribute("aria-disabled") !== "true"), o3 = e2 == null ? void 0 : e2.getAttribute(F2);
    k2.setState("value", o3 || void 0);
  }
  function X3() {
    var e2, o3, s5, a2;
    if (!r3.current.search || m6.current.shouldFilter === false) {
      r3.current.filtered.count = f3.current.size;
      return;
    }
    r3.current.filtered.groups = /* @__PURE__ */ new Set();
    let v4 = 0;
    for (let g3 of f3.current) {
      let S2 = (o3 = (e2 = c5.current.get(g3)) == null ? void 0 : e2.value) != null ? o3 : "", y2 = (a2 = (s5 = c5.current.get(g3)) == null ? void 0 : s5.keywords) != null ? a2 : [], B4 = ae2(S2, y2);
      r3.current.filtered.items.set(g3, B4), B4 > 0 && v4++;
    }
    for (let [g3, S2] of u3.current) for (let y2 of S2) if (r3.current.filtered.items.get(y2) > 0) {
      r3.current.filtered.groups.add(g3);
      break;
    }
    r3.current.filtered.count = v4;
  }
  function ue2() {
    var e2, o3, s5;
    let a2 = D3();
    a2 && (((e2 = a2.parentElement) == null ? void 0 : e2.firstChild) === a2 && ((s5 = (o3 = a2.closest(V)) == null ? void 0 : o3.querySelector(De)) == null || s5.scrollIntoView({ block: "nearest" })), a2.scrollIntoView({ block: "nearest" }));
  }
  function D3() {
    var e2;
    return (e2 = M2.current) == null ? void 0 : e2.querySelector(`${pe2}[aria-selected="true"]`);
  }
  function q2() {
    var e2;
    return Array.from(((e2 = M2.current) == null ? void 0 : e2.querySelectorAll(me2)) || []);
  }
  function Y(e2) {
    let o3 = q2()[e2];
    o3 && k2.setState("value", o3.getAttribute(F2));
  }
  function Q3(e2) {
    var o3;
    let s5 = D3(), a2 = q2(), v4 = a2.findIndex((S2) => S2 === s5), g3 = a2[v4 + e2];
    (o3 = m6.current) != null && o3.loop && (g3 = v4 + e2 < 0 ? a2[a2.length - 1] : v4 + e2 === a2.length ? a2[0] : a2[v4 + e2]), g3 && k2.setState("value", g3.getAttribute(F2));
  }
  function ie3(e2) {
    let o3 = D3(), s5 = o3 == null ? void 0 : o3.closest(V), a2;
    for (; s5 && !a2; ) s5 = e2 > 0 ? ze(s5, V) : Ue2(s5, V), a2 = s5 == null ? void 0 : s5.querySelector(me2);
    a2 ? k2.setState("value", a2.getAttribute(F2)) : Q3(e2);
  }
  let oe3 = () => Y(q2().length - 1), ce2 = (e2) => {
    e2.preventDefault(), e2.metaKey ? oe3() : e2.altKey ? ie3(1) : Q3(1);
  }, de3 = (e2) => {
    e2.preventDefault(), e2.metaKey ? Y(0) : e2.altKey ? ie3(-1) : Q3(-1);
  };
  return n3.createElement(Primitive.div, { ref: l4, tabIndex: -1, ...O2, "cmdk-root": "", onKeyDown: (e2) => {
    var o3;
    (o3 = O2.onKeyDown) == null || o3.call(O2, e2);
    let s5 = e2.nativeEvent.isComposing || e2.keyCode === 229;
    if (!(e2.defaultPrevented || s5)) switch (e2.key) {
      case "n":
      case "j": {
        A2 && e2.ctrlKey && ce2(e2);
        break;
      }
      case "ArrowDown": {
        ce2(e2);
        break;
      }
      case "p":
      case "k": {
        A2 && e2.ctrlKey && de3(e2);
        break;
      }
      case "ArrowUp": {
        de3(e2);
        break;
      }
      case "Home": {
        e2.preventDefault(), Y(0);
        break;
      }
      case "End": {
        e2.preventDefault(), oe3();
        break;
      }
      case "Enter": {
        e2.preventDefault();
        let a2 = D3();
        if (a2) {
          let v4 = new Event(re);
          a2.dispatchEvent(v4);
        }
      }
    }
  } }, n3.createElement("label", { "cmdk-label": "", htmlFor: W2.inputId, id: W2.labelId, style: Te2 }, b), U2(t3, (e2) => n3.createElement(ge2.Provider, { value: k2 }, n3.createElement(he2.Provider, { value: W2 }, e2))));
});
var Ke = n3.forwardRef((t3, l4) => {
  var r3, f3;
  let u3 = useId(), c5 = n3.useRef(null), d2 = n3.useContext(be2), m6 = L(), b = ye2(t3), i3 = (f3 = (r3 = b.current) == null ? void 0 : r3.forceMount) != null ? f3 : d2 == null ? void 0 : d2.forceMount;
  $2(() => {
    if (!i3) return m6.item(u3, d2 == null ? void 0 : d2.id);
  }, [i3]);
  let p3 = Ee(u3, c5, [t3.value, t3.children, c5], t3.keywords), h2 = ne2(), I4 = R((w) => w.value && w.value === p3.current), E2 = R((w) => i3 || m6.filter() === false ? true : w.search ? w.filtered.items.get(u3) > 0 : true);
  n3.useEffect(() => {
    let w = c5.current;
    if (!(!w || t3.disabled)) return w.addEventListener(re, x3), () => w.removeEventListener(re, x3);
  }, [E2, t3.onSelect, t3.disabled]);
  function x3() {
    var w, k2;
    H5(), (k2 = (w = b.current).onSelect) == null || k2.call(w, p3.current);
  }
  function H5() {
    h2.setState("value", p3.current, true);
  }
  if (!E2) return null;
  let { disabled: A2, value: O2, onSelect: N3, forceMount: le3, keywords: T3, ...M2 } = t3;
  return n3.createElement(Primitive.div, { ref: composeRefs(c5, l4), ...M2, id: u3, "cmdk-item": "", role: "option", "aria-disabled": !!A2, "aria-selected": !!I4, "data-disabled": !!A2, "data-selected": !!I4, onPointerMove: A2 || m6.getDisablePointerSelection() ? void 0 : H5, onClick: A2 ? void 0 : x3 }, t3.children);
});
var Pe2 = n3.forwardRef((t3, l4) => {
  let { heading: r3, children: f3, forceMount: u3, ...c5 } = t3, d2 = useId(), m6 = n3.useRef(null), b = n3.useRef(null), i3 = useId(), p3 = L(), h2 = R((E2) => u3 || p3.filter() === false ? true : E2.search ? E2.filtered.groups.has(d2) : true);
  $2(() => p3.group(d2), []), Ee(d2, m6, [t3.value, t3.heading, b]);
  let I4 = n3.useMemo(() => ({ id: d2, forceMount: u3 }), [u3]);
  return n3.createElement(Primitive.div, { ref: composeRefs(m6, l4), ...c5, "cmdk-group": "", role: "presentation", hidden: h2 ? void 0 : true }, r3 && n3.createElement("div", { ref: b, "cmdk-group-heading": "", "aria-hidden": true, id: i3 }, r3), U2(t3, (E2) => n3.createElement("div", { "cmdk-group-items": "", role: "group", "aria-labelledby": r3 ? i3 : void 0 }, n3.createElement(be2.Provider, { value: I4 }, E2))));
});
var qe2 = n3.forwardRef((t3, l4) => {
  let { alwaysRender: r3, ...f3 } = t3, u3 = n3.useRef(null), c5 = R((d2) => !d2.search);
  return !r3 && !c5 ? null : n3.createElement(Primitive.div, { ref: composeRefs(u3, l4), ...f3, "cmdk-separator": "", role: "separator" });
});
var Ve2 = n3.forwardRef((t3, l4) => {
  let { onValueChange: r3, ...f3 } = t3, u3 = t3.value != null, c5 = ne2(), d2 = R((i3) => i3.search), m6 = R((i3) => i3.selectedItemId), b = L();
  return n3.useEffect(() => {
    t3.value != null && c5.setState("search", t3.value);
  }, [t3.value]), n3.createElement(Primitive.input, { ref: l4, ...f3, "cmdk-input": "", autoComplete: "off", autoCorrect: "off", spellCheck: false, "aria-autocomplete": "list", role: "combobox", "aria-expanded": true, "aria-controls": b.listId, "aria-labelledby": b.labelId, "aria-activedescendant": m6, id: b.inputId, type: "text", value: u3 ? t3.value : d2, onChange: (i3) => {
    u3 || c5.setState("search", i3.target.value), r3 == null || r3(i3.target.value);
  } });
});
var je = n3.forwardRef((t3, l4) => {
  let { children: r3, label: f3 = "Suggestions", ...u3 } = t3, c5 = n3.useRef(null), d2 = n3.useRef(null), m6 = R((i3) => i3.selectedItemId), b = L();
  return n3.useEffect(() => {
    if (d2.current && c5.current) {
      let i3 = d2.current, p3 = c5.current, h2, I4 = new ResizeObserver(() => {
        h2 = requestAnimationFrame(() => {
          let E2 = i3.offsetHeight;
          p3.style.setProperty("--cmdk-list-height", E2.toFixed(1) + "px");
        });
      });
      return I4.observe(i3), () => {
        cancelAnimationFrame(h2), I4.unobserve(i3);
      };
    }
  }, []), n3.createElement(Primitive.div, { ref: composeRefs(c5, l4), ...u3, "cmdk-list": "", role: "listbox", tabIndex: -1, "aria-activedescendant": m6, "aria-label": f3, id: b.listId }, U2(t3, (i3) => n3.createElement("div", { ref: composeRefs(d2, b.listInnerRef), "cmdk-list-sizer": "" }, i3)));
});
var Le3 = n3.forwardRef((t3, l4) => {
  let { open: r3, onOpenChange: f3, overlayClassName: u3, contentClassName: c5, container: d2, ...m6 } = t3;
  return n3.createElement(Root, { open: r3, onOpenChange: f3 }, n3.createElement(Portal2, { container: d2 }, n3.createElement(Overlay, { "cmdk-overlay": "", className: u3 }), n3.createElement(Content, { "aria-label": t3.label, "cmdk-dialog": "", className: c5 }, n3.createElement(we, { ref: l4, ...m6 }))));
});
var Oe2 = n3.forwardRef((t3, l4) => R((r3) => r3.filtered.count === 0) ? n3.createElement(Primitive.div, { ref: l4, ...t3, "cmdk-empty": "", role: "presentation" }) : null);
var Be2 = n3.forwardRef((t3, l4) => {
  let { progress: r3, children: f3, label: u3 = "Loading...", ...c5 } = t3;
  return n3.createElement(Primitive.div, { ref: l4, ...c5, "cmdk-loading": "", role: "progressbar", "aria-valuenow": r3, "aria-valuemin": 0, "aria-valuemax": 100, "aria-label": u3 }, U2(t3, (d2) => n3.createElement("div", { "aria-hidden": true }, d2)));
});
var Xe = Object.assign(we, { List: je, Item: Ke, Input: Ve2, Group: Pe2, Separator: qe2, Dialog: Le3, Empty: Oe2, Loading: Be2 });
function ze(t3, l4) {
  let r3 = t3.nextElementSibling;
  for (; r3; ) {
    if (r3.matches(l4)) return r3;
    r3 = r3.nextElementSibling;
  }
}
function Ue2(t3, l4) {
  let r3 = t3.previousElementSibling;
  for (; r3; ) {
    if (r3.matches(l4)) return r3;
    r3 = r3.previousElementSibling;
  }
}
function ye2(t3) {
  let l4 = n3.useRef(t3);
  return $2(() => {
    l4.current = t3;
  }), l4;
}
var $2 = typeof window > "u" ? n3.useEffect : n3.useLayoutEffect;
function K(t3) {
  let l4 = n3.useRef();
  return l4.current === void 0 && (l4.current = t3()), l4;
}
function R(t3) {
  let l4 = ne2(), r3 = () => t3(l4.snapshot());
  return n3.useSyncExternalStore(l4.subscribe, r3, r3);
}
function Ee(t3, l4, r3, f3 = []) {
  let u3 = n3.useRef(), c5 = L();
  return $2(() => {
    var d2;
    let m6 = (() => {
      var i3;
      for (let p3 of r3) {
        if (typeof p3 == "string") return p3.trim();
        if (typeof p3 == "object" && "current" in p3) return p3.current ? (i3 = p3.current.textContent) == null ? void 0 : i3.trim() : u3.current;
      }
    })(), b = f3.map((i3) => i3.trim());
    c5.value(t3, m6, b), (d2 = l4.current) == null || d2.setAttribute(F2, m6), u3.current = m6;
  }), u3;
}
var He2 = () => {
  let [t3, l4] = n3.useState(), r3 = K(() => /* @__PURE__ */ new Map());
  return $2(() => {
    r3.current.forEach((f3) => f3()), r3.current = /* @__PURE__ */ new Map();
  }, [t3]), (f3, u3) => {
    r3.current.set(f3, u3), l4({});
  };
};
function Ne2(t3) {
  let l4 = t3.type;
  return typeof l4 == "function" ? l4(t3.props) : "render" in l4 ? l4.render(t3.props) : t3;
}
function U2({ asChild: t3, children: l4 }, r3) {
  return t3 && n3.isValidElement(l4) ? n3.cloneElement(Ne2(l4), { ref: l4.ref }, r3(l4.props.children)) : r3(l4);
}
var Te2 = { position: "absolute", width: "1px", height: "1px", padding: "0", margin: "-1px", overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0" };

// node_modules/zudoku/lib/Callout-D3Ja4OPX.js
var s2 = __toESM(require_react(), 1);
var m5 = s2.forwardRef(({ className: o3, ...r3 }, e2) => ae.jsx(
  Xe,
  {
    ref: e2,
    className: We(
      "flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground",
      o3
    ),
    ...r3
  }
));
m5.displayName = Xe.displayName;
var N2 = s2.forwardRef(({ className: o3, ...r3 }, e2) => (
  // eslint-disable-next-line react/no-unknown-property
  ae.jsxs("div", { className: "flex items-center border-b px-3", "cmdk-input-wrapper": "", children: [
    ae.jsx(Search, { className: "mr-2 h-4 w-4 shrink-0 opacity-50" }),
    ae.jsx(
      Xe.Input,
      {
        ref: e2,
        className: We(
          "flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50",
          o3
        ),
        ...r3
      }
    )
  ] })
));
N2.displayName = Xe.Input.displayName;
var C3 = s2.forwardRef(({ className: o3, ...r3 }, e2) => (
  // eslint-disable-next-line react/no-unknown-property
  ae.jsx("div", { className: "flex items-center", "cmdk-input-wrapper": "", children: ae.jsx(
    Xe.Input,
    {
      ref: e2,
      className: We(
        "flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50",
        "focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring",
        o3
      ),
      ...r3
    }
  ) })
));
C3.displayName = Xe.Input.displayName;
var v2 = s2.forwardRef(({ className: o3, ...r3 }, e2) => ae.jsx(
  Xe.List,
  {
    ref: e2,
    className: We("max-h-[300px] overflow-y-auto overflow-x-hidden", o3),
    ...r3
  }
));
v2.displayName = Xe.List.displayName;
var I2 = s2.forwardRef((o3, r3) => ae.jsx(
  Xe.Empty,
  {
    ref: r3,
    className: "py-6 text-center text-sm",
    ...o3
  }
));
I2.displayName = Xe.Empty.displayName;
var j5 = s2.forwardRef(({ className: o3, ...r3 }, e2) => ae.jsx(
  Xe.Group,
  {
    ref: e2,
    className: We(
      "overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground",
      o3
    ),
    ...r3
  }
));
j5.displayName = Xe.Group.displayName;
var R2 = s2.forwardRef(({ className: o3, ...r3 }, e2) => ae.jsx(
  Xe.Separator,
  {
    ref: e2,
    className: We("-mx-1 h-px bg-border", o3),
    ...r3
  }
));
R2.displayName = Xe.Separator.displayName;
var z2 = s2.forwardRef(({ className: o3, ...r3 }, e2) => ae.jsx(
  Xe.Item,
  {
    ref: e2,
    className: We(
      "relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      o3
    ),
    ...r3
  }
));
z2.displayName = Xe.Item.displayName;
var S = {
  note: {
    border: "border-gray-300 dark:border-zinc-800",
    bg: "bg-gray-100 dark:bg-zinc-800/50",
    iconColor: "text-gray-600 dark:text-zinc-300",
    titleColor: "text-gray-600 dark:text-zinc-300",
    textColor: "text-gray-600 dark:text-zinc-300",
    Icon: Info
  },
  tip: {
    border: "border-green-500 dark:border-green-800",
    bg: "bg-green-200/25 dark:bg-green-950/70",
    iconColor: "text-green-600 dark:text-green-200",
    titleColor: "text-green-700 dark:text-green-200",
    textColor: "text-green-600 dark:text-green-50",
    Icon: Lightbulb
  },
  info: {
    border: "border-blue-400 dark:border-blue-900/60",
    bg: "bg-blue-50 dark:bg-blue-950/40",
    iconColor: "text-blue-400 dark:text-blue-200",
    titleColor: "text-blue-700 dark:text-blue-200",
    textColor: "text-blue-600 dark:text-blue-100",
    Icon: Info
  },
  caution: {
    border: "border-yellow-400 dark:border-yellow-400/25",
    bg: "bg-yellow-100/60 dark:bg-yellow-400/10",
    iconColor: "text-yellow-500 dark:text-yellow-300",
    titleColor: "text-yellow-600 dark:text-yellow-300",
    textColor: "text-yellow-700 dark:text-yellow-200",
    Icon: TriangleAlert
  },
  danger: {
    border: "border-rose-400 dark:border-rose-800",
    bg: "bg-rose-50 dark:bg-rose-950/40",
    iconColor: "text-rose-400 dark:text-rose-300",
    titleColor: "text-rose-800 dark:text-rose-300",
    textColor: "text-rose-700 dark:text-rose-100",
    Icon: ShieldAlert
  }
};
var T2 = ({
  type: o3,
  children: r3,
  title: e2,
  className: n4,
  icon: l4 = true
}) => {
  const { border: c5, bg: p3, iconColor: x3, titleColor: g3, textColor: u3, Icon: b } = S[o3];
  return ae.jsxs(
    "div",
    {
      className: We(
        "not-prose rounded-md border p-4 text-md my-2",
        l4 && "grid grid-cols-[min-content_1fr] items-baseline grid-rows-[fit-content_1fr] gap-x-4 gap-y-2",
        !l4 && e2 && "flex flex-col gap-2",
        "[&_a]:underline [&_a]:decoration-current [&_a]:decoration-from-font [&_a]:underline-offset-4 hover:[&_a]:decoration-1",
        "[&_code]:!bg-gray-50 [&_code]:dark:!bg-gray-800 [&_code]:!border-none",
        "[&_ul]:list-disc [&_ol]:list-decimal [&_ul]:ps-4 [&_ul>li]:ps-1 [&_ul>li]:my-1",
        l4 && e2 && "items-center",
        c5,
        p3,
        n4
      ),
      children: [
        l4 && ae.jsx(
          b,
          {
            className: We(e2 ? "align-middle" : "translate-y-1", x3),
            size: 20,
            "aria-hidden": "true"
          }
        ),
        e2 && ae.jsx("h3", { className: We("font-medium", g3), children: e2 }),
        ae.jsx(
          "div",
          {
            className: We(
              l4 && "col-start-2",
              !e2 && l4 && "row-start-1",
              u3
            ),
            children: r3
          }
        )
      ]
    }
  );
};

// node_modules/zudoku/lib/ui/Input.js
var s3 = __toESM(require_react(), 1);
var a = s3.forwardRef(
  ({ className: e2, type: r3, ...o3 }, t3) => ae.jsx(
    "input",
    {
      type: r3,
      className: We(
        "flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50",
        e2
      ),
      ref: t3,
      ...o3
    }
  )
);
a.displayName = "Input";

// node_modules/@radix-ui/react-label/dist/index.mjs
var React6 = __toESM(require_react(), 1);
var import_jsx_runtime5 = __toESM(require_jsx_runtime(), 1);
var NAME = "Label";
var Label3 = React6.forwardRef((props, forwardedRef) => {
  return (0, import_jsx_runtime5.jsx)(
    Primitive.label,
    {
      ...props,
      ref: forwardedRef,
      onMouseDown: (event) => {
        var _a;
        const target = event.target;
        if (target.closest("button, input, select, textarea")) return;
        (_a = props.onMouseDown) == null ? void 0 : _a.call(props, event);
        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();
      }
    }
  );
});
Label3.displayName = NAME;
var Root6 = Label3;

// node_modules/@radix-ui/react-radio-group/dist/index.mjs
var React22 = __toESM(require_react(), 1);
var React7 = __toESM(require_react(), 1);
var import_jsx_runtime6 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime7 = __toESM(require_jsx_runtime(), 1);
var RADIO_NAME = "Radio";
var [createRadioContext, createRadioScope] = createContextScope(RADIO_NAME);
var [RadioProvider, useRadioContext] = createRadioContext(RADIO_NAME);
var Radio = React7.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeRadio,
      name,
      checked = false,
      required,
      disabled,
      value = "on",
      onCheck,
      form,
      ...radioProps
    } = props;
    const [button, setButton] = React7.useState(null);
    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));
    const hasConsumerStoppedPropagationRef = React7.useRef(false);
    const isFormControl = button ? form || !!button.closest("form") : true;
    return (0, import_jsx_runtime6.jsxs)(RadioProvider, { scope: __scopeRadio, checked, disabled, children: [
      (0, import_jsx_runtime6.jsx)(
        Primitive.button,
        {
          type: "button",
          role: "radio",
          "aria-checked": checked,
          "data-state": getState3(checked),
          "data-disabled": disabled ? "" : void 0,
          disabled,
          value,
          ...radioProps,
          ref: composedRefs,
          onClick: composeEventHandlers(props.onClick, (event) => {
            if (!checked) onCheck == null ? void 0 : onCheck();
            if (isFormControl) {
              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();
            }
          })
        }
      ),
      isFormControl && (0, import_jsx_runtime6.jsx)(
        BubbleInput2,
        {
          control: button,
          bubbles: !hasConsumerStoppedPropagationRef.current,
          name,
          value,
          checked,
          required,
          disabled,
          form,
          style: { transform: "translateX(-100%)" }
        }
      )
    ] });
  }
);
Radio.displayName = RADIO_NAME;
var INDICATOR_NAME2 = "RadioIndicator";
var RadioIndicator = React7.forwardRef(
  (props, forwardedRef) => {
    const { __scopeRadio, forceMount, ...indicatorProps } = props;
    const context = useRadioContext(INDICATOR_NAME2, __scopeRadio);
    return (0, import_jsx_runtime6.jsx)(Presence, { present: forceMount || context.checked, children: (0, import_jsx_runtime6.jsx)(
      Primitive.span,
      {
        "data-state": getState3(context.checked),
        "data-disabled": context.disabled ? "" : void 0,
        ...indicatorProps,
        ref: forwardedRef
      }
    ) });
  }
);
RadioIndicator.displayName = INDICATOR_NAME2;
var BubbleInput2 = (props) => {
  const { control, checked, bubbles = true, ...inputProps } = props;
  const ref = React7.useRef(null);
  const prevChecked = usePrevious(checked);
  const controlSize = useSize(control);
  React7.useEffect(() => {
    const input = ref.current;
    const inputProto = window.HTMLInputElement.prototype;
    const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
    const setChecked = descriptor.set;
    if (prevChecked !== checked && setChecked) {
      const event = new Event("click", { bubbles });
      setChecked.call(input, checked);
      input.dispatchEvent(event);
    }
  }, [prevChecked, checked, bubbles]);
  return (0, import_jsx_runtime6.jsx)(
    "input",
    {
      type: "radio",
      "aria-hidden": true,
      defaultChecked: checked,
      ...inputProps,
      tabIndex: -1,
      ref,
      style: {
        ...props.style,
        ...controlSize,
        position: "absolute",
        pointerEvents: "none",
        opacity: 0,
        margin: 0
      }
    }
  );
};
function getState3(checked) {
  return checked ? "checked" : "unchecked";
}
var ARROW_KEYS = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"];
var RADIO_GROUP_NAME = "RadioGroup";
var [createRadioGroupContext, createRadioGroupScope] = createContextScope(RADIO_GROUP_NAME, [
  createRovingFocusGroupScope,
  createRadioScope
]);
var useRovingFocusGroupScope2 = createRovingFocusGroupScope();
var useRadioScope = createRadioScope();
var [RadioGroupProvider, useRadioGroupContext] = createRadioGroupContext(RADIO_GROUP_NAME);
var RadioGroup = React22.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeRadioGroup,
      name,
      defaultValue,
      value: valueProp,
      required = false,
      disabled = false,
      orientation,
      dir,
      loop = true,
      onValueChange,
      ...groupProps
    } = props;
    const rovingFocusGroupScope = useRovingFocusGroupScope2(__scopeRadioGroup);
    const direction = useDirection(dir);
    const [value, setValue] = useControllableState({
      prop: valueProp,
      defaultProp: defaultValue,
      onChange: onValueChange
    });
    return (0, import_jsx_runtime7.jsx)(
      RadioGroupProvider,
      {
        scope: __scopeRadioGroup,
        name,
        required,
        disabled,
        value,
        onValueChange: setValue,
        children: (0, import_jsx_runtime7.jsx)(
          Root3,
          {
            asChild: true,
            ...rovingFocusGroupScope,
            orientation,
            dir: direction,
            loop,
            children: (0, import_jsx_runtime7.jsx)(
              Primitive.div,
              {
                role: "radiogroup",
                "aria-required": required,
                "aria-orientation": orientation,
                "data-disabled": disabled ? "" : void 0,
                dir: direction,
                ...groupProps,
                ref: forwardedRef
              }
            )
          }
        )
      }
    );
  }
);
RadioGroup.displayName = RADIO_GROUP_NAME;
var ITEM_NAME2 = "RadioGroupItem";
var RadioGroupItem = React22.forwardRef(
  (props, forwardedRef) => {
    const { __scopeRadioGroup, disabled, ...itemProps } = props;
    const context = useRadioGroupContext(ITEM_NAME2, __scopeRadioGroup);
    const isDisabled = context.disabled || disabled;
    const rovingFocusGroupScope = useRovingFocusGroupScope2(__scopeRadioGroup);
    const radioScope = useRadioScope(__scopeRadioGroup);
    const ref = React22.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    const checked = context.value === itemProps.value;
    const isArrowKeyPressedRef = React22.useRef(false);
    React22.useEffect(() => {
      const handleKeyDown = (event) => {
        if (ARROW_KEYS.includes(event.key)) {
          isArrowKeyPressedRef.current = true;
        }
      };
      const handleKeyUp = () => isArrowKeyPressedRef.current = false;
      document.addEventListener("keydown", handleKeyDown);
      document.addEventListener("keyup", handleKeyUp);
      return () => {
        document.removeEventListener("keydown", handleKeyDown);
        document.removeEventListener("keyup", handleKeyUp);
      };
    }, []);
    return (0, import_jsx_runtime7.jsx)(
      Item,
      {
        asChild: true,
        ...rovingFocusGroupScope,
        focusable: !isDisabled,
        active: checked,
        children: (0, import_jsx_runtime7.jsx)(
          Radio,
          {
            disabled: isDisabled,
            required: context.required,
            checked,
            ...radioScope,
            ...itemProps,
            name: context.name,
            ref: composedRefs,
            onCheck: () => context.onValueChange(itemProps.value),
            onKeyDown: composeEventHandlers((event) => {
              if (event.key === "Enter") event.preventDefault();
            }),
            onFocus: composeEventHandlers(itemProps.onFocus, () => {
              var _a;
              if (isArrowKeyPressedRef.current) (_a = ref.current) == null ? void 0 : _a.click();
            })
          }
        )
      }
    );
  }
);
RadioGroupItem.displayName = ITEM_NAME2;
var INDICATOR_NAME22 = "RadioGroupIndicator";
var RadioGroupIndicator = React22.forwardRef(
  (props, forwardedRef) => {
    const { __scopeRadioGroup, ...indicatorProps } = props;
    const radioScope = useRadioScope(__scopeRadioGroup);
    return (0, import_jsx_runtime7.jsx)(RadioIndicator, { ...radioScope, ...indicatorProps, ref: forwardedRef });
  }
);
RadioGroupIndicator.displayName = INDICATOR_NAME22;
var Root26 = RadioGroup;
var Item22 = RadioGroupItem;
var Indicator2 = RadioGroupIndicator;

// node_modules/zudoku/lib/ui/Collapsible.js
var o2 = Root4;
var e = CollapsibleTrigger;
var s4 = CollapsibleContent;

// node_modules/zudoku/lib/index-Ba_X7EnR.js
var Vt2 = Object.defineProperty;
var tt = (t3) => {
  throw TypeError(t3);
};
var Ft2 = (t3, n4, s5) => n4 in t3 ? Vt2(t3, n4, { enumerable: true, configurable: true, writable: true, value: s5 }) : t3[n4] = s5;
var J2 = (t3, n4, s5) => Ft2(t3, typeof n4 != "symbol" ? n4 + "" : n4, s5);
var zt2 = (t3, n4, s5) => n4.has(t3) || tt("Cannot " + s5);
var pe3 = (t3, n4, s5) => (zt2(t3, n4, "read from private field"), s5 ? s5.call(t3) : n4.get(t3));
var he3 = (t3, n4, s5) => n4.has(t3) ? tt("Cannot add the same private member more than once") : n4 instanceof WeakSet ? n4.add(t3) : n4.set(t3, s5);
var xe3;
var $n = (t3) => {
  var n4;
  if ((n4 = t3.errors) != null && n4[0])
    throw new s(t3.errors[0].message, {
      developerHint: "Check your configuration value `apis.type` and `apis.input` in the Zudoku config."
    });
};
var ie2;
var le2;
var Pn = class {
  constructor(n4) {
    he3(this, ie2, async () => (xe3 || (xe3 = import("./createServer-DLN7APz_-ULZVKXJO.js").then(
      (n5) => n5.createServer(this.config)
    )), xe3));
    he3(this, le2, async (n5) => this.config.server ? fetch(this.config.server, n5) : (await pe3(this, ie2).call(this)).fetch("http://localhost/graphql", n5));
    J2(this, "fetch", async (n5, s5) => {
      var l4;
      const a2 = (l4 = n5.match(/query (\w+)/)) == null ? void 0 : l4[1], r3 = await pe3(this, le2).call(this, {
        method: "POST",
        body: JSON.stringify({ query: n5, variables: s5, operationName: a2 }),
        headers: { "Content-Type": "application/json" }
      });
      if (!r3.ok)
        throw new Error("Network response was not ok");
      const i3 = await r3.json();
      return $n(i3), i3.data;
    });
    this.config = n4;
  }
};
ie2 = /* @__PURE__ */ new WeakMap(), le2 = /* @__PURE__ */ new WeakMap();
var E = class extends String {
  constructor(s5, a2) {
    super(s5);
    J2(this, "__apiType");
    J2(this, "value");
    J2(this, "__meta__");
    this.value = s5, this.__meta__ = a2;
  }
  toString() {
    return this.value;
  }
};
var kn = new E(
  `
    fragment OperationsFragment on OperationItem {
  slug
  summary
  method
  description
  operationId
  contentTypes
  path
  deprecated
  extensions
  parameters {
    name
    in
    description
    required
    schema
    style
    explode
    examples {
      name
      description
      externalValue
      value
      summary
    }
  }
  requestBody {
    content {
      mediaType
      encoding {
        name
      }
      examples {
        name
        description
        externalValue
        value
        summary
      }
      schema
    }
    description
    required
  }
  responses {
    statusCode
    links
    description
    content {
      examples {
        name
        description
        externalValue
        value
        summary
      }
      mediaType
      encoding {
        name
      }
      schema
    }
  }
}
    `,
  { fragmentName: "OperationsFragment" }
);
var In = new E(`
    query ServersQuery($input: JSON!, $type: SchemaType!) {
  schema(input: $input, type: $type) {
    url
    servers {
      url
    }
  }
}
    `);
var Rn = new E(`
    query SchemaWarmup($input: JSON!, $type: SchemaType!) {
  schema(input: $input, type: $type) {
    openapi
  }
}
    `);
var On = new E(`
    query OperationsForTag($input: JSON!, $type: SchemaType!, $tag: String, $untagged: Boolean) {
  schema(input: $input, type: $type) {
    servers {
      url
    }
    description
    summary
    title
    url
    version
    tag(slug: $tag, untagged: $untagged) {
      name
      description
      operations {
        slug
        ...OperationsFragment
      }
      next {
        name
        slug
      }
      prev {
        name
        slug
      }
    }
  }
}
    fragment OperationsFragment on OperationItem {
  slug
  summary
  method
  description
  operationId
  contentTypes
  path
  deprecated
  extensions
  parameters {
    name
    in
    description
    required
    schema
    style
    explode
    examples {
      name
      description
      externalValue
      value
      summary
    }
  }
  requestBody {
    content {
      mediaType
      encoding {
        name
      }
      examples {
        name
        description
        externalValue
        value
        summary
      }
      schema
    }
    description
    required
  }
  responses {
    statusCode
    links
    description
    content {
      examples {
        name
        description
        externalValue
        value
        summary
      }
      mediaType
      encoding {
        name
      }
      schema
    }
  }
}`);
var qn = new E(`
    query GetSchemas($input: JSON!, $type: SchemaType!) {
  schema(input: $input, type: $type) {
    title
    description
    summary
    components {
      schemas {
        name
        schema
        extensions
      }
    }
  }
}
    `);
var Ln = new E(`
    query getServerQuery($input: JSON!, $type: SchemaType!) {
  schema(input: $input, type: $type) {
    url
    servers {
      url
    }
  }
}
    `);
var An = new E(`
    query GetSidebarOperations($input: JSON!, $type: SchemaType!) {
  schema(input: $input, type: $type) {
    tags {
      slug
      name
      extensions
      operations {
        summary
        slug
        method
        operationId
        path
      }
    }
    components {
      schemas {
        __typename
      }
    }
  }
}
    `);
var Dn = {
  "\n  query ServersQuery($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      url\n      servers {\n        url\n      }\n    }\n  }\n": In,
  "\n  fragment OperationsFragment on OperationItem {\n    slug\n    summary\n    method\n    description\n    operationId\n    contentTypes\n    path\n    deprecated\n    extensions\n    parameters {\n      name\n      in\n      description\n      required\n      schema\n      style\n      explode\n      examples {\n        name\n        description\n        externalValue\n        value\n        summary\n      }\n    }\n    requestBody {\n      content {\n        mediaType\n        encoding {\n          name\n        }\n        examples {\n          name\n          description\n          externalValue\n          value\n          summary\n        }\n        schema\n      }\n      description\n      required\n    }\n    responses {\n      statusCode\n      links\n      description\n      content {\n        examples {\n          name\n          description\n          externalValue\n          value\n          summary\n        }\n        mediaType\n        encoding {\n          name\n        }\n        schema\n      }\n    }\n  }\n": kn,
  "\n  query SchemaWarmup($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      openapi\n    }\n  }\n": Rn,
  "\n  query OperationsForTag(\n    $input: JSON!\n    $type: SchemaType!\n    $tag: String\n    $untagged: Boolean\n  ) {\n    schema(input: $input, type: $type) {\n      servers {\n        url\n      }\n      description\n      summary\n      title\n      url\n      version\n      tag(slug: $tag, untagged: $untagged) {\n        name\n        description\n        operations {\n          slug\n          ...OperationsFragment\n        }\n        next {\n          name\n          slug\n        }\n        prev {\n          name\n          slug\n        }\n      }\n    }\n  }\n": On,
  "\n  query GetSchemas($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      title\n      description\n      summary\n      components {\n        schemas {\n          name\n          schema\n          extensions\n        }\n      }\n    }\n  }\n": qn,
  "\n  query getServerQuery($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      url\n      servers {\n        url\n      }\n    }\n  }\n": Ln,
  "\n  query GetSidebarOperations($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      tags {\n        slug\n        name\n        extensions\n        operations {\n          summary\n          slug\n          method\n          operationId\n          path\n        }\n      }\n      components {\n        schemas {\n          __typename\n        }\n      }\n    }\n  }\n": An
};
function En(t3) {
  return Dn[t3] ?? {};
}
var Vn = j(
  "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive: "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive"
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
);
var Se2 = v3.forwardRef(({ className: t3, variant: n4, ...s5 }, a2) => ae.jsx(
  "div",
  {
    ref: a2,
    role: "alert",
    className: We(Vn({ variant: n4 }), t3),
    ...s5
  }
));
Se2.displayName = "Alert";
var Te3 = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  "h5",
  {
    ref: s5,
    className: We("mb-1 font-medium leading-none tracking-tight", t3),
    ...n4
  }
));
Te3.displayName = "AlertTitle";
var $e3 = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  "div",
  {
    ref: s5,
    className: We("text-sm [&_p]:leading-relaxed", t3),
    ...n4
  }
));
$e3.displayName = "AlertDescription";
var Fn = ({
  path: t3,
  renderParam: n4
}) => {
  let s5 = 0;
  return t3.split("/").map((a2, r3, i3) => {
    const l4 = Array.from(a2.matchAll(/{([^}]+)}/g)), c5 = [];
    let d2 = 0;
    return l4.forEach((p3) => {
      const [f3, w] = p3;
      if (!w) return;
      const j6 = p3.index;
      j6 > d2 && c5.push(
        ae.jsx(import_react2.Fragment, { children: a2.slice(d2, j6) }, `text-${d2}-${j6}`)
      ), c5.push(
        ae.jsx(import_react2.Fragment, { children: n4({ name: w, originalValue: f3, index: s5++ }) }, `param-${w}`)
      ), d2 = j6 + f3.length;
    }), d2 < a2.length && c5.push(
      ae.jsx(import_react2.Fragment, { children: a2.slice(d2) }, `text-${d2}-${a2.length}`)
    ), // eslint-disable-next-line react/no-array-index-key
    ae.jsxs(import_react2.Fragment, { children: [
      c5,
      r3 < i3.length - 1 && "/",
      ae.jsx("wbr", {})
    ] }, `${a2}-${r3}`);
  });
};
var Ct = v3.forwardRef(
  ({ className: t3, ...n4 }, s5) => ae.jsx(
    "textarea",
    {
      className: We(
        "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
        t3
      ),
      ref: s5,
      ...n4
    }
  )
);
Ct.displayName = "Textarea";
var fe2 = (t3) => Math.abs(
  isNaN(parseInt(t3)) ? t3.toLowerCase().charCodeAt(0) - 96 : isNaN(parseInt(t3)) ? 0 : parseInt(t3)
);
var ge3 = (t3) => t3.length > 1 ? parseInt(t3.split("").reduce((n4, s5) => `${fe2(n4) + fe2(s5)}`)) : fe2(t3);
var it2 = (t3, n4 = {}) => {
  const s5 = (3 * ge3(t3) + 2 * ge3(t3) + ge3(t3)) % 360, { saturation: a2 = 75, lightness: r3 = 60 } = n4;
  return `${s5}deg ${a2}% ${r3}%`;
};
var ye3 = "data-linked-param";
var zn = (t3) => {
  const { resolvedTheme: n4 } = $();
  return {
    text: it2(
      t3,
      n4 === "light" ? { saturation: 95, lightness: 38 } : {}
    ),
    background: it2(
      t3,
      n4 === "light" ? { saturation: 85, lightness: 40 } : {}
    )
  };
};
var St2 = ({
  name: t3,
  className: n4,
  slug: s5,
  title: a2,
  children: r3,
  onClick: i3
}) => {
  const l4 = (0, import_react2.useRef)(null), c5 = s5 == null ? void 0 : s5.replace(/[{}]/g, ""), d2 = t3.replace(/[{}]/g, ""), { text: p3, background: f3 } = zn(d2), w = `hsl(${p3} / 100%)`, j6 = `hsl(${f3} / 10%)`, h2 = `hsl(${f3} / 50%)`;
  return (0, import_react2.useEffect)(() => {
    if (!c5 || !l4.current) return;
    const g3 = () => {
      document.querySelectorAll(`[${ye3}="${c5}"]`).forEach((x3) => {
        x3 instanceof HTMLElement && (x3.dataset.active = "true");
      });
    }, m6 = () => {
      document.querySelectorAll(`[${ye3}="${c5}"]`).forEach((x3) => {
        x3 instanceof HTMLElement && (x3.dataset.active = "false");
      });
    }, y2 = l4.current;
    return y2.addEventListener("mouseenter", g3), y2.addEventListener("mouseleave", m6), () => {
      y2.removeEventListener("mouseenter", g3), y2.removeEventListener("mouseleave", m6);
    };
  }, [c5]), ae.jsx(
    "span",
    {
      [ye3]: c5,
      className: We(
        // This may not contain (inline-)flex or (inline-)block otherwise it breaks the browser's full text search
        "relative transition-all duration-100 rounded-lg",
        "border border-[--border-color] p-0.5 text-[--param-color] bg-[--background-color]",
        "data-[active=true]:border-[--param-color] data-[active=true]:shadow data-[active=true]:bottom-px",
        n4
      ),
      title: a2,
      suppressHydrationWarning: true,
      ref: l4,
      onClick: i3,
      style: {
        "--param-color": w,
        "--border-color": h2,
        "--background-color": j6
      },
      children: r3 ?? t3
    }
  );
};
var Hn = cs()(
  ls(
    (t3) => ({
      selectedServer: void 0,
      setSelectedServer: (n4) => t3({ selectedServer: n4 })
    }),
    { name: "zudoku-selected-server" }
  )
);
var Mn = (t3) => {
  const { selectedServer: n4, setSelectedServer: s5 } = Hn();
  return { selectedServer: (0, import_react2.useMemo)(
    () => {
      var r3;
      return n4 && t3.some((i3) => i3.url === n4) ? n4 : ((r3 = t3.at(0)) == null ? void 0 : r3.url) ?? "";
    },
    [n4, t3]
  ), setSelectedServer: s5 };
};
var _n = (t3, n4, s5) => {
  const a2 = n4.replace(/(:\w+|\{\w+})/g, (i3) => {
    var d2;
    const l4 = i3.replace(/[:{}]/g, "");
    return ((d2 = s5.pathParams.find((p3) => p3.name === l4)) == null ? void 0 : d2.value) ?? i3;
  }), r3 = new URL(
    a2.replace(/^\//, ""),
    t3.endsWith("/") ? t3 : `${t3}/`
  );
  return s5.queryParams.filter((i3) => i3.active).forEach((i3) => {
    r3.searchParams.set(i3.name, i3.value);
  }), r3;
};
var Tt = Root22;
var $t2 = Trigger;
var Bn = Group2;
var Gn = v3.forwardRef(({ className: t3, inset: n4, children: s5, ...a2 }, r3) => ae.jsxs(
  SubTrigger2,
  {
    ref: r3,
    className: We(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent",
      n4 && "pl-8",
      t3
    ),
    ...a2,
    children: [
      s5,
      ae.jsx(ChevronRight, { className: "ml-auto h-4 w-4" })
    ]
  }
));
Gn.displayName = SubTrigger2.displayName;
var Jn = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  SubContent2,
  {
    ref: s5,
    className: We(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      t3
    ),
    ...n4
  }
));
Jn.displayName = SubContent2.displayName;
var Ee2 = v3.forwardRef(({ className: t3, sideOffset: n4 = 4, ...s5 }, a2) => ae.jsx(Portal22, { children: ae.jsx(
  Content22,
  {
    ref: a2,
    sideOffset: n4,
    className: We(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md",
      "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      t3
    ),
    ...s5
  }
) }));
Ee2.displayName = Content22.displayName;
var Ve3 = v3.forwardRef(({ className: t3, inset: n4, ...s5 }, a2) => ae.jsx(
  Item2,
  {
    ref: a2,
    className: We(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      n4 && "pl-8",
      t3
    ),
    ...s5
  }
));
Ve3.displayName = Item2.displayName;
var Un = v3.forwardRef(({ className: t3, children: n4, checked: s5, ...a2 }, r3) => ae.jsxs(
  CheckboxItem2,
  {
    ref: r3,
    className: We(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      t3
    ),
    checked: s5,
    ...a2,
    children: [
      ae.jsx("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: ae.jsx(ItemIndicator2, { children: ae.jsx(Check, { className: "h-4 w-4" }) }) }),
      n4
    ]
  }
));
Un.displayName = CheckboxItem2.displayName;
var Qn = v3.forwardRef(({ className: t3, children: n4, ...s5 }, a2) => ae.jsxs(
  RadioItem2,
  {
    ref: a2,
    className: We(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      t3
    ),
    ...s5,
    children: [
      ae.jsx("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: ae.jsx(ItemIndicator2, { children: ae.jsx(Dot, { className: "h-4 w-4 fill-current" }) }) }),
      n4
    ]
  }
));
Qn.displayName = RadioItem2.displayName;
var Pt2 = v3.forwardRef(({ className: t3, inset: n4, ...s5 }, a2) => ae.jsx(
  Label2,
  {
    ref: a2,
    className: We(
      "px-2 py-1.5 text-sm font-semibold",
      n4 && "pl-8",
      t3
    ),
    ...s5
  }
));
Pt2.displayName = Label2.displayName;
var kt = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  Separator2,
  {
    ref: s5,
    className: We("-mx-1 my-1 h-px bg-muted", t3),
    ...n4
  }
));
kt.displayName = Separator2.displayName;
var Wn = ({
  examples: t3,
  onSelect: n4
}) => ae.jsxs(Tt, { children: [
  ae.jsx($t2, { asChild: true, children: ae.jsx(l2, { variant: "outline", children: "Use Example" }) }),
  ae.jsx(Ee2, { className: "max-w-72", children: t3.map((s5) => {
    var a2;
    return ae.jsxs("div", { children: [
      ae.jsx(Pt2, { children: s5.mediaType }),
      ae.jsx(kt, {}),
      ae.jsx(Bn, { children: (a2 = s5.examples) == null ? void 0 : a2.map((r3) => ae.jsx(
        Ve3,
        {
          onSelect: () => n4(r3, s5.mediaType),
          children: ae.jsx(
            "span",
            {
              className: "line-clamp-1",
              title: r3.summary ?? r3.name,
              children: r3.summary ?? r3.name
            }
          )
        },
        r3.name
      )) })
    ] }, s5.mediaType);
  }) })
] });
var X2 = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  "div",
  {
    ref: s5,
    className: We(
      "rounded-xl border bg-card text-card-foreground shadow-sm",
      t3
    ),
    ...n4
  }
));
X2.displayName = "Card";
var Zn = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  "div",
  {
    ref: s5,
    className: We("flex flex-col space-y-1.5 p-6", t3),
    ...n4
  }
));
Zn.displayName = "CardHeader";
var Xn = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  "h3",
  {
    ref: s5,
    className: We("font-semibold leading-none tracking-tight", t3),
    ...n4
  }
));
Xn.displayName = "CardTitle";
var Kn = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  "p",
  {
    ref: s5,
    className: We("text-sm text-muted-foreground", t3),
    ...n4
  }
));
Kn.displayName = "CardDescription";
var Yn = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx("div", { ref: s5, className: We("p-6 pt-0", t3), ...n4 }));
Yn.displayName = "CardContent";
var es = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  "div",
  {
    ref: s5,
    className: We("flex items-center p-6 pt-0", t3),
    ...n4
  }
));
es.displayName = "CardFooter";
var de2 = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  Root5,
  {
    ref: s5,
    className: We(
      "peer h-4 w-4 shrink-0 rounded-[min(6px,var(--radius)-4px)] ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:text-primary",
      "border border-primary data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground data-[state=checked]:border-primary",
      t3
    ),
    ...n4,
    children: ae.jsx(
      Indicator,
      {
        className: We("flex items-center justify-center text-current"),
        children: ae.jsx(Check, { className: "h-4 w-4" })
      }
    )
  }
));
de2.displayName = Root5.displayName;
var ts = Root25;
var It2 = v3.forwardRef(({ className: t3, align: n4 = "center", sideOffset: s5 = 4, ...a2 }, r3) => ae.jsx(Portal4, { children: ae.jsx(
  Content24,
  {
    ref: r3,
    align: n4,
    sideOffset: s5,
    className: We(
      "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      t3
    ),
    ...a2
  }
) }));
It2.displayName = Content24.displayName;
var ns = ({
  value: t3,
  options: n4,
  onChange: s5,
  className: a2,
  placeholder: r3 = "Enter value",
  onEnterPress: i3,
  ref: l4
}) => {
  const [c5, d2] = (0, import_react2.useState)(false), [p3, f3] = (0, import_react2.useState)(false), w = R((h2) => h2.filtered.count), j6 = (0, import_react2.useRef)(null);
  return ae.jsxs(ts, { open: c5, children: [
    ae.jsx(PopoverAnchor, { children: ae.jsx(
      C3,
      {
        ref: (h2) => {
          j6.current = h2, typeof l4 == "function" ? l4(h2) : l4 && (l4.current = h2);
        },
        value: t3,
        placeholder: r3,
        className: We("h-9 bg-transparent", a2),
        onFocus: () => d2(true),
        onBlur: () => {
          p3 || d2(false);
        },
        onKeyDown: (h2) => {
          var g3;
          h2.key === "Enter" && (d2(false), (g3 = j6.current) == null || g3.blur(), i3 == null || i3(h2));
        },
        onValueChange: (h2) => s5(h2)
      }
    ) }),
    ae.jsx(
      It2,
      {
        onMouseEnter: () => f3(true),
        onMouseLeave: () => f3(false),
        onOpenAutoFocus: (h2) => h2.preventDefault(),
        className: We("p-0 w-[--radix-popover-trigger-width]", {
          "border-0": w === 0
        }),
        align: "start",
        side: "bottom",
        onWheel: (h2) => {
          h2.stopPropagation();
        },
        onTouchMove: (h2) => {
          h2.stopPropagation();
        },
        children: ae.jsx(v2, { className: "max-h-[140px]", children: n4.map((h2) => ae.jsx(
          z2,
          {
            value: h2,
            onSelect: (g3) => {
              s5(g3), d2(false);
            },
            className: "cursor-pointer",
            children: h2
          },
          h2
        )) })
      }
    )
  ] });
};
var re2 = ({ shouldFilter: t3, ...n4 }) => ae.jsx(m5, { className: "bg-transparent", shouldFilter: t3, children: ae.jsx(ns, { ...n4 }) });
var Fe3 = (t3, n4) => {
  const s5 = v3.forwardRef(({ className: a2, asChild: r3, ...i3 }, l4) => {
    const c5 = r3 ? Slot : t3;
    return v3.createElement(c5, {
      ...i3,
      ref: l4,
      className: typeof n4 == "function" ? n4({ className: a2 }) : We(n4, a2)
    });
  });
  return s5.displayName = `VariantComponent(${t3})`, s5;
};
var ze2 = Fe3(
  "div",
  "grid grid-cols-[2fr_3fr] gap-2 items-center"
);
var He3 = Fe3(
  "div",
  "group hover:bg-accent px-3 grid col-span-full grid-cols-subgrid"
);
var ss = Object.freeze([
  "Accept",
  "Accept-Encoding",
  "Accept-Language",
  "Authorization",
  "Cache-Control",
  "Connection",
  "Content-Disposition",
  "Content-Encoding",
  "Content-Language",
  "Content-Length",
  "Content-Range",
  "Content-Security-Policy",
  "Content-Type",
  "Cookie",
  "Date",
  "ETag",
  "Expires",
  "Host",
  "If-Modified-Since",
  "Location",
  "Origin",
  "Pragma",
  "Referer",
  "Set-Cookie",
  "User-Agent",
  "X-Requested-With"
]);
var as = ({
  control: t3,
  headers: n4
}) => {
  const { fields: s5, append: a2, remove: r3 } = ar({
    control: t3,
    name: "headers"
  }), { setValue: i3, watch: l4 } = xe(), c5 = (0, import_react2.useRef)([]), d2 = (0, import_react2.useRef)([]), p3 = l4("headers"), f3 = (0, import_react2.useCallback)(() => {
    a2({ name: "", value: "", active: false });
  }, [a2]);
  (0, import_react2.useEffect)(() => {
    p3.length === 0 && f3();
  }, [p3, f3]);
  const w = (g3) => {
    var m6;
    (m6 = c5.current[g3]) == null || m6.focus();
  }, j6 = (g3) => {
    f3(), requestAnimationFrame(() => {
      var m6;
      return (m6 = d2.current[g3 + 1]) == null ? void 0 : m6.focus();
    });
  }, h2 = n4.filter((g3) => !p3.some((m6) => m6.name === g3.name)).map(({ name: g3 }) => g3);
  return ae.jsxs("div", { className: "flex flex-col gap-2", children: [
    ae.jsx(X2, { className: "overflow-hidden", children: ae.jsx(ze2, { children: s5.map((g3, m6) => {
      const y2 = n4.find(
        (x3) => x3.name === l4(`headers.${m6}.name`)
      );
      return ae.jsxs(He3, { children: [
        ae.jsxs("div", { className: "flex items-center gap-2 ", children: [
          ae.jsx(
            ir,
            {
              control: t3,
              name: `headers.${m6}.active`,
              render: ({ field: x3 }) => ae.jsx(
                de2,
                {
                  id: `headers.${m6}.active`,
                  checked: x3.value,
                  onCheckedChange: (T3) => {
                    x3.onChange(T3);
                  }
                }
              )
            }
          ),
          ae.jsx(
            ir,
            {
              control: t3,
              name: `headers.${m6}.name`,
              render: ({ field: x3 }) => ae.jsx(
                re2,
                {
                  ...x3,
                  placeholder: "Name",
                  className: "border-0 shadow-none bg-transparent text-xs font-mono",
                  options: [...h2, ...ss],
                  onEnterPress: () => w(m6),
                  onChange: (T3) => {
                    x3.onChange(T3), i3(`headers.${m6}.active`, true);
                  },
                  ref: (T3) => {
                    d2.current[m6] = T3;
                  }
                }
              )
            }
          )
        ] }),
        ae.jsxs("div", { className: "flex items-center gap-2", children: [
          ae.jsx(
            ir,
            {
              control: t3,
              name: `headers.${m6}.value`,
              render: ({ field: x3 }) => (y2 == null ? void 0 : y2.enum) && y2.enum.length > 0 ? ae.jsx(
                re2,
                {
                  shouldFilter: false,
                  value: x3.value,
                  options: y2.enum ?? [],
                  onChange: ($3) => {
                    x3.onChange($3), i3(`headers.${m6}.active`, true);
                  },
                  className: "font-mono text-xs border-0"
                }
              ) : ae.jsx(
                a,
                {
                  placeholder: "Value",
                  className: "w-full border-0 shadow-none text-xs font-mono focus-visible:ring-0",
                  ...x3,
                  ref: ($3) => {
                    c5.current[m6] = $3;
                  },
                  onKeyDown: ($3) => {
                    $3.key === "Enter" && $3.currentTarget.value.trim() && j6(m6);
                  },
                  autoComplete: "off"
                }
              )
            }
          ),
          ae.jsx(
            l,
            {
              size: "icon",
              variant: "ghost",
              className: "text-muted-foreground opacity-0 group-hover:opacity-100 rounded-full w-8 h-7",
              onClick: () => r3(m6),
              type: "button",
              children: ae.jsx(X, { size: 16 })
            }
          )
        ] })
      ] }, g3.id);
    }) }) }),
    ae.jsx("div", { className: "text-end", children: ae.jsx(
      l,
      {
        className: "",
        onClick: f3,
        type: "button",
        variant: "secondary",
        children: "Add header"
      }
    ) })
  ] });
};
var rs = j(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
);
var _2 = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  Root6,
  {
    ref: s5,
    className: We(rs(), t3),
    ...n4
  }
));
_2.displayName = Root6.displayName;
var Me3 = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  Root26,
  {
    className: We("grid gap-2", t3),
    ...n4,
    ref: s5
  }
));
Me3.displayName = Root26.displayName;
var oe2 = v3.forwardRef(({ className: t3, ...n4 }, s5) => ae.jsx(
  Item22,
  {
    ref: s5,
    className: We(
      "aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
      t3
    ),
    ...n4,
    children: ae.jsx(Indicator2, { className: "flex items-center justify-center", children: ae.jsx(Circle, { className: "h-2.5 w-2.5 fill-current text-current" }) })
  }
));
oe2.displayName = Item22.displayName;
var Rt = ({
  identities: t3,
  setValue: n4,
  value: s5
}) => ae.jsx(X2, { className: "w-full overflow-hidden", children: ae.jsxs(
  Me3,
  {
    onValueChange: (a2) => n4(a2),
    value: s5,
    defaultValue: B3,
    className: "gap-0",
    disabled: (t3 == null ? void 0 : t3.length) === 0,
    children: [
      ae.jsxs(
        _2,
        {
          className: "h-12 border-b items-center flex p-4 cursor-pointer hover:bg-accent",
          htmlFor: "none",
          children: [
            ae.jsx(oe2, { value: B3, id: "none", children: "None" }),
            ae.jsx(_2, { htmlFor: "none", className: "ml-2", children: "None" })
          ]
        }
      ),
      t3 == null ? void 0 : t3.map((a2) => ae.jsxs(
        _2,
        {
          className: "h-12 border-b items-center flex p-4 cursor-pointer hover:bg-accent",
          children: [
            ae.jsx(oe2, { value: a2.id, id: a2.id, children: a2.label }),
            ae.jsx(_2, { htmlFor: a2.id, className: "ml-2", children: a2.label })
          ]
        },
        a2.id
      ))
    ]
  }
) });
var os = ({
  onSubmit: t3,
  identities: n4,
  open: s5,
  onOpenChange: a2
}) => {
  const [r3, i3] = (0, import_react2.useState)(void 0), [l4, c5] = (0, import_react2.useState)(false);
  return ae.jsx(D, { open: s5, onOpenChange: a2, children: ae.jsxs(m, { children: [
    ae.jsx(g, { children: "Select an auth identity" }),
    ae.jsx(x, { children: "Please select an identity for this request." }),
    ae.jsx("div", { className: "max-h-80 overflow-auto", children: ae.jsx(
      Rt,
      {
        identities: n4,
        setValue: i3,
        value: r3
      }
    ) }),
    ae.jsxs(p, { className: "flex flex-col gap-2", children: [
      ae.jsxs("div", { className: "flex items-center gap-2", children: [
        ae.jsx(
          de2,
          {
            id: "remember",
            checked: l4,
            onCheckedChange: (d2) => c5(
              d2 === "indeterminate" ? false : !!d2
            )
          }
        ),
        ae.jsx(_2, { htmlFor: "remember", children: "Remember my choice" })
      ] }),
      ae.jsx(
        l2,
        {
          onClick: () => t3({ identity: r3, rememberedIdentity: l4 }),
          children: "Send"
        }
      )
    ] })
  ] }) });
};
var is = ({
  control: t3,
  url: n4
}) => {
  const { fields: s5 } = ar({
    control: t3,
    name: "pathParams"
  }), a2 = [...s5].sort(
    (r3, i3) => n4.indexOf(`{${r3.name}}`) - n4.indexOf(`{${i3.name}}`)
  );
  return ae.jsx(X2, { className: "rounded-lg", children: ae.jsx(ze2, { children: a2.map((r3, i3) => ae.jsxs(He3, { children: [
    ae.jsx(
      ir,
      {
        control: t3,
        name: `pathParams.${i3}.name`,
        render: () => ae.jsx("div", { className: "flex items-center", children: ae.jsx(
          St2,
          {
            slug: r3.name,
            name: r3.name,
            className: "font-mono text-xs px-2"
          }
        ) })
      }
    ),
    ae.jsx("div", { className: "flex justify-between items-center", children: ae.jsx(
      ir,
      {
        control: t3,
        name: `pathParams.${i3}.value`,
        render: ({ field: l4 }) => ae.jsx(
          a,
          {
            ...l4,
            required: true,
            placeholder: "Enter value",
            className: "w-full border-0 shadow-none text-xs font-mono focus-visible:ring-0"
          }
        )
      }
    ) })
  ] }, r3.id)) }) });
};
var ls2 = Fe3(
  "input",
  "px-2 bg-transparent h-6 font-mono text-xs m-2"
);
var ds = ({
  control: t3,
  queryParams: n4
}) => {
  const { fields: s5 } = ar({
    control: t3,
    name: "queryParams"
  }), a2 = xe(), r3 = n4.map((i3) => !!i3.isRequired);
  return ae.jsx(X2, { className: "rounded-lg", children: ae.jsx("div", { className: "w-full ", children: ae.jsx(ze2, { children: s5.map((i3, l4) => {
    const c5 = n4.find(
      (d2) => d2.name === a2.watch(`queryParams.${l4}.name`)
    );
    return ae.jsxs(He3, { children: [
      ae.jsxs("div", { className: "flex items-center gap-2", children: [
        ae.jsx(
          ir,
          {
            control: t3,
            name: `queryParams.${l4}.active`,
            render: ({ field: d2 }) => ae.jsx(
              de2,
              {
                id: `queryParams.${l4}.active`,
                className: "mr-2",
                checked: d2.value,
                onCheckedChange: d2.onChange
              }
            )
          }
        ),
        ae.jsx(
          ir,
          {
            control: t3,
            render: ({ field: d2 }) => r3[l4] ? ae.jsx(ls2, { asChild: true, children: ae.jsxs(
              "label",
              {
                className: "flex items-center cursor-pointer gap-1",
                htmlFor: `queryParams.${l4}.active`,
                title: r3[l4] ? "Required field" : void 0,
                children: [
                  d2.value,
                  r3[l4] && ae.jsx("sup", { children: " *" })
                ]
              }
            ) }) : ae.jsx(
              re2,
              {
                value: d2.value,
                options: n4.map((p3) => p3.name),
                onChange: (p3) => {
                  d2.onChange(p3);
                },
                className: "border-0 font-mono text-xs bg-transparent hover:bg-transparent"
              }
            ),
            name: `queryParams.${l4}.name`
          }
        )
      ] }, i3.id),
      ae.jsx("div", { className: "flex justify-between items-center", children: ae.jsx(
        ir,
        {
          control: t3,
          render: ({ field: d2 }) => (c5 == null ? void 0 : c5.enum) && c5.enum.length > 0 ? ae.jsx(
            re2,
            {
              value: d2.value,
              options: c5.enum ?? [],
              onChange: (f3) => {
                d2.onChange(f3), a2.setValue(`queryParams.${l4}.active`, true);
              },
              className: "font-mono text-xs border-0 ring-1 ring-ring"
            }
          ) : ae.jsx(
            a,
            {
              ...d2,
              onChange: (f3) => {
                d2.onChange(f3.target.value), f3.target.value.length > 0 && a2.setValue(`queryParams.${l4}.active`, true);
              },
              placeholder: "Enter value",
              className: "w-full border-0 shadow-none focus-visible:ring-0 text-xs font-mono"
            }
          ),
          name: `queryParams.${l4}.value`
        }
      ) })
    ] }, i3.id);
  }) }) }) });
};
var cs2 = cs()(
  ls(
    (t3, n4) => ({
      rememberedIdentity: null,
      setRememberedIdentity: (s5) => t3({ rememberedIdentity: s5 }),
      getRememberedIdentity: (s5) => s5.find(
        (a2) => a2 === n4().rememberedIdentity
      )
    }),
    {
      name: "identity-storage",
      storage: wt(() => sessionStorage)
    }
  )
);
var ms = ({
  open: t3,
  setOpen: n4,
  onSignUp: s5,
  onLogin: a2
}) => ae.jsx(D, { open: t3, onOpenChange: n4, children: ae.jsxs(m, { children: [
  ae.jsx(g, { children: "Welcome to the Playground!" }),
  ae.jsx(x, { children: "The Playground is a tool for developers to test and explore our APIs. To use the Playground, you need to login." }),
  ae.jsxs(p, { className: "flex gap-2 sm:justify-between", children: [
    ae.jsx(l2, { type: "button", variant: "ghost", onClick: () => n4(false), children: "Skip" }),
    ae.jsxs("div", { className: "flex gap-2", children: [
      s5 && ae.jsx(l2, { type: "button", variant: "outline", onClick: s5, children: "Sign Up" }),
      a2 && ae.jsx(l2, { type: "button", variant: "default", onClick: a2, children: "Login" })
    ] })
  ] })
] }) });
var I3 = {
  green: "text-green-600",
  blue: "text-sky-600",
  yellow: "text-yellow-600",
  red: "text-red-600",
  purple: "text-purple-600",
  indigo: "text-indigo-600",
  gray: "text-gray-600"
};
var us = {
  get: I3.green,
  post: I3.blue,
  put: I3.yellow,
  delete: I3.red,
  patch: I3.purple,
  options: I3.indigo,
  head: I3.gray,
  trace: I3.gray
};
var ps = (t3) => us[t3.toLocaleLowerCase()] ?? I3.gray;
var hs = ({
  method: t3,
  url: n4,
  headers: s5,
  body: a2
}) => ae.jsxs("div", { className: "flex flex-col gap-2 font-mono text-xs", children: [
  ae.jsxs("div", { className: "gap-2 p-2 bg-muted rounded-md", children: [
    ae.jsx("span", { className: We(ps(t3), "font-semibold"), children: t3 }),
    " ",
    ae.jsx("span", { className: "break-all", children: n4 }),
    " ",
    ae.jsx("span", { className: "text-muted-foreground", children: "HTTP/1.1" })
  ] }),
  ae.jsxs("div", { className: "mx-1.5 flex flex-col gap-3", children: [
    ae.jsxs(o2, { defaultOpen: true, children: [
      ae.jsxs(e, { className: "flex items-center gap-2 hover:text-primary group", children: [
        ae.jsx(ChevronRight, { className: "h-4 w-4 transition-transform duration-200 group-data-[state=open]:rotate-[90deg]" }),
        ae.jsx("span", { className: "font-semibold", children: "Headers" })
      ] }),
      ae.jsx(s4, { children: ae.jsx("div", { className: "grid grid-cols-[auto,1fr] gap-x-8 gap-y-1 pl-1.5 pt-2", children: s5.map(([r3, i3]) => ae.jsxs(import_react2.Fragment, { children: [
        ae.jsx("div", { className: "text-primary", children: r3 }),
        ae.jsx("div", { className: "break-all", children: i3 })
      ] }, r3)) }) })
    ] }),
    ae.jsxs(o2, { defaultOpen: true, children: [
      ae.jsxs(e, { className: "flex items-center gap-2 hover:text-primary group", children: [
        ae.jsx(ChevronRight, { className: "h-4 w-4 transition-transform duration-200 group-data-[state=open]:rotate-[90deg]" }),
        ae.jsx("span", { className: "font-semibold", children: "Body" })
      ] }),
      ae.jsx(s4, { children: ae.jsx("div", { className: "pl-0 pt-2", children: ae.jsx(
        "div",
        {
          className: We(
            "whitespace-pre-wrap break-all bg-muted p-2 rounded-md",
            !a2 && "text-muted-foreground"
          ),
          children: a2 ?? "Empty body"
        }
      ) }) })
    ] })
  ] })
] });
var lt2 = Root4;
var dt2 = CollapsibleTrigger;
var ct2 = CollapsibleContent;
function _e2(t3) {
  if (t3 === null) return "null";
  if (Array.isArray(t3)) {
    if (t3.length === 0) return "any[]";
    const n4 = t3[0];
    return n4 === void 0 ? "any[]" : `${_e2(n4)}[]`;
  }
  return typeof t3 == "object" ? xs(t3) : typeof t3;
}
function xs(t3, n4 = "") {
  const s5 = ["{"];
  for (const [a2, r3] of Object.entries(t3)) {
    const i3 = _e2(r3);
    s5.push(`  ${a2}: ${i3};`);
  }
  return s5.push("}"), s5.join(`
`);
}
function fs2(t3) {
  return { lines: [`type GeneratedType = ${_e2(t3)};`] };
}
var gs = {
  200: "OK",
  201: "Created",
  202: "Accepted",
  204: "No Content",
  400: "Bad Request",
  401: "Unauthorized",
  403: "Forbidden",
  404: "Not Found",
  405: "Method Not Allowed",
  500: "Internal Server Error"
};
var mt2 = (t3) => {
  const n4 = Math.floor(Math.log(t3) / Math.log(1e3));
  return `${(t3 / Math.pow(1e3, n4)).toFixed(
    n4 ? 2 : 0
  )} ${n4 ? `${"kMGTPEZY"[n4 - 1]}B` : "B"}`;
};
var ys = (t3) => {
  var s5;
  return (s5 = Object.entries({
    "application/json": "json",
    "text/json": "json",
    "text/html": "html",
    "text/css": "css",
    "text/javascript": "javascript",
    "application/xml": "xml",
    "application/xhtml+xml": "xhtml"
  }).find(
    ([a2]) => t3.includes(a2)
  )) == null ? void 0 : s5[1];
};
var vs = (t3) => {
  var s5;
  const n4 = ((s5 = t3.find(([a2, r3]) => a2 === "Content-Type")) == null ? void 0 : s5[1]) || "";
  return ys(n4);
};
var js2 = (t3) => {
  try {
    return JSON.stringify(JSON.parse(t3), null, 2);
  } catch {
    return null;
  }
};
var bs = (t3) => {
  const n4 = [
    "Content-Type",
    "Content-Length",
    "Authorization",
    "X-RateLimit-Remaining",
    "X-RateLimit-Limit",
    "Cache-Control",
    "ETag"
  ].map((s5) => s5.toLowerCase());
  return [...t3].sort(([s5], [a2]) => {
    const r3 = n4.indexOf(s5.toLowerCase()), i3 = n4.indexOf(a2.toLowerCase());
    return r3 === i3 ? 0 : r3 === -1 ? 1 : i3 === -1 ? -1 : r3 - i3;
  });
};
var ut2 = 64e3;
var Ns = ({
  body: t3 = "",
  headers: n4,
  status: s5,
  time: a2,
  size: r3,
  url: i3
}) => {
  var g3;
  const l4 = vs(n4), c5 = js2(t3), d2 = c5 || t3, [p3, f3] = (0, import_react2.useState)(
    c5 ? "formatted" : "raw"
  ), w = Wt({
    queryKey: ["types", d2],
    queryFn: async () => fs2(JSON.parse(d2)),
    enabled: p3 === "types"
  }), j6 = bs([...n4]), h2 = r3 > ut2;
  return ae.jsxs("div", { className: "flex flex-col gap-2 h-full overflow-auto max-h-[calc(100vh-220px)] ", children: [
    ae.jsxs(lt2, { defaultOpen: true, children: [
      ae.jsxs(dt2, { className: "flex items-center gap-2 hover:text-primary group", children: [
        ae.jsx(ChevronRight, { className: "h-4 w-4 transition-transform duration-200 group-data-[state=open]:rotate-[90deg]" }),
        ae.jsx("span", { className: "font-semibold", children: "Headers" })
      ] }),
      ae.jsx(ct2, { children: ae.jsxs("div", { className: "grid grid-cols-[auto,1fr] gap-x-8 gap-y-1 pl-1.5 pt-2 font-mono text-xs", children: [
        j6.slice(0, 5).map(([m6, y2]) => ae.jsxs(import_react2.Fragment, { children: [
          ae.jsx("div", { className: "text-primary whitespace-pre", children: m6 }),
          ae.jsx("div", { className: "break-all", children: y2 })
        ] }, m6)),
        j6.length > 5 && ae.jsxs(lt2, { className: "col-span-full grid-cols-subgrid grid", children: [
          ae.jsxs(dt2, { className: "col-span-2 text-xs text-muted-foreground hover:text-primary flex items-center gap-1 py-1", children: [
            ae.jsx(ChevronRight, { className: "h-3 w-3 transition-transform duration-200 group-data-[state=open]:rotate-[90deg]" }),
            "Show ",
            j6.length - 5,
            " more headers"
          ] }),
          ae.jsx(ct2, { className: "col-span-full grid grid-cols-subgrid gap-x-8 gap-y-1 ", children: j6.slice(5).map(([m6, y2]) => ae.jsxs(import_react2.Fragment, { children: [
            ae.jsx("div", { className: "text-primary whitespace-pre", children: m6 }),
            ae.jsx("div", { className: "break-all", children: y2 })
          ] }, m6)) })
        ] })
      ] }) })
    ] }),
    ae.jsxs(t2, { className: "shadow-none", children: [
      h2 && ae.jsxs(T2, { type: "info", className: "my-0 p-2", children: [
        "Code highlight is disabled for responses larger than",
        " ",
        mt2(ut2)
      ] }),
      ae.jsx(
        _t,
        {
          language: p3 === "types" ? "typescript" : p3 === "raw" ? c5 ? "plain" : l4 : "json",
          showCopy: "always",
          disabled: h2,
          noBackground: true,
          className: "overflow-x-auto p-4 text-xs max-h-[calc(83.333vh-180px)]",
          code: (p3 === "raw" ? t3 : p3 === "types" ? (g3 = w.data) == null ? void 0 : g3.lines.join(`
`) : d2) ?? ""
        }
      )
    ] }),
    ae.jsxs("div", { className: "flex gap-2 justify-between items-center", children: [
      ae.jsxs("div", { className: "flex text-xs gap-2 border bg-muted rounded-md p-2 items-center h-8 font-mono divide-x", children: [
        ae.jsxs("div", { children: [
          ae.jsx("span", { className: "text-muted-foreground", children: "Status" }),
          " ",
          s5,
          " ",
          gs[s5] ?? ""
        ] }),
        ae.jsxs("div", { children: [
          ae.jsx("span", { className: "text-muted-foreground", children: "Time" }),
          " ",
          a2.toFixed(0),
          "ms"
        ] }),
        ae.jsxs("div", { children: [
          ae.jsx("span", { className: "text-muted-foreground", children: "Size" }),
          " ",
          mt2(r3)
        ] })
      ] }),
      c5 && ae.jsx("div", { children: ae.jsxs(
        st,
        {
          value: p3,
          onValueChange: (m6) => f3(m6),
          children: [
            ae.jsx(Q, { className: "min-w-32", children: ae.jsx(rt, { placeholder: "View" }) }),
            ae.jsxs(F, { children: [
              ae.jsx(J, { value: "formatted", children: "Formatted" }),
              ae.jsx(J, { value: "raw", children: "Raw" }),
              ae.jsx(J, { value: "types", children: "Types" })
            ] })
          ]
        }
      ) })
    ] })
  ] });
};
var ws = ({
  queryMutation: t3,
  showPathParamsWarning: n4,
  showLongRunningWarning: s5,
  onCancel: a2
}) => {
  var i3;
  const r3 = ((((i3 = t3.data) == null ? void 0 : i3.status) ?? 0) / 100).toFixed(0);
  return ae.jsx("div", { className: "min-w-0 p-4 py-8 bg-muted/50", children: t3.error ? ae.jsxs("div", { className: "flex flex-col gap-2", children: [
    n4 && ae.jsx(p2, { type: "caution", children: "Some path parameters are missing values. Please fill them in to ensure the request is sent correctly." }),
    ae.jsxs(t2, { children: [
      ae.jsx(i2, { children: ae.jsx(m4, { children: "Request failed" }) }),
      ae.jsxs(n2, { children: [
        "Error:",
        " ",
        t3.error.message || String(t3.error) || "Unexpected error"
      ] })
    ] })
  ] }) : t3.data ? ae.jsxs(m3, { defaultValue: "response", children: [
    ae.jsxs(r2, { children: [
      ae.jsx(f, { value: "request", children: "Request" }),
      ae.jsxs(f, { value: "response", children: [
        "Response",
        ae.jsxs(
          "span",
          {
            className: We(
              "text-xs font-mono ml-1",
              r3 === "2" && "text-green-500",
              r3 === "3" && "text-blue-500",
              r3 === "4" && "text-yellow-500",
              r3 === "5" && "text-red-500"
            ),
            children: [
              "(",
              t3.data.status,
              ")"
            ]
          }
        )
      ] })
    ] }),
    ae.jsx(c2, { value: "request", children: ae.jsx(hs, { ...t3.data.request }) }),
    ae.jsx(c2, { value: "response", children: ae.jsx(
      Ns,
      {
        status: t3.data.status,
        time: t3.data.time,
        size: t3.data.size,
        headers: t3.data.headers,
        body: t3.data.body,
        url: t3.data.request.url
      }
    ) })
  ] }) : ae.jsx("div", { className: "grid place-items-center h-full", children: t3.isPending ? ae.jsxs("div", { className: "flex flex-col gap-2 items-center mt-20", children: [
    ae.jsx(i, { size: 20 }),
    ae.jsxs(
      "div",
      {
        className: We(
          "opacity-0 pointer-events-none transition-opacity h-20 text-sm text-muted-foreground duration-300 flex flex-col gap-2 items-center",
          s5 && "opacity-100 pointer-events-auto"
        ),
        children: [
          "Looks like the request is taking longer than expected.",
          ae.jsx(
            l,
            {
              type: "button",
              onClick: a2,
              size: "sm",
              className: "w-fit",
              variant: "outline",
              children: "Cancel"
            }
          )
        ]
      }
    )
  ] }) : ae.jsx("span", { className: "text-[16px] font-semibold text-muted-foreground", children: "Send a request first to see the response here" }) }) });
};
var Cs = ({
  identities: t3,
  formRef: n4,
  disabled: s5
}) => {
  const { setValue: a2 } = xe(), [r3, i3] = (0, import_react2.useState)();
  return t3.length === 0 ? ae.jsx(l2, { disabled: s5, children: "Send" }) : ae.jsxs("div", { className: "flex", children: [
    ae.jsx(
      l2,
      {
        className: "rounded-r-none inset-shadow-sm",
        disabled: s5,
        onClick: () => {
          var l4;
          return (l4 = n4 == null ? void 0 : n4.current) == null ? void 0 : l4.requestSubmit();
        },
        children: "Send"
      }
    ),
    ae.jsxs(Tt, { children: [
      ae.jsx($t2, { asChild: true, children: ae.jsx(
        l2,
        {
          disabled: s5,
          className: "rounded-l-none border-l border-border/40 inset-shadow-sm w-6",
          size: "icon",
          children: ae.jsx(ChevronDown, { className: "w-4 h-4" })
        }
      ) }),
      ae.jsx(Me3, { value: r3, children: ae.jsx(Ee2, { className: "w-56", align: "end", alignOffset: -150, children: [{ id: B3, label: "None" }, ...t3].map(
        (l4) => ae.jsxs(
          Ve3,
          {
            onClick: () => {
              var c5;
              i3(l4.id), a2("identity", l4.id), (c5 = n4 == null ? void 0 : n4.current) == null || c5.requestSubmit();
            },
            onMouseEnter: () => i3(l4.id),
            onMouseLeave: () => i3(void 0),
            children: [
              ae.jsx(oe2, { value: l4.id, className: "mr-2" }),
              l4.label
            ]
          },
          l4.id
        )
      ) }) })
    ] })
  ] });
};
var B3 = "__none";
var ve2 = {
  Plain: "text/plain",
  JSON: "application/json",
  XML: "application/xml",
  YAML: "application/yaml",
  CSV: "text/csv"
};
var Ss = ({
  server: t3,
  servers: n4 = [],
  url: s5,
  method: a2,
  headers: r3 = [],
  queryParams: i3 = [],
  pathParams: l4 = [],
  defaultBody: c5 = "",
  examples: d2,
  requiresLogin: p3 = false,
  onLogin: f3,
  onSignUp: w
}) => {
  var Ze, Xe2;
  const { selectedServer: j6, setSelectedServer: h2 } = Mn(
    n4.map((o3) => ({ url: o3 }))
  ), [g3, m6] = (0, import_react2.useState)(false), y2 = js(), { setRememberedIdentity: x3, getRememberedIdentity: T3 } = cs2(), [, $3] = (0, import_react2.useTransition)(), [ce2, K2] = (0, import_react2.useState)(false), [Y, D3] = (0, import_react2.useState)(false), ee3 = (0, import_react2.useRef)(void 0), Be3 = u(x3), { register: Ge, control: te3, handleSubmit: Je, watch: Ue3, setValue: V2, ...me3 } = nr({
    defaultValues: {
      body: c5,
      bodyContentType: "JSON",
      queryParams: i3.map((o3) => ({
        name: o3.name,
        value: o3.defaultValue ?? "",
        active: o3.defaultActive ?? false,
        enum: o3.enum ?? []
      })).concat([
        {
          name: "",
          value: "",
          active: false,
          enum: []
        }
      ]),
      pathParams: l4.map((o3) => ({
        name: o3.name,
        value: o3.defaultValue ?? ""
      })),
      headers: r3.map((o3) => ({
        name: o3.name,
        value: o3.defaultValue ?? "",
        active: o3.defaultActive ?? false
      })).concat([
        {
          name: "",
          value: "",
          active: false
        }
      ]),
      identity: T3(
        ((Ze = y2.data) == null ? void 0 : Ze.map((o3) => o3.id)) ?? []
      )
    }
  }), C4 = Ue3(), Qe2 = (0, import_react2.useRef)(null);
  (0, import_react2.useEffect)(() => {
    C4.identity && Be3.current(C4.identity);
  }, [Be3, C4.identity]);
  const ue2 = et2({
    mutationFn: async (o3) => {
      var Ke2, Ye2;
      const S2 = performance.now(), O2 = !o3.headers.some(
        (N3) => N3.active && N3.name.toLowerCase() === "content-type"
      ), F3 = Object.fromEntries([
        ...o3.headers.filter((N3) => N3.name && N3.active).map((N3) => [N3.name, N3.value]),
        ...O2 ? [["content-type", ve2[o3.bodyContentType]]] : []
      ]), P = new Request(
        _n(t3 ?? j6, s5, o3),
        {
          method: a2.toUpperCase(),
          headers: F3,
          body: o3.body ? o3.body : void 0
        }
      );
      o3.identity !== B3 && await ((Ye2 = (Ke2 = y2.data) == null ? void 0 : Ke2.find((N3) => N3.id === o3.identity)) == null ? void 0 : Ye2.authorizeRequest(P));
      const z3 = setTimeout(
        () => D3(true),
        3210
      );
      ee3.current = new AbortController();
      try {
        const N3 = await fetch(P, {
          signal: ee3.current.signal
        });
        clearTimeout(z3), D3(false);
        const Dt = performance.now() - S2, et3 = await N3.text(), Et = new URL(P.url);
        return {
          status: N3.status,
          headers: Array.from(N3.headers.entries()),
          size: et3.length,
          body: et3,
          time: Dt,
          request: {
            method: P.method.toUpperCase(),
            url: P.url,
            headers: [
              ["Host", Et.host],
              ["User-Agent", "Zudoku Playground"],
              ...Array.from(P.headers.entries())
            ],
            body: o3.body ? o3.body : void 0
          }
        };
      } catch (N3) {
        throw clearTimeout(z3), D3(false), N3 instanceof TypeError ? new Error(
          "The request failed, possibly due to network issues or CORS policy."
        ) : N3;
      }
    }
  });
  (0, import_react2.useEffect)(() => () => {
    var o3;
    (o3 = ee3.current) == null || o3.abort();
  }, []);
  const qt2 = ae.jsx(
    Fn,
    {
      path: s5,
      renderParam: ({ name: o3, originalValue: S2, index: O2 }) => {
        var P;
        const F3 = (P = C4.pathParams.find(
          (z3) => z3.name === o3
        )) == null ? void 0 : P.value;
        return ae.jsx(
          St2,
          {
            name: o3,
            backgroundOpacity: "0",
            slug: o3,
            onClick: () => me3.setFocus(`pathParams.${O2}.value`),
            children: F3 || S2
          }
        );
      }
    }
  ), We3 = C4.queryParams.filter((o3) => o3.active).map((o3, S2, O2) => ae.jsxs(import_react2.Fragment, { children: [
    o3.name,
    "=",
    encodeURIComponent(o3.value).replaceAll("%20", "+"),
    S2 < O2.length - 1 && "&",
    ae.jsx("wbr", {})
  ] }, o3.name)), Lt = ae.jsx("div", { className: "inline-block opacity-50 hover:opacity-100 transition", children: t3 ? ae.jsx("span", { children: t3.replace(/^https?:\/\//, "").replace(/\/$/, "") }) : n4.length > 1 && ae.jsxs(
    st,
    {
      onValueChange: (o3) => {
        $3(() => h2(o3));
      },
      value: j6,
      defaultValue: j6,
      children: [
        ae.jsx(Q, { className: "p-0 border-none flex-row-reverse bg-transparent text-xs gap-0.5 h-auto translate-y-[4px]", children: ae.jsx(rt, {}) }),
        ae.jsx(F, { children: n4.map((o3) => ae.jsx(J, { value: o3, children: o3.replace(/^https?:\/\//, "").replace(/\/$/, "") }, o3)) })
      ]
    }
  ) }), At2 = p3 && !ce2, ne3 = ["POST", "PUT", "PATCH", "DELETE"].includes(
    a2.toUpperCase()
  );
  return ae.jsx(
    sr,
    {
      register: Ge,
      control: te3,
      handleSubmit: Je,
      watch: Ue3,
      setValue: V2,
      ...me3,
      children: ae.jsxs(
        "form",
        {
          onSubmit: Je((o3) => {
            var S2;
            ((S2 = y2.data) == null ? void 0 : S2.length) === 0 || o3.identity ? ue2.mutate(o3) : m6(true);
          }),
          ref: Qe2,
          className: "relative",
          children: [
            ae.jsx(
              os,
              {
                identities: y2.data ?? [],
                open: g3,
                onOpenChange: m6,
                onSubmit: ({ rememberedIdentity: o3, identity: S2 }) => {
                  o3 && V2("identity", S2 ?? B3), m6(false), ue2.mutate({ ...C4, identity: S2 });
                }
              }
            ),
            ae.jsx(
              ms,
              {
                open: At2,
                setOpen: (o3) => K2(!o3),
                onSignUp: w,
                onLogin: f3
              }
            ),
            ae.jsxs("div", { className: "grid grid-cols-2 text-sm h-full", children: [
              ae.jsxs("div", { className: "flex flex-col gap-4 p-4 after:bg-muted-foreground/20 relative after:absolute after:w-px after:inset-0 after:left-auto", children: [
                ae.jsxs("div", { className: "flex gap-2 items-stretch", children: [
                  ae.jsxs("div", { className: "flex flex-1 items-center w-full border rounded-md", children: [
                    ae.jsx("div", { className: "border-r p-2 bg-muted rounded-l-md self-stretch font-semibold font-mono flex items-center", children: a2.toUpperCase() }),
                    ae.jsxs("div", { className: "items-center px-2 py-0.5 font-mono text-xs break-all leading-6", children: [
                      Lt,
                      qt2,
                      We3.length > 0 ? "?" : "",
                      We3
                    ] })
                  ] }),
                  ae.jsx(
                    Cs,
                    {
                      identities: y2.data ?? [],
                      formRef: Qe2,
                      disabled: y2.isLoading || me3.formState.isSubmitting
                    }
                  )
                ] }),
                ae.jsxs(m3, { defaultValue: "parameters", children: [
                  ae.jsx("div", { className: "flex flex-wrap gap-1 justify-between", children: ae.jsxs(r2, { children: [
                    ae.jsxs(f, { value: "parameters", children: [
                      "Parameters",
                      (C4.pathParams.some((o3) => o3.value !== "") || C4.queryParams.some((o3) => o3.active)) && ae.jsx("div", { className: "w-2 h-2 rounded-full bg-blue-400 ml-2" })
                    ] }),
                    ae.jsxs(f, { value: "headers", children: [
                      "Headers",
                      C4.headers.filter((o3) => o3.active).length > 0 && ae.jsx("div", { className: "w-2 h-2 rounded-full bg-blue-400 ml-2" })
                    ] }),
                    ae.jsxs(f, { value: "auth", children: [
                      "Auth",
                      C4.identity !== B3 && ae.jsx("div", { className: "w-2 h-2 rounded-full bg-blue-400 ml-2" })
                    ] }),
                    ae.jsxs(f, { value: "body", children: [
                      "Body",
                      C4.body && ae.jsx("div", { className: "w-2 h-2 rounded-full bg-blue-400 ml-2" })
                    ] })
                  ] }) }),
                  ae.jsx(c2, { value: "headers", children: ae.jsx(as, { control: te3, headers: r3 }) }),
                  ae.jsxs(c2, { value: "parameters", children: [
                    l4.length > 0 && ae.jsxs("div", { className: "flex flex-col gap-4 my-4", children: [
                      ae.jsx("span", { className: "font-semibold", children: "Path Parameters" }),
                      ae.jsx(is, { url: s5, control: te3 })
                    ] }),
                    ae.jsxs("div", { className: "flex flex-col gap-4 my-4", children: [
                      ae.jsx("span", { className: "font-semibold", children: "Query Parameters" }),
                      ae.jsx(ds, { control: te3, queryParams: i3 })
                    ] })
                  ] }),
                  ae.jsxs(c2, { value: "body", children: [
                    !["POST", "PUT", "PATCH", "DELETE"].includes(
                      a2.toUpperCase()
                    ) && ae.jsxs(Se2, { className: "mb-2", children: [
                      ae.jsx(Info, { className: "w-4 h-4" }),
                      ae.jsx(Te3, { children: "Body" }),
                      ae.jsx($e3, { children: "Body is only supported for POST, PUT, PATCH, and DELETE requests" })
                    ] }),
                    ae.jsx(
                      Ct,
                      {
                        ...Ge("body"),
                        className: We(
                          "border w-full rounded-lg bg-muted/40 p-2 h-64 font-mono text-[13px]",
                          !ne3 && "h-20 bg-muted"
                        ),
                        placeholder: ne3 ? void 0 : "This request does not support a body",
                        disabled: !ne3
                      }
                    ),
                    ne3 && ae.jsxs("div", { className: "flex items-center gap-2 mt-2 justify-between", children: [
                      ae.jsxs(
                        st,
                        {
                          value: C4.bodyContentType,
                          onValueChange: (o3) => V2(
                            "bodyContentType",
                            o3
                          ),
                          children: [
                            ae.jsx(Q, { className: "w-[100px]", children: ae.jsx(rt, {}) }),
                            ae.jsx(F, { children: Object.keys(ve2).map((o3) => ae.jsx(J, { value: o3, children: o3 }, o3)) })
                          ]
                        }
                      ),
                      d2 && d2.length > 0 && ae.jsx(
                        Wn,
                        {
                          examples: d2,
                          onSelect: (o3, S2) => {
                            var F3;
                            V2(
                              "body",
                              JSON.stringify(o3.value, null, 2)
                            );
                            const O2 = (F3 = t(ve2).find(
                              ([P, z3]) => z3 === S2
                            )) == null ? void 0 : F3[0];
                            O2 && V2("bodyContentType", O2);
                          }
                        }
                      )
                    ] })
                  ] }),
                  ae.jsx(c2, { value: "auth", children: ae.jsxs("div", { className: "flex flex-col gap-4 my-4", children: [
                    ((Xe2 = y2.data) == null ? void 0 : Xe2.length) === 0 && ae.jsxs(Se2, { children: [
                      ae.jsx(Info, { className: "w-4 h-4" }),
                      ae.jsx(Te3, { children: "Authentication" }),
                      ae.jsx($e3, { children: "No identities found. Please create an identity first." })
                    ] }),
                    ae.jsx("div", { className: "flex flex-col items-center gap-2", children: ae.jsx(
                      Rt,
                      {
                        value: C4.identity,
                        identities: y2.data ?? [],
                        setValue: (o3) => V2("identity", o3)
                      }
                    ) })
                  ] }) })
                ] })
              ] }),
              ae.jsx(
                ws,
                {
                  queryMutation: ue2,
                  showPathParamsWarning: C4.pathParams.some(
                    (o3) => o3.value === ""
                  ),
                  showLongRunningWarning: Y,
                  onCancel: () => {
                    var o3;
                    (o3 = ee3.current) == null || o3.abort(
                      "Request cancelled by the user"
                    ), D3(false);
                  }
                }
              )
            ] })
          ]
        }
      )
    }
  );
};
var Ts = ({
  className: t3,
  size: n4 = 16
}) => ae.jsx(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    className: t3,
    width: n4,
    height: n4,
    children: ae.jsx(
      "path",
      {
        fillRule: "evenodd",
        d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm14.024-.983a1.125 1.125 0 0 1 0 1.966l-5.603 3.113A1.125 1.125 0 0 1 9 15.113V8.887c0-.857.921-1.4 1.671-.983l5.603 3.113Z",
        clipRule: "evenodd"
      }
    )
  }
);
var $s = (t3) => {
  const [n4, s5] = (0, import_react2.useState)(false);
  return ae.jsxs(D, { onOpenChange: (a2) => s5(a2), children: [
    ae.jsx(j2, { asChild: true, children: t3.children ?? ae.jsxs(
      "button",
      {
        type: "button",
        className: "flex gap-1 items-center px-2 py-1 rounded-md transition text-xs bg-primary  text-primary-foreground shadow-sm hover:bg-primary/80",
        children: [
          "Test",
          ae.jsx(Ts, { size: 14 })
        ]
      }
    ) }),
    ae.jsxs(
      m,
      {
        className: "max-w-screen-xl w-full h-5/6 overflow-hidden p-0",
        "aria-describedby": void 0,
        children: [
          ae.jsx(VisuallyHidden, { children: ae.jsx(g, { children: "Playground" }) }),
          n4 && ae.jsx(Ss, { ...t3 })
        ]
      }
    )
  ] });
};
var Ps = {
  get: "green",
  post: "blue",
  put: "yellow",
  delete: "red",
  patch: "purple",
  options: "gray",
  head: "gray"
};
var pt = ({
  label: t3,
  path: n4,
  operations: s5,
  collapsible: a2,
  collapsed: r3
}) => ({
  type: "category",
  label: t3,
  link: {
    type: "doc",
    id: n4,
    label: t3
  },
  collapsible: a2,
  collapsed: r3,
  items: s5.map((i3) => ({
    type: "link",
    label: i3.summary ?? i3.path,
    href: `${n4}#${i3.slug}`,
    badge: {
      label: i3.method,
      color: Ps[i3.method.toLowerCase()],
      invert: true
    }
  }))
});
var ht2 = (t3) => ({
  path: t3.routePath,
  async lazy() {
    const { OasProvider: n4 } = await import("./OasProvider-BKPF0Pbt-WRLKFGJ6.js");
    return {
      element: ae.jsx(
        n4,
        {
          basePath: t3.basePath,
          version: t3.version,
          client: t3.client,
          config: t3.config
        }
      )
    };
  },
  children: t3.routes
});
var Pe3 = ({
  path: t3,
  tag: n4,
  untagged: s5
}) => ({
  path: t3,
  async lazy() {
    const { OperationList: a2 } = await import("./OperationList-0bhBU7ME-7VLPRO5Y.js");
    return { element: ae.jsx(a2, { tag: n4, untagged: s5 }) };
  }
});
var ks = (t3, n4) => {
  const s5 = et(t3, n4.at(0) ?? ke2);
  return [
    // Redirect to first tag on the index route
    { index: true, loader: () => an(s5) },
    // Create routes for each tag
    ...n4.map(
      (a2) => Pe3({
        path: et(t3, a2),
        tag: a2
      })
    ),
    // Category without tagged operations
    Pe3({
      path: et(t3, ke2),
      untagged: true
    }),
    {
      path: et(t3, "~schemas"),
      lazy: async () => {
        const { SchemaList: a2 } = await import("./SchemaList-CsTIT1pi-24HWOD4P.js");
        return { element: ae.jsx(a2, {}) };
      }
    }
  ];
};
var Ot = (t3) => t3.type === "file" ? Object.keys(t3.input) : [];
var Is = ({
  basePath: t3,
  config: n4,
  client: s5
}) => {
  const a2 = n4.tagPages;
  if (!a2)
    return [
      ht2({
        basePath: t3,
        routePath: t3,
        routes: [Pe3({ path: t3 + "/:tag?" })],
        client: s5,
        config: n4
      })
    ];
  const r3 = Ot(n4);
  return (r3.length > 1 ? [void 0, ...r3] : [void 0]).map((l4) => {
    const c5 = et(t3, l4);
    return ht2({
      basePath: t3,
      version: l4,
      routePath: c5,
      routes: ks(c5, a2),
      client: s5,
      config: n4
    });
  });
};
var Rs = En(`
  query GetSidebarOperations($input: JSON!, $type: SchemaType!) {
    schema(input: $input, type: $type) {
      tags {
        slug
        name
        extensions
        operations {
          summary
          slug
          method
          operationId
          path
        }
      }
      components {
        schemas {
          __typename
        }
      }
    }
  }
`);
var ke2 = "~endpoints";
var ia = (t3) => {
  const n4 = et(t3.navigationId ?? "/reference"), s5 = new Pn(t3);
  return {
    getHead: () => {
      if (t3.type === "url" && !t3.skipPreload)
        return ae.jsx(
          "link",
          {
            rel: "preload",
            href: t3.input,
            as: "fetch",
            crossOrigin: "anonymous"
          }
        );
      if (t3.server)
        return ae.jsx("link", { rel: "preconnect", href: t3.server });
    },
    getMdxComponents: () => ({
      OpenPlaygroundButton: ({
        requireAuth: a2,
        server: r3,
        method: i3,
        url: l4,
        children: c5,
        ...d2
      }) => {
        const p3 = fs();
        if (!r3)
          throw new Error("Server is required");
        return a2 && !p3.isAuthenticated ? ae.jsxs(
          l,
          {
            className: "gap-2 items-center",
            variant: "outline",
            onClick: p3.login,
            children: [
              "Login to open in Playground ",
              ae.jsx(LogIn, { size: 16 })
            ]
          }
        ) : ae.jsx(
          $s,
          {
            url: l4 ?? "/",
            method: i3 ?? "get",
            server: r3,
            ...d2,
            children: ae.jsx(l, { className: "gap-2 items-center", variant: "outline", children: c5 ?? ae.jsxs(ae.Fragment, { children: [
              "Open in Playground ",
              ae.jsx(CirclePlay, { size: 16 })
            ] }) })
          }
        );
      }
    }),
    getSidebar: async (a2, r3) => {
      var l4, c5, d2, p3;
      if (!H({ path: n4, end: false }, a2))
        return [];
      const i3 = H(
        { path: `${n4}/:version?/:tag`, end: true },
        a2
      );
      try {
        const f3 = i3 == null ? void 0 : i3.params.version, w = f3 ?? Ot(t3).at(0), { type: j6 } = t3, h2 = j6 === "file" ? t3.input[w] : t3.input, g3 = await r3.queryClient.ensureQueryData({
          queryKey: ["sidebar-operations-query", h2],
          queryFn: () => s5.fetch(Rs, { type: j6, input: h2 })
        }), m6 = g3.schema.tags.flatMap((x3) => {
          var K2, Y, D3;
          if (!x3.name || x3.operations.length === 0) return [];
          const T3 = et(n4, f3, x3.slug), $3 = ((K2 = x3.extensions) == null ? void 0 : K2["x-zudoku-collapsed"]) ?? !((Y = t3.options) != null && Y.expandAllTags), ce2 = ((D3 = x3.extensions) == null ? void 0 : D3["x-zudoku-collapsible"]) ?? true;
          return pt({
            label: x3.name,
            path: T3,
            operations: x3.operations,
            collapsed: $3,
            collapsible: ce2
          });
        }), y2 = (l4 = g3.schema.tags.find(
          (x3) => !x3.name
        )) == null ? void 0 : l4.operations;
        return y2 && m6.push(
          pt({
            label: "Other endpoints",
            path: et(n4, f3, ke2),
            operations: y2,
            collapsed: !((c5 = t3.options) != null && c5.expandAllTags)
          })
        ), (p3 = (d2 = g3.schema.components) == null ? void 0 : d2.schemas) != null && p3.length && m6.push({
          type: "link",
          label: "Schemas",
          href: et(n4, f3, "~schemas")
        }), m6;
      } catch {
        return [];
      }
    },
    getRoutes: () => Is({ basePath: n4, config: t3, client: s5 })
  };
};

export {
  st,
  rt,
  Q,
  F,
  J,
  Root24 as Root2,
  List,
  Trigger3 as Trigger,
  Content3 as Content,
  m3 as m,
  r2 as r,
  f,
  c2 as c,
  t2 as t,
  i2 as i,
  m4 as m2,
  n2 as n,
  En,
  Fn,
  St2 as St,
  Mn,
  ps,
  lt2 as lt,
  dt2 as dt,
  ct2 as ct,
  $s,
  Ot,
  ke2 as ke,
  ia
};
//# sourceMappingURL=chunk-KY3RD535.js.map
