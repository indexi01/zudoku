import {
  we,
  x
} from "./chunk-LKCT2PAX.js";
import "./chunk-2R5R3JQD.js";
import {
  d
} from "./chunk-6IHE6QFO.js";
import {
  R
} from "./chunk-THMC2RIC.js";
import {
  f
} from "./chunk-PFFBFN2D.js";
import {
  Lg,
  e,
  ft,
  lg
} from "./chunk-ALHMGBAY.js";
import "./chunk-FKBLCK2M.js";
import "./chunk-JGATS2Z3.js";
import {
  En,
  ct,
  dt,
  lt
} from "./chunk-KY3RD535.js";
import {
  Yt,
  l2 as l
} from "./chunk-6HIU6SLM.js";
import "./chunk-DCQBGROG.js";
import {
  ChevronRight,
  ChevronsDownUp,
  ChevronsUpDown,
  We
} from "./chunk-VSGZQHBI.js";
import "./chunk-LYJUZW3I.js";
import {
  ae
} from "./chunk-T7IJB7TU.js";
import "./chunk-VJA3Q2RH.js";
import "./chunk-TJE776R7.js";
import "./chunk-WOOG5QLI.js";

// node_modules/zudoku/lib/SchemaList-CsTIT1pi.js
var M = En(
  /* GraphQL */
  `
  query GetSchemas($input: JSON!, $type: SchemaType!) {
    schema(input: $input, type: $type) {
      title
      description
      summary
      components {
        schemas {
          name
          schema
          extensions
        }
      }
    }
  }
`
);
function J() {
  var n;
  const { input: d2, type: p, versions: h, version: x2, options: a } = d(), u = we(M, {
    input: d2,
    type: p
  }), { data: t } = Yt(u), r = ((n = t.schema.components) == null ? void 0 : n.schemas) ?? [];
  if (!r.length)
    return ae.jsx("div", { children: "No schemas found" });
  const f2 = Object.entries(h).length > 1, g = (a == null ? void 0 : a.showVersionSelect) === "always" || f2 && (a == null ? void 0 : a.showVersionSelect) !== "hide";
  return ae.jsxs(
    "div",
    {
      className: "grid grid-cols-[--sidecar-grid-cols] gap-8 justify-between",
      "data-pagefind-filter": "section:openapi",
      "data-pagefind-meta": "section:openapi",
      children: [
        ae.jsxs("div", { className: "pt-[--padding-content-top] pb-[--padding-content-bottom]", children: [
          ae.jsxs(lt, { className: "w-full", children: [
            ae.jsxs("div", { className: "flex flex-col gap-y-4 sm:flex-row justify-around items-start sm:items-end", children: [
              ae.jsxs("div", { className: "flex-1", children: [
                ae.jsx(e, { children: t.schema.title }),
                ae.jsxs(
                  ft,
                  {
                    level: 1,
                    id: "schemas",
                    registerSidebarAnchor: true,
                    className: "mb-0",
                    children: [
                      "Schemas",
                      g && ae.jsxs("span", { className: "text-xl text-muted-foreground ml-1.5", children: [
                        "(",
                        x2,
                        ")"
                      ] })
                    ]
                  }
                )
              ] }),
              t.schema.description && ae.jsxs(dt, { className: "flex items-center gap-1 text-sm font-medium text-muted-foreground group", children: [
                ae.jsx("span", { children: "API information" }),
                ae.jsx(
                  ChevronsUpDown,
                  {
                    className: "group-data-[state=open]:hidden translate-y-px",
                    size: 14
                  }
                ),
                ae.jsx(
                  ChevronsDownUp,
                  {
                    className: "group-data-[state=closed]:hidden translate-y-px",
                    size: 13
                  }
                )
              ] })
            ] }),
            t.schema.description && ae.jsx(ct, { className: "CollapsibleContent", children: ae.jsx(
              "div",
              {
                className: We(
                  Lg,
                  "pt-4 max-w-full prose-img:max-w-prose"
                ),
                children: ae.jsx(
                  lg,
                  {
                    className: "border rounded bg-muted/25 border-border px-2.5 md:px-4",
                    content: t.schema.description
                  }
                )
              }
            ) })
          ] }),
          ae.jsx("hr", { className: "my-8" }),
          ae.jsx("div", { className: "flex flex-col gap-y-5", children: r.map((s) => ae.jsxs(lt, { className: "group", defaultOpen: true, children: [
            ae.jsxs(
              ft,
              {
                registerSidebarAnchor: true,
                level: 2,
                className: "flex items-center gap-1 justify-between w-fit",
                id: f(s.name),
                children: [
                  s.name,
                  " ",
                  ae.jsx(dt, { asChild: true, children: ae.jsx(l, { variant: "ghost", size: "icon", className: "size-6", children: ae.jsx(
                    ChevronRight,
                    {
                      size: 16,
                      className: "group-data-[state=open]:rotate-90 transition cursor-pointer"
                    }
                  ) }) })
                ]
              }
            ),
            ae.jsx(ct, { className: "mt-4 CollapsibleContent", children: ae.jsx(x, { schema: s.schema }) })
          ] }, s.name)) })
        ] }),
        ae.jsx(
          R,
          {
            entries: r.map((s) => ({
              id: f(s.name),
              value: s.name,
              depth: 1
            }))
          }
        )
      ]
    }
  );
}
export {
  J as SchemaList
};
//# sourceMappingURL=SchemaList-CsTIT1pi-24HWOD4P.js.map
