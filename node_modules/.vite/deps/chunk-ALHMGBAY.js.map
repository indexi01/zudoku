{
  "version": 3,
  "sources": ["../../zudoku/src/lib/components/CategoryHeading.tsx", "../../zudoku/src/lib/ui/Stepper.tsx", "../../.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/types.js", "../../.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/deserialize.js", "../../.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/serialize.js", "../../.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/index.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/schema.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/merge.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/normalize.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/info.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/types.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/defined-info.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/create.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/xlink.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/xml.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/case-sensitive-transform.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/case-insensitive-transform.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/xmlns.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/aria.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/html.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/svg.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/lib/find.js", "../../.pnpm/property-information@6.5.0/node_modules/property-information/index.js", "../../.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js", "../../.pnpm/hast-util-parse-selector@4.0.0/node_modules/hast-util-parse-selector/lib/index.js", "../../.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js", "../../.pnpm/hastscript@9.0.0/node_modules/hastscript/lib/create-h.js", "../../.pnpm/hastscript@9.0.0/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js", "../../.pnpm/hastscript@9.0.0/node_modules/hastscript/lib/index.js", "../../.pnpm/vfile-location@5.0.3/node_modules/vfile-location/lib/index.js", "../../.pnpm/web-namespaces@2.0.1/node_modules/web-namespaces/index.js", "../../.pnpm/hast-util-from-parse5@8.0.2/node_modules/hast-util-from-parse5/lib/index.js", "../../.pnpm/zwitch@2.0.4/node_modules/zwitch/index.js", "../../.pnpm/hast-util-to-parse5@8.0.0/node_modules/hast-util-to-parse5/lib/index.js", "../../.pnpm/html-void-elements@3.0.0/node_modules/html-void-elements/index.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/unicode.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/error-codes.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/tokenizer/preprocessor.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/token.js", "../../.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-html.js", "../../.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-xml.js", "../../.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode_codepoint.js", "../../.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/html.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/tokenizer/index.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/parser/open-element-stack.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/parser/formatting-element-list.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/tree-adapters/default.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/doctype.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/foreign-content.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/parser/index.js", "../../.pnpm/parse5@7.2.1/node_modules/parse5/dist/serializer/index.js", "../../.pnpm/unist-util-position@5.0.0/node_modules/unist-util-position/lib/index.js", "../../.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js", "../../.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/index.js", "../../.pnpm/unist-util-visit@5.0.0/node_modules/unist-util-visit/lib/index.js", "../../.pnpm/hast-util-raw@9.1.0/node_modules/hast-util-raw/lib/index.js", "../../.pnpm/rehype-raw@7.0.0/node_modules/rehype-raw/lib/index.js", "../../.pnpm/ccount@2.0.1/node_modules/ccount/index.js", "../../.pnpm/micromark-util-character@2.1.1/node_modules/micromark-util-character/index.js", "../../.pnpm/mdast-util-find-and-replace@3.0.2/node_modules/mdast-util-find-and-replace/lib/index.js", "../../.pnpm/mdast-util-gfm-autolink-literal@2.0.1/node_modules/mdast-util-gfm-autolink-literal/lib/index.js", "../../.pnpm/micromark-util-normalize-identifier@2.0.1/node_modules/micromark-util-normalize-identifier/index.js", "../../.pnpm/mdast-util-gfm-footnote@2.1.0/node_modules/mdast-util-gfm-footnote/lib/index.js", "../../.pnpm/mdast-util-gfm-strikethrough@2.0.0/node_modules/mdast-util-gfm-strikethrough/lib/index.js", "../../.pnpm/markdown-table@3.0.4/node_modules/markdown-table/index.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/break.js", "../../.pnpm/longest-streak@3.1.0/node_modules/longest-streak/index.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-fence.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/code.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-quote.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/definition.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js", "../../.pnpm/micromark-util-classify-character@2.0.1/node_modules/micromark-util-classify-character/index.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/encode-info.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js", "../../.pnpm/mdast-util-to-string@4.0.0/node_modules/mdast-util-to-string/lib/index.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/heading.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/html.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/image.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/link.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-rule.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/list.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/list-item.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js", "../../.pnpm/mdast-util-phrasing@4.1.0/node_modules/mdast-util-phrasing/lib/index.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/root.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-strong.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/strong.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/text.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js", "../../.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/index.js", "../../.pnpm/mdast-util-gfm-table@2.0.0/node_modules/mdast-util-gfm-table/lib/index.js", "../../.pnpm/mdast-util-gfm-task-list-item@2.0.0/node_modules/mdast-util-gfm-task-list-item/lib/index.js", "../../.pnpm/mdast-util-gfm@3.1.0/node_modules/mdast-util-gfm/lib/index.js", "../../.pnpm/micromark-util-chunked@2.0.1/node_modules/micromark-util-chunked/index.js", "../../.pnpm/micromark-util-combine-extensions@2.0.1/node_modules/micromark-util-combine-extensions/index.js", "../../.pnpm/micromark-extension-gfm-autolink-literal@2.1.0/node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js", "../../.pnpm/micromark-util-sanitize-uri@2.0.1/node_modules/micromark-util-sanitize-uri/index.js", "../../.pnpm/micromark-util-resolve-all@2.0.1/node_modules/micromark-util-resolve-all/index.js", "../../.pnpm/micromark-factory-space@2.0.1/node_modules/micromark-factory-space/index.js", "../../.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/blank-line.js", "../../.pnpm/micromark-factory-whitespace@2.0.1/node_modules/micromark-factory-whitespace/index.js", "../../.pnpm/micromark-extension-gfm-footnote@2.1.0/node_modules/micromark-extension-gfm-footnote/lib/syntax.js", "../../.pnpm/micromark-extension-gfm-strikethrough@2.1.0/node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js", "../../.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/edit-map.js", "../../.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/infer.js", "../../.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/syntax.js", "../../.pnpm/micromark-extension-gfm-task-list-item@2.1.0/node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js", "../../.pnpm/micromark-extension-gfm@3.0.0/node_modules/micromark-extension-gfm/index.js", "../../.pnpm/remark-gfm@4.0.1/node_modules/remark-gfm/lib/index.js", "../../zudoku/src/lib/components/context/ViewportAnchorContext.tsx", "../../zudoku/src/lib/components/navigation/SidebarBadge.tsx", "../../.pnpm/fast-equals@5.2.2/node_modules/fast-equals/dist/esm/index.mjs", "../../zudoku/src/lib/components/navigation/SidebarCategory.tsx", "../../zudoku/src/lib/components/navigation/SidebarItem.tsx", "../../zudoku/src/lib/util/scrollIntoViewIfNeeded.ts", "../../zudoku/src/lib/util/useScrollToAnchor.ts", "../../zudoku/src/lib/components/AnchorLink.tsx", "../../zudoku/src/lib/components/Heading.tsx", "../../zudoku/src/lib/plugins/openapi/components/SelectOnClick.tsx", "../../zudoku/src/lib/components/InlineCode.tsx", "../../zudoku/src/lib/util/MdxComponents.tsx", "../../.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/lib/index.js", "../../.pnpm/hast-util-whitespace@3.0.0/node_modules/hast-util-whitespace/lib/index.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/schema.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/merge.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/normalize.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/info.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/types.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/defined-info.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/create.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/aria.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/case-sensitive-transform.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/case-insensitive-transform.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/html.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/svg.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/xlink.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/xmlns.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/xml.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/hast-to-react.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/lib/find.js", "../../.pnpm/property-information@7.0.0/node_modules/property-information/index.js", "../../.pnpm/inline-style-parser@0.2.4/node_modules/inline-style-parser/index.js", "../../.pnpm/style-to-object@1.0.8/node_modules/style-to-object/cjs/index.js", "../../.pnpm/style-to-js@1.1.16/node_modules/style-to-js/cjs/utilities.js", "../../.pnpm/style-to-js@1.1.16/node_modules/style-to-js/cjs/index.js", "../../.pnpm/unist-util-stringify-position@4.0.0/node_modules/unist-util-stringify-position/lib/index.js", "../../.pnpm/vfile-message@4.0.2/node_modules/vfile-message/lib/index.js", "../../.pnpm/hast-util-to-jsx-runtime@2.3.6/node_modules/hast-util-to-jsx-runtime/lib/index.js", "../../.pnpm/html-url-attributes@3.0.1/node_modules/html-url-attributes/lib/index.js", "../../.pnpm/decode-named-character-reference@1.0.2_patch_hash=djcvjv2zk32xfqoxzwsbvomeg4/node_modules/decode-named-character-reference/index.dom.js", "../../.pnpm/micromark-util-chunked@2.0.0/node_modules/micromark-util-chunked/index.js", "../../.pnpm/micromark-util-combine-extensions@2.0.0/node_modules/micromark-util-combine-extensions/index.js", "../../.pnpm/micromark-util-decode-numeric-character-reference@2.0.1/node_modules/micromark-util-decode-numeric-character-reference/index.js", "../../.pnpm/micromark-util-normalize-identifier@2.0.0/node_modules/micromark-util-normalize-identifier/index.js", "../../.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/content.js", "../../.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/document.js", "../../.pnpm/micromark-util-resolve-all@2.0.0/node_modules/micromark-util-resolve-all/index.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/attention.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/autolink.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/blank-line.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/block-quote.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/character-escape.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/character-reference.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/code-fenced.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/code-indented.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/code-text.js", "../../.pnpm/micromark-util-subtokenize@2.0.0/node_modules/micromark-util-subtokenize/index.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/content.js", "../../.pnpm/micromark-factory-destination@2.0.0/node_modules/micromark-factory-destination/index.js", "../../.pnpm/micromark-factory-label@2.0.0/node_modules/micromark-factory-label/index.js", "../../.pnpm/micromark-factory-title@2.0.0/node_modules/micromark-factory-title/index.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/definition.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/hard-break-escape.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/heading-atx.js", "../../.pnpm/micromark-util-html-tag-name@2.0.0/node_modules/micromark-util-html-tag-name/index.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/html-flow.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/html-text.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/label-end.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/label-start-image.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/label-start-link.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/line-ending.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/thematic-break.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/list.js", "../../.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/setext-underline.js", "../../.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/flow.js", "../../.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/text.js", "../../.pnpm/micromark@4.0.0/node_modules/micromark/lib/create-tokenizer.js", "../../.pnpm/micromark@4.0.0/node_modules/micromark/lib/constructs.js", "../../.pnpm/micromark@4.0.0/node_modules/micromark/lib/parse.js", "../../.pnpm/micromark@4.0.0/node_modules/micromark/lib/postprocess.js", "../../.pnpm/micromark@4.0.0/node_modules/micromark/lib/preprocess.js", "../../.pnpm/micromark-util-decode-string@2.0.0/node_modules/micromark-util-decode-string/index.js", "../../.pnpm/mdast-util-from-markdown@2.0.0/node_modules/mdast-util-from-markdown/lib/index.js", "../../.pnpm/remark-parse@11.0.0/node_modules/remark-parse/lib/index.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/break.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/code.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/delete.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/heading.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/html.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/revert.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/image.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/link.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/list-item.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/list.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/root.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/strong.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table-row.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js", "../../.pnpm/trim-lines@3.0.1/node_modules/trim-lines/index.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/text.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/index.js", "../../.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/types.js", "../../.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/deserialize.js", "../../.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/serialize.js", "../../.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/index.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/footer.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/state.js", "../../.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/index.js", "../../.pnpm/remark-rehype@11.1.2/node_modules/remark-rehype/lib/index.js", "../../.pnpm/bail@2.0.2/node_modules/bail/index.js", "../../.pnpm/extend@3.0.2/node_modules/extend/index.js", "../../.pnpm/is-plain-obj@4.1.0/node_modules/is-plain-obj/index.js", "../../.pnpm/trough@2.2.0/node_modules/trough/lib/index.js", "../../.pnpm/vfile@6.0.3/node_modules/vfile/lib/minpath.browser.js", "../../.pnpm/vfile@6.0.3/node_modules/vfile/lib/minproc.browser.js", "../../.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.shared.js", "../../.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.browser.js", "../../.pnpm/vfile@6.0.3/node_modules/vfile/lib/index.js", "../../.pnpm/unified@11.0.5/node_modules/unified/lib/callable-instance.js", "../../.pnpm/unified@11.0.5/node_modules/unified/lib/index.js", "../../zudoku/src/lib/components/ReactMarkdown.tsx", "../../zudoku/src/lib/components/Markdown.tsx"],
  "sourcesContent": ["import { cx } from \"class-variance-authority\";\nimport type { ReactNode } from \"react\";\n\nexport const CategoryHeading = ({\n  children,\n  className,\n}: {\n  children: ReactNode;\n  className?: string;\n}) => {\n  return (\n    <div className={cx(\"text-sm font-semibold text-primary mb-2\", className)}>\n      {children}\n    </div>\n  );\n};\n", "import type { PropsWithChildren } from \"react\";\n\n// \"stepper\" class is defined in main.css\nconst Stepper = ({ children }: PropsWithChildren) => {\n  return <div className=\"stepper\">{children}</div>;\n};\n\nexport { Stepper };\n", "export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n", "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n", "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n", "import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n", "/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n", "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n", "/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n", "export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n", "let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n", "import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n", "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n", "import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n", "import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n", "/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n", "import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n", "import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n", "import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n", "import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n", "/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n", "/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n", "/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n", "/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {Array<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n", "export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n", "/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n", "/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n", "/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n", "/**\n * @import {ElementData, Element, Nodes, RootContent, Root} from 'hast'\n * @import {DefaultTreeAdapterMap, Token} from 'parse5'\n * @import {Schema} from 'property-information'\n * @import {Point, Position} from 'unist'\n * @import {VFile} from 'vfile'\n * @import {Options} from 'hast-util-from-parse5'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {DefaultTreeAdapterMap['node']} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {DefaultTreeAdapterMap['commentNode']} */ (\n        node\n      )\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference =\n        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */ (\n          node\n        )\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const document = String(state.file)\n        const loc = location(document)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(document.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {DefaultTreeAdapterMap['documentType']} */ (\n        node\n      )\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {DefaultTreeAdapterMap['textNode']} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {DefaultTreeAdapterMap['element']} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<DefaultTreeAdapterMap['node']>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['element']} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const properties = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      properties[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const x = state.schema.space === 'svg' ? s : h\n  const result = x(node.tagName, properties, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {DefaultTreeAdapterMap['template']} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {Token.ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const properties = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            properties[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = properties\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {Token.Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n", "/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n", "/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n", "/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n", "const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n", "export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n", "export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n", "// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map", "// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map", "// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map", "import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map", "/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n", "import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n", "import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n", "//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n", "import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n", "import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n", "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n", "/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n", "/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n", "/**\n * @import {Options} from 'hast-util-raw'\n * @import {Comment, Doctype, Element, Nodes, RootContent, Root, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {DefaultTreeAdapterMap, ParserOptions} from 'parse5'\n * @import {Point} from 'unist'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst gfmTagfilterExpression =\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|textarea|title|xmp)(?=[\\t\\n\\f\\r />])/gi\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions<DefaultTreeAdapterMap>} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {Token.CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {Token.DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {Token.CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n\n  state.parser.tokenizer.write(\n    state.options.tagfilter\n      ? node.value.replace(gfmTagfilterExpression, '&lt;$1$2')\n      : node.value,\n    false\n  )\n  // @ts-expect-error: private.\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  // To do: remove next major.\n  /* c8 ignore next 12 -- removed in <https://github.com/inikulin/parse5/pull/897> */\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    // @ts-expect-error: removed.\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {Token.CharacterToken} */\n  // @ts-expect-error: private.\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Token.Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<noframes>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n    // Note: `<plaintext>` not needed, as it’s the last element.\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Token.Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Token.Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n", "/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n", "/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n", "/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}", "/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n", "/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n", "/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}", "/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n", "/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n", "// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n", "/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n", "/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n", "/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n", "/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n", "/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n", "/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}", "/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n", "/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n", "/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n", "/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n", "/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n", "/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n", "/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n", "/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n", "/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n", "import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n", "/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n", "/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n", "/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n", "/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}", "/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n", "/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}", "import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}", "/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n", "/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}", "/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}", "/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}", "/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}", "/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }", "/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}", "/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}", "/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}", "/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n", "/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n", "import {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type PropsWithChildren,\n} from \"react\";\n\ntype AnchorContextType = {\n  activeAnchor?: string;\n  setActiveAnchor: (anchor: string) => void;\n  observe: (element: HTMLElement | null) => void;\n  unobserve: (element: HTMLElement | null) => void;\n};\n\nconst ViewportAnchorContext = createContext<AnchorContextType | undefined>(\n  undefined,\n);\n\nexport const useViewportAnchor = () => {\n  const context = useContext(ViewportAnchorContext);\n\n  if (!context) {\n    throw new Error(\n      \"useViewportAnchor must be used within a CurrentAnchorProvider\",\n    );\n  }\n\n  return context;\n};\n\nexport const useRegisterAnchorElement = () => {\n  const elementRef = useRef<HTMLElement | null>(null);\n\n  const { observe, unobserve } = useViewportAnchor();\n\n  useEffect(() => {\n    const element = elementRef.current;\n\n    if (!element) return;\n\n    observe(element);\n\n    return () => unobserve(element);\n  }, [observe, unobserve]);\n\n  const setRef = useCallback((el: HTMLElement | null) => {\n    if (!el) return;\n    elementRef.current = el;\n  }, []);\n\n  return { ref: setRef };\n};\n\nexport const ViewportAnchorProvider = ({ children }: PropsWithChildren) => {\n  const [activeAnchor, setActiveAnchor] = useState(\"\");\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const registeredElements = useRef(new Set<HTMLElement>());\n  const pendingElements = useRef(new Set<HTMLElement>());\n\n  useEffect(() => {\n    observerRef.current = new IntersectionObserver(\n      (entries) => {\n        for (const entry of entries) {\n          if (entry.isIntersecting && entry.target.id) {\n            setActiveAnchor(entry.target.id);\n          }\n        }\n      },\n      {\n        rootMargin: \"0px 0px -80% 0px\",\n        threshold: 0.75,\n      },\n    );\n\n    // Process any elements that tried to register before observer was ready\n    pendingElements.current.forEach((element) => {\n      registeredElements.current.add(element);\n      observerRef.current?.observe(element);\n    });\n    pendingElements.current.clear();\n\n    return () => observerRef.current?.disconnect();\n  }, []);\n\n  useEffect(() => {\n    const elements = registeredElements.current;\n    const handleScroll = () => {\n      const hasReachedTop = window.scrollY === 0;\n      const hasReachedBottom =\n        window.innerHeight + window.scrollY >= document.body.scrollHeight;\n\n      if (hasReachedTop) {\n        setActiveAnchor(\"\");\n      } else if (hasReachedBottom) {\n        const lastItem = Array.from(elements).pop();\n        const lastId = lastItem?.id ?? \"\";\n        setActiveAnchor(lastId);\n      }\n    };\n\n    document.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      elements.clear();\n      document.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  const observeFns = useMemo(() => {\n    return {\n      observe: (element: HTMLElement | null) => {\n        if (!element) return;\n\n        if (!observerRef.current) {\n          pendingElements.current.add(element);\n          return;\n        }\n\n        registeredElements.current.add(element);\n        observerRef.current.observe(element);\n      },\n      unobserve: (element: HTMLElement | null) => {\n        if (!element) return;\n\n        pendingElements.current.delete(element);\n        registeredElements.current.delete(element);\n        observerRef.current?.unobserve(element);\n      },\n    };\n  }, []);\n\n  const value = useMemo(\n    () => ({ activeAnchor, setActiveAnchor, ...observeFns }),\n    [activeAnchor, setActiveAnchor, observeFns],\n  );\n\n  return (\n    <ViewportAnchorContext value={value}>{children}</ViewportAnchorContext>\n  );\n};\n", "import { cn } from \"../../util/cn.js\";\n\nexport const ColorMap = {\n  green: \"bg-green-400 dark:bg-green-800\",\n  blue: \"bg-sky-400 dark:bg-sky-800\",\n  yellow: \"bg-yellow-400 dark:bg-yellow-800\",\n  red: \"bg-red-400 dark:bg-red-800\",\n  purple: \"bg-purple-400 dark:bg-purple-600\",\n  indigo: \"bg-indigo-400 dark:bg-indigo-600\",\n  gray: \"bg-gray-400 dark:bg-gray-600\",\n  outline: \"border border-border rounded-md text-foreground\",\n};\n\nexport const ColorMapInvert = {\n  green: \"text-green-500 dark:text-green-600\",\n  blue: \"text-sky-400 dark:text-sky-600\",\n  yellow: \"text-yellow-400 dark:text-yellow-600\",\n  red: \"text-red-400 dark:text-red-600\",\n  purple: \"text-purple-400 dark:text-purple-600\",\n  indigo: \"text-indigo-400 dark:text-indigo-600\",\n  gray: \"text-gray-400 dark:text-gray-600\",\n  outline: \"\",\n};\n\nexport const SidebarBadge = ({\n  color,\n  label,\n  className,\n  invert,\n}: {\n  color: keyof typeof ColorMap;\n  label: string;\n  className?: string;\n  invert?: boolean;\n}) => {\n  return (\n    <span\n      className={cn(\n        \"flex items-center duration-200 transition-opacity text-center uppercase text-[0.65rem] font-bold rounded text-background dark:text-zinc-50 h-full\",\n        color === \"outline\" ? \"px-3\" : \"mt-0.5 px-1\",\n        invert ? ColorMapInvert[color] : ColorMap[color],\n        className,\n      )}\n    >\n      {label}\n    </span>\n  );\n};\n", "var getOwnPropertyNames = Object.getOwnPropertyNames, getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Combine two comparators into a single comparators.\n */\nfunction combineComparators(comparatorA, comparatorB) {\n    return function isEqual(a, b, state) {\n        return comparatorA(a, b, state) && comparatorB(a, b, state);\n    };\n}\n/**\n * Wrap the provided `areItemsEqual` method to manage the circular state, allowing\n * for circular references to be safely included in the comparison without creating\n * stack overflows.\n */\nfunction createIsCircular(areItemsEqual) {\n    return function isCircular(a, b, state) {\n        if (!a || !b || typeof a !== 'object' || typeof b !== 'object') {\n            return areItemsEqual(a, b, state);\n        }\n        var cache = state.cache;\n        var cachedA = cache.get(a);\n        var cachedB = cache.get(b);\n        if (cachedA && cachedB) {\n            return cachedA === b && cachedB === a;\n        }\n        cache.set(a, b);\n        cache.set(b, a);\n        var result = areItemsEqual(a, b, state);\n        cache.delete(a);\n        cache.delete(b);\n        return result;\n    };\n}\n/**\n * Get the properties to strictly examine, which include both own properties that are\n * not enumerable and symbol properties.\n */\nfunction getStrictProperties(object) {\n    return getOwnPropertyNames(object).concat(getOwnPropertySymbols(object));\n}\n/**\n * Whether the object contains the property passed as an own property.\n */\nvar hasOwn = Object.hasOwn ||\n    (function (object, property) {\n        return hasOwnProperty.call(object, property);\n    });\n/**\n * Whether the values passed are strictly equal or both NaN.\n */\nfunction sameValueZeroEqual(a, b) {\n    return a === b || (!a && !b && a !== a && b !== b);\n}\n\nvar PREACT_VNODE = '__v';\nvar PREACT_OWNER = '__o';\nvar REACT_OWNER = '_owner';\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor, keys = Object.keys;\n/**\n * Whether the arrays are equal in value.\n */\nfunction areArraysEqual(a, b, state) {\n    var index = a.length;\n    if (b.length !== index) {\n        return false;\n    }\n    while (index-- > 0) {\n        if (!state.equals(a[index], b[index], index, index, a, b, state)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the dates passed are equal in value.\n */\nfunction areDatesEqual(a, b) {\n    return sameValueZeroEqual(a.getTime(), b.getTime());\n}\n/**\n * Whether the errors passed are equal in value.\n */\nfunction areErrorsEqual(a, b) {\n    return (a.name === b.name &&\n        a.message === b.message &&\n        a.cause === b.cause &&\n        a.stack === b.stack);\n}\n/**\n * Whether the functions passed are equal in value.\n */\nfunction areFunctionsEqual(a, b) {\n    return a === b;\n}\n/**\n * Whether the `Map`s are equal in value.\n */\nfunction areMapsEqual(a, b, state) {\n    var size = a.size;\n    if (size !== b.size) {\n        return false;\n    }\n    if (!size) {\n        return true;\n    }\n    var matchedIndices = new Array(size);\n    var aIterable = a.entries();\n    var aResult;\n    var bResult;\n    var index = 0;\n    while ((aResult = aIterable.next())) {\n        if (aResult.done) {\n            break;\n        }\n        var bIterable = b.entries();\n        var hasMatch = false;\n        var matchIndex = 0;\n        while ((bResult = bIterable.next())) {\n            if (bResult.done) {\n                break;\n            }\n            if (matchedIndices[matchIndex]) {\n                matchIndex++;\n                continue;\n            }\n            var aEntry = aResult.value;\n            var bEntry = bResult.value;\n            if (state.equals(aEntry[0], bEntry[0], index, matchIndex, a, b, state) &&\n                state.equals(aEntry[1], bEntry[1], aEntry[0], bEntry[0], a, b, state)) {\n                hasMatch = matchedIndices[matchIndex] = true;\n                break;\n            }\n            matchIndex++;\n        }\n        if (!hasMatch) {\n            return false;\n        }\n        index++;\n    }\n    return true;\n}\n/**\n * Whether the numbers are equal in value.\n */\nvar areNumbersEqual = sameValueZeroEqual;\n/**\n * Whether the objects are equal in value.\n */\nfunction areObjectsEqual(a, b, state) {\n    var properties = keys(a);\n    var index = properties.length;\n    if (keys(b).length !== index) {\n        return false;\n    }\n    // Decrementing `while` showed faster results than either incrementing or\n    // decrementing `for` loop and than an incrementing `while` loop. Declarative\n    // methods like `some` / `every` were not used to avoid incurring the garbage\n    // cost of anonymous callbacks.\n    while (index-- > 0) {\n        if (!isPropertyEqual(a, b, state, properties[index])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the objects are equal in value with strict property checking.\n */\nfunction areObjectsEqualStrict(a, b, state) {\n    var properties = getStrictProperties(a);\n    var index = properties.length;\n    if (getStrictProperties(b).length !== index) {\n        return false;\n    }\n    var property;\n    var descriptorA;\n    var descriptorB;\n    // Decrementing `while` showed faster results than either incrementing or\n    // decrementing `for` loop and than an incrementing `while` loop. Declarative\n    // methods like `some` / `every` were not used to avoid incurring the garbage\n    // cost of anonymous callbacks.\n    while (index-- > 0) {\n        property = properties[index];\n        if (!isPropertyEqual(a, b, state, property)) {\n            return false;\n        }\n        descriptorA = getOwnPropertyDescriptor(a, property);\n        descriptorB = getOwnPropertyDescriptor(b, property);\n        if ((descriptorA || descriptorB) &&\n            (!descriptorA ||\n                !descriptorB ||\n                descriptorA.configurable !== descriptorB.configurable ||\n                descriptorA.enumerable !== descriptorB.enumerable ||\n                descriptorA.writable !== descriptorB.writable)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the primitive wrappers passed are equal in value.\n */\nfunction arePrimitiveWrappersEqual(a, b) {\n    return sameValueZeroEqual(a.valueOf(), b.valueOf());\n}\n/**\n * Whether the regexps passed are equal in value.\n */\nfunction areRegExpsEqual(a, b) {\n    return a.source === b.source && a.flags === b.flags;\n}\n/**\n * Whether the `Set`s are equal in value.\n */\nfunction areSetsEqual(a, b, state) {\n    var size = a.size;\n    if (size !== b.size) {\n        return false;\n    }\n    if (!size) {\n        return true;\n    }\n    var matchedIndices = new Array(size);\n    var aIterable = a.values();\n    var aResult;\n    var bResult;\n    while ((aResult = aIterable.next())) {\n        if (aResult.done) {\n            break;\n        }\n        var bIterable = b.values();\n        var hasMatch = false;\n        var matchIndex = 0;\n        while ((bResult = bIterable.next())) {\n            if (bResult.done) {\n                break;\n            }\n            if (!matchedIndices[matchIndex] &&\n                state.equals(aResult.value, bResult.value, aResult.value, bResult.value, a, b, state)) {\n                hasMatch = matchedIndices[matchIndex] = true;\n                break;\n            }\n            matchIndex++;\n        }\n        if (!hasMatch) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the TypedArray instances are equal in value.\n */\nfunction areTypedArraysEqual(a, b) {\n    var index = a.length;\n    if (b.length !== index) {\n        return false;\n    }\n    while (index-- > 0) {\n        if (a[index] !== b[index]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the URL instances are equal in value.\n */\nfunction areUrlsEqual(a, b) {\n    return (a.hostname === b.hostname &&\n        a.pathname === b.pathname &&\n        a.protocol === b.protocol &&\n        a.port === b.port &&\n        a.hash === b.hash &&\n        a.username === b.username &&\n        a.password === b.password);\n}\nfunction isPropertyEqual(a, b, state, property) {\n    if ((property === REACT_OWNER ||\n        property === PREACT_OWNER ||\n        property === PREACT_VNODE) &&\n        (a.$$typeof || b.$$typeof)) {\n        return true;\n    }\n    return (hasOwn(b, property) &&\n        state.equals(a[property], b[property], property, property, a, b, state));\n}\n\nvar ARGUMENTS_TAG = '[object Arguments]';\nvar BOOLEAN_TAG = '[object Boolean]';\nvar DATE_TAG = '[object Date]';\nvar ERROR_TAG = '[object Error]';\nvar MAP_TAG = '[object Map]';\nvar NUMBER_TAG = '[object Number]';\nvar OBJECT_TAG = '[object Object]';\nvar REG_EXP_TAG = '[object RegExp]';\nvar SET_TAG = '[object Set]';\nvar STRING_TAG = '[object String]';\nvar URL_TAG = '[object URL]';\nvar isArray = Array.isArray;\nvar isTypedArray = typeof ArrayBuffer === 'function' && ArrayBuffer.isView\n    ? ArrayBuffer.isView\n    : null;\nvar assign = Object.assign;\nvar getTag = Object.prototype.toString.call.bind(Object.prototype.toString);\n/**\n * Create a comparator method based on the type-specific equality comparators passed.\n */\nfunction createEqualityComparator(_a) {\n    var areArraysEqual = _a.areArraysEqual, areDatesEqual = _a.areDatesEqual, areErrorsEqual = _a.areErrorsEqual, areFunctionsEqual = _a.areFunctionsEqual, areMapsEqual = _a.areMapsEqual, areNumbersEqual = _a.areNumbersEqual, areObjectsEqual = _a.areObjectsEqual, arePrimitiveWrappersEqual = _a.arePrimitiveWrappersEqual, areRegExpsEqual = _a.areRegExpsEqual, areSetsEqual = _a.areSetsEqual, areTypedArraysEqual = _a.areTypedArraysEqual, areUrlsEqual = _a.areUrlsEqual;\n    /**\n     * compare the value of the two objects and return true if they are equivalent in values\n     */\n    return function comparator(a, b, state) {\n        // If the items are strictly equal, no need to do a value comparison.\n        if (a === b) {\n            return true;\n        }\n        // If either of the items are nullish and fail the strictly equal check\n        // above, then they must be unequal.\n        if (a == null || b == null) {\n            return false;\n        }\n        var type = typeof a;\n        if (type !== typeof b) {\n            return false;\n        }\n        if (type !== 'object') {\n            if (type === 'number') {\n                return areNumbersEqual(a, b, state);\n            }\n            if (type === 'function') {\n                return areFunctionsEqual(a, b, state);\n            }\n            // If a primitive value that is not strictly equal, it must be unequal.\n            return false;\n        }\n        var constructor = a.constructor;\n        // Checks are listed in order of commonality of use-case:\n        //   1. Common complex object types (plain object, array)\n        //   2. Common data values (date, regexp)\n        //   3. Less-common complex object types (map, set)\n        //   4. Less-common data values (promise, primitive wrappers)\n        // Inherently this is both subjective and assumptive, however\n        // when reviewing comparable libraries in the wild this order\n        // appears to be generally consistent.\n        // Constructors should match, otherwise there is potential for false positives\n        // between class and subclass or custom object and POJO.\n        if (constructor !== b.constructor) {\n            return false;\n        }\n        // `isPlainObject` only checks against the object's own realm. Cross-realm\n        // comparisons are rare, and will be handled in the ultimate fallback, so\n        // we can avoid capturing the string tag.\n        if (constructor === Object) {\n            return areObjectsEqual(a, b, state);\n        }\n        // `isArray()` works on subclasses and is cross-realm, so we can avoid capturing\n        // the string tag or doing an `instanceof` check.\n        if (isArray(a)) {\n            return areArraysEqual(a, b, state);\n        }\n        // `isTypedArray()` works on all possible TypedArray classes, so we can avoid\n        // capturing the string tag or comparing against all possible constructors.\n        if (isTypedArray != null && isTypedArray(a)) {\n            return areTypedArraysEqual(a, b, state);\n        }\n        // Try to fast-path equality checks for other complex object types in the\n        // same realm to avoid capturing the string tag. Strict equality is used\n        // instead of `instanceof` because it is more performant for the common\n        // use-case. If someone is subclassing a native class, it will be handled\n        // with the string tag comparison.\n        if (constructor === Date) {\n            return areDatesEqual(a, b, state);\n        }\n        if (constructor === RegExp) {\n            return areRegExpsEqual(a, b, state);\n        }\n        if (constructor === Map) {\n            return areMapsEqual(a, b, state);\n        }\n        if (constructor === Set) {\n            return areSetsEqual(a, b, state);\n        }\n        // Since this is a custom object, capture the string tag to determing its type.\n        // This is reasonably performant in modern environments like v8 and SpiderMonkey.\n        var tag = getTag(a);\n        if (tag === DATE_TAG) {\n            return areDatesEqual(a, b, state);\n        }\n        // For RegExp, the properties are not enumerable, and therefore will give false positives if\n        // tested like a standard object.\n        if (tag === REG_EXP_TAG) {\n            return areRegExpsEqual(a, b, state);\n        }\n        if (tag === MAP_TAG) {\n            return areMapsEqual(a, b, state);\n        }\n        if (tag === SET_TAG) {\n            return areSetsEqual(a, b, state);\n        }\n        if (tag === OBJECT_TAG) {\n            // The exception for value comparison is custom `Promise`-like class instances. These should\n            // be treated the same as standard `Promise` objects, which means strict equality, and if\n            // it reaches this point then that strict equality comparison has already failed.\n            return (typeof a.then !== 'function' &&\n                typeof b.then !== 'function' &&\n                areObjectsEqual(a, b, state));\n        }\n        // If a URL tag, it should be tested explicitly. Like RegExp, the properties are not\n        // enumerable, and therefore will give false positives if tested like a standard object.\n        if (tag === URL_TAG) {\n            return areUrlsEqual(a, b, state);\n        }\n        // If an error tag, it should be tested explicitly. Like RegExp, the properties are not\n        // enumerable, and therefore will give false positives if tested like a standard object.\n        if (tag === ERROR_TAG) {\n            return areErrorsEqual(a, b, state);\n        }\n        // If an arguments tag, it should be treated as a standard object.\n        if (tag === ARGUMENTS_TAG) {\n            return areObjectsEqual(a, b, state);\n        }\n        // As the penultimate fallback, check if the values passed are primitive wrappers. This\n        // is very rare in modern JS, which is why it is deprioritized compared to all other object\n        // types.\n        if (tag === BOOLEAN_TAG || tag === NUMBER_TAG || tag === STRING_TAG) {\n            return arePrimitiveWrappersEqual(a, b, state);\n        }\n        // If not matching any tags that require a specific type of comparison, then we hard-code false because\n        // the only thing remaining is strict equality, which has already been compared. This is for a few reasons:\n        //   - Certain types that cannot be introspected (e.g., `WeakMap`). For these types, this is the only\n        //     comparison that can be made.\n        //   - For types that can be introspected, but rarely have requirements to be compared\n        //     (`ArrayBuffer`, `DataView`, etc.), the cost is avoided to prioritize the common\n        //     use-cases (may be included in a future release, if requested enough).\n        //   - For types that can be introspected but do not have an objective definition of what\n        //     equality is (`Error`, etc.), the subjective decision is to be conservative and strictly compare.\n        // In all cases, these decisions should be reevaluated based on changes to the language and\n        // common development practices.\n        return false;\n    };\n}\n/**\n * Create the configuration object used for building comparators.\n */\nfunction createEqualityComparatorConfig(_a) {\n    var circular = _a.circular, createCustomConfig = _a.createCustomConfig, strict = _a.strict;\n    var config = {\n        areArraysEqual: strict\n            ? areObjectsEqualStrict\n            : areArraysEqual,\n        areDatesEqual: areDatesEqual,\n        areErrorsEqual: areErrorsEqual,\n        areFunctionsEqual: areFunctionsEqual,\n        areMapsEqual: strict\n            ? combineComparators(areMapsEqual, areObjectsEqualStrict)\n            : areMapsEqual,\n        areNumbersEqual: areNumbersEqual,\n        areObjectsEqual: strict\n            ? areObjectsEqualStrict\n            : areObjectsEqual,\n        arePrimitiveWrappersEqual: arePrimitiveWrappersEqual,\n        areRegExpsEqual: areRegExpsEqual,\n        areSetsEqual: strict\n            ? combineComparators(areSetsEqual, areObjectsEqualStrict)\n            : areSetsEqual,\n        areTypedArraysEqual: strict\n            ? areObjectsEqualStrict\n            : areTypedArraysEqual,\n        areUrlsEqual: areUrlsEqual,\n    };\n    if (createCustomConfig) {\n        config = assign({}, config, createCustomConfig(config));\n    }\n    if (circular) {\n        var areArraysEqual$1 = createIsCircular(config.areArraysEqual);\n        var areMapsEqual$1 = createIsCircular(config.areMapsEqual);\n        var areObjectsEqual$1 = createIsCircular(config.areObjectsEqual);\n        var areSetsEqual$1 = createIsCircular(config.areSetsEqual);\n        config = assign({}, config, {\n            areArraysEqual: areArraysEqual$1,\n            areMapsEqual: areMapsEqual$1,\n            areObjectsEqual: areObjectsEqual$1,\n            areSetsEqual: areSetsEqual$1,\n        });\n    }\n    return config;\n}\n/**\n * Default equality comparator pass-through, used as the standard `isEqual` creator for\n * use inside the built comparator.\n */\nfunction createInternalEqualityComparator(compare) {\n    return function (a, b, _indexOrKeyA, _indexOrKeyB, _parentA, _parentB, state) {\n        return compare(a, b, state);\n    };\n}\n/**\n * Create the `isEqual` function used by the consuming application.\n */\nfunction createIsEqual(_a) {\n    var circular = _a.circular, comparator = _a.comparator, createState = _a.createState, equals = _a.equals, strict = _a.strict;\n    if (createState) {\n        return function isEqual(a, b) {\n            var _a = createState(), _b = _a.cache, cache = _b === void 0 ? circular ? new WeakMap() : undefined : _b, meta = _a.meta;\n            return comparator(a, b, {\n                cache: cache,\n                equals: equals,\n                meta: meta,\n                strict: strict,\n            });\n        };\n    }\n    if (circular) {\n        return function isEqual(a, b) {\n            return comparator(a, b, {\n                cache: new WeakMap(),\n                equals: equals,\n                meta: undefined,\n                strict: strict,\n            });\n        };\n    }\n    var state = {\n        cache: undefined,\n        equals: equals,\n        meta: undefined,\n        strict: strict,\n    };\n    return function isEqual(a, b) {\n        return comparator(a, b, state);\n    };\n}\n\n/**\n * Whether the items passed are deeply-equal in value.\n */\nvar deepEqual = createCustomEqual();\n/**\n * Whether the items passed are deeply-equal in value based on strict comparison.\n */\nvar strictDeepEqual = createCustomEqual({ strict: true });\n/**\n * Whether the items passed are deeply-equal in value, including circular references.\n */\nvar circularDeepEqual = createCustomEqual({ circular: true });\n/**\n * Whether the items passed are deeply-equal in value, including circular references,\n * based on strict comparison.\n */\nvar strictCircularDeepEqual = createCustomEqual({\n    circular: true,\n    strict: true,\n});\n/**\n * Whether the items passed are shallowly-equal in value.\n */\nvar shallowEqual = createCustomEqual({\n    createInternalComparator: function () { return sameValueZeroEqual; },\n});\n/**\n * Whether the items passed are shallowly-equal in value based on strict comparison\n */\nvar strictShallowEqual = createCustomEqual({\n    strict: true,\n    createInternalComparator: function () { return sameValueZeroEqual; },\n});\n/**\n * Whether the items passed are shallowly-equal in value, including circular references.\n */\nvar circularShallowEqual = createCustomEqual({\n    circular: true,\n    createInternalComparator: function () { return sameValueZeroEqual; },\n});\n/**\n * Whether the items passed are shallowly-equal in value, including circular references,\n * based on strict comparison.\n */\nvar strictCircularShallowEqual = createCustomEqual({\n    circular: true,\n    createInternalComparator: function () { return sameValueZeroEqual; },\n    strict: true,\n});\n/**\n * Create a custom equality comparison method.\n *\n * This can be done to create very targeted comparisons in extreme hot-path scenarios\n * where the standard methods are not performant enough, but can also be used to provide\n * support for legacy environments that do not support expected features like\n * `RegExp.prototype.flags` out of the box.\n */\nfunction createCustomEqual(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.circular, circular = _a === void 0 ? false : _a, createCustomInternalComparator = options.createInternalComparator, createState = options.createState, _b = options.strict, strict = _b === void 0 ? false : _b;\n    var config = createEqualityComparatorConfig(options);\n    var comparator = createEqualityComparator(config);\n    var equals = createCustomInternalComparator\n        ? createCustomInternalComparator(comparator)\n        : createInternalEqualityComparator(comparator);\n    return createIsEqual({ circular: circular, comparator: comparator, createState: createState, equals: equals, strict: strict });\n}\n\nexport { circularDeepEqual, circularShallowEqual, createCustomEqual, deepEqual, sameValueZeroEqual, shallowEqual, strictCircularDeepEqual, strictCircularShallowEqual, strictDeepEqual, strictShallowEqual };\n//# sourceMappingURL=index.mjs.map\n", "import * as Collapsible from \"@radix-ui/react-collapsible\";\nimport { deepEqual } from \"fast-equals\";\nimport { ChevronRightIcon } from \"lucide-react\";\nimport { memo, useEffect, useState } from \"react\";\nimport { NavLink, useMatch } from \"react-router\";\nimport { Button } from \"zudoku/ui/Button.js\";\nimport type { SidebarItemCategory } from \"../../../config/validators/SidebarSchema.js\";\nimport { cn } from \"../../util/cn.js\";\nimport { joinPath } from \"../../util/joinPath.js\";\nimport { navigationListItem, SidebarItem } from \"./SidebarItem.js\";\nimport { useIsCategoryOpen } from \"./utils.js\";\n\nconst SidebarCategoryInner = ({\n  category,\n  onRequestClose,\n}: {\n  category: SidebarItemCategory;\n  onRequestClose?: () => void;\n}) => {\n  const isCategoryOpen = useIsCategoryOpen(category);\n  const [hasInteracted, setHasInteracted] = useState(false);\n\n  const isCollapsible = category.collapsible ?? true;\n  const isCollapsed = category.collapsed ?? true;\n  const isDefaultOpen = Boolean(\n    !isCollapsible || !isCollapsed || isCategoryOpen,\n  );\n  const [open, setOpen] = useState(isDefaultOpen);\n  const isActive = useMatch(category.link?.id ?? \"\");\n\n  useEffect(() => {\n    // this is triggered when an item from the sidebar is clicked\n    // and the sidebar, enclosing this item, is not opened\n    if (isCategoryOpen) {\n      setOpen(true);\n    }\n  }, [isCategoryOpen]);\n\n  const ToggleButton = isCollapsible && (\n    <Button\n      onClick={(e) => {\n        e.preventDefault();\n        setOpen((prev) => !prev);\n        setHasInteracted(true);\n      }}\n      variant=\"ghost\"\n      size=\"icon\"\n      className=\"size-6 hover:bg-[hsl(from_hsl(var(--accent))_h_s_calc(l-5))] hover:dark:bg-[hsl(from_hsl(var(--accent))_h_s_calc(l+5))]\"\n    >\n      <ChevronRightIcon\n        size={16}\n        className={cn(\n          hasInteracted && \"transition\",\n          \"shrink-0 group-data-[state=open]:rotate-90\",\n        )}\n      />\n    </Button>\n  );\n\n  const icon = category.icon && (\n    <category.icon\n      size={16}\n      className={cn(\"align-[-0.125em] \", isActive && \"text-primary\")}\n    />\n  );\n\n  const styles = navigationListItem({\n    className: [\n      \"group text-start font-medium\",\n      isCollapsible || typeof category.link !== \"undefined\"\n        ? \"cursor-pointer\"\n        : \"cursor-default hover:bg-transparent\",\n    ],\n  });\n\n  return (\n    <Collapsible.Root\n      className=\"flex flex-col\"\n      defaultOpen={isDefaultOpen}\n      open={open}\n      onOpenChange={() => setOpen(true)}\n    >\n      <Collapsible.Trigger className=\"group\" asChild disabled={!isCollapsible}>\n        {category.link?.type === \"doc\" ? (\n          <NavLink\n            to={joinPath(category.link.id)}\n            className={styles}\n            onClick={() => {\n              setHasInteracted(true);\n              // if it is the current path and closed then open it because there's no path change to trigger the open\n              if (isActive && !open) {\n                setOpen(true);\n              }\n            }}\n          >\n            {icon}\n            <div className=\"flex items-center gap-2 justify-between w-full text-foreground/80 group-aria-[current='page']:text-primary\">\n              <div className=\"truncate\">{category.label}</div>\n              {ToggleButton}\n            </div>\n          </NavLink>\n        ) : (\n          <div onClick={() => setHasInteracted(true)} className={styles}>\n            {icon}\n            <div className=\"flex items-center justify-between w-full\">\n              <div className=\"flex gap-2 truncate w-full\">{category.label}</div>\n              {ToggleButton}\n            </div>\n          </div>\n        )}\n      </Collapsible.Trigger>\n      <Collapsible.Content\n        className={cn(\n          // CollapsibleContent class is used to animate and it should only be applied when the user has triggered the toggle\n          hasInteracted && \"CollapsibleContent\",\n          category.items.length === 0 && \"hidden\",\n          \"ms-6 my-1\",\n        )}\n      >\n        <ul className=\"relative after:absolute after:-left-[--padding-nav-item] after:translate-x-[1.5px] after:top-0 after:bottom-0 after:w-px after:bg-border\">\n          {category.items.map((item) => (\n            <SidebarItem\n              key={\n                (\"id\" in item ? item.id : \"\") +\n                (\"href\" in item ? item.href : \"\") +\n                item.label\n              }\n              onRequestClose={onRequestClose}\n              item={item}\n            />\n          ))}\n        </ul>\n      </Collapsible.Content>\n    </Collapsible.Root>\n  );\n};\n\nexport const SidebarCategory = memo(SidebarCategoryInner, deepEqual);\n\nSidebarCategory.displayName = \"SidebarCategory\";\n", "import { cva } from \"class-variance-authority\";\nimport { ExternalLinkIcon } from \"lucide-react\";\nimport { NavLink, useLocation, useSearchParams } from \"react-router\";\n\nimport type { SidebarItem as SidebarItemType } from \"../../../config/validators/SidebarSchema.js\";\nimport { joinUrl } from \"../../util/joinUrl.js\";\nimport { AnchorLink } from \"../AnchorLink.js\";\nimport { useViewportAnchor } from \"../context/ViewportAnchorContext.js\";\nimport { SidebarBadge } from \"./SidebarBadge.js\";\nimport { SidebarCategory } from \"./SidebarCategory.js\";\n\nexport const navigationListItem = cva(\n  \"flex items-center gap-2 px-[--padding-nav-item] my-0.5 py-1.5 rounded-lg hover:bg-accent tabular-nums\",\n  {\n    variants: {\n      isActive: {\n        true: \"bg-accent font-medium\",\n        false: \"text-foreground/80\",\n      },\n      isMuted: {\n        true: \"text-foreground/30\",\n        false: \"\",\n      },\n      isPending: {\n        true: \"bg-accent animate-pulse\",\n        false: \"\",\n      },\n    },\n    defaultVariants: {\n      isActive: false,\n    },\n  },\n);\n\nexport const DATA_ANCHOR_ATTR = \"data-anchor\";\n\nexport const SidebarItem = ({\n  item,\n  onRequestClose,\n}: {\n  item: SidebarItemType;\n  onRequestClose?: () => void;\n}) => {\n  const location = useLocation();\n  const { activeAnchor } = useViewportAnchor();\n  const [searchParams] = useSearchParams();\n\n  switch (item.type) {\n    case \"category\":\n      return (\n        <SidebarCategory category={item} onRequestClose={onRequestClose} />\n      );\n    case \"doc\":\n      return (\n        <NavLink\n          className={({ isActive, isPending }) =>\n            navigationListItem({ isActive, isPending })\n          }\n          to={joinUrl(item.id)}\n          onClick={onRequestClose}\n          end\n        >\n          {item.icon && <item.icon size={16} className=\"align-[-0.125em]\" />}\n          {item.badge ? (\n            <>\n              <span className=\"truncate flex-1\" title={item.label}>\n                {item.label}\n              </span>\n              <SidebarBadge {...item.badge} />\n            </>\n          ) : (\n            item.label\n          )}\n        </NavLink>\n      );\n    case \"link\":\n      return !item.href.startsWith(\"http\") ? (\n        <AnchorLink\n          to={{\n            pathname: item.href.split(\"#\")[0],\n            hash: item.href.split(\"#\")[1],\n            search: searchParams.toString(),\n          }}\n          {...{ [DATA_ANCHOR_ATTR]: item.href.split(\"#\")[1] }}\n          className={navigationListItem({\n            isActive: item.href === [location.pathname, activeAnchor].join(\"#\"),\n            className: item.badge?.placement !== \"start\" && \"justify-between\",\n          })}\n          onClick={onRequestClose}\n        >\n          {item.badge ? (\n            <>\n              <span className=\"truncate\" title={item.label}>\n                {item.label}\n              </span>\n              <SidebarBadge {...item.badge} />\n            </>\n          ) : (\n            <span className=\"break-all\">{item.label}</span>\n          )}\n        </AnchorLink>\n      ) : (\n        <a\n          className={navigationListItem()}\n          href={item.href}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          onClick={onRequestClose}\n        >\n          <span className=\"whitespace-normal\">{item.label}</span>\n          {/* This prevents that the icon would be positioned in its own line if the text fills a line entirely */}\n          <span className=\"whitespace-nowrap\">\n            <ExternalLinkIcon className=\"inline -translate-y-0.5\" size={12} />\n          </span>\n        </a>\n      );\n  }\n};\n", "export const scrollIntoViewIfNeeded = (\n  element: Element | null,\n  options: ScrollIntoViewOptions = { block: \"center\" },\n) => {\n  if (!element) return;\n\n  const rect = element.getBoundingClientRect();\n  const isInView =\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <=\n      (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth);\n\n  if (isInView) return;\n\n  element.scrollIntoView(options);\n};\n", "import { useCallback, useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useViewportAnchor } from \"../components/context/ViewportAnchorContext.js\";\nimport { DATA_ANCHOR_ATTR } from \"../components/navigation/SidebarItem.js\";\nimport { scrollIntoViewIfNeeded } from \"./scrollIntoViewIfNeeded.js\";\n\nexport const useScrollToHash = () => {\n  const { setActiveAnchor } = useViewportAnchor();\n\n  const scrollToHash = useCallback(\n    (hash: string) => {\n      const cleanHash = hash.replace(/^#/, \"\");\n\n      // Operation list items might have subdivisions that the sidebar doesn't show.\n      // The subdivisions are separated by a slash so we need to remove everything before the slash to get the sidebar correct item.\n      const linkHash = cleanHash.split(\"/\").at(0)!;\n      const element = document.getElementById(decodeURIComponent(cleanHash));\n\n      const link = document.querySelector(\n        `[${DATA_ANCHOR_ATTR}=\"${linkHash}\"]`,\n      );\n\n      if (element) {\n        element.scrollIntoView();\n        scrollIntoViewIfNeeded(link);\n        // Set the active anchor after the scroll has happened\n        // so the intersection observer doesn't trigger wrong items\n        requestIdleCallback(() => setActiveAnchor(linkHash));\n        return true;\n      }\n\n      // Scroll didn't happen\n      return false;\n    },\n    [setActiveAnchor],\n  );\n\n  return scrollToHash;\n};\n\nexport const useScrollToAnchor = () => {\n  const location = useLocation();\n  const scrollToHash = useScrollToHash();\n  const initialScrolled = useRef(false);\n\n  useEffect(() => {\n    if (!location.hash || !initialScrolled.current) return;\n\n    scrollToHash(location.hash);\n  }, [location.hash, scrollToHash]);\n\n  useEffect(() => {\n    if (!location.hash) {\n      initialScrolled.current = true;\n      return;\n    }\n\n    const observer = new MutationObserver((_, obs) => {\n      if (!scrollToHash(location.hash)) return;\n      initialScrolled.current = true;\n      obs.disconnect();\n    });\n\n    observer.observe(document.body, { childList: true, subtree: true });\n\n    return () => observer.disconnect();\n  }, [location.hash, scrollToHash]);\n};\n", "import { type MouseEvent } from \"react\";\nimport { NavLink, type NavLinkProps, useHref, useLocation } from \"react-router\";\nimport { useScrollToHash } from \"../util/useScrollToAnchor.js\";\n\n/**\n * Link that scrolls to anchor even if the hash is already set in the URL.\n */\nexport const AnchorLink = (props: NavLinkProps) => {\n  const location = useLocation();\n  const scrollToHash = useScrollToHash();\n  const href = useHref(props.to);\n  const [pathname, hash] = href.split(\"#\");\n\n  const handleClick = (event: MouseEvent<HTMLAnchorElement>) => {\n    props.onClick?.(event);\n    if (hash !== location.hash.slice(1) || pathname !== location.pathname)\n      return;\n\n    event.preventDefault();\n    scrollToHash(hash);\n  };\n\n  return <NavLink {...props} onClick={handleClick} />;\n};\n", "import React, { type ReactNode } from \"react\";\nimport { useRegisterAnchorElement } from \"./context/ViewportAnchorContext.js\";\n\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nconst heading = cva(\"group relative\", {\n  variants: {\n    level: {\n      6: \"text-md\",\n      5: \"text-lg\",\n      4: \"text-xl\",\n      3: \"text-xl font-semibold\",\n      2: \"text-2xl font-bold\",\n      1: \"text-4xl font-extrabold\",\n    },\n  },\n  defaultVariants: {\n    level: 1,\n  },\n});\n\nconst getComponent = (level: number) => {\n  switch (level) {\n    case 1:\n      return \"h1\";\n    case 2:\n      return \"h2\";\n    case 3:\n      return \"h3\";\n    case 4:\n      return \"h4\";\n    case 5:\n      return \"h5\";\n    case 6:\n      return \"h6\";\n    default:\n      return \"h1\";\n  }\n};\n\nexport type HeadingProps = React.HTMLAttributes<HTMLHeadingElement> &\n  VariantProps<typeof heading> & {\n    children: ReactNode;\n    className?: string;\n    id?: string;\n    level?: 1 | 2 | 3 | 4 | 5 | 6;\n    registerSidebarAnchor?: boolean;\n  };\n\nexport const Heading = ({\n  level,\n  children,\n  id,\n  className,\n  registerSidebarAnchor,\n}: HeadingProps) => {\n  const Component = getComponent(level ?? 1);\n  const { ref } = useRegisterAnchorElement();\n\n  return (\n    <Component\n      className={heading({ className, level })}\n      ref={registerSidebarAnchor ? ref : undefined}\n      id={id}\n    >\n      {id && (\n        <a\n          href={`#${id}`}\n          className=\"before:content-['#'] no-underline absolute text-primary -left-[0.8em] pr-2.5 opacity-0 group-hover:opacity-50 hover:!opacity-100 transition-opacity duration-200\"\n          aria-label={`Link to ${id}`}\n        >\n          {/* Zero width space */}\n          &#8203;\n        </a>\n      )}\n      {children}\n    </Component>\n  );\n};\n", "import { Slot, type SlotProps } from \"@radix-ui/react-slot\";\n\nexport const SelectOnClick = ({\n  asChild,\n  onClick,\n  enabled = true,\n  ...props\n}: {\n  asChild?: boolean;\n  enabled?: boolean;\n} & SlotProps) => {\n  const Component = asChild ? Slot : \"span\";\n\n  return (\n    <Component\n      onClick={(e) => {\n        if (enabled) {\n          const range = document.createRange();\n          range.selectNodeContents(e.currentTarget);\n          const selection = window.getSelection();\n          selection?.removeAllRanges();\n          selection?.addRange(range);\n        }\n        onClick?.(e);\n      }}\n      {...props}\n    />\n  );\n};\n", "import type { ReactNode } from \"react\";\nimport { SelectOnClick } from \"../plugins/openapi/components/SelectOnClick.js\";\nimport { cn } from \"../util/cn.js\";\n\nexport const InlineCode = ({\n  className,\n  children,\n  selectOnClick,\n  onClick,\n}: {\n  className?: string;\n  children: ReactNode;\n  selectOnClick?: boolean;\n  onClick?: () => void;\n}) => (\n  <SelectOnClick asChild enabled={selectOnClick} onClick={onClick}>\n    <code\n      className={cn(\n        \"font-mono border p-1 py-0.5 rounded bg-border/50 dark:bg-border/70 [overflow-wrap:anywhere]\",\n        className,\n      )}\n    >\n      {children}\n    </code>\n  </SelectOnClick>\n);\n", "import { type MDXComponents } from \"mdx/types.js\";\nimport { AnchorLink } from \"../components/AnchorLink.js\";\nimport { Heading } from \"../components/Heading.js\";\nimport { InlineCode } from \"../components/InlineCode.js\";\nimport { Button } from \"../ui/Button.js\";\nimport { Callout } from \"../ui/Callout.js\";\nimport { Stepper } from \"../ui/Stepper.js\";\nimport { SyntaxHighlight } from \"../ui/SyntaxHighlight.js\";\n\nexport type MdxComponentsType = Readonly<MDXComponents> | null | undefined;\n\nexport const MdxComponents = {\n  img: ({ node, ...props }) => {\n    if (/\\.(mp4|webm|mov|avi)$/.test(props.src ?? \"\")) {\n      return <video src={props.src} controls playsInline autoPlay loop />;\n    }\n    return <img {...props} className=\"rounded-md\" />;\n  },\n  h1: ({ children, id }) => (\n    <Heading level={1} id={id}>\n      {children}\n    </Heading>\n  ),\n  h2: ({ children, id }) => (\n    <Heading level={2} id={id}>\n      {children}\n    </Heading>\n  ),\n  h3: ({ children, id }) => (\n    <Heading level={3} id={id}>\n      {children}\n    </Heading>\n  ),\n  h4: ({ children, id }) => (\n    <Heading level={4} id={id}>\n      {children}\n    </Heading>\n  ),\n  h5: ({ children, id }) => (\n    <Heading level={5} id={id}>\n      {children}\n    </Heading>\n  ),\n  h6: ({ children, id }) => (\n    <Heading level={6} id={id}>\n      {children}\n    </Heading>\n  ),\n  a: ({ href, node, ...props }) =>\n    href && !href.startsWith(\"http\") ? (\n      <AnchorLink to={href} relative=\"path\" {...props} />\n    ) : (\n      <a href={href} target=\"_blank\" {...props} rel=\"noreferrer\" />\n    ),\n  Button,\n  Callout,\n  Stepper,\n  SyntaxHighlight,\n  tip: (props) => <Callout type=\"tip\" {...props} />,\n  info: (props) => <Callout type=\"info\" {...props} />,\n  note: (props) => <Callout type=\"note\" {...props} />,\n  caution: (props) => <Callout type=\"caution\" {...props} />,\n  warning: (props) => <Callout type=\"caution\" {...props} />,\n  danger: (props) => <Callout type=\"danger\" {...props} />,\n  pre: ({ children }) => <>{children}</>,\n  code: ({ className, children, ...props }) => {\n    // `inline` provided by the rehype plugin, as react-markdown removed support for that\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const { inline, title } = props as Record<string, unknown>;\n\n    if (inline === true || inline === \"true\") {\n      return <InlineCode className={className}>{children}</InlineCode>;\n    }\n\n    const match = className?.match(/language?-(\\w+)/);\n\n    return (\n      <SyntaxHighlight\n        language={match?.[1]}\n        className=\"rounded-xl p-4 border dark:!bg-foreground/10 dark:border-transparent\"\n        showLanguageIndicator\n        code={String(children).trim()}\n        title={typeof title === \"string\" ? title : undefined}\n      />\n    );\n  },\n} satisfies MdxComponentsType;\n", "/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n", "/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n", "/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n", "/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n", "/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n", "/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n", "let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n", "/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n", "/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n", "import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n", "/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n", "import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n", "import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n", "import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n", "import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n", "import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n", "/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n", "/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n", "// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n", "// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n/**\n * Checks whether to skip camelCase.\n */\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\n/**\n * Replacer that capitalizes first character.\n */\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nvar trimHyphen = function (match, prefix) { return \"\".concat(prefix, \"-\"); };\n/**\n * CamelCases a CSS property.\n */\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (options.reactCompat) {\n        // `-ms` vendor prefix should not be capitalized\n        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    else {\n        // for non-React, remove first hyphen so vendor prefix is not capitalized\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n//# sourceMappingURL=utilities.js.map", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar style_to_object_1 = __importDefault(require(\"style-to-object\"));\nvar utilities_1 = require(\"./utilities\");\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style, options) {\n    var output = {};\n    if (!style || typeof style !== 'string') {\n        return output;\n    }\n    (0, style_to_object_1.default)(style, function (property, value) {\n        // skip CSS comment\n        if (property && value) {\n            output[(0, utilities_1.camelCase)(property, options)] = value;\n        }\n    });\n    return output;\n}\nStyleToJS.default = StyleToJS;\nmodule.exports = StyleToJS;\n//# sourceMappingURL=index.js.map", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n", "/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n", "/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n", "/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = typeof document !== 'undefined' && document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n", "/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n", "/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}", "/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n", "/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n", "/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n", "/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n", "/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n", "import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n", "/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n", "/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n", "/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n", "export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n", "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n", "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n", "import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n", "/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n", "/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n", "/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * * if a processor is given,\n *   runs the (rehype) plugins used on it with a hast tree,\n *   then discards the result (*bridge mode*)\n * * otherwise,\n *   returns a hast tree,\n *   the plugins used after `remarkRehype` are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**:\n * > It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * * `rehype-stringify` also has an option `allowDangerousHtml` which will\n *   output the raw HTML.\n *   This is typically discouraged as noted by the option name but is useful if\n *   you completely trust authors\n * * `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *   into standard hast nodes (`element`, `text`, etc);\n *   this is a heavy task as it needs a full HTML parser,\n *   but it is the only way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark,\n * which we follow by default.\n * They are supported by GitHub,\n * so footnotes can be enabled in markdown with `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes,\n * which is hidden for sighted users but shown to assistive technology.\n * When your page is not in English,\n * you must define translated values.\n *\n * Back references use ARIA attributes,\n * but the section label itself uses a heading that is hidden with an\n * `sr-only` class.\n * To show it to sighted users,\n * define different attributes in `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem,\n * as it links footnote calls to footnote definitions on the page through `id`\n * attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * * when the node has a `value`\n *   (and doesn’t have `data.hName`, `data.hProperties`, or `data.hChildren`,\n *   see later),\n *   create a hast `text` node\n * * otherwise,\n *   create a `<div>` element (which could be changed with `data.hName`),\n *   with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @overload\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge | TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given,\n *   configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n", "/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n", "'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n", "export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n", "// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n", "// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n", "// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n", "/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n", "import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n", "/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n", "export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n", "/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n", "/* eslint-disable @typescript-eslint/prefer-nullish-coalescing */\n/* eslint-disable @typescript-eslint/no-unnecessary-condition */\n\n/**\n * This is a fork of `react-markdown` converted to typescript.\n * The reason we fork it is because react-markdown is comptaible with\n * unified 11, but references the unified 10 and related packages causing\n * type errors and a bunch of extra imports\n *\n * Source: https://github.com/remarkjs/react-markdown/blob/main/index.js\n */\n\nimport { unreachable } from \"devlop\";\nimport type { Element, ElementContent, Nodes, Parents } from \"hast\";\nimport {\n  Components as JsxRuntimeComponents,\n  toJsxRuntime,\n} from \"hast-util-to-jsx-runtime\";\nimport { urlAttributes } from \"html-url-attributes\";\nimport { ReactElement } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport remarkParse from \"remark-parse\";\nimport remarkRehype, { Options as RemarkRehypeOptions } from \"remark-rehype\";\nimport { PluggableList, unified } from \"unified\";\nimport { visit } from \"unist-util-visit\";\nimport { VFile } from \"vfile\";\n\nconst changelog =\n  \"https://github.com/remarkjs/react-markdown/blob/main/changelog.md\";\n\nconst emptyPlugins: PluggableList = [];\nconst emptyRemarkRehypeOptions: Readonly<RemarkRehypeOptions> = {\n  allowDangerousHtml: true,\n};\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i;\n\ninterface Deprecation {\n  from: string;\n  id: string;\n  to?: keyof Options;\n}\n\ninterface AllowElement {\n  (\n    element: Readonly<Element>,\n    index: number,\n    parent: Readonly<Parents> | undefined,\n  ): boolean | null | undefined;\n}\n\ninterface UrlTransform {\n  (\n    url: string,\n    key: string,\n    node: Readonly<Element>,\n  ): string | null | undefined;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\ninterface Components extends Partial<JsxRuntimeComponents> {}\n\ninterface Options {\n  allowElement?: AllowElement | null;\n  allowedElements?: ReadonlyArray<string> | null;\n  children?: string | null;\n  className?: string | null;\n  components?: Components | null;\n  disallowedElements?: ReadonlyArray<string> | null;\n  rehypePlugins?: PluggableList | null;\n  remarkPlugins?: PluggableList | null;\n  remarkRehypeOptions?: Readonly<RemarkRehypeOptions> | null;\n  skipHtml?: boolean | null;\n  unwrapDisallowed?: boolean | null;\n  urlTransform?: UrlTransform | null;\n}\n\nconst deprecations: ReadonlyArray<Readonly<Deprecation>> = [\n  { from: \"astPlugins\", id: \"remove-buggy-html-in-markdown-parser\" },\n  { from: \"allowDangerousHtml\", id: \"remove-buggy-html-in-markdown-parser\" },\n  {\n    from: \"allowNode\",\n    id: \"replace-allownode-allowedtypes-and-disallowedtypes\",\n    to: \"allowElement\",\n  },\n  {\n    from: \"allowedTypes\",\n    id: \"replace-allownode-allowedtypes-and-disallowedtypes\",\n    to: \"allowedElements\",\n  },\n  {\n    from: \"disallowedTypes\",\n    id: \"replace-allownode-allowedtypes-and-disallowedtypes\",\n    to: \"disallowedElements\",\n  },\n  { from: \"escapeHtml\", id: \"remove-buggy-html-in-markdown-parser\" },\n  { from: \"includeElementIndex\", id: \"#remove-includeelementindex\" },\n  {\n    from: \"includeNodeIndex\",\n    id: \"change-includenodeindex-to-includeelementindex\",\n  },\n  { from: \"linkTarget\", id: \"remove-linktarget\" },\n  {\n    from: \"plugins\",\n    id: \"change-plugins-to-remarkplugins\",\n    to: \"remarkPlugins\",\n  },\n  { from: \"rawSourcePos\", id: \"#remove-rawsourcepos\" },\n  { from: \"renderers\", id: \"change-renderers-to-components\", to: \"components\" },\n  { from: \"source\", id: \"change-source-to-children\", to: \"children\" },\n  { from: \"sourcePos\", id: \"#remove-sourcepos\" },\n  { from: \"transformImageUri\", id: \"#add-urltransform\", to: \"urlTransform\" },\n  { from: \"transformLinkUri\", id: \"#add-urltransform\", to: \"urlTransform\" },\n];\n\nexport function ReactMarkdown(options: Readonly<Options>): ReactElement {\n  const allowedElements = options.allowedElements;\n  const allowElement = options.allowElement;\n  const children = options.children || \"\";\n  const className = options.className;\n  const components = options.components;\n  const disallowedElements = options.disallowedElements;\n  const rehypePlugins = options.rehypePlugins || emptyPlugins;\n  const remarkPlugins = options.remarkPlugins || emptyPlugins;\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? { ...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions }\n    : emptyRemarkRehypeOptions;\n  const skipHtml = options.skipHtml;\n  const unwrapDisallowed = options.unwrapDisallowed;\n  const urlTransform = options.urlTransform || defaultUrlTransform;\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins);\n\n  const file = new VFile();\n\n  if (typeof children === \"string\") {\n    file.value = children;\n  } else {\n    unreachable(\n      `Unexpected value '${children}' for 'children' prop, expected 'string'`,\n    );\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      \"Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other\",\n    );\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.prototype.hasOwnProperty.call(options, deprecation.from)) {\n      unreachable(\n        `Unexpected '${deprecation.from}' prop, ` +\n          (deprecation.to ? `use '${deprecation.to}' instead` : \"remove it\") +\n          ` (see <${changelog}#${deprecation.id}> for more info)`,\n      );\n    }\n  }\n\n  const mdastTree = processor.parse(file);\n  let hastTree: Nodes = processor.runSync(mdastTree, file);\n\n  if (className) {\n    hastTree = {\n      type: \"element\",\n      tagName: \"div\",\n      properties: { className },\n      children:\n        hastTree.type === \"root\"\n          ? (hastTree.children as ElementContent[])\n          : [hastTree],\n    };\n  }\n\n  // Nodes type is slightly off, different versions of `hast` have different types\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  visit(hastTree, transform);\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true,\n  });\n\n  function transform(\n    node: Nodes,\n    index: number | null,\n    parent: Parents | undefined,\n  ): number | void {\n    if (node.type === \"raw\" && parent && typeof index === \"number\") {\n      if (skipHtml) {\n        parent.children.splice(index, 1);\n      } else {\n        parent.children[index] = { type: \"text\", value: node.value };\n      }\n      return index;\n    }\n\n    if (node.type === \"element\") {\n      for (const key in urlAttributes) {\n        if (\n          Object.prototype.hasOwnProperty.call(urlAttributes, key) &&\n          Object.prototype.hasOwnProperty.call(node.properties, key)\n        ) {\n          const value = node.properties[key];\n          const test = urlAttributes[key];\n          if (\n            test === null ||\n            test === undefined ||\n            test.includes(node.tagName)\n          ) {\n            node.properties[key] = urlTransform(String(value || \"\"), key, node);\n          }\n        }\n      }\n\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false;\n\n      if (!remove && allowElement && typeof index === \"number\") {\n        remove = !allowElement(node, index, parent);\n      }\n\n      if (remove && parent && typeof index === \"number\") {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children);\n        } else {\n          parent.children.splice(index, 1);\n        }\n        return index;\n      }\n    }\n  }\n}\n\nfunction defaultUrlTransform(value: string): string {\n  const colon = value.indexOf(\":\");\n  const questionMark = value.indexOf(\"?\");\n  const numberSign = value.indexOf(\"#\");\n  const slash = value.indexOf(\"/\");\n\n  if (\n    colon < 0 ||\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value;\n  }\n\n  return \"\";\n}\n", "import { memo } from \"react\";\nimport rehypeRaw from \"rehype-raw\";\nimport remarkGfm from \"remark-gfm\";\nimport { visit } from \"unist-util-visit\";\nimport { MdxComponents } from \"../util/MdxComponents.js\";\nimport { ReactMarkdown } from \"./ReactMarkdown.js\";\n\n// same as in packages/dev-portal/framework/vite.ts\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst rehypeCodeBlockPlugin = () => (tree: any) => {\n  visit(tree, \"element\", (node, _index, parent) => {\n    if (node.tagName === \"code\") {\n      node.properties.inline = String(parent?.tagName !== \"pre\");\n    }\n  });\n};\n\nconst remarkPlugins = [remarkGfm];\nconst rehypePlugins = [rehypeCodeBlockPlugin, rehypeRaw];\n\n// other styles are defined in main.css .prose\nexport const ProseClasses = \"prose dark:prose-invert prose-neutral\";\n\nexport const Markdown = memo(\n  ({ content, className }: { content: string; className?: string }) => (\n    <ReactMarkdown\n      remarkPlugins={remarkPlugins}\n      rehypePlugins={rehypePlugins}\n      components={MdxComponents}\n      className={className}\n    >\n      {content}\n    </ReactMarkdown>\n  ),\n);\n\nMarkdown.displayName = \"Markdown\";\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAMA,IAAkB,CAAC;EAC9B,UAAAC;EACA,WAAAC;AACF,MAAA,GAAA,IAKK,OAAI,EAAA,WAAWC,EAAG,2CAA2CD,EAAS,GACpE,UAAAD,GAAAA,CACH;A;;;;;ACVJ,IAAMG,IAAU,CAAC,EAAE,UAAAC,GAAAA,MACTC,GAAAA,IAAA,OAAA,EAAI,WAAU,WAAW,UAAAD,GAAS,CAAA;;;ACJrC,IAAME,KAAa;AAAnB,IACMC,KAAa;AADnB,IAEMC,KAAa;AAFnB,IAGMC,KAAa;AAHnB,IAIMC,KAAa;AAJnB,IAKMC,KAAa;AALnB,IAMMC,KAAa;AANnB,IAOMC,KAAa;AAPnB,IAQMC,KAAa;AARnB,IASMC,KAAa;AATnB,ICODC,KAAM,OAAO,QAAS,WAAW,OAAO;ADPvC,ICSDC,KAAe,CAACC,IAAGC,OAAM;AAC7B,QAAMC,IAAK,CAACC,GAAKC,OACfJ,GAAE,IAAII,GAAOD,CAAG,GACTA,IAGHE,KAAS,CAAAD,MAAS;AACtB,QAAIJ,GAAE,IAAII,CAAK;AACb,aAAOJ,GAAE,IAAII,CAAK;AAEpB,UAAM,CAACE,GAAMC,CAAK,IAAIN,GAAEG,CAAK;AAC7B,YAAQE,GAAI;MACV,KAAKjB;MACL,KAAKD;AACH,eAAOc,EAAGK,GAAOH,CAAK;MACxB,KAAKd,IAAO;AACV,cAAMkB,IAAMN,EAAG,CAAE,GAAEE,CAAK;AACxB,mBAAWA,MAASG;AAClBC,YAAI,KAAKH,GAAOD,EAAK,CAAC;AACxB,eAAOI;MACf;MACM,KAAKjB,IAAQ;AACX,cAAMkB,IAASP,EAAG,CAAE,GAAEE,CAAK;AAC3B,mBAAW,CAACM,IAAKN,CAAK,KAAKG;AACzBE,YAAOJ,GAAOK,EAAG,CAAC,IAAIL,GAAOD,CAAK;AACpC,eAAOK;MACf;MACM,KAAKjB;AACH,eAAOU,EAAG,IAAI,KAAKK,CAAK,GAAGH,CAAK;MAClC,KAAKX,IAAQ;AACX,cAAM,EAAC,QAAAkB,GAAQ,OAAAC,GAAK,IAAIL;AACxB,eAAOL,EAAG,IAAI,OAAOS,GAAQC,EAAK,GAAGR,CAAK;MAClD;MACM,KAAKV,IAAK;AACR,cAAMmB,IAAMX,EAAG,oBAAI,IAAA,GAAKE,CAAK;AAC7B,mBAAW,CAACM,IAAKN,CAAK,KAAKG;AACzBM,YAAI,IAAIR,GAAOK,EAAG,GAAGL,GAAOD,CAAK,CAAC;AACpC,eAAOS;MACf;MACM,KAAKlB,IAAK;AACR,cAAMmB,IAAMZ,EAAG,oBAAI,IAAA,GAAKE,CAAK;AAC7B,mBAAWA,MAASG;AAClBO,YAAI,IAAIT,GAAOD,EAAK,CAAC;AACvB,eAAOU;MACf;MACM,KAAKlB,IAAO;AACV,cAAM,EAAC,MAAAmB,GAAM,SAAAC,GAAO,IAAIT;AACxB,eAAOL,EAAG,IAAIJ,GAAIiB,CAAI,EAAEC,EAAO,GAAGZ,CAAK;MAC/C;MACM,KAAKP;AACH,eAAOK,EAAG,OAAOK,CAAK,GAAGH,CAAK;MAChC,KAAK;AACH,eAAOF,EAAG,OAAO,OAAOK,CAAK,CAAC,GAAGH,CAAK;IAC9C;AACI,WAAOF,EAAG,IAAIJ,GAAIQ,CAAI,EAAEC,CAAK,GAAGH,CAAK;EACtC;AAED,SAAOC;AACT;ADnEO,IC8EMY,KAAc,CAAAC,OAAcnB,GAAa,oBAAI,IAAA,GAAKmB,EAAU,EAAE,CAAC;AD9ErE,IEODC,KAAQ;AFPP,IESD,EAACC,UAAAA,GAAQ,IAAI,CAAE;AFTd,IEUD,EAACC,MAAAA,GAAI,IAAI;AFVR,IEYDC,KAAS,CAAAf,OAAS;AACtB,QAAMD,KAAO,OAAOC;AACpB,MAAID,OAAS,YAAY,CAACC;AACxB,WAAO,CAAClB,IAAWiB,EAAI;AAEzB,QAAMiB,IAAWH,GAAS,KAAKb,EAAK,EAAE,MAAM,GAAG,EAAE;AACjD,UAAQgB,GAAQ;IACd,KAAK;AACH,aAAO,CAACjC,IAAO6B,EAAK;IACtB,KAAK;AACH,aAAO,CAAC5B,IAAQ4B,EAAK;IACvB,KAAK;AACH,aAAO,CAAC3B,IAAM2B,EAAK;IACrB,KAAK;AACH,aAAO,CAAC1B,IAAQ0B,EAAK;IACvB,KAAK;AACH,aAAO,CAACzB,IAAKyB,EAAK;IACpB,KAAK;AACH,aAAO,CAACxB,IAAKwB,EAAK;EACxB;AAEE,SAAII,EAAS,SAAS,OAAO,IACpB,CAACjC,IAAOiC,CAAQ,IAErBA,EAAS,SAAS,OAAO,IACpB,CAAC3B,IAAO2B,CAAQ,IAElB,CAAChC,IAAQgC,CAAQ;AAC1B;AFxCO,IE0CDC,MAAa,CAAC,CAACC,IAAMnB,EAAI,MAC7BmB,OAASpC,OACRiB,OAAS,cAAcA,OAAS;AF5C5B,IE+CDoB,KAAa,CAACC,IAAQC,IAAM5B,GAAGC,OAAM;AAEzC,QAAMC,IAAK,CAACC,GAAKI,MAAU;AACzB,UAAMH,KAAQH,GAAE,KAAKE,CAAG,IAAI;AAC5B,WAAAH,EAAE,IAAIO,GAAOH,EAAK,GACXA;EACR,GAEKyB,IAAO,CAAAtB,MAAS;AACpB,QAAIP,EAAE,IAAIO,CAAK;AACb,aAAOP,EAAE,IAAIO,CAAK;AAEpB,QAAI,CAACkB,GAAMnB,EAAI,IAAIgB,GAAOf,CAAK;AAC/B,YAAQkB,GAAI;MACV,KAAKpC,IAAW;AACd,YAAIyC,IAAQvB;AACZ,gBAAQD,IAAI;UACV,KAAK;AACHmB,gBAAO5B,IACPiC,IAAQvB,EAAM,SAAU;AACxB;UACF,KAAK;UACL,KAAK;AACH,gBAAIoB;AACF,oBAAM,IAAI,UAAU,yBAAyBrB,EAAI;AACnDwB,gBAAQ;AACR;UACF,KAAK;AACH,mBAAO5B,EAAG,CAACd,EAAI,GAAGmB,CAAK;QACnC;AACQ,eAAOL,EAAG,CAACuB,GAAMK,CAAK,GAAGvB,CAAK;MACtC;MACM,KAAKjB,IAAO;AACV,YAAIgB;AACF,iBAAOJ,EAAG,CAACI,IAAM,CAAC,GAAGC,CAAK,CAAC,GAAGA,CAAK;AAErC,cAAMC,IAAM,CAAE,GACRJ,KAAQF,EAAG,CAACuB,GAAMjB,CAAG,GAAGD,CAAK;AACnC,mBAAWuB,MAASvB;AAClBC,YAAI,KAAKqB,EAAKC,EAAK,CAAC;AACtB,eAAO1B;MACf;MACM,KAAKb,IAAQ;AACX,YAAIe;AACF,kBAAQA,IAAI;YACV,KAAK;AACH,qBAAOJ,EAAG,CAACI,IAAMC,EAAM,SAAQ,CAAE,GAAGA,CAAK;YAC3C,KAAK;YACL,KAAK;YACL,KAAK;AACH,qBAAOL,EAAG,CAACI,IAAMC,EAAM,QAAO,CAAE,GAAGA,CAAK;UACtD;AAGQ,YAAIqB,MAAS,YAAYrB;AACvB,iBAAOsB,EAAKtB,EAAM,OAAA,CAAQ;AAE5B,cAAMwB,IAAU,CAAE,GACZ3B,KAAQF,EAAG,CAACuB,GAAMM,CAAO,GAAGxB,CAAK;AACvC,mBAAWG,MAAOW,GAAKd,CAAK;AAC1B,WAAIoB,MAAU,CAACH,IAAWF,GAAOf,EAAMG,EAAG,CAAC,CAAC,MAC1CqB,EAAQ,KAAK,CAACF,EAAKnB,EAAG,GAAGmB,EAAKtB,EAAMG,EAAG,CAAC,CAAC,CAAC;AAE9C,eAAON;MACf;MACM,KAAKZ;AACH,eAAOU,EAAG,CAACuB,GAAMlB,EAAM,YAAW,CAAE,GAAGA,CAAK;MAC9C,KAAKd,IAAQ;AACX,cAAM,EAAC,QAAAkB,GAAQ,OAAAC,GAAK,IAAIL;AACxB,eAAOL,EAAG,CAACuB,GAAM,EAAC,QAAAd,GAAQ,OAAAC,GAAK,CAAC,GAAGL,CAAK;MAChD;MACM,KAAKb,IAAK;AACR,cAAMqC,IAAU,CAAE,GACZ3B,KAAQF,EAAG,CAACuB,GAAMM,CAAO,GAAGxB,CAAK;AACvC,mBAAW,CAACG,IAAKoB,CAAK,KAAKvB;AACzB,WAAIoB,MAAU,EAAEH,IAAWF,GAAOZ,EAAG,CAAC,KAAKc,IAAWF,GAAOQ,CAAK,CAAC,OACjEC,EAAQ,KAAK,CAACF,EAAKnB,EAAG,GAAGmB,EAAKC,CAAK,CAAC,CAAC;AAEzC,eAAO1B;MACf;MACM,KAAKT,IAAK;AACR,cAAMoC,IAAU,CAAE,GACZ3B,KAAQF,EAAG,CAACuB,GAAMM,CAAO,GAAGxB,CAAK;AACvC,mBAAWuB,MAASvB;AAClB,WAAIoB,MAAU,CAACH,IAAWF,GAAOQ,EAAK,CAAC,MACrCC,EAAQ,KAAKF,EAAKC,EAAK,CAAC;AAE5B,eAAO1B;MACf;IACA;AAEI,UAAM,EAAC,SAAAY,EAAO,IAAIT;AAClB,WAAOL,EAAG,CAACuB,GAAM,EAAC,MAAMnB,IAAM,SAAAU,EAAO,CAAC,GAAGT,CAAK;EAC/C;AAED,SAAOsB;AACT;AF/IO,IE6JOG,KAAY,CAACzB,IAAO,EAAC,MAAAqB,IAAM,OAAAK,EAAK,IAAI,CAAA,MAAO;AACvD,QAAMhC,KAAI,CAAE;AACZ,SAAOyB,GAAW,EAAEE,MAAQK,IAAQ,CAAC,CAACL,IAAM,oBAAI,IAAA,GAAK3B,EAAC,EAAEM,EAAK,GAAGN;AAClE;AFhKO,IGeQiC,KAAA,OAAO,mBAAoB;;EAExC,CAACC,IAAKC,OACJA,OAAY,UAAUA,MAAW,WAAWA,MAC1CnB,GAAYe,GAAUG,IAAKC,EAAO,CAAC,IAAI,gBAAgBD,EAAG;IAE9D,CAACA,IAAKC,OAAYnB,GAAYe,GAAUG,IAAKC,EAAO,CAAC;ACfhD,IAAAC,KAAA,MAAa;;;;;;;EAOlB,YAAYC,IAAUC,GAAQC,IAAO;AACnC,SAAK,WAAWF,IAChB,KAAK,SAASC,GACVC,OACF,KAAK,QAAQA;EAEnB;AACA;AAGAC,GAAO,UAAU,WAAW,CAAA;AAE5BA,GAAO,UAAU,SAAS,CAAA;AAE1BA,GAAO,UAAU,QAAQ;ACflB,SAASC,GAAMC,IAAaH,IAAO;AAExC,QAAMF,IAAW,CAAA,GAEXC,KAAS,CAAA;AACf,MAAInC,IAAQ;AAEZ,SAAO,EAAEA,IAAQuC,GAAY;AAC3B,WAAO,OAAOL,GAAUK,GAAYvC,CAAK,EAAE,QAAQ,GACnD,OAAO,OAAOmC,IAAQI,GAAYvC,CAAK,EAAE,MAAM;AAGjD,SAAO,IAAIqC,GAAOH,GAAUC,IAAQC,EAAK;AAC3C;ACrBO,SAASI,GAAUrC,IAAO;AAC/B,SAAOA,GAAM,YAAW;AAC1B;ACNO,IAAAsC,KAAA,MAAW;;;;;;EAMhB,YAAYP,IAAUQ,GAAW;AAE/B,SAAK,WAAWR,IAEhB,KAAK,YAAYQ;EACrB;AACA;AAGAC,GAAK,UAAU,QAAQ;AACvBA,GAAK,UAAU,UAAU;AACzBA,GAAK,UAAU,aAAa;AAC5BA,GAAK,UAAU,oBAAoB;AACnCA,GAAK,UAAU,SAAS;AACxBA,GAAK,UAAU,iBAAiB;AAChCA,GAAK,UAAU,iBAAiB;AAChCA,GAAK,UAAU,wBAAwB;AACvCA,GAAK,UAAU,kBAAkB;AACjCA,GAAK,UAAU,UAAU;ACxBzB,IAAIC,KAAS;AAEN,IAAMC,IAAUC,GAAS;AAAzB,IACMC,KAAaD,GAAS;AAD5B,IAEME,KAAoBF,GAAS;AAFnC,IAGMG,IAASH,GAAS;AAHxB,IAIMI,KAAiBJ,GAAS;AAJhC,IAKMK,KAAiBL,GAAS;AALhC,IAMMM,KAAwBN,GAAS;AAE9C,SAASA,KAAY;AACnB,SAAO,KAAK,EAAEF;AAChB;;;;;;;;;;;ICPMS,KAAS,OAAO,KAAKC,EAAK;SAEzB,cAA0BX,GAAK;;;;;;;;EAQpC,YAAYT,IAAUQ,GAAWa,IAAMnB,GAAO;AAC5C,QAAIpC,IAAQ;AAMZ,QAJA,MAAMkC,IAAUQ,CAAS,GAEzBc,GAAK,MAAM,SAASpB,CAAK,GAErB,OAAOmB,MAAS;AAClB,aAAO,EAAEvD,IAAQqD,GAAO,UAAQ;AAC9B,cAAMI,IAAQJ,GAAOrD,CAAK;AAC1BwD,WAAK,MAAMH,GAAOrD,CAAK,IAAIuD,KAAOD,GAAMG,CAAK,OAAOH,GAAMG,CAAK,CAAC;MACxE;EAEA;AACA;AAEAC,GAAY,UAAU,UAAU;AAOhC,SAASF,GAAKG,IAAQrD,IAAKH,GAAO;AAC5BA,QAEFwD,GAAOrD,EAAG,IAAIH;AAElB;ACzBA,IAAMyD,KAAM,CAAA,EAAG;AAMR,SAASC,GAAOC,IAAY;AAEjC,QAAM5B,KAAW,CAAA,GAEXC,IAAS,CAAA;AAEf,MAAI4B;AAEJ,OAAKA,MAAQD,GAAW;AACtB,QAAIF,GAAI,KAAKE,GAAW,YAAYC,EAAI,GAAG;AACzC,YAAM5D,IAAQ2D,GAAW,WAAWC,EAAI,GAClCC,IAAO,IAAIN;QACfK;QACAD,GAAW,UAAUA,GAAW,cAAc,CAAA,GAAIC,EAAI;QACtD5D;QACA2D,GAAW;MACnB;AAGQA,MAAAA,GAAW,mBACXA,GAAW,gBAAgB,SAASC,EAAI,MAExCC,EAAK,kBAAkB,OAGzB9B,GAAS6B,EAAI,IAAIC,GAEjB7B,EAAOK,GAAUuB,EAAI,CAAC,IAAIA,IAC1B5B,EAAOK,GAAUwB,EAAK,SAAS,CAAC,IAAID;IAC1C;AAGE,SAAO,IAAI1B,GAAOH,IAAUC,GAAQ2B,GAAW,KAAK;AACtD;ACvDO,IAAMG,KAAQJ,GAAO;EAC1B,OAAO;EACP,UAAUhE,IAAGkE,IAAM;AACjB,WAAO,WAAWA,GAAK,MAAM,CAAC,EAAE,YAAW;EAC5C;EACD,YAAY;IACV,cAAc;IACd,cAAc;IACd,WAAW;IACX,WAAW;IACX,WAAW;IACX,YAAY;IACZ,WAAW;EACf;AACA,CAAC;AAdM,ICAMG,KAAML,GAAO;EACxB,OAAO;EACP,UAAUhE,IAAGkE,IAAM;AACjB,WAAO,SAASA,GAAK,MAAM,CAAC,EAAE,YAAW;EAC1C;EACD,YAAY,EAAC,SAAS,MAAM,SAAS,MAAM,UAAU,KAAI;AAC3D,CAAC;ACHM,SAASI,GAAuBC,IAAY1B,IAAW;AAC5D,SAAOA,MAAa0B,KAAaA,GAAW1B,EAAS,IAAIA;AAC3D;ACAO,SAAS2B,GAAyBD,IAAYlC,IAAU;AAC7D,SAAOiC,GAAuBC,IAAYlC,GAAS,YAAa,CAAA;AAClE;ACNO,IAAMoC,KAAQT,GAAO;EAC1B,OAAO;EACP,YAAY,EAAC,YAAY,cAAa;EACtC,WAAWQ;EACX,YAAY,EAAC,OAAO,MAAM,YAAY,KAAI;AAC5C,CAAC;AALM,ICAME,KAAOV,GAAO;EACzB,UAAUhE,IAAGkE,IAAM;AACjB,WAAOA,OAAS,SAASA,KAAO,UAAUA,GAAK,MAAM,CAAC,EAAE,YAAW;EACpE;EACD,YAAY;IACV,sBAAsB;IACtB,YAAYhB;IACZ,kBAAkB;IAClB,UAAUA;IACV,aAAaA;IACb,cAAcE;IACd,cAAcA;IACd,aAAaA;IACb,cAAcC;IACd,aAAa;IACb,iBAAiBA;IACjB,aAAa;IACb,cAAcH;IACd,gBAAgBG;IAChB,kBAAkB;IAClB,cAAcH;IACd,YAAYG;IACZ,aAAaH;IACb,cAAc;IACd,YAAYA;IACZ,aAAa;IACb,kBAAkB;IAClB,WAAW;IACX,gBAAgBG;IAChB,WAAWD;IACX,UAAU;IACV,WAAWF;IACX,eAAeA;IACf,qBAAqBA;IACrB,iBAAiB;IACjB,UAAUG;IACV,iBAAiB;IACjB,cAAcD;IACd,aAAaF;IACb,cAAcA;IACd,cAAc;IACd,cAAcA;IACd,qBAAqBG;IACrB,cAAcD;IACd,cAAcA;IACd,aAAaA;IACb,cAAcF;IACd,aAAaE;IACb,UAAU;IACV,cAAcA;IACd,cAAcA;IACd,cAAcA;IACd,eAAe;IACf,MAAM;EACV;AACA,CAAC;ADvDM,IEQMuB,KAAOX,GAAO;EACzB,OAAO;EACP,YAAY;IACV,eAAe;IACf,WAAW;IACX,SAAS;IACT,WAAW;EACZ;EACD,WAAWQ;EACX,iBAAiB,CAAC,WAAW,YAAY,SAAS,UAAU;EAC5D,YAAY;;IAEV,MAAM;IACN,QAAQlB;IACR,eAAeD;IACf,WAAWA;IACX,QAAQ;IACR,OAAO;IACP,iBAAiBL;IACjB,qBAAqBA;IACrB,gBAAgBA;IAChB,KAAK;IACL,IAAI;IACJ,OAAOA;IACP,gBAAgB;IAChB,cAAcK;IACd,WAAWL;IACX,UAAUA;IACV,UAAUK;IACV,SAAS;IACT,SAAS;IACT,SAASL;IACT,MAAM;IACN,WAAWK;IACX,MAAMD;IACN,SAAS;IACT,SAAS;IACT,iBAAiBF;IACjB,UAAUF;IACV,cAAcK;IACd,QAAQD,IAASE;IACjB,aAAa;IACb,MAAM;IACN,UAAU;IACV,UAAU;IACV,SAASN;IACT,OAAOA;IACP,KAAK;IACL,SAAS;IACT,UAAUA;IACV,UAAUG;IACV,WAAWD;IACX,SAAS;IACT,cAAc;IACd,eAAe;IACf,MAAM;IACN,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,gBAAgBF;IAChB,YAAY;IACZ,SAASK;IACT,QAAQD;IACR,QAAQJ;IACR,MAAMI;IACN,MAAM;IACN,UAAU;IACV,SAASC;IACT,WAAWA;IACX,IAAI;IACJ,YAAY;IACZ,aAAa;IACb,OAAOL;IACP,WAAW;IACX,WAAW;IACX,IAAI;IACJ,OAAOA;IACP,QAAQ;IACR,UAAUK;IACV,SAASA;IACT,WAAWL;IACX,UAAUK;IACV,MAAM;IACN,OAAO;IACP,MAAM;IACN,UAAU;IACV,MAAM;IACN,SAAS;IACT,MAAML;IACN,KAAKI;IACL,UAAU;IACV,KAAK;IACL,WAAWA;IACX,OAAO;IACP,QAAQ;IACR,KAAK;IACL,WAAWA;IACX,UAAUJ;IACV,OAAOA;IACP,MAAM;IACN,OAAO;IACP,UAAUA;IACV,YAAYA;IACZ,SAAS;IACT,cAAc;IACd,YAAY;IACZ,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,gBAAgB;IAChB,QAAQ;IACR,UAAU;IACV,WAAW;IACX,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,SAAS;IACT,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,QAAQ;IACR,aAAa;IACb,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,WAAW;IACX,aAAa;IACb,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,aAAa;IACb,QAAQ;IACR,kBAAkB;IAClB,WAAW;IACX,SAAS;IACT,SAAS;IACT,SAAS;IACT,YAAY;IACZ,cAAc;IACd,SAAS;IACT,WAAW;IACX,WAAW;IACX,YAAY;IACZ,SAAS;IACT,kBAAkB;IAClB,QAAQ;IACR,cAAc;IACd,kBAAkB;IAClB,WAAW;IACX,aAAa;IACb,WAAW;IACX,gBAAgB;IAChB,aAAa;IACb,cAAc;IACd,cAAc;IACd,aAAa;IACb,YAAY;IACZ,aAAa;IACb,WAAW;IACX,WAAW;IACX,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,SAAS;IACT,SAAS;IACT,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,cAAc;IACd,oBAAoB;IACpB,SAAS;IACT,UAAU;IACV,UAAU;IACV,aAAa;IACb,2BAA2B;IAC3B,UAAU;IACV,WAAW;IACX,UAAU;IACV,cAAc;IACd,WAAW;IACX,WAAW;IACX,UAAU;IACV,WAAW;IACX,cAAc;IACd,UAAU;IACV,sBAAsB;IACtB,UAAU;IACV,gBAAgB;IAChB,WAAW;IACX,SAAS;IACT,MAAMA;IACN,SAASI;IACT,SAAS;IACT,MAAMC;IACN,aAAa;IACb,aAAaL;IACb,SAAS;IACT,eAAe;IACf,qBAAqB;IACrB,QAAQ;IACR,SAAS;IACT,UAAUA;IACV,gBAAgB;IAChB,KAAKK;IACL,UAAUL;IACV,UAAUA;IACV,MAAMI;IACN,SAASA;IACT,SAASC;IACT,OAAO;IACP,QAAQL;IACR,UAAUA;IACV,UAAUA;IACV,oBAAoBA;IACpB,0BAA0BA;IAC1B,gBAAgB;IAChB,OAAO;IACP,MAAMI;IACN,OAAO;IACP,MAAM;IACN,MAAMA;IACN,YAAYF;IACZ,KAAK;IACL,QAAQ;IACR,SAAS;IACT,QAAQ;IACR,OAAOE;IACP,MAAM;IACN,OAAO;IACP,UAAUA;IACV,QAAQ;IACR,OAAO;IACP,WAAW;IACX,MAAM;IACN,eAAeJ;IACf,QAAQ;IACR,OAAOE;IACP,OAAOE;IACP,MAAM;IACN,oBAAoB;;;IAIpB,OAAO;;IACP,OAAO;;IACP,SAASC;;IACT,MAAM;;IACN,YAAY;;IACZ,SAAS;;IACT,QAAQD;;IACR,aAAa;;IACb,cAAcA;;IACd,aAAa;;IACb,aAAa;;IACb,MAAM;;IACN,SAAS;;IACT,SAAS;;IACT,OAAO;;IACP,MAAM;;IACN,UAAU;;IACV,UAAU;;IACV,OAAO;;IACP,SAASJ;;IACT,SAASA;;IACT,OAAO;;IACP,MAAM;;IACN,OAAO;;IACP,aAAa;;IACb,QAAQI;;IACR,YAAYA;;IACZ,MAAM;;IACN,UAAU;;IACV,QAAQ;;IACR,cAAcA;;IACd,aAAaA;;IACb,UAAUJ;;IACV,QAAQA;;IACR,SAASA;;IACT,QAAQA;;IACR,QAAQ;;IACR,SAAS;;IACT,QAAQ;;IACR,KAAK;;IACL,aAAaI;;IACb,OAAO;;IACP,QAAQ;;IACR,WAAWF;;IACX,SAAS;;IACT,SAAS;;IACT,MAAM;;IACN,WAAWE;;IACX,WAAW;;IACX,SAAS;;IACT,QAAQ;;IACR,OAAO;;IACP,QAAQA;;;IAGR,mBAAmB;IACnB,aAAa;IACb,UAAU;IACV,yBAAyBJ;IACzB,uBAAuBA;IACvB,QAAQ;IACR,UAAU;IACV,SAASI;IACT,UAAU;IACV,cAAc;EAClB;AACA,CAAC;AF9TM,IGOMwB,KAAMZ,GAAO;EACxB,OAAO;EACP,YAAY;IACV,cAAc;IACd,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,WAAW;IACX,WAAW;IACX,UAAU;IACV,UAAU;IACV,oBAAoB;IACpB,2BAA2B;IAC3B,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,UAAU;IACV,kBAAkB;IAClB,kBAAkB;IAClB,aAAa;IACb,UAAU;IACV,YAAY;IACZ,cAAc;IACd,YAAY;IACZ,UAAU;IACV,gBAAgB;IAChB,aAAa;IACb,WAAW;IACX,aAAa;IACb,YAAY;IACZ,WAAW;IACX,4BAA4B;IAC5B,0BAA0B;IAC1B,UAAU;IACV,WAAW;IACX,cAAc;IACd,cAAc;IACd,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,WAAW;IACX,WAAW;IACX,aAAa;IACb,SAAS;IACT,aAAa;IACb,cAAc;IACd,SAAS;IACT,SAAS;IACT,SAAS;IACT,UAAU;IACV,OAAO;IACP,WAAW;IACX,YAAY;IACZ,SAAS;IACT,YAAY;IACZ,cAAc;IACd,eAAe;IACf,SAAS;IACT,UAAU;IACV,WAAW;IACX,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,SAAS;IACT,QAAQ;IACR,aAAa;IACb,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,WAAW;IACX,aAAa;IACb,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,aAAa;IACb,QAAQ;IACR,kBAAkB;IAClB,WAAW;IACX,OAAO;IACP,SAAS;IACT,SAAS;IACT,SAAS;IACT,WAAW;IACX,YAAY;IACZ,cAAc;IACd,SAAS;IACT,WAAW;IACX,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,cAAc;IACd,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,aAAa;IACb,cAAc;IACd,cAAc;IACd,aAAa;IACb,YAAY;IACZ,aAAa;IACb,WAAW;IACX,cAAc;IACd,WAAW;IACX,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,SAAS;IACT,SAAS;IACT,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,cAAc;IACd,UAAU;IACV,SAAS;IACT,UAAU;IACV,UAAU;IACV,UAAU;IACV,WAAW;IACX,UAAU;IACV,QAAQ;IACR,WAAW;IACX,WAAW;IACX,UAAU;IACV,WAAW;IACX,cAAc;IACd,UAAU;IACV,UAAU;IACV,gBAAgB;IAChB,WAAW;IACX,QAAQ;IACR,kBAAkB;IAClB,mBAAmB;IACnB,YAAY;IACZ,SAAS;IACT,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,wBAAwB;IACxB,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,UAAU;IACV,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,iBAAiB;IACjB,QAAQ;IACR,mBAAmB;IACnB,oBAAoB;IACpB,aAAa;IACb,cAAc;IACd,YAAY;IACZ,aAAa;IACb,UAAU;IACV,cAAc;IACd,eAAe;IACf,cAAc;IACd,UAAU;IACV,aAAa;IACb,aAAa;IACb,aAAa;IACb,aAAa;IACb,SAAS;;IAET,eAAe;IACf,eAAe;EAChB;EACD,WAAWM;EACX,YAAY;IACV,OAAOf;IACP,cAAcH;IACd,YAAY;IACZ,UAAU;IACV,mBAAmB;IACnB,YAAYA;IACZ,WAAWA;IACX,YAAY;IACZ,QAAQA;IACR,eAAe;IACf,eAAe;IACf,SAASA;IACT,WAAW;IACX,eAAe;IACf,eAAe;IACf,aAAa;IACb,MAAM;IACN,OAAO;IACP,MAAMA;IACN,IAAI;IACJ,UAAU;IACV,WAAWA;IACX,WAAWC;IACX,MAAM;IACN,UAAU;IACV,eAAe;IACf,UAAU;IACV,OAAO;IACP,oBAAoB;IACpB,2BAA2B;IAC3B,cAAc;IACd,gBAAgB;IAChB,SAAS;IACT,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;IACb,QAAQ;IACR,IAAI;IACJ,IAAI;IACJ,GAAG;IACH,UAAU;IACV,eAAe;IACf,SAASD;IACT,iBAAiBA;IACjB,WAAW;IACX,SAAS;IACT,KAAK;IACL,SAASA;IACT,kBAAkB;IAClB,UAAUJ;IACV,IAAI;IACJ,IAAI;IACJ,UAAU;IACV,UAAU;IACV,WAAWI;IACX,kBAAkB;IAClB,KAAK;IACL,OAAO;IACP,UAAUA;IACV,2BAA2B;IAC3B,MAAM;IACN,aAAaA;IACb,UAAU;IACV,QAAQ;IACR,WAAW;IACX,aAAa;IACb,YAAY;IACZ,cAAc;IACd,WAAW;IACX,gBAAgB;IAChB,YAAY;IACZ,UAAU;IACV,gBAAgB;IAChB,aAAa;IACb,WAAW;IACX,aAAa;IACb,YAAY;IACZ,QAAQ;IACR,IAAI;IACJ,MAAM;IACN,IAAI;IACJ,IAAI;IACJ,IAAIE;IACJ,IAAIA;IACJ,WAAWA;IACX,4BAA4B;IAC5B,0BAA0B;IAC1B,UAAU;IACV,mBAAmB;IACnB,eAAe;IACf,SAAS;IACT,SAASF;IACT,mBAAmB;IACnB,YAAY;IACZ,QAAQ;IACR,MAAM;IACN,UAAU;IACV,WAAWA;IACX,cAAcA;IACd,cAAcA;IACd,IAAI;IACJ,aAAaA;IACb,gBAAgB;IAChB,mBAAmB;IACnB,IAAI;IACJ,KAAK;IACL,WAAWA;IACX,GAAGA;IACH,IAAIA;IACJ,IAAIA;IACJ,IAAIA;IACJ,IAAIA;IACJ,cAAcG;IACd,kBAAkB;IAClB,WAAW;;IACX,YAAY;;IACZ,UAAU;;IACV,SAAS;IACT,MAAM;IACN,cAAc;IACd,eAAe;IACf,eAAe;IACf,mBAAmBH;IACnB,OAAO;IACP,WAAW;IACX,WAAW;IACX,aAAa;IACb,cAAc;IACd,aAAa;IACb,aAAa;IACb,MAAM;IACN,kBAAkB;IAClB,WAAW;IACX,cAAc;IACd,KAAK;IACL,OAAO;IACP,wBAAwB;IACxB,uBAAuB;IACvB,WAAWA;IACX,WAAW;IACX,QAAQ;IACR,KAAK;IACL,MAAM;IACN,MAAM;IACN,SAAS;IACT,aAAa;IACb,cAAc;IACd,SAAS;IACT,SAAS;IACT,SAAS;IACT,UAAU;IACV,OAAO;IACP,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,cAAc;IACd,eAAe;IACf,SAAS;IACT,UAAU;IACV,WAAW;IACX,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,SAAS;IACT,QAAQ;IACR,aAAa;IACb,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,WAAW;IACX,aAAa;IACb,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,aAAa;IACb,QAAQ;IACR,kBAAkB;IAClB,WAAW;IACX,OAAO;IACP,SAAS;IACT,SAAS;IACT,SAAS;IACT,WAAW;IACX,YAAY;IACZ,cAAc;IACd,SAAS;IACT,WAAW;IACX,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,cAAc;IACd,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,aAAa;IACb,cAAc;IACd,cAAc;IACd,aAAa;IACb,YAAY;IACZ,aAAa;IACb,WAAW;IACX,cAAc;IACd,WAAW;IACX,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,SAAS;IACT,SAAS;IACT,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,cAAc;IACd,UAAU;IACV,SAAS;IACT,UAAU;IACV,UAAU;IACV,UAAU;IACV,WAAW;IACX,UAAU;IACV,QAAQ;IACR,WAAW;IACX,WAAW;IACX,UAAU;IACV,WAAW;IACX,cAAc;IACd,UAAU;IACV,UAAU;IACV,gBAAgB;IAChB,WAAW;IACX,QAAQ;IACR,SAAS;IACT,UAAU;IACV,OAAO;IACP,QAAQ;IACR,aAAa;IACb,QAAQ;IACR,UAAU;IACV,SAAS;IACT,kBAAkBA;IAClB,mBAAmBA;IACnB,YAAY;IACZ,SAAS;IACT,MAAM;IACN,YAAYA;IACZ,qBAAqB;IACrB,kBAAkB;IAClB,cAAc;IACd,OAAO;IACP,MAAMC;IACN,OAAO;IACP,eAAe;IACf,eAAe;IACf,QAAQ;IACR,WAAWD;IACX,WAAWA;IACX,WAAWA;IACX,eAAe;IACf,qBAAqB;IACrB,gBAAgB;IAChB,WAAW;IACX,UAAUG;IACV,GAAG;IACH,QAAQ;IACR,gBAAgB;IAChB,MAAM;IACN,MAAM;IACN,KAAKA;IACL,KAAKA;IACL,iBAAiB;IACjB,aAAa;IACb,WAAW;IACX,oBAAoBA;IACpB,kBAAkBA;IAClB,eAAeA;IACf,iBAAiBA;IACjB,UAAU;IACV,SAAS;IACT,QAAQ;IACR,QAAQ;IACR,IAAI;IACJ,IAAI;IACJ,OAAO;IACP,MAAM;IACN,gBAAgB;IAChB,MAAM;IACN,OAAO;IACP,cAAc;IACd,kBAAkBH;IAClB,kBAAkBA;IAClB,cAAc;IACd,SAAS;IACT,aAAa;IACb,cAAc;IACd,OAAO;IACP,OAAO;IACP,aAAa;IACb,WAAW;IACX,aAAa;IACb,uBAAuBA;IACvB,wBAAwBA;IACxB,QAAQ;IACR,QAAQ;IACR,iBAAiBG;IACjB,kBAAkB;IAClB,eAAe;IACf,gBAAgB;IAChB,kBAAkBH;IAClB,eAAeA;IACf,aAAa;IACb,OAAO;IACP,cAAcA;IACd,cAAc;IACd,qBAAqB;IACrB,YAAY;IACZ,eAAe;IACf,sBAAsB;IACtB,gBAAgBG;IAChB,UAAUH;IACV,aAAa;IACb,QAAQ;IACR,SAASA;IACT,SAASA;IACT,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,eAAe;IACf,OAAO;IACP,mBAAmB;IACnB,MAAM;IACN,QAAQG;IACR,IAAI;IACJ,WAAW;IACX,iBAAiB;IACjB,IAAI;IACJ,IAAI;IACJ,mBAAmBH;IACnB,oBAAoBA;IACpB,SAAS;IACT,aAAa;IACb,cAAc;IACd,YAAYA;IACZ,QAAQ;IACR,aAAaA;IACb,eAAeA;IACf,cAAc;IACd,UAAUA;IACV,cAAcA;IACd,SAAS;IACT,UAAUA;IACV,aAAaA;IACb,aAAaA;IACb,SAAS;IACT,YAAY;IACZ,YAAY;IACZ,OAAO;IACP,QAAQ;IACR,aAAa;IACb,aAAa;IACb,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,kBAAkB;IAClB,SAASA;IACT,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,kBAAkB;IAClB,GAAG;IACH,YAAY;EAChB;AACA,CAAC;AHnjBM,IIKDyB,KAAQ;AJLP,IIMDC,KAAO;AJNN,IIODC,KAAM;AAOL,SAASC,GAAKC,IAAQ3E,IAAO;AAClC,QAAMgC,IAASK,GAAUrC,EAAK;AAC9B,MAAI4D,KAAO5D,IACP4E,IAAOpC;AAEX,MAAIR,KAAU2C,GAAO;AACnB,WAAOA,GAAO,SAASA,GAAO,OAAO3C,CAAM,CAAC;AAG9C,MAAIA,EAAO,SAAS,KAAKA,EAAO,MAAM,GAAG,CAAC,MAAM,UAAUuC,GAAM,KAAKvE,EAAK,GAAG;AAE3E,QAAIA,GAAM,OAAO,CAAC,MAAM,KAAK;AAE3B,YAAM6E,IAAO7E,GAAM,MAAM,CAAC,EAAE,QAAQwE,IAAMM,EAAS;AACnDlB,MAAAA,KAAO,SAASiB,EAAK,OAAO,CAAC,EAAE,YAAa,IAAGA,EAAK,MAAM,CAAC;IACjE,OAAW;AAEL,YAAMA,IAAO7E,GAAM,MAAM,CAAC;AAE1B,UAAI,CAACwE,GAAK,KAAKK,CAAI,GAAG;AACpB,YAAIE,IAASF,EAAK,QAAQJ,IAAKO,EAAK;AAEhCD,UAAO,OAAO,CAAC,MAAM,QACvBA,IAAS,MAAMA,IAGjB/E,KAAQ,SAAS+E;MACzB;IACA;AAEIH,QAAOrB;EACX;AAEE,SAAO,IAAIqB,EAAKhB,IAAM5D,EAAK;AAC7B;AAMA,SAASgF,GAAMC,IAAI;AACjB,SAAO,MAAMA,GAAG,YAAW;AAC7B;AAMA,SAASH,GAAUG,IAAI;AACrB,SAAOA,GAAG,OAAO,CAAC,EAAE,YAAW;AACjC;ACnDO,IAAMZ,KAAOlC,GAAM,CAAC4B,IAAKD,IAAOK,IAAOC,IAAMc,EAAQ,GAAG,MAAM;AAA9D,IACMZ,KAAMnC,GAAM,CAAC4B,IAAKD,IAAOK,IAAOC,IAAMe,EAAO,GAAG,KAAK;ACK3D,SAASC,GAAMpF,IAAO;AAE3B,QAAMqF,KAAS,CAAA,GACTC,IAAQ,OAAOtF,MAAS,EAAE;AAChC,MAAIH,KAAQyF,EAAM,QAAQ,GAAG,GACzBC,IAAQ,GAERC,IAAM;AAEV,SAAO,CAACA,KAAK;AACP3F,IAAAA,OAAU,OACZA,KAAQyF,EAAM,QACdE,IAAM;AAGR,UAAMC,IAAQH,EAAM,MAAMC,GAAO1F,EAAK,EAAE,KAAI;AAE5C,KAAI4F,KAAS,CAACD,MACZH,GAAO,KAAKI,CAAK,GAGnBF,IAAQ1F,KAAQ,GAChBA,KAAQyF,EAAM,QAAQ,KAAKC,CAAK;EACpC;AAEE,SAAOF;AACT;AAYO,SAASK,GAAUlC,IAAQ3B,IAAS;AACzC,QAAM8D,IAAsB,CAAA;AAK5B,UAFcnC,GAAOA,GAAO,SAAS,CAAC,MAAM,KAAK,CAAC,GAAGA,IAAQ,EAAE,IAAIA,IAGhE;KACEmC,EAAS,WAAW,MAAM,MACzB,OACCA,EAAS,YAAY,QAAQ,KAAK;EAC3C,EACK,KAAI;AACT;ACjDA,IAAMC,KAAS;AAoBR,SAASC,GAAcC,IAAUC,IAAgB;AACtD,QAAM/F,IAAQ8F,MAAY,IAEpBE,KAAQ,CAAA;AACd,MAAIT,IAAQ,GAERU,GAEAC;AAEJ,SAAOX,IAAQvF,EAAM,UAAQ;AAC3B4F,OAAO,YAAYL;AACnB,UAAMY,IAAQP,GAAO,KAAK5F,CAAK,GACzBoG,KAAWpG,EAAM,MAAMuF,GAAOY,IAAQA,EAAM,QAAQnG,EAAM,MAAM;AAElEoG,IAAAA,OACGH,IAEMA,MAAa,MACtBD,GAAM,KAAKI,KACF,MAAM,QAAQJ,GAAM,SAAS,IACtCA,GAAM,UAAU,KAAKI,EAAQ,IAE7BJ,GAAM,YAAY,CAACI,EAAQ,IAN3BF,IAAUE,IASZb,KAASa,GAAS,SAGhBD,MACFF,IAAWE,EAAM,CAAC,GAClBZ;EAEN;AAEE,SAAO;IACL,MAAM;;IAEN,SAASW,KAAWH,MAAkB;IACtC,YAAYC;IACZ,UAAU,CAAA;EACd;AACA;AC9EO,SAASZ,GAAMpF,IAAO;AAC3B,QAAMsF,KAAQ,OAAOtF,MAAS,EAAE,EAAE,KAAI;AACtC,SAAOsF,KAAQA,GAAM,MAAM,eAAe,IAAI,CAAA;AAChD;AAUO,SAASI,GAAUlC,IAAQ;AAChC,SAAOA,GAAO,KAAK,GAAG,EAAE,KAAI;AAC9B;ACmBA,IAAMC,KAAM,CAAA,EAAG;AAYR,SAAS4C,GAAQ1B,IAAQoB,IAAgBO,GAAe;AAC7D,QAAMC,KAASD,KAAiBE,GAAgBF,CAAa;AA8B7D,WAASG,EAAEX,GAAUY,MAAeC,GAAU;AAC5C,QAAI9G,KAAQ,IAER+G;AAEJ,QAA8Bd,KAAa,MAAM;AAC/Cc,UAAO,EAAC,MAAM,QAAQ,UAAU,CAAE,EAAA;AAElC,YAAMC;;QAA8BH;;AACpCC,QAAS,QAAQE,CAAK;IAC5B,WACMD,IAAOf,GAAcC,GAAUC,EAAc,GAE7Ca,EAAK,UAAUA,EAAK,QAAQ,YAAW,GACnCL,MAAU9C,GAAI,KAAK8C,IAAQK,EAAK,OAAO,MACzCA,EAAK,UAAUL,GAAOK,EAAK,OAAO,IAIhCE,GAAQJ,CAAU;AACpBC,QAAS,QAAQD,CAAU;SACtB;AAEL,UAAIvG;AAEJ,WAAKA,KAAOuG;AACNjD,WAAI,KAAKiD,GAAYvG,CAAG,KAC1B4G,GAAYpC,IAAQiC,EAAK,YAAYzG,GAAKuG,EAAWvG,CAAG,CAAC;IAGrE;AAII,WAAO,EAAEN,KAAQ8G,EAAS;AACxBK,SAASJ,EAAK,UAAUD,EAAS9G,EAAK,CAAC;AAGzC,WAAI+G,EAAK,SAAS,aAAaA,EAAK,YAAY,eAC9CA,EAAK,UAAU,EAAC,MAAM,QAAQ,UAAUA,EAAK,SAAQ,GACrDA,EAAK,WAAW,CAAA,IAGXA;EACX;AAEE,SAAOH;AACT;AAUA,SAASK,GAAQ9G,IAAO;AAEtB,MAAIA,OAAU,QAAQ,OAAOA,MAAU,YAAY,MAAM,QAAQA,EAAK;AACpE,WAAO;AAIT,MAAI,OAAOA,GAAM,QAAS,SAAU,QAAO;AAI3C,QAAMiH;;IAAiDjH;KACjDc,IAAO,OAAO,KAAKd,EAAK;AAE9B,aAAWG,MAAOW,GAAM;AACtB,UAAMd,IAAQiH,GAAO9G,EAAG;AAExB,QAAIH,KAAS,OAAOA,KAAU,UAAU;AACtC,UAAI,CAAC,MAAM,QAAQA,CAAK,EAAG,QAAO;AAElC,YAAMkH;;QAAsClH;;AAE5C,iBAAWmH,KAAQD;AACjB,YAAI,OAAOC,KAAS,YAAY,OAAOA,KAAS;AAC9C,iBAAO;IAGjB;EACA;AAGE,SAAI,CAAA,EAAA,cAAcnH,MAAS,MAAM,QAAQA,GAAM,QAAQ;AAQzD;AAcA,SAAS+G,GAAYpC,IAAQ+B,IAAYvG,GAAKH,IAAO;AACnD,QAAM6D,IAAOa,GAAKC,IAAQxE,CAAG;AAC7B,MAAIN,IAAQ,IAERuH;AAGJ,MAA2BpH,MAAU,MAErC;AAAA,QAAI,OAAOA,MAAU,UAAU;AAE7B,UAAI,OAAO,MAAMA,EAAK,EAAG;AAEzBoH,UAASpH;IACb,MAEW,QAAOA,MAAU,YACxBoH,IAASpH,KAGF,OAAOA,MAAU,WACpB6D,EAAK,iBACPuD,IAASC,GAAOrH,EAAK,IACZ6D,EAAK,iBACduD,IAASE,GAAOtH,EAAK,IACZ6D,EAAK,wBACduD,IAASC,GAAOC,GAAOtH,EAAK,EAAE,KAAK,GAAG,CAAC,IAEvCoH,IAASG,GAAe1D,GAAMA,EAAK,UAAU7D,EAAK,IAE3C,MAAM,QAAQA,EAAK,IAC5BoH,IAASpH,GAAM,OAAM,IAErBoH,IAASvD,EAAK,aAAa,UAAU2D,GAAMxH,EAAK,IAAI,OAAOA,EAAK;AAGlE,QAAI,MAAM,QAAQoH,CAAM,GAAG;AAEzB,YAAMK,IAAc,CAAA;AAEpB,aAAO,EAAE5H,IAAQuH,EAAO,UAAQ;AAE9B,cAAMpH;;UACJuH,GAAe1D,GAAMA,EAAK,UAAUuD,EAAOvH,CAAK,CAAC;;AAEnD4H,UAAY5H,CAAK,IAAIG;MAC3B;AAEIoH,UAASK;IACb;AAGE,QAAI5D,EAAK,aAAa,eAAe,MAAM,QAAQ6C,GAAW,SAAS,GAAG;AAExE,YAAM1G;;QAAwCoH;;AAC9CA,UAASV,GAAW,UAAU,OAAO1G,CAAK;IAC9C;AAEE0G,IAAAA,GAAW7C,EAAK,QAAQ,IAAIuD;EAAA;AAC9B;AAUA,SAASJ,GAASU,IAAO1H,IAAO;AAC9B,MAAIH,IAAQ;AAEZ,MAA2BG,MAAU,KAE9B,KAAI,OAAOA,MAAU,YAAY,OAAOA,MAAU;AACvD0H,IAAAA,GAAM,KAAK,EAAC,MAAM,QAAQ,OAAO,OAAO1H,EAAK,EAAC,CAAC;WACtC,MAAM,QAAQA,EAAK;AAC5B,WAAO,EAAEH,IAAQG,GAAM;AACrBgH,SAASU,IAAO1H,GAAMH,CAAK,CAAC;WAErB,OAAOG,MAAU,YAAY,UAAUA;AAC5CA,IAAAA,GAAM,SAAS,SACjBgH,GAASU,IAAO1H,GAAM,QAAQ,IAE9B0H,GAAM,KAAK1H,EAAK;;AAGlB,UAAM,IAAI,MAAM,2CAA2CA,KAAQ,GAAG;AAE1E;AAcA,SAASuH,GAAe1D,IAAMrD,IAAMR,GAAO;AACzC,MAAI,OAAOA,KAAU,UAAU;AAC7B,QAAI6D,GAAK,UAAU7D,KAAS,CAAC,OAAO,MAAM,OAAOA,CAAK,CAAC;AACrD,aAAO,OAAOA,CAAK;AAGrB,SACG6D,GAAK,WAAWA,GAAK,uBACrB7D,MAAU,MAAMqC,GAAUrC,CAAK,MAAMqC,GAAU7B,EAAI;AAEpD,aAAO;EAEb;AAEE,SAAOR;AACT;AAUA,SAASwH,GAAMxH,IAAO;AAEpB,QAAMoH,KAAS,CAAA;AAEf,MAAIjH;AAEJ,OAAKA,KAAOH;AACNyD,OAAI,KAAKzD,IAAOG,CAAG,KACrBiH,GAAO,KAAK,CAACjH,GAAKH,GAAMG,CAAG,CAAC,EAAE,KAAK,IAAI,CAAC;AAI5C,SAAOiH,GAAO,KAAK,IAAI;AACzB;AAUA,SAASZ,GAAgBhD,IAAQ;AAE/B,QAAM4D,KAAS,CAAA;AACf,MAAIvH,IAAQ;AAEZ,SAAO,EAAEA,IAAQ2D,GAAO;AACtB4D,IAAAA,GAAO5D,GAAO3D,CAAK,EAAE,YAAa,CAAA,IAAI2D,GAAO3D,CAAK;AAGpD,SAAOuH;AACT;ACpWO,IAAMO,KAA2B;EACtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAxCO,IC+BMlB,KAAIJ,GAAQhC,IAAM,KAAK;AD/B7B,ICmCMuD,KAAIvB,GAAQ/B,IAAK,KAAKqD,EAAwB;ACjBpD,SAASE,GAASC,IAAM;AAC7B,QAAM9H,KAAQ,OAAO8H,EAAI,GAOnBC,IAAU,CAAA;AAEhB,SAAO,EAAC,UAAAC,GAAU,SAAAC,GAAO;AAGzB,WAASA,GAAQC,GAAQ;AACvB,QAAI,OAAOA,KAAW,YAAYA,IAAS,MAAMA,KAAUlI,GAAM,QAAQ;AACvE,UAAIH,IAAQ;AAEZ,iBAAa;AACX,YAAI2F,IAAMuC,EAAQlI,CAAK;AAEvB,YAAI2F,MAAQ,QAAW;AACrB,gBAAM2C,KAAMC,GAAKpI,IAAO+H,EAAQlI,IAAQ,CAAC,CAAC;AAC1C2F,cAAM2C,OAAQ,KAAKnI,GAAM,SAAS,IAAImI,KAAM,GAC5CJ,EAAQlI,CAAK,IAAI2F;QAC3B;AAEQ,YAAIA,IAAM0C;AACR,iBAAO;YACL,MAAMrI,IAAQ;YACd,QAAQqI,KAAUrI,IAAQ,IAAIkI,EAAQlI,IAAQ,CAAC,IAAI,KAAK;YACxD,QAAAqI;UACZ;AAGQrI;MACR;IACA;EACA;AAGE,WAASmI,EAASK,GAAO;AACvB,QACEA,KACA,OAAOA,EAAM,QAAS,YACtB,OAAOA,EAAM,UAAW,YACxB,CAAC,OAAO,MAAMA,EAAM,IAAI,KACxB,CAAC,OAAO,MAAMA,EAAM,MAAM,GAC1B;AACA,aAAON,EAAQ,SAASM,EAAM,QAAM;AAClC,cAAMC,IAAOP,EAAQA,EAAQ,SAAS,CAAC,GACjCI,KAAMC,GAAKpI,IAAOsI,CAAI,GACtB9C,IAAM2C,OAAQ,KAAKnI,GAAM,SAAS,IAAImI,KAAM;AAClD,YAAIG,MAAS9C,EAAK;AAClBuC,UAAQ,KAAKvC,CAAG;MACxB;AAEM,YAAM0C,KACHG,EAAM,OAAO,IAAIN,EAAQM,EAAM,OAAO,CAAC,IAAI,KAAKA,EAAM,SAAS;AAElE,UAAIH,IAASH,EAAQM,EAAM,OAAO,CAAC,EAAG,QAAOH;IACnD;EACA;AACA;AAMA,SAASE,GAAKpI,IAAOsI,IAAM;AACzB,QAAMC,IAAKvI,GAAM,QAAQ,MAAMsI,EAAI,GAC7BE,KAAKxI,GAAM,QAAQ;GAAMsI,EAAI;AACnC,SAAIE,OAAO,KAAWD,IAClBA,MAAO,MAAMA,IAAK,MAAMC,KAAWA,KAChCD,IAAKC,KAAKD,IAAKC;AACxB;ACvFO,IAAMC,KAAgB;EAC3B,MAAM;EACN,QAAQ;EACR,KAAK;EACL,OAAO;EACP,KAAK;EACL,OAAO;AACT;AAPO,ICuBDhF,KAAM,CAAA,EAAG;ADvBR,IC0BDiF,KAAQ,OAAO;AAYd,SAASC,GAAWC,IAAM/G,IAAS;AACxC,QAAM8D,IAAW9D,MAAW,CAAA;AAE5B,SAAOgH;IACL;MACE,MAAMlD,EAAS,QAAQ;MACvB,UAAU;MACV,QAAQA,EAAS,UAAU,QAAQrB,KAAMD;MACzC,SAASsB,EAAS,WAAW;IAC9B;IACDiD;EACJ;AACA;AAYA,SAASC,GAAIC,IAAOlC,IAAM;AAExB,MAAIQ;AAEJ,UAAQR,GAAK,UAAQ;IACnB,KAAK,YAAY;AACf,YAAMmC;;QACJnC;;AAEF,aAAAQ,IAAS,EAAC,MAAM,WAAW,OAAO2B,GAAU,KAAI,GAChDC,GAAMF,IAAOC,IAAW3B,CAAM,GACvBA;IACb;IAEI,KAAK;IACL,KAAK,sBAAsB;AACzB,YAAM2B;;QAEFnC;SAEEqC,IACJ,UAAUF,KACNA,GAAU,SAAS,YAAYA,GAAU,SAAS,mBAClD;AAQN,UANA3B,IAAS;QACP,MAAM;QACN,UAAU8B,GAAIJ,IAAOlC,GAAK,UAAU;QACpC,MAAM,EAAC,YAAAqC,EAAU;MACzB,GAEUH,GAAM,QAAQA,GAAM,UAAU;AAChC,cAAMK,IAAW,OAAOL,GAAM,IAAI,GAC5BM,IAAMvB,GAASsB,CAAQ,GACvB5D,IAAQ6D,EAAI,QAAQ,CAAC,GACrB5D,KAAM4D,EAAI,QAAQD,EAAS,MAAM;AAIvC/B,UAAO,WAAW,EAAC,OAAA7B,GAAO,KAAAC,GAAG;MACrC;AAEM,aAAO4B;IACb;IAEI,KAAK,iBAAiB;AACpB,YAAM2B;;QACJnC;;AAEF,aAAAQ,IAAS,EAAC,MAAM,UAAS,GACzB4B,GAAMF,IAAOC,IAAW3B,CAAM,GACvBA;IACb;IAEI,KAAK,SAAS;AACZ,YAAM2B;;QAA8DnC;;AACpE,aAAAQ,IAAS,EAAC,MAAM,QAAQ,OAAO2B,GAAU,MAAK,GAC9CC,GAAMF,IAAOC,IAAW3B,CAAM,GACvBA;IACb;;IAGI;AAEE,aAAAA,IAASiC;QAAQP;;QADkDlC;MAClC,GAC1BQ;EAEb;AACA;AAYA,SAAS8B,GAAIJ,IAAOpB,IAAO;AACzB,MAAI7H,IAAQ;AAEZ,QAAMyJ,KAAU,CAAA;AAEhB,SAAO,EAAEzJ,IAAQ6H,GAAM,UAAQ;AAE7B,UAAMN;;MAAqCyB,GAAIC,IAAOpB,GAAM7H,CAAK,CAAC;;AAClEyJ,IAAAA,GAAQ,KAAKlC,CAAM;EACvB;AAEE,SAAOkC;AACT;AAYA,SAASD,GAAQP,IAAOlC,IAAM;AAC5B,QAAMjC,IAASmE,GAAM;AAErBA,EAAAA,GAAM,SAASlC,GAAK,iBAAiB6B,GAAc,MAAMnE,KAAMD;AAG/D,MAAIxE,KAAQ;AAEZ,QAAM6G,IAAa,CAAA;AAEnB,SAAO,EAAE7G,KAAQ+G,GAAK,MAAM,UAAQ;AAClC,UAAMrE,IAAYqE,GAAK,MAAM/G,EAAK,GAC5BW,MACH+B,EAAU,SAASA,EAAU,SAAS,MAAM,MAAMA,EAAU;AAC1DkB,OAAI,KAAKiF,IAAOlI,EAAI,MACvBkG,EAAWlG,EAAI,IAAI+B,EAAU;EAEnC;AAIE,QAAM6E,KADI0B,GAAM,OAAO,UAAU,QAAQlB,KAAInB,IAC5BG,GAAK,SAASF,GAAYwC,GAAIJ,IAAOlC,GAAK,UAAU,CAAC;AAItE,MAHAoC,GAAMF,IAAOlC,IAAMQ,CAAM,GAGrBA,EAAO,YAAY,YAAY;AACjC,UAAM2B;;MAA8DnC;OAC9D2C,KAAMR,EAAU,oBAChBS,IAAWD,MAAOA,GAAI,YAAYE,GAASF,GAAI,QAAQ,GACvDG,IAASH,MAAOA,GAAI,UAAUE,GAASF,GAAI,MAAM,GAGjDI;;MAA+Bd,GAAIC,IAAOC,EAAU,OAAO;;AAE7DS,SAAYE,KAAUZ,GAAM,SAC9Ba,GAAQ,WAAW,EAAC,OAAOH,EAAS,KAAK,KAAKE,EAAO,MAAK,IAG5DtC,EAAO,UAAUuC;EACrB;AAEE,SAAAb,GAAM,SAASnE,GAERyC;AACT;AAcA,SAAS4B,GAAMF,IAAOR,IAAMsB,GAAI;AAC9B,MAAI,wBAAwBtB,MAAQA,GAAK,sBAAsBQ,GAAM,MAAM;AACzE,UAAMW,KAAWI,GAAef,IAAOc,GAAItB,GAAK,kBAAkB;AAE9DmB,IAAAA,OACFX,GAAM,WAAW,MACjBc,EAAG,WAAWH;EAEpB;AACA;AAcA,SAASI,GAAef,IAAOlC,IAAMiB,GAAU;AAC7C,QAAMT,KAASqC,GAAS5B,CAAQ;AAEhC,MAAIjB,GAAK,SAAS,WAAW;AAC3B,UAAMkD,IAAOlD,GAAK,SAASA,GAAK,SAAS,SAAS,CAAC;AAcnD,QATEQ,MACA,CAACS,EAAS,UACViC,KACAA,EAAK,YACLA,EAAK,SAAS,QAEd1C,GAAO,MAAM,OAAO,OAAO,CAAA,GAAI0C,EAAK,SAAS,GAAG,IAG9ChB,GAAM,SAAS;AAEjB,YAAMpC,IAAa,CAAA;AAEnB,UAAIvG;AAEJ,UAAI0H,EAAS;AACX,aAAK1H,KAAO0H,EAAS;AACfpE,aAAI,KAAKoE,EAAS,OAAO1H,CAAG,MAC9BuG,EAAWhC,GAAKoE,GAAM,QAAQ3I,CAAG,EAAE,QAAQ,IAAIsJ;YAC7C5B,EAAS,MAAM1H,CAAG;UAChC;AAKa0H,QAAS;AAChB,YAAMkC,IAAUN,GAAS5B,EAAS,QAAQ,GACpCmC,KAAUnC,EAAS,SAAS4B,GAAS5B,EAAS,MAAM,IAAI,QAExDoC,IAAO,EAAC,SAAAF,EAAO;AACjBC,MAAAA,OAASC,EAAK,UAAUD,KAC5BC,EAAK,aAAavD,GAElBE,GAAK,OAAO,EAAC,UAAUqD,EAAI;IACjC;EACA;AAEE,SAAO7C;AACT;AAUA,SAASqC,GAASL,IAAK;AACrB,QAAM7D,KAAQ8C,GAAM;IAClB,MAAMe,GAAI;IACV,QAAQA,GAAI;IACZ,QAAQA,GAAI;EACb,CAAA,GACK5D,IAAM6C,GAAM;IAChB,MAAMe,GAAI;IACV,QAAQA,GAAI;IACZ,QAAQA,GAAI;EACb,CAAA;AAID,SAAO7D,MAASC,IAAM,EAAC,OAAAD,IAAO,KAAAC,EAAG,IAAI;AACvC;AAUA,SAAS6C,GAAMA,IAAO;AACpB,SAAOA,GAAM,QAAQA,GAAM,SAASA,KAAQ;AAC9C;AC/RA,IAAM5E,KAAM,CAAA,EAAG;AAcR,SAASyG,GAAO/J,IAAK0B,IAAS;AACnC,QAAM8D,IAAW9D,MAAW,CAAA;AA8B5B,WAASgH,GAAI7I,MAAUmK,GAAY;AAEjC,QAAIC,IAAKvB,GAAI;AACb,UAAMwB,IAAWxB,GAAI;AAErB,QAAI7I,KAASyD,GAAI,KAAKzD,GAAOG,EAAG,GAAG;AAEjC,YAAMmK,KAAK,OAAOtK,EAAMG,EAAG,CAAC;AAE5BiK,UAAK3G,GAAI,KAAK4G,GAAUC,EAAE,IAAID,EAASC,EAAE,IAAIzB,GAAI;IACvD;AAEI,QAAIuB;AACF,aAAOA,EAAG,KAAK,MAAMpK,GAAO,GAAGmK,CAAU;EAE/C;AAEE,SAAAtB,GAAI,WAAWlD,EAAS,YAAY,CAAA,GACpCkD,GAAI,UAAUlD,EAAS,SACvBkD,GAAI,UAAUlD,EAAS,SAGhBkD;AACT;ACxEA,IAAM0B,KAAe,CAAA;AAArB,IAEM9G,KAAM,CAAA,EAAG;AAFf,IAIMoF,KAAMqB,GAAO,QAAQ,EAAC,UAAU,EAAA,MAACM,IAAMnB,SAAAA,IAAAA,MAASoB,IAAI,SAAEC,IAASC,SAAAA,GAAO,EAAC,CAAC;AAYvE,SAASC,GAAShC,IAAM/G,IAAS;AAEtC,QAAMI,MADWJ,MAAW0I,IACL;AACvB,SAAO1B,GAAID,IAAM3G,OAAU,QAAQqC,KAAMD,EAAI;AAC/C;AAUA,SAASmG,GAAK5D,IAAMjC,IAAQ;AAE1B,QAAMyC,IAAS;IACb,UAAU;;IAEV,OAAOR,GAAK,QAAQ,CAAA,GAAI,aAAa,WAAW;IAChD,YAAY,CAAA;EAChB;AACE,SAAAQ,EAAO,aAAa8B,GAAItC,GAAK,UAAUQ,GAAQzC,EAAM,GACrDqE,GAAMpC,IAAMQ,CAAM,GACXA;AACT;AAUA,SAASyD,GAASjE,IAAMjC,IAAQ;AAE9B,QAAMyC,IAAS,EAAC,UAAU,sBAAsB,YAAY,CAAE,EAAA;AAC9D,SAAAA,EAAO,aAAa8B,GAAItC,GAAK,UAAUQ,GAAQzC,EAAM,GACrDqE,GAAMpC,IAAMQ,CAAM,GACXA;AACT;AAQA,SAASuD,GAAQ/D,IAAM;AAErB,QAAMQ,KAAS;IACb,UAAU;IACV,MAAM;IACN,UAAU;IACV,UAAU;IACV,YAAY;EAChB;AAEE4B,SAAAA,GAAMpC,IAAMQ,EAAM,GACXA;AACT;AAQA,SAASqD,GAAK7D,IAAM;AAElB,QAAMQ,KAAS;IACb,UAAU;IACV,OAAOR,GAAK;IACZ,YAAY;EAChB;AACEoC,SAAAA,GAAMpC,IAAMQ,EAAM,GACXA;AACT;AAQA,SAASsD,GAAQ9D,IAAM;AAErB,QAAMQ,KAAS;IACb,UAAU;IACV,MAAMR,GAAK;IACX,YAAY;EAChB;AAEEoC,SAAAA,GAAMpC,IAAMQ,EAAM,GAEXA;AACT;AAUA,SAASiC,GAAQzC,IAAMjC,IAAQ;AAC7B,QAAMmG,IAAenG;AACrB,MAAIoG,KAAgBD;AAGlBlE,EAAAA,GAAK,SAAS,aACdA,GAAK,QAAQ,YAAW,MAAO,SAC/BkE,EAAa,UAAU,WAEvBC,KAAgBzG;AAIlB,QAAM0G,IAAQ,CAAA;AAEd,MAAIpH;AAEJ,MAAIgD,GAAK,YAAA;AACP,SAAKhD,KAAQgD,GAAK;AAChB,UAAIhD,MAAS,cAAcH,GAAI,KAAKmD,GAAK,YAAYhD,CAAI,GAAG;AAC1D,cAAMwD,KAAS6D;UACbF;UACAnH;UACAgD,GAAK,WAAWhD,CAAI;QAC9B;AAEYwD,QAAAA,MACF4D,EAAM,KAAK5D,EAAM;MAE3B;EAAA;AAIE,QAAMnF,IAAQ8I,GAAc,OAKtB3D,IAAS;IACb,UAAUR,GAAK;IACf,SAASA,GAAK;IACd,OAAAoE;;IAEA,cAAcvC,GAAcxG,CAAK;IACjC,YAAY,CAAE;IACd,YAAY;EAChB;AACE,SAAAmF,EAAO,aAAa8B,GAAItC,GAAK,UAAUQ,GAAQ2D,EAAa,GAC5D/B,GAAMpC,IAAMQ,CAAM,GAEdR,GAAK,YAAY,cAAcA,GAAK,YAEtCQ,EAAO,UAAUyD,GAASjE,GAAK,SAASmE,EAAa,IAGhD3D;AACT;AAcA,SAAS6D,GAAetG,IAAQf,IAAM5D,GAAO;AAC3C,QAAM6D,KAAOa,GAAKC,IAAQf,EAAI;AAG9B,MACE5D,MAAU,SACVA,MAAU,QACVA,MAAU,UACT,OAAOA,KAAU,YAAY,OAAO,MAAMA,CAAK,KAC/C,CAACA,KAAS6D,GAAK;AAEhB;AAGE,QAAM,QAAQ7D,CAAK,MAGrBA,IAAQ6D,GAAK,iBAAiByD,GAAOtH,CAAK,IAAIqH,GAAOrH,CAAK;AAI5D,QAAMuC,IAAY;IAChB,MAAMsB,GAAK;IACX,OAAO7D,MAAU,OAAO,KAAK,OAAOA,CAAK;EAC7C;AAEE,MAAI6D,GAAK,SAASA,GAAK,UAAU,UAAUA,GAAK,UAAU,OAAO;AAC/D,UAAMhE,IAAQ0C,EAAU,KAAK,QAAQ,GAAG;AAEpC1C,QAAQ,IACV0C,EAAU,SAAS,MAEnBA,EAAU,OAAOA,EAAU,KAAK,MAAM1C,IAAQ,CAAC,GAC/C0C,EAAU,SAASsB,GAAK,UAAU,MAAM,GAAGhE,CAAK,IAGlD0C,EAAU,YAAYkG,GAAc5E,GAAK,KAAK;EAClD;AAEE,SAAOtB;AACT;AAcA,SAAS2G,GAAIvC,IAAUuE,IAAYvG,GAAQ;AACzC,MAAI9E,KAAQ;AAEZ,QAAMyJ,IAAU,CAAA;AAEhB,MAAI3C;AACF,WAAO,EAAE9G,KAAQ8G,GAAS,UAAQ;AAEhC,YAAME,IAAQgC,GAAIlC,GAAS9G,EAAK,GAAG8E,CAAM;AAEzCkC,QAAM,aAAaqE,IAEnB5B,EAAQ,KAAKzC,CAAK;IACxB;AAGE,SAAOyC;AACT;AAYA,SAASN,GAAMV,IAAMsB,IAAI;AACvB,QAAMH,IAAWnB,GAAK;AAElBmB,OAAYA,EAAS,SAASA,EAAS,QAC3BA,EAAS,MAAM,QACfA,EAAS,IAAI,QAE3BG,GAAG,qBAAqB;IACtB,WAAWH,EAAS,MAAM;IAC1B,UAAUA,EAAS,MAAM;IACzB,aAAaA,EAAS,MAAM;IAC5B,SAASA,EAAS,IAAI;IACtB,QAAQA,EAAS,IAAI;IACrB,WAAWA,EAAS,IAAI;EAC9B;AAEA;AC5UO,IAAM0B,KAAmB;EAC9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AArBO,ICLDC,KAAwB,oBAAI,IAAI;EAClC;EAAO;EAAO;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAC9E;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EACxE;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EAAQ;EACxE;EAAS;EAAS;AACtB,CAAC;ADAM,ICCMC,KAAwB;AAC9B,IAAIC;CACV,SAAUA,IAAa;AACpBA,EAAAA,GAAYA,GAAY,MAAS,EAAE,IAAI,OACvCA,GAAYA,GAAY,OAAU,CAAC,IAAI,QACvCA,GAAYA,GAAY,aAAgB,CAAC,IAAI,cAC7CA,GAAYA,GAAY,kBAAqB,EAAE,IAAI,mBACnDA,GAAYA,GAAY,YAAe,EAAE,IAAI,aAC7CA,GAAYA,GAAY,YAAe,EAAE,IAAI,aAC7CA,GAAYA,GAAY,QAAW,EAAE,IAAI,SACzCA,GAAYA,GAAY,mBAAsB,EAAE,IAAI,oBACpDA,GAAYA,GAAY,iBAAoB,EAAE,IAAI,kBAClDA,GAAYA,GAAY,YAAe,EAAE,IAAI,aAC7CA,GAAYA,GAAY,aAAgB,EAAE,IAAI,cAC9CA,GAAYA,GAAY,eAAkB,EAAE,IAAI,gBAChDA,GAAYA,GAAY,UAAa,EAAE,IAAI,WAC3CA,GAAYA,GAAY,UAAa,EAAE,IAAI,WAC3CA,GAAYA,GAAY,UAAa,EAAE,IAAI,WAC3CA,GAAYA,GAAY,YAAe,EAAE,IAAI,aAC7CA,GAAYA,GAAY,iBAAoB,EAAE,IAAI,kBAClDA,GAAYA,GAAY,cAAiB,EAAE,IAAI,eAC/CA,GAAYA,GAAY,oBAAuB,EAAE,IAAI,qBACrDA,GAAYA,GAAY,gBAAmB,EAAE,IAAI,iBACjDA,GAAYA,GAAY,kBAAqB,EAAE,IAAI,mBACnDA,GAAYA,GAAY,kBAAqB,EAAE,IAAI,mBACnDA,GAAYA,GAAY,uBAA0B,EAAE,IAAI,wBACxDA,GAAYA,GAAY,eAAkB,EAAE,IAAI,gBAChDA,GAAYA,GAAY,gBAAmB,EAAE,IAAI,iBACjDA,GAAYA,GAAY,gBAAmB,GAAG,IAAI;AACtD,GAAGA,MAAgBA,IAAc,CAAA,EAAG;AAC7B,IAAMC,KAAY;EACrB,WAAW;EACX,aAAa;EACb,SAAS;EACT,QAAQ;EACR,QAAQ;EACR,QAAQ;AACZ;AAEO,SAASC,GAAYC,IAAI;AAC5B,SAAOA,MAAM,SAASA,MAAM;AAChC;AACO,SAASC,GAAgBD,IAAI;AAChC,SAAOA,MAAM,SAASA,MAAM;AAChC;AACO,SAASE,GAA0BC,IAAKC,IAAK;AAChD,UAAQD,KAAM,SAAS,OAAO,OAAOC;AACzC;AAEO,SAASC,GAAmBL,IAAI;AACnC,SAASA,OAAO,MAAQA,OAAO,MAAQA,OAAO,MAAQA,OAAO,KAAQA,OAAO,MAAQA,MAAM,KAAQA,MAAM,MACnGA,MAAM,OAAQA,MAAM;AAC7B;AACO,SAASM,GAAqBN,IAAI;AACrC,SAAQA,MAAM,SAASA,MAAM,SAAUL,GAAsB,IAAIK,EAAE;AACvE;AC7DO,IAAIO;CACV,SAAUA,IAAK;AACZA,EAAAA,GAAI,gCAAmC,qCACvCA,GAAI,4BAA+B,gCACnCA,GAAI,yBAA4B,6BAChCA,GAAI,gDAAmD,yDACvDA,GAAI,uBAA0B,2BAC9BA,GAAI,4BAA+B,iCACnCA,GAAI,yBAA4B,6BAChCA,GAAI,0BAA6B,6BACjCA,GAAI,yCAA4C,gDAChDA,GAAI,iCAAoC,uCACxCA,GAAI,0CAA6C,gDACjDA,GAAI,oBAAuB,wBAC3BA,GAAI,qCAAwC,0CAC5CA,GAAI,iCAAoC,qCACxCA,GAAI,0CAA6C,+CACjDA,GAAI,kDAAqD,wDACzDA,GAAI,8CAAiD,oDACrDA,GAAI,mBAAsB,uBAC1BA,GAAI,WAAc,cAClBA,GAAI,wBAA2B,2BAC/BA,GAAI,qCAAwC,yCAC5CA,GAAI,6CAAgD,mDACpDA,GAAI,4DAA+D,oEACnEA,GAAI,6CAAgD,mDACpDA,GAAI,4CAA+C,kDACnDA,GAAI,4CAA+C,kDACnDA,GAAI,iCAAoC,qCACxCA,GAAI,iCAAoC,qCACxCA,GAAI,gCAAmC,oCACvCA,GAAI,gCAAmC,oCACvCA,GAAI,qBAAwB,yBAC5BA,GAAI,2BAA8B,8BAClCA,GAAI,iCAAoC,wCACxCA,GAAI,eAAkB,kBACtBA,GAAI,gBAAmB,kBACvBA,GAAI,8BAAiC,mCACrCA,GAAI,eAAkB,kBACtBA,GAAI,2BAA8B,8BAClCA,GAAI,aAAgB,gBACpBA,GAAI,6CAAgD,oDACpDA,GAAI,yBAA4B,4BAChCA,GAAI,8BAAiC,iCACrCA,GAAI,wCAA2C,6CAC/CA,GAAI,4BAA+B,+BACnCA,GAAI,iCAAoC,oCACxCA,GAAI,qCAAwC,0CAC5CA,GAAI,qBAAwB,wBAC5BA,GAAI,2CAA8C,iDAClDA,GAAI,qBAAwB,uBAC5BA,GAAI,uBAA0B,0BAC9BA,GAAI,iBAAoB,mBACxBA,GAAI,mBAAsB,qBAC1BA,GAAI,mCAAsC,yCAC1CA,GAAI,wCAA2C,+CAC/CA,GAAI,oCAAuC,0CAC3CA,GAAI,2BAA8B,gCAClCA,GAAI,4BAA+B,gCACnCA,GAAI,kCAAqC,wCACzCA,GAAI,uBAA0B,2BAC9BA,GAAI,qCAAwC;AAChD,GAAGA,MAAQA,IAAM,CAAA,EAAG;AC3DpB,IAAMC,KAA2B;AAI1B,IAAMC,KAAN,MAAmB;EACtB,YAAYC,IAAS;AACjB,SAAK,UAAUA,IACf,KAAK,OAAO,IACZ,KAAK,MAAM,IAEX,KAAK,aAAa,IAClB,KAAK,WAAW,CAAE,GAClB,KAAK,kBAAkB,OACvB,KAAK,mBAAmB,OACxB,KAAK,gBAAgB,OACrB,KAAK,kBAAkBF,IACvB,KAAK,QAAQ,OACb,KAAK,eAAe,GACpB,KAAK,oBAAoB,GACzB,KAAK,OAAO,GAEZ,KAAK,gBAAgB;EAC7B;;EAEI,IAAI,MAAM;AACN,WAAO,KAAK,MAAM,KAAK,eAAe,EAAO,KAAK,eAAe,KAAK;EAC9E;EACI,IAAI,SAAS;AACT,WAAO,KAAK,oBAAoB,KAAK;EAC7C;EACI,SAASG,IAAMC,GAAU;AACrB,UAAM,EAAE,MAAAC,IAAM,KAAAC,GAAK,QAAArE,EAAQ,IAAG,MACxBsE,IAAWD,IAAMF,GACjBI,IAAcvE,IAASmE;AAC7B,WAAO;MACH,MAAAD;MACA,WAAWE;MACX,SAASA;MACT,UAAAE;MACA,QAAQA;MACR,aAAAC;MACA,WAAWA;IACd;EACT;EACI,KAAKL,IAAM;AACH,SAAK,QAAQ,gBAAgB,KAAK,kBAAkB,KAAK,WACzD,KAAK,gBAAgB,KAAK,QAC1B,KAAK,QAAQ,aAAa,KAAK,SAASA,IAAM,CAAC,CAAC;EAE5D;EACI,UAAU;AACN,SAAK,SAAS,KAAK,KAAK,UAAU,GAClC,KAAK,aAAa,KAAK;EAC/B;EACI,kBAAkBX,IAAI;AAElB,QAAI,KAAK,QAAQ,KAAK,KAAK,SAAS,GAAG;AACnC,YAAMiB,IAAS,KAAK,KAAK,WAAW,KAAK,MAAM,CAAC;AAChD,UAAIhB,GAAgBgB,CAAM;AAEtB,eAAA,KAAK,OAEL,KAAK,QAAS,GACPf,GAA0BF,IAAIiB,CAAM;IAE3D,WAEiB,CAAC,KAAK;AACX,aAAA,KAAK,gBAAgB,MACdjN,EAAE;AAGb,WAAA,KAAK,KAAKuM,EAAI,sBAAsB,GAC7BP;EACf;EACI,sBAAsB;AAClB,WAAO,KAAK,MAAM,KAAK;EAC/B;EACI,kBAAkB;AACV,SAAK,oBAAA,MACL,KAAK,OAAO,KAAK,KAAK,UAAU,KAAK,GAAG,GACxC,KAAK,gBAAgB,KAAK,KAC1B,KAAK,qBAAqB,KAAK,KAC/B,KAAK,MAAM,GACX,KAAK,aAAa,IAClB,KAAK,SAAS,SAAS;EAEnC;EACI,MAAMkB,IAAOC,GAAa;AAClB,SAAK,KAAK,SAAS,IACnB,KAAK,QAAQD,KAGb,KAAK,OAAOA,IAEhB,KAAK,gBAAgB,OACrB,KAAK,mBAAmBC;EAChC;EACI,uBAAuBD,IAAO;AAC1B,SAAK,OAAO,KAAK,KAAK,UAAU,GAAG,KAAK,MAAM,CAAC,IAAIA,KAAQ,KAAK,KAAK,UAAU,KAAK,MAAM,CAAC,GAC3F,KAAK,gBAAgB;EAC7B;EACI,WAAWE,IAASvG,GAAe;AAE/B,QAAI,KAAK,MAAMuG,GAAQ,SAAS,KAAK,KAAK;AACtC,aAAA,KAAK,gBAAgB,CAAC,KAAK,kBACpB;AAEX,QAAIvG;AACA,aAAO,KAAK,KAAK,WAAWuG,IAAS,KAAK,GAAG;AAEjD,aAASC,KAAI,GAAGA,KAAID,GAAQ,QAAQC;AAEhC,WADW,KAAK,KAAK,WAAW,KAAK,MAAMA,EAAC,IAAI,QACrCD,GAAQ,WAAWC,EAAC;AAC3B,eAAO;AAGf,WAAO;EACf;EACI,KAAK5E,IAAQ;AACT,UAAMqB,IAAM,KAAK,MAAMrB;AACvB,QAAIqB,KAAO,KAAK,KAAK;AACjB,aAAA,KAAK,gBAAgB,CAAC,KAAK,kBACpB9J,EAAE;AAEb,UAAM2M,KAAO,KAAK,KAAK,WAAW7C,CAAG;AACrC,WAAO6C,OAAS3M,EAAE,kBAAkBA,EAAE,YAAY2M;EAC1D;EACI,UAAU;AAQN,QAPA,KAAK,OAED,KAAK,UACL,KAAK,QAAQ,OACb,KAAK,QACL,KAAK,eAAe,KAAK,MAEzB,KAAK,OAAO,KAAK,KAAK;AACtB,aAAA,KAAK,gBAAgB,CAAC,KAAK,kBACpB3M,EAAE;AAEb,QAAIgM,KAAK,KAAK,KAAK,WAAW,KAAK,GAAG;AAEtC,WAAIA,OAAOhM,EAAE,mBACT,KAAK,QAAQ,MACb,KAAK,kBAAkB,MAChBA,EAAE,aAITgM,OAAOhM,EAAE,cACT,KAAK,QAAQ,MACT,KAAK,oBAEL,KAAK,QACL,KAAK,kBAAkB,OACvB,KAAK,QAAS,GACP,KAAK,QAAS,MAG7B,KAAK,kBAAkB,OACnB+L,GAAYC,EAAE,MACdA,KAAK,KAAK,kBAAkBA,EAAE,IAKP,KAAK,QAAQ,iBAAiB,QACpDA,KAAK,MAAQA,KAAK,OACnBA,OAAOhM,EAAE,aACTgM,OAAOhM,EAAE,mBACRgM,KAAK,OAAQA,KAAK,SAEnB,KAAK,+BAA+BA,EAAE,GAEnCA;EACf;EACI,+BAA+BA,IAAI;AAC3BK,OAAmBL,EAAE,IACrB,KAAK,KAAKO,EAAI,6BAA6B,IAEtCD,GAAqBN,EAAE,KAC5B,KAAK,KAAKO,EAAI,yBAAyB;EAEnD;EACI,QAAQe,IAAO;AAEX,SADA,KAAK,OAAOA,IACL,KAAK,MAAM,KAAK;AACnB,WAAK,aAAa,KAAK,SAAS,IAAK,GACrC,KAAK;AAET,SAAK,QAAQ;EACrB;AACA;ACnMO,IAAIC;CACV,SAAUA,IAAW;AAClBA,EAAAA,GAAUA,GAAU,YAAe,CAAC,IAAI,aACxCA,GAAUA,GAAU,iBAAoB,CAAC,IAAI,kBAC7CA,GAAUA,GAAU,uBAA0B,CAAC,IAAI,wBACnDA,GAAUA,GAAU,YAAe,CAAC,IAAI,aACxCA,GAAUA,GAAU,UAAa,CAAC,IAAI,WACtCA,GAAUA,GAAU,UAAa,CAAC,IAAI,WACtCA,GAAUA,GAAU,UAAa,CAAC,IAAI,WACtCA,GAAUA,GAAU,MAAS,CAAC,IAAI,OAClCA,GAAUA,GAAU,cAAiB,CAAC,IAAI;AAC9C,GAAGA,MAAcA,IAAY,CAAA,EAAG;AACzB,SAASC,GAAaxH,IAAOyH,IAAU;AAC1C,WAASJ,IAAIrH,GAAM,MAAM,SAAS,GAAGqH,KAAK,GAAGA;AACzC,QAAIrH,GAAM,MAAMqH,CAAC,EAAE,SAASI;AACxB,aAAOzH,GAAM,MAAMqH,CAAC,EAAE;AAG9B,SAAO;AACX;AClBA,IAAAK,KAAe,IAAI;;EAEnB,2keACK,MAAM,EAAE,EACR,IAAI,CAACC,OAAMA,GAAE,WAAW,CAAC,CAAC;AAAC;AAJhC,ICAAC,KAAe,IAAI;;EAEnB,wCACK,MAAM,EAAE,EACR,IAAI,CAACD,OAAMA,GAAE,WAAW,CAAC,CAAC;AAAC;ACJhC,IAAIE;AACJ,IAAMC,KAAY,oBAAI,IAAI;EACtB,CAAC,GAAG,KAAK;;EAET,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,GAAG;AACb,CAAC;AA9BD,IAkCaC;;GAEZF,KAAK,OAAO,mBAAmB,QAAQA,OAAO,SAASA,KAAK,SAAUG,IAAW;AAC9E,QAAIC,KAAS;AACb,WAAID,KAAY,UACZA,MAAa,OACbC,MAAU,OAAO,aAAeD,OAAc,KAAM,OAAS,KAAM,GACnEA,KAAY,QAAUA,KAAY,OAEtCC,MAAU,OAAO,aAAaD,EAAS,GAChCC;EACX;;AAMO,SAASC,GAAiBF,IAAW;AACxC,MAAIH;AACJ,SAAKG,MAAa,SAAUA,MAAa,SAAWA,KAAY,UACrD,SAEHH,KAAKC,GAAU,IAAIE,EAAS,OAAO,QAAQH,OAAO,SAASA,KAAKG;AAC5E;ACrDA,IAAIG;CACH,SAAUA,IAAW;AAClBA,EAAAA,GAAUA,GAAU,MAAS,EAAE,IAAI,OACnCA,GAAUA,GAAU,OAAU,EAAE,IAAI,QACpCA,GAAUA,GAAU,SAAY,EAAE,IAAI,UACtCA,GAAUA,GAAU,OAAU,EAAE,IAAI,QACpCA,GAAUA,GAAU,OAAU,EAAE,IAAI,QACpCA,GAAUA,GAAU,UAAa,EAAE,IAAI,WACvCA,GAAUA,GAAU,UAAa,GAAG,IAAI,WACxCA,GAAUA,GAAU,UAAa,GAAG,IAAI,WACxCA,GAAUA,GAAU,UAAa,GAAG,IAAI,WACxCA,GAAUA,GAAU,UAAa,EAAE,IAAI,WACvCA,GAAUA,GAAU,UAAa,EAAE,IAAI,WACvCA,GAAUA,GAAU,UAAa,EAAE,IAAI;AAC3C,GAAGA,OAAcA,KAAY,CAAA,EAAG;AAEhC,IAAMC,KAAe;AACd,IAAIC;CACV,SAAUA,IAAc;AACrBA,EAAAA,GAAaA,GAAa,eAAkB,KAAK,IAAI,gBACrDA,GAAaA,GAAa,gBAAmB,KAAK,IAAI,iBACtDA,GAAaA,GAAa,aAAgB,GAAG,IAAI;AACrD,GAAGA,OAAiBA,KAAe,CAAA,EAAG;AACtC,SAASC,GAAS3B,IAAM;AACpB,SAAOA,MAAQwB,GAAU,QAAQxB,MAAQwB,GAAU;AACvD;AACA,SAASI,GAAuB5B,IAAM;AAClC,SAASA,MAAQwB,GAAU,WAAWxB,MAAQwB,GAAU,WACnDxB,MAAQwB,GAAU,WAAWxB,MAAQwB,GAAU;AACxD;AACA,SAASK,GAAoB7B,IAAM;AAC/B,SAASA,MAAQwB,GAAU,WAAWxB,MAAQwB,GAAU,WACnDxB,MAAQwB,GAAU,WAAWxB,MAAQwB,GAAU,WAChDG,GAAS3B,EAAI;AACrB;AAOA,SAAS8B,GAA8B9B,IAAM;AACzC,SAAOA,OAASwB,GAAU,UAAUK,GAAoB7B,EAAI;AAChE;AACA,IAAI+B;CACH,SAAUA,IAAoB;AAC3BA,EAAAA,GAAmBA,GAAmB,cAAiB,CAAC,IAAI,eAC5DA,GAAmBA,GAAmB,eAAkB,CAAC,IAAI,gBAC7DA,GAAmBA,GAAmB,iBAAoB,CAAC,IAAI,kBAC/DA,GAAmBA,GAAmB,aAAgB,CAAC,IAAI,cAC3DA,GAAmBA,GAAmB,cAAiB,CAAC,IAAI;AAChE,GAAGA,QAAuBA,MAAqB,CAAA,EAAG;AAC3C,IAAIC;CACV,SAAUA,IAAc;AAErBA,EAAAA,GAAaA,GAAa,SAAY,CAAC,IAAI,UAE3CA,GAAaA,GAAa,SAAY,CAAC,IAAI,UAE3CA,GAAaA,GAAa,YAAe,CAAC,IAAI;AAClD,GAAGA,OAAiBA,KAAe,CAAA,EAAG;AAI/B,IAAMC,KAAN,MAAoB;EACvB,YAEAC,IAUAC,GAEAC,IAAQ;AACJ,SAAK,aAAaF,IAClB,KAAK,gBAAgBC,GACrB,KAAK,SAASC,IAEd,KAAK,QAAQL,IAAmB,aAEhC,KAAK,WAAW,GAOhB,KAAK,SAAS,GAEd,KAAK,YAAY,GAEjB,KAAK,SAAS,GAEd,KAAK,aAAaC,GAAa;EACvC;;EAEI,YAAYK,IAAY;AACpB,SAAK,aAAaA,IAClB,KAAK,QAAQN,IAAmB,aAChC,KAAK,SAAS,GACd,KAAK,YAAY,GACjB,KAAK,SAAS,GACd,KAAK,WAAW;EACxB;;;;;;;;;;;;EAYI,MAAMO,IAAKxG,GAAQ;AACf,YAAQ,KAAK,OAAK;MACd,KAAKiG,IAAmB;AACpB,eAAIO,GAAI,WAAWxG,CAAM,MAAM0F,GAAU,OACrC,KAAK,QAAQO,IAAmB,cAChC,KAAK,YAAY,GACV,KAAK,kBAAkBO,IAAKxG,IAAS,CAAC,MAEjD,KAAK,QAAQiG,IAAmB,aACzB,KAAK,iBAAiBO,IAAKxG,CAAM;MAE5C,KAAKiG,IAAmB;AACpB,eAAO,KAAK,kBAAkBO,IAAKxG,CAAM;MAE7C,KAAKiG,IAAmB;AACpB,eAAO,KAAK,oBAAoBO,IAAKxG,CAAM;MAE/C,KAAKiG,IAAmB;AACpB,eAAO,KAAK,gBAAgBO,IAAKxG,CAAM;MAE3C,KAAKiG,IAAmB;AACpB,eAAO,KAAK,iBAAiBO,IAAKxG,CAAM;IAExD;EACA;;;;;;;;;;EAUI,kBAAkBwG,IAAKxG,GAAQ;AAC3B,WAAIA,KAAUwG,GAAI,SACP,MAENA,GAAI,WAAWxG,CAAM,IAAI2F,QAAkBD,GAAU,WACtD,KAAK,QAAQO,IAAmB,YAChC,KAAK,YAAY,GACV,KAAK,gBAAgBO,IAAKxG,IAAS,CAAC,MAE/C,KAAK,QAAQiG,IAAmB,gBACzB,KAAK,oBAAoBO,IAAKxG,CAAM;EACnD;EACI,mBAAmBwG,IAAKnJ,GAAOC,IAAKmJ,GAAM;AACtC,QAAIpJ,MAAUC,IAAK;AACf,YAAMoJ,IAAapJ,KAAMD;AACzB,WAAK,SACD,KAAK,SAAS,KAAK,IAAIoJ,GAAMC,CAAU,IACnC,SAASF,GAAI,OAAOnJ,GAAOqJ,CAAU,GAAGD,CAAI,GACpD,KAAK,YAAYC;IAC7B;EACA;;;;;;;;;;EAUI,gBAAgBF,IAAKxG,GAAQ;AACzB,UAAM2G,KAAW3G;AACjB,WAAOA,IAASwG,GAAI,UAAQ;AACxB,YAAMI,IAAOJ,GAAI,WAAWxG,CAAM;AAClC,UAAI6F,GAASe,CAAI,KAAKd,GAAuBc,CAAI;AAC7C5G,aAAU;;AAGV,eAAA,KAAK,mBAAmBwG,IAAKG,IAAU3G,GAAQ,EAAE,GAC1C,KAAK,kBAAkB4G,GAAM,CAAC;IAErD;AACQ,WAAA,KAAK,mBAAmBJ,IAAKG,IAAU3G,GAAQ,EAAE,GAC1C;EACf;;;;;;;;;;EAUI,oBAAoBwG,IAAKxG,GAAQ;AAC7B,UAAM2G,KAAW3G;AACjB,WAAOA,IAASwG,GAAI,UAAQ;AACxB,YAAMI,IAAOJ,GAAI,WAAWxG,CAAM;AAClC,UAAI6F,GAASe,CAAI;AACb5G,aAAU;;AAGV,eAAA,KAAK,mBAAmBwG,IAAKG,IAAU3G,GAAQ,EAAE,GAC1C,KAAK,kBAAkB4G,GAAM,CAAC;IAErD;AACQ,WAAA,KAAK,mBAAmBJ,IAAKG,IAAU3G,GAAQ,EAAE,GAC1C;EACf;;;;;;;;;;;;;;EAcI,kBAAkB6G,IAAQC,GAAgB;AACtC,QAAI1B;AAEJ,QAAI,KAAK,YAAY0B;AACjB,cAAC1B,KAAK,KAAK,YAAY,QAAQA,OAAO,UAAkBA,GAAG,2CAA2C,KAAK,QAAQ,GAC5G;AAGX,QAAIyB,OAAWnB,GAAU;AACrB,WAAK,YAAY;aAEZ,KAAK,eAAeQ,GAAa;AACtC,aAAO;AAEX,WAAA,KAAK,cAAcT,GAAiB,KAAK,MAAM,GAAG,KAAK,QAAQ,GAC3D,KAAK,WACDoB,OAAWnB,GAAU,QACrB,KAAK,OAAO,wCAAyC,GAEzD,KAAK,OAAO,kCAAkC,KAAK,MAAM,IAEtD,KAAK;EACpB;;;;;;;;;;EAUI,iBAAiBc,IAAKxG,GAAQ;AAC1B,UAAM,EAAE,YAAAoG,GAAU,IAAK;AACvB,QAAIW,IAAUX,GAAW,KAAK,SAAS,GAEnCY,KAAeD,IAAUnB,GAAa,iBAAiB;AAC3D,WAAO5F,IAASwG,GAAI,QAAQxG,KAAU,KAAK,UAAU;AACjD,YAAM4G,IAAOJ,GAAI,WAAWxG,CAAM;AAElC,UADA,KAAK,YAAYiH,GAAgBb,IAAYW,GAAS,KAAK,YAAY,KAAK,IAAI,GAAGC,CAAW,GAAGJ,CAAI,GACjG,KAAK,YAAY;AACjB,eAAO,KAAK,WAAW;QAElB,KAAK,eAAeV,GAAa;SAE7Bc,MAAgB;QAEbhB,GAA8BY,CAAI,KACxC,IACA,KAAK,6BAA8B;AAK7C,UAHAG,IAAUX,GAAW,KAAK,SAAS,GACnCY,KAAeD,IAAUnB,GAAa,iBAAiB,IAEnDoB,MAAgB,GAAG;AAEnB,YAAIJ,MAASlB,GAAU;AACnB,iBAAO,KAAK,oBAAoB,KAAK,WAAWsB,GAAa,KAAK,WAAW,KAAK,MAAM;AAGxF,aAAK,eAAed,GAAa,WACjC,KAAK,SAAS,KAAK,WACnB,KAAK,YAAY,KAAK,QACtB,KAAK,SAAS;MAElC;IACA;AACQ,WAAO;EACf;;;;;;EAMI,+BAA+B;AAC3B,QAAId;AACJ,UAAM,EAAE,QAAAlG,GAAQ,YAAAkH,GAAU,IAAK,MACzBY,KAAeZ,GAAWlH,CAAM,IAAI0G,GAAa,iBAAiB;AACxE,WAAA,KAAK,oBAAoB1G,GAAQ8H,GAAa,KAAK,QAAQ,IAC1D5B,KAAK,KAAK,YAAY,QAAQA,OAAO,UAAkBA,GAAG,wCAAyC,GAC7F,KAAK;EACpB;;;;;;;;;;EAUI,oBAAoBlG,IAAQ8H,GAAaE,IAAU;AAC/C,UAAM,EAAE,YAAAd,EAAU,IAAK;AACvB,WAAA,KAAK,cAAcY,MAAgB,IAC7BZ,EAAWlH,EAAM,IAAI,CAAC0G,GAAa,eACnCQ,EAAWlH,KAAS,CAAC,GAAGgI,EAAQ,GAClCF,MAAgB,KAEhB,KAAK,cAAcZ,EAAWlH,KAAS,CAAC,GAAGgI,EAAQ,GAEhDA;EACf;;;;;;;;EAQI,MAAM;AACF,QAAI9B;AACJ,YAAQ,KAAK,OAAK;MACd,KAAKa,IAAmB;AAEpB,eAAO,KAAK,WAAW,MAClB,KAAK,eAAeC,GAAa,aAC9B,KAAK,WAAW,KAAK,aACvB,KAAK,6BAA4B,IACjC;;MAGV,KAAKD,IAAmB;AACpB,eAAO,KAAK,kBAAkB,GAAG,CAAC;MAEtC,KAAKA,IAAmB;AACpB,eAAO,KAAK,kBAAkB,GAAG,CAAC;MAEtC,KAAKA,IAAmB;AACpB,gBAACb,KAAK,KAAK,YAAY,QAAQA,OAAO,UAAkBA,GAAG,2CAA2C,KAAK,QAAQ,GAC5G;MAEX,KAAKa,IAAmB;AAEpB,eAAO;IAEvB;EACA;AACA;AAOA,SAASkB,GAAWf,IAAY;AAC5B,MAAIgB,KAAM;AACV,QAAMC,IAAU,IAAIlB,GAAcC,IAAY,CAACI,OAASY,MAAO9B,GAAckB,EAAG,CAAE;AAClF,SAAO,SAAwBA,GAAKD,GAAY;AAC5C,QAAIe,IAAY,GACZtH,IAAS;AACb,YAAQA,IAASwG,EAAI,QAAQ,KAAKxG,CAAM,MAAM,KAAG;AAC7CoH,MAAAA,MAAOZ,EAAI,MAAMc,GAAWtH,CAAM,GAClCqH,EAAQ,YAAYd,CAAU;AAC9B,YAAMgB,IAAMF,EAAQ;QAAMb;;QAE1BxG,IAAS;MAAC;AACV,UAAIuH,IAAM,GAAG;AACTD,YAAYtH,IAASqH,EAAQ,IAAK;AAClC;MAChB;AACYC,UAAYtH,IAASuH,GAErBvH,IAASuH,MAAQ,IAAID,IAAY,IAAIA;IACjD;AACQ,UAAMpI,KAASkI,KAAMZ,EAAI,MAAMc,CAAS;AAExC,WAAAF,KAAM,IACClI;EACV;AACL;AAWO,SAAS+H,GAAgBb,IAAYW,IAASS,GAASZ,IAAM;AAChE,QAAMa,KAAeV,KAAUnB,GAAa,kBAAkB,GACxD8B,IAAaX,KAAUnB,GAAa;AAE1C,MAAI6B,MAAgB;AAChB,WAAOC,MAAe,KAAKd,OAASc,IAAaF,IAAU;AAG/D,MAAIE,GAAY;AACZ,UAAM5P,KAAQ8O,KAAOc;AACrB,WAAO5P,KAAQ,KAAKA,MAAS2P,IACvB,KACArB,GAAWoB,IAAU1P,EAAK,IAAI;EAC5C;AAGI,MAAI6P,IAAKH,GACLI,IAAKD,IAAKF,IAAc;AAC5B,SAAOE,KAAMC,KAAI;AACb,UAAMC,KAAOF,IAAKC,MAAQ,GACpBE,IAAS1B,GAAWyB,EAAG;AAC7B,QAAIC,IAASlB;AACTe,UAAKE,KAAM;aAENC,IAASlB;AACdgB,UAAKC,KAAM;;AAGX,aAAOzB,GAAWyB,KAAMJ,CAAW;EAE/C;AACI,SAAO;AACX;AACoBN,GAAWlC,EAAc;AAC1BkC,GAAWhC,EAAa;ACxcpC,IAAI4C;CACV,SAAUA,IAAI;AACXA,EAAAA,GAAG,OAAU,gCACbA,GAAG,SAAY,sCACfA,GAAG,MAAS,8BACZA,GAAG,QAAW,gCACdA,GAAG,MAAS,wCACZA,GAAG,QAAW;AAClB,GAAGA,MAAOA,IAAK,CAAA,EAAG;AACX,IAAIC;CACV,SAAUA,IAAO;AACdA,EAAAA,GAAM,OAAU,QAChBA,GAAM,SAAY,UAClBA,GAAM,WAAc,YACpBA,GAAM,SAAY,UAClBA,GAAM,OAAU,QAChBA,GAAM,QAAW,SACjBA,GAAM,OAAU,QAChBA,GAAM,OAAU;AACpB,GAAGA,OAAUA,KAAQ,CAAA,EAAG;AAMjB,IAAIC;CACV,SAAUA,IAAe;AACtBA,EAAAA,GAAc,YAAe,aAC7BA,GAAc,SAAY,UAC1BA,GAAc,iBAAoB;AACtC,GAAGA,OAAkBA,KAAgB,CAAA,EAAG;AACjC,IAAIC;CACV,SAAUA,IAAW;AAClBA,EAAAA,GAAU,IAAO,KACjBA,GAAU,UAAa,WACvBA,GAAU,iBAAoB,kBAC9BA,GAAU,SAAY,UACtBA,GAAU,OAAU,QACpBA,GAAU,UAAa,WACvBA,GAAU,QAAW,SACrBA,GAAU,IAAO,KACjBA,GAAU,OAAU,QACpBA,GAAU,WAAc,YACxBA,GAAU,UAAa,WACvBA,GAAU,MAAS,OACnBA,GAAU,aAAgB,cAC1BA,GAAU,OAAU,QACpBA,GAAU,KAAQ,MAClBA,GAAU,SAAY,UACtBA,GAAU,UAAa,WACvBA,GAAU,SAAY,UACtBA,GAAU,OAAU,QACpBA,GAAU,MAAS,OACnBA,GAAU,WAAc,YACxBA,GAAU,KAAQ,MAClBA,GAAU,OAAU,QACpBA,GAAU,UAAa,WACvBA,GAAU,SAAY,UACtBA,GAAU,MAAS,OACnBA,GAAU,MAAS,OACnBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,QAAW,SACrBA,GAAU,WAAc,YACxBA,GAAU,aAAgB,cAC1BA,GAAU,SAAY,UACtBA,GAAU,OAAU,QACpBA,GAAU,SAAY,UACtBA,GAAU,iBAAoB,iBAC9BA,GAAU,OAAU,QACpBA,GAAU,QAAW,SACrBA,GAAU,WAAc,YACxBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,OAAU,QACpBA,GAAU,SAAY,UACtBA,GAAU,SAAY,UACtBA,GAAU,KAAQ,MAClBA,GAAU,OAAU,QACpBA,GAAU,IAAO,KACjBA,GAAU,MAAS,OACnBA,GAAU,QAAW,SACrBA,GAAU,QAAW,SACrBA,GAAU,SAAY,UACtBA,GAAU,SAAY,UACtBA,GAAU,QAAW,SACrBA,GAAU,KAAQ,MAClBA,GAAU,OAAU,QACpBA,GAAU,UAAa,WACvBA,GAAU,OAAU,QACpBA,GAAU,aAAgB,cAC1BA,GAAU,UAAa,WACvBA,GAAU,OAAU,QACpBA,GAAU,OAAU,QACpBA,GAAU,OAAU,QACpBA,GAAU,SAAY,UACtBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,QAAW,SACrBA,GAAU,MAAS,OACnBA,GAAU,OAAU,QACpBA,GAAU,WAAc,YACxBA,GAAU,UAAa,WACvBA,GAAU,WAAc,YACxBA,GAAU,SAAY,UACtBA,GAAU,KAAQ,MAClBA,GAAU,WAAc,YACxBA,GAAU,SAAY,UACtBA,GAAU,IAAO,KACjBA,GAAU,QAAW,SACrBA,GAAU,YAAe,aACzBA,GAAU,MAAS,OACnBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,MAAS,OACnBA,GAAU,OAAU,QACpBA,GAAU,IAAO,KACjBA,GAAU,SAAY,UACtBA,GAAU,SAAY,UACtBA,GAAU,UAAa,WACvBA,GAAU,SAAY,UACtBA,GAAU,SAAY,UACtBA,GAAU,QAAW,SACrBA,GAAU,OAAU,QACpBA,GAAU,SAAY,UACtBA,GAAU,SAAY,UACtBA,GAAU,QAAW,SACrBA,GAAU,MAAS,OACnBA,GAAU,UAAa,WACvBA,GAAU,MAAS,OACnBA,GAAU,QAAW,SACrBA,GAAU,QAAW,SACrBA,GAAU,WAAc,YACxBA,GAAU,WAAc,YACxBA,GAAU,QAAW,SACrBA,GAAU,KAAQ,MAClBA,GAAU,KAAQ,MAClBA,GAAU,QAAW,SACrBA,GAAU,QAAW,SACrBA,GAAU,KAAQ,MAClBA,GAAU,QAAW,SACrBA,GAAU,KAAQ,MAClBA,GAAU,IAAO,KACjBA,GAAU,KAAQ,MAClBA,GAAU,MAAS,OACnBA,GAAU,MAAS,OACnBA,GAAU,MAAS,OACnBA,GAAU,MAAS;AACvB,GAAGA,MAAcA,IAAY,CAAA,EAAG;AAMzB,IAAIC;CACV,SAAUA,IAAQ;AACfA,EAAAA,GAAOA,GAAO,UAAa,CAAC,IAAI,WAChCA,GAAOA,GAAO,IAAO,CAAC,IAAI,KAC1BA,GAAOA,GAAO,UAAa,CAAC,IAAI,WAChCA,GAAOA,GAAO,iBAAoB,CAAC,IAAI,kBACvCA,GAAOA,GAAO,SAAY,CAAC,IAAI,UAC/BA,GAAOA,GAAO,OAAU,CAAC,IAAI,QAC7BA,GAAOA,GAAO,UAAa,CAAC,IAAI,WAChCA,GAAOA,GAAO,QAAW,CAAC,IAAI,SAC9BA,GAAOA,GAAO,IAAO,CAAC,IAAI,KAC1BA,GAAOA,GAAO,OAAU,CAAC,IAAI,QAC7BA,GAAOA,GAAO,WAAc,EAAE,IAAI,YAClCA,GAAOA,GAAO,UAAa,EAAE,IAAI,WACjCA,GAAOA,GAAO,MAAS,EAAE,IAAI,OAC7BA,GAAOA,GAAO,aAAgB,EAAE,IAAI,cACpCA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,UAAa,EAAE,IAAI,WACjCA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,MAAS,EAAE,IAAI,OAC7BA,GAAOA,GAAO,WAAc,EAAE,IAAI,YAClCA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,UAAa,EAAE,IAAI,WACjCA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,MAAS,EAAE,IAAI,OAC7BA,GAAOA,GAAO,MAAS,EAAE,IAAI,OAC7BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,QAAW,EAAE,IAAI,SAC/BA,GAAOA,GAAO,WAAc,EAAE,IAAI,YAClCA,GAAOA,GAAO,aAAgB,EAAE,IAAI,cACpCA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,iBAAoB,EAAE,IAAI,kBACxCA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,QAAW,EAAE,IAAI,SAC/BA,GAAOA,GAAO,WAAc,EAAE,IAAI,YAClCA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,IAAO,EAAE,IAAI,KAC3BA,GAAOA,GAAO,MAAS,EAAE,IAAI,OAC7BA,GAAOA,GAAO,QAAW,EAAE,IAAI,SAC/BA,GAAOA,GAAO,QAAW,EAAE,IAAI,SAC/BA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,QAAW,EAAE,IAAI,SAC/BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,UAAa,EAAE,IAAI,WACjCA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,aAAgB,EAAE,IAAI,cACpCA,GAAOA,GAAO,UAAa,EAAE,IAAI,WACjCA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,QAAW,EAAE,IAAI,SAC/BA,GAAOA,GAAO,MAAS,EAAE,IAAI,OAC7BA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,WAAc,EAAE,IAAI,YAClCA,GAAOA,GAAO,UAAa,EAAE,IAAI,WACjCA,GAAOA,GAAO,WAAc,EAAE,IAAI,YAClCA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,WAAc,EAAE,IAAI,YAClCA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,IAAO,EAAE,IAAI,KAC3BA,GAAOA,GAAO,QAAW,EAAE,IAAI,SAC/BA,GAAOA,GAAO,YAAe,EAAE,IAAI,aACnCA,GAAOA,GAAO,MAAS,EAAE,IAAI,OAC7BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,KAAQ,EAAE,IAAI,MAC5BA,GAAOA,GAAO,MAAS,EAAE,IAAI,OAC7BA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,IAAO,EAAE,IAAI,KAC3BA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,UAAa,EAAE,IAAI,WACjCA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,SAAY,EAAE,IAAI,UAChCA,GAAOA,GAAO,QAAW,EAAE,IAAI,SAC/BA,GAAOA,GAAO,OAAU,EAAE,IAAI,QAC9BA,GAAOA,GAAO,SAAY,GAAG,IAAI,UACjCA,GAAOA,GAAO,SAAY,GAAG,IAAI,UACjCA,GAAOA,GAAO,QAAW,GAAG,IAAI,SAChCA,GAAOA,GAAO,MAAS,GAAG,IAAI,OAC9BA,GAAOA,GAAO,UAAa,GAAG,IAAI,WAClCA,GAAOA,GAAO,MAAS,GAAG,IAAI,OAC9BA,GAAOA,GAAO,QAAW,GAAG,IAAI,SAChCA,GAAOA,GAAO,QAAW,GAAG,IAAI,SAChCA,GAAOA,GAAO,WAAc,GAAG,IAAI,YACnCA,GAAOA,GAAO,WAAc,GAAG,IAAI,YACnCA,GAAOA,GAAO,QAAW,GAAG,IAAI,SAChCA,GAAOA,GAAO,KAAQ,GAAG,IAAI,MAC7BA,GAAOA,GAAO,KAAQ,GAAG,IAAI,MAC7BA,GAAOA,GAAO,QAAW,GAAG,IAAI,SAChCA,GAAOA,GAAO,QAAW,GAAG,IAAI,SAChCA,GAAOA,GAAO,KAAQ,GAAG,IAAI,MAC7BA,GAAOA,GAAO,QAAW,GAAG,IAAI,SAChCA,GAAOA,GAAO,KAAQ,GAAG,IAAI,MAC7BA,GAAOA,GAAO,IAAO,GAAG,IAAI,KAC5BA,GAAOA,GAAO,KAAQ,GAAG,IAAI,MAC7BA,GAAOA,GAAO,MAAS,GAAG,IAAI,OAC9BA,GAAOA,GAAO,MAAS,GAAG,IAAI,OAC9BA,GAAOA,GAAO,MAAS,GAAG,IAAI,OAC9BA,GAAOA,GAAO,MAAS,GAAG,IAAI;AAClC,GAAGA,MAAWA,IAAS,CAAA,EAAG;AAC1B,IAAMC,KAAiB,oBAAI,IAAI;EAC3B,CAACF,EAAU,GAAGC,EAAO,CAAC;EACtB,CAACD,EAAU,SAASC,EAAO,OAAO;EAClC,CAACD,EAAU,gBAAgBC,EAAO,cAAc;EAChD,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,SAASC,EAAO,OAAO;EAClC,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,GAAGC,EAAO,CAAC;EACtB,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,UAAUC,EAAO,QAAQ;EACpC,CAACD,EAAU,SAASC,EAAO,OAAO;EAClC,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,YAAYC,EAAO,UAAU;EACxC,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,SAASC,EAAO,OAAO;EAClC,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,UAAUC,EAAO,QAAQ;EACpC,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,SAASC,EAAO,OAAO;EAClC,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,UAAUC,EAAO,QAAQ;EACpC,CAACD,EAAU,YAAYC,EAAO,UAAU;EACxC,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,gBAAgBC,EAAO,cAAc;EAChD,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,UAAUC,EAAO,QAAQ;EACpC,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,GAAGC,EAAO,CAAC;EACtB,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,SAASC,EAAO,OAAO;EAClC,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,YAAYC,EAAO,UAAU;EACxC,CAACD,EAAU,SAASC,EAAO,OAAO;EAClC,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,UAAUC,EAAO,QAAQ;EACpC,CAACD,EAAU,SAASC,EAAO,OAAO;EAClC,CAACD,EAAU,UAAUC,EAAO,QAAQ;EACpC,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,UAAUC,EAAO,QAAQ;EACpC,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,GAAGC,EAAO,CAAC;EACtB,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,WAAWC,EAAO,SAAS;EACtC,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,GAAGC,EAAO,CAAC;EACtB,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,SAASC,EAAO,OAAO;EAClC,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,MAAMC,EAAO,IAAI;EAC5B,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,QAAQC,EAAO,MAAM;EAChC,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,SAASC,EAAO,OAAO;EAClC,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,UAAUC,EAAO,QAAQ;EACpC,CAACD,EAAU,UAAUC,EAAO,QAAQ;EACpC,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,OAAOC,EAAO,KAAK;EAC9B,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,GAAGC,EAAO,CAAC;EACtB,CAACD,EAAU,IAAIC,EAAO,EAAE;EACxB,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,KAAKC,EAAO,GAAG;EAC1B,CAACD,EAAU,KAAKC,EAAO,GAAG;AAC9B,CAAC;AACM,SAASE,GAASrK,IAAS;AAC9B,MAAIoH;AACJ,UAAQA,KAAKgD,GAAe,IAAIpK,EAAO,OAAO,QAAQoH,OAAO,SAASA,KAAK+C,EAAO;AACtF;AACA,IAAM5Q,IAAI4Q;AAAV,IACaG,KAAmB;EAC5B,CAACP,EAAG,IAAI,GAAG,oBAAI,IAAI;IACfxwQ,EAAG,MAAM,GAAG,oBAAI,IAAI,CAACxQ,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,OAAOA,EAAE,cAAc,CAAC;EACxE,CAACwQ,EAAG,GAAG,GAAG,oBAAI,IAAI,CAACxQ,EAAE,OAAOA,EAAE,gBAAgBA,EAAE,IAAI,CAAC;EACrD,CAACwQ,EAAG,KAAK,GAAG,oBAAI,IAAK;EACrB,CAACA,EAAG,GAAG,GAAG,oBAAI,IAAK;EACnB,CAACA,EAAG,KAAK,GAAG,oBAAI,IAAK;AACzB;AA1FA,IA2FaQ,KAAmB,oBAAI,IAAI,CAAChR,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,EAAE,CAAC;AAExE2Q,EAAU,OACVA,EAAU,QACVA,EAAU,KACVA,EAAU,QACVA,EAAU,SACVA,EAAU,UACVA,EAAU;AC/fd,IAAIM;CACH,SAAUA,IAAO;AACdA,EAAAA,GAAMA,GAAM,OAAU,CAAC,IAAI,QAC3BA,GAAMA,GAAM,SAAY,CAAC,IAAI,UAC7BA,GAAMA,GAAM,UAAa,CAAC,IAAI,WAC9BA,GAAMA,GAAM,cAAiB,CAAC,IAAI,eAClCA,GAAMA,GAAM,YAAe,CAAC,IAAI,aAChCA,GAAMA,GAAM,WAAc,CAAC,IAAI,YAC/BA,GAAMA,GAAM,eAAkB,CAAC,IAAI,gBACnCA,GAAMA,GAAM,WAAc,CAAC,IAAI,YAC/BA,GAAMA,GAAM,wBAA2B,CAAC,IAAI,yBAC5CA,GAAMA,GAAM,sBAAyB,CAAC,IAAI,uBAC1CA,GAAMA,GAAM,sBAAyB,EAAE,IAAI,uBAC3CA,GAAMA,GAAM,yBAA4B,EAAE,IAAI,0BAC9CA,GAAMA,GAAM,uBAA0B,EAAE,IAAI,wBAC5CA,GAAMA,GAAM,uBAA0B,EAAE,IAAI,wBAC5CA,GAAMA,GAAM,6BAAgC,EAAE,IAAI,8BAClDA,GAAMA,GAAM,2BAA8B,EAAE,IAAI,4BAChDA,GAAMA,GAAM,2BAA8B,EAAE,IAAI,4BAChDA,GAAMA,GAAM,2BAA8B,EAAE,IAAI,4BAChDA,GAAMA,GAAM,gCAAmC,EAAE,IAAI,iCACrDA,GAAMA,GAAM,sBAAyB,EAAE,IAAI,uBAC3CA,GAAMA,GAAM,2BAA8B,EAAE,IAAI,4BAChDA,GAAMA,GAAM,gCAAmC,EAAE,IAAI,iCACrDA,GAAMA,GAAM,qCAAwC,EAAE,IAAI,sCAC1DA,GAAMA,GAAM,mCAAsC,EAAE,IAAI,oCACxDA,GAAMA,GAAM,mCAAsC,EAAE,IAAI,oCACxDA,GAAMA,GAAM,kCAAqC,EAAE,IAAI,mCACvDA,GAAMA,GAAM,6BAAgC,EAAE,IAAI,8BAClDA,GAAMA,GAAM,kCAAqC,EAAE,IAAI,mCACvDA,GAAMA,GAAM,uCAA0C,EAAE,IAAI,wCAC5DA,GAAMA,GAAM,4CAA+C,EAAE,IAAI,6CACjEA,GAAMA,GAAM,gCAAmC,EAAE,IAAI,iCACrDA,GAAMA,GAAM,wBAA2B,EAAE,IAAI,yBAC7CA,GAAMA,GAAM,iBAAoB,EAAE,IAAI,kBACtCA,GAAMA,GAAM,uBAA0B,EAAE,IAAI,wBAC5CA,GAAMA,GAAM,yBAA4B,EAAE,IAAI,0BAC9CA,GAAMA,GAAM,gCAAmC,EAAE,IAAI,iCACrDA,GAAMA,GAAM,gCAAmC,EAAE,IAAI,iCACrDA,GAAMA,GAAM,2BAA8B,EAAE,IAAI,4BAChDA,GAAMA,GAAM,+BAAkC,EAAE,IAAI,gCACpDA,GAAMA,GAAM,yBAA4B,EAAE,IAAI,0BAC9CA,GAAMA,GAAM,gBAAmB,EAAE,IAAI,iBACrCA,GAAMA,GAAM,0BAA6B,EAAE,IAAI,2BAC/CA,GAAMA,GAAM,gBAAmB,EAAE,IAAI,iBACrCA,GAAMA,GAAM,qBAAwB,EAAE,IAAI,sBAC1CA,GAAMA,GAAM,UAAa,EAAE,IAAI,WAC/BA,GAAMA,GAAM,yBAA4B,EAAE,IAAI,0BAC9CA,GAAMA,GAAM,8BAAiC,EAAE,IAAI,+BACnDA,GAAMA,GAAM,mCAAsC,EAAE,IAAI,oCACxDA,GAAMA,GAAM,wCAA2C,EAAE,IAAI,yCAC7DA,GAAMA,GAAM,mBAAsB,EAAE,IAAI,oBACxCA,GAAMA,GAAM,cAAiB,EAAE,IAAI,eACnCA,GAAMA,GAAM,mBAAsB,EAAE,IAAI,oBACxCA,GAAMA,GAAM,UAAa,EAAE,IAAI,WAC/BA,GAAMA,GAAM,sBAAyB,EAAE,IAAI,uBAC3CA,GAAMA,GAAM,eAAkB,EAAE,IAAI,gBACpCA,GAAMA,GAAM,qBAAwB,EAAE,IAAI,sBAC1CA,GAAMA,GAAM,+BAAkC,EAAE,IAAI,gCACpDA,GAAMA,GAAM,mCAAsC,EAAE,IAAI,oCACxDA,GAAMA,GAAM,0CAA6C,EAAE,IAAI,2CAC/DA,GAAMA,GAAM,0CAA6C,EAAE,IAAI,2CAC/DA,GAAMA,GAAM,kCAAqC,EAAE,IAAI,mCACvDA,GAAMA,GAAM,gDAAmD,EAAE,IAAI,iDACrEA,GAAMA,GAAM,+BAAkC,EAAE,IAAI,gCACpDA,GAAMA,GAAM,mCAAsC,EAAE,IAAI,oCACxDA,GAAMA,GAAM,0CAA6C,EAAE,IAAI,2CAC/DA,GAAMA,GAAM,0CAA6C,EAAE,IAAI,2CAC/DA,GAAMA,GAAM,kCAAqC,EAAE,IAAI,mCACvDA,GAAMA,GAAM,gBAAmB,EAAE,IAAI,iBACrCA,GAAMA,GAAM,gBAAmB,EAAE,IAAI,iBACrCA,GAAMA,GAAM,wBAA2B,EAAE,IAAI,yBAC7CA,GAAMA,GAAM,oBAAuB,EAAE,IAAI,qBACzCA,GAAMA,GAAM,sBAAyB,EAAE,IAAI,uBAC3CA,GAAMA,GAAM,sBAAyB,EAAE,IAAI;AAC/C,GAAGA,MAAUA,IAAQ,CAAA,EAAG;AAEjB,IAAMC,MAAgB;EACzB,MAAMD,EAAM;EACZ,QAAQA,EAAM;EACd,SAASA,EAAM;EACf,aAAaA,EAAM;EACnB,WAAWA,EAAM;EACjB,eAAeA,EAAM;AACzB;AAKA,SAASE,GAAanF,IAAI;AACtB,SAAOA,MAAMhM,EAAE,WAAWgM,MAAMhM,EAAE;AACtC;AACA,SAASoR,GAAapF,IAAI;AACtB,SAAOA,MAAMhM,EAAE,mBAAmBgM,MAAMhM,EAAE;AAC9C;AACA,SAASqR,GAAarF,IAAI;AACtB,SAAOA,MAAMhM,EAAE,iBAAiBgM,MAAMhM,EAAE;AAC5C;AACA,SAASsR,GAActF,IAAI;AACvB,SAAOqF,GAAarF,EAAE,KAAKoF,GAAapF,EAAE;AAC9C;AACA,SAASwC,GAAoBxC,IAAI;AAC7B,SAAOsF,GAActF,EAAE,KAAKmF,GAAanF,EAAE;AAC/C;AACA,SAASuF,GAAavF,IAAI;AACtB,SAAOA,KAAK;AAChB;AACA,SAASwF,GAAaxF,IAAI;AACtB,SAAOA,OAAOhM,EAAE,SAASgM,OAAOhM,EAAE,aAAagM,OAAOhM,EAAE,cAAcgM,OAAOhM,EAAE;AACnF;AACA,SAASyR,GAAoCzF,IAAI;AAC7C,SAAOwF,GAAaxF,EAAE,KAAKA,OAAOhM,EAAE,WAAWgM,OAAOhM,EAAE;AAC5D;AACA,SAAS0R,GAAqC/E,IAAM;AAChD,SAAIA,OAAS3M,EAAE,OACJuM,EAAI,yBAENI,KAAO,UACLJ,EAAI,wCAENR,GAAYY,EAAI,IACdJ,EAAI,8BAEND,GAAqBK,EAAI,IACvBJ,EAAI,iCAENF,GAAmBM,EAAI,KAAKA,OAAS3M,EAAE,kBACrCuM,EAAI,4BAER;AACX;AAEO,IAAMoF,KAAN,MAAgB;EACnB,YAAYvP,IAASsK,GAAS;AAC1B,SAAK,UAAUtK,IACf,KAAK,UAAUsK,GACf,KAAK,SAAS,OAEd,KAAK,SAAS,OAOd,KAAK,gBAAgB,OACrB,KAAK,mBAAmB,IACxB,KAAK,SAAS,OACd,KAAK,QAAQuE,EAAM,MACnB,KAAK,cAAcA,EAAM,MACzB,KAAK,iBAAiB,GACtB,KAAK,wBAAwB,IAC7B,KAAK,wBAAwB,MAC7B,KAAK,eAAe,MACpB,KAAK,cAAc,EAAE,MAAM,IAAI,OAAO,GAAI,GAC1C,KAAK,eAAe,IAAIxE,GAAaC,CAAO,GAC5C,KAAK,kBAAkB,KAAK,mBAAmB,EAAE,GACjD,KAAK,gBAAgB,IAAIkC,GAAclB,IAAgB,CAAC1B,IAAI2D,MAAa;AAGrE,WAAK,aAAa,MAAM,KAAK,iBAAiBA,IAAW,GACzD,KAAK,4CAA4C3D,EAAE;IACtD,GAAEU,EAAQ,eACL;MACE,yCAAyC,MAAM;AAC3C,aAAK,KAAKH,EAAI,yCAAyC,CAAC;MAC3D;MACD,4CAA4C,CAACoD,OAAa;AACtD,aAAK,KAAKpD,EAAI,4CAA4C,KAAK,iBAAiB,KAAK,aAAa,MAAMoD,EAAQ;MACnH;MACD,mCAAmC,CAAChD,OAAS;AACzC,cAAMiF,IAAQF,GAAqC/E,EAAI;AACnDiF,aACA,KAAK,KAAKA,GAAO,CAAC;MACzB;IACjB,IACc,MAAS;EACvB;;EAEI,KAAKjF,IAAMC,IAAW,GAAG;AACrB,QAAIiB,IAAIgE;AACR,KAACA,KAAMhE,KAAK,KAAK,SAAS,kBAAkB,QAAQgE,MAAO,UAAkBA,EAAG,KAAKhE,IAAI,KAAK,aAAa,SAASlB,IAAMC,CAAQ,CAAC;EAC3I;;EAEI,mBAAmBnE,IAAQ;AACvB,WAAK,KAAK,QAAQ,yBAGX;MACH,WAAW,KAAK,aAAa;MAC7B,UAAU,KAAK,aAAa,MAAMA;MAClC,aAAa,KAAK,aAAa,SAASA;MACxC,SAAS;MACT,QAAQ;MACR,WAAW;IACd,IATU;EAUnB;EACI,kBAAkB;AACd,QAAI,CAAA,KAAK,QAGT;AAAA,WADA,KAAK,SAAS,MACP,KAAK,UAAU,CAAC,KAAK,UAAQ;AAChC,aAAK,wBAAwB;AAC7B,cAAMuD,KAAK,KAAK,SAAU;AACrB,aAAK,mBAAA,KACN,KAAK,WAAWA,EAAE;MAElC;AACQ,WAAK,SAAS;IAAA;EACtB;;EAEI,QAAQ;AACJ,SAAK,SAAS;EACtB;EACI,OAAO8F,IAAe;AAClB,QAAI,CAAC,KAAK;AACN,YAAM,IAAI,MAAM,4BAA4B;AAEhD,SAAK,SAAS,OAEV,CAAA,KAAK,WAET,KAAK,gBAAiB,GACjB,KAAK,UACNA,MAAkB,QAA4CA,GAAe;EAEzF;EACI,MAAM5E,IAAOC,GAAa2E,IAAe;AACrC,SAAK,SAAS,MACd,KAAK,aAAa,MAAM5E,IAAOC,CAAW,GAC1C,KAAK,gBAAiB,GACjB,KAAK,UACN2E,MAAkB,QAA4CA,GAAe;EAEzF;EACI,uBAAuB5E,IAAO;AAC1B,SAAK,SAAS,MACd,KAAK,aAAa,uBAAuBA,EAAK,GAC9C,KAAK,gBAAiB;EAC9B;;EAEI,qBAAqB;AACjB,WAAI,KAAK,aAAa,iBAClB,KAAK,aAAa,QAAQ,KAAK,qBAAqB,GACpD,KAAK,wBAAwB,GAC7B,KAAK,SAAS,OACP,QAEJ;EACf;;EAEI,WAAW;AACP,WAAA,KAAK,yBACE,KAAK,aAAa,QAAS;EAC1C;EACI,WAAWI,IAAO;AACd,SAAK,yBAAyBA;AAC9B,aAASD,IAAI,GAAGA,IAAIC,IAAOD;AACvB,WAAK,aAAa,QAAS;EAEvC;EACI,wBAAwBD,IAASvG,GAAe;AAC5C,WAAI,KAAK,aAAa,WAAWuG,IAASvG,CAAa,KAEnD,KAAK,WAAWuG,GAAQ,SAAS,CAAC,GAC3B,QAEJ;EACf;;EAEI,uBAAuB;AACnB,SAAK,eAAe;MAChB,MAAMG,EAAU;MAChB,SAAS;MACT,OAAOqD,EAAO;MACd,aAAa;MACb,gBAAgB;MAChB,OAAO,CAAE;MACT,UAAU,KAAK,mBAAmB,CAAC;IACtC;EACT;EACI,qBAAqB;AACjB,SAAK,eAAe;MAChB,MAAMrD,EAAU;MAChB,SAAS;MACT,OAAOqD,EAAO;MACd,aAAa;MACb,gBAAgB;MAChB,OAAO,CAAE;MACT,UAAU,KAAK,mBAAmB,CAAC;IACtC;EACT;EACI,oBAAoBnI,IAAQ;AACxB,SAAK,eAAe;MAChB,MAAM8E,EAAU;MAChB,MAAM;MACN,UAAU,KAAK,mBAAmB9E,EAAM;IAC3C;EACT;EACI,oBAAoBsJ,IAAa;AAC7B,SAAK,eAAe;MAChB,MAAMxE,EAAU;MAChB,MAAMwE;MACN,aAAa;MACb,UAAU;MACV,UAAU;MACV,UAAU,KAAK;IAClB;EACT;EACI,sBAAsBzR,IAAM0R,GAAO;AAC/B,SAAK,wBAAwB;MACzB,MAAA1R;MACA,OAAA0R;MACA,UAAU,KAAK;IAClB;EACT;;EAEI,YAAYC,IAAiB;AACzB,SAAK,cAAc;MACf,MAAMA;MACN,OAAO;IACV,GACD,KAAK,kBAAkB,KAAK,mBAAmB,CAAC;EACxD;EACI,iBAAiB;AACb,QAAIpE,IACAgE;AACJ,UAAM7L,KAAQ,KAAK;AACnB,QAAIwH,GAAaxH,IAAO,KAAK,YAAY,IAAI,MAAM,MAAA;AAE/C,UADAA,GAAM,MAAM,KAAK,KAAK,WAAW,GAC7BA,GAAM,YAAY,KAAK,iBAAiB;AACxC,cAAMkM,KAAkBrE,MAAMgE,IAAK7L,GAAM,UAAU,WAAW,QAAQ6H,OAAO,SAASA,KAAMgE,EAAG,QAAQ,uBAAO,OAAO,IAAI;AACzHK,UAAc,KAAK,YAAY,IAAI,IAAI,KAAK,iBAE5C,KAAK,gBAAiB;MACtC;IAAA;AAGY,WAAK,KAAK3F,EAAI,kBAAkB;EAE5C;EACI,kBAAkB;AACV,SAAK,oBACL,KAAK,gBAAgB,UAAU,KAAK,aAAa,MACjD,KAAK,gBAAgB,SAAS,KAAK,aAAa,KAChD,KAAK,gBAAgB,YAAY,KAAK,aAAa;EAE/D;;EAEI,aAAa4F,IAAI;AACb,SAAK,2BAA2BA,GAAG,QAAQ,GAC3C,KAAK,eAAe,MAChBA,GAAG,aACHA,GAAG,SAAS,UAAU,KAAK,aAAa,MACxCA,GAAG,SAAS,SAAS,KAAK,aAAa,MAAM,GAC7CA,GAAG,SAAS,YAAY,KAAK,aAAa,SAAS,IAEvD,KAAK,kBAAkB,KAAK,mBAAmB,EAAE;EACzD;EACI,sBAAsB;AAClB,UAAMA,KAAK,KAAK;AAChB,SAAK,aAAaA,EAAE,GACpBA,GAAG,QAAQrB,GAASqB,GAAG,OAAO,GAC1BA,GAAG,SAAS5E,EAAU,aACtB,KAAK,mBAAmB4E,GAAG,SAC3B,KAAK,QAAQ,WAAWA,EAAE,MAGtBA,GAAG,MAAM,SAAS,KAClB,KAAK,KAAK5F,EAAI,oBAAoB,GAElC4F,GAAG,eACH,KAAK,KAAK5F,EAAI,yBAAyB,GAE3C,KAAK,QAAQ,SAAS4F,EAAE,IAE5B,KAAK,aAAa,gBAAiB;EAC3C;EACI,mBAAmBA,IAAI;AACnB,SAAK,aAAaA,EAAE,GACpB,KAAK,QAAQ,UAAUA,EAAE,GACzB,KAAK,aAAa,gBAAiB;EAC3C;EACI,mBAAmBA,IAAI;AACnB,SAAK,aAAaA,EAAE,GACpB,KAAK,QAAQ,UAAUA,EAAE,GACzB,KAAK,aAAa,gBAAiB;EAC3C;EACI,2BAA2BC,IAAc;AACrC,QAAI,KAAK,uBAAuB;AAQ5B,cALIA,MAAgB,KAAK,sBAAsB,aAC3C,KAAK,sBAAsB,SAAS,UAAUA,GAAa,WAC3D,KAAK,sBAAsB,SAAS,SAASA,GAAa,UAC1D,KAAK,sBAAsB,SAAS,YAAYA,GAAa,cAEzD,KAAK,sBAAsB,MAAI;QACnC,KAAK7E,EAAU,WAAW;AACtB,eAAK,QAAQ,YAAY,KAAK,qBAAqB;AACnD;QACpB;QACgB,KAAKA,EAAU,gBAAgB;AAC3B,eAAK,QAAQ,gBAAgB,KAAK,qBAAqB;AACvD;QACpB;QACgB,KAAKA,EAAU,sBAAsB;AACjC,eAAK,QAAQ,sBAAsB,KAAK,qBAAqB;AAC7D;QACpB;MACA;AACY,WAAK,wBAAwB;IACzC;EACA;EACI,gBAAgB;AACZ,UAAMnF,KAAW,KAAK,mBAAmB,CAAC;AACtCA,IAAAA,OACAA,GAAS,UAAUA,GAAS,WAC5BA,GAAS,SAASA,GAAS,UAC3BA,GAAS,YAAYA,GAAS,cAElC,KAAK,2BAA2BA,EAAQ,GACxC,KAAK,QAAQ,MAAM,EAAE,MAAMmF,EAAU,KAAK,UAAAnF,GAAAA,CAAU,GACpD,KAAK,SAAS;EACtB;;;;;;;;;;EAUI,mCAAmC9H,IAAM+R,GAAI;AACzC,QAAI,KAAK;AACL,UAAI,KAAK,sBAAsB,SAAS/R,IAAM;AAC1C,aAAK,sBAAsB,SAAS+R;AACpC;MAChB;AAEgB,aAAK,kBAAkB,KAAK,mBAAmB,CAAC,GAChD,KAAK,2BAA2B,KAAK,eAAe,GACpD,KAAK,aAAa,gBAAiB;AAG3C,SAAK,sBAAsB/R,IAAM+R,CAAE;EAC3C;EACI,eAAerG,IAAI;AACf,UAAM1L,IAAOkR,GAAaxF,EAAE,IACtBuB,EAAU,uBACVvB,OAAOhM,EAAE,OACLuN,EAAU,iBACVA,EAAU;AACpB,SAAK,mCAAmCjN,GAAM,OAAO,cAAc0L,EAAE,CAAC;EAC9E;;;EAGI,WAAWqG,IAAI;AACX,SAAK,mCAAmC9E,EAAU,WAAW8E,EAAE;EACvE;;EAEI,2BAA2B;AACvB,SAAK,cAAc,KAAK,OACxB,KAAK,QAAQpB,EAAM,qBACnB,KAAK,iBAAiB,KAAK,aAAa,KACxC,KAAK,cAAc,YAAY,KAAK,iCAAkC,IAAGtC,GAAa,YAAYA,GAAa,MAAM;EAC7H;EACI,mCAAmC;AAC/B,WAAQ,KAAK,gBAAgBsC,EAAM,iCAC/B,KAAK,gBAAgBA,EAAM,iCAC3B,KAAK,gBAAgBA,EAAM;EACvC;EACI,4CAA4CjF,IAAI;AACxC,SAAK,iCAAA,IACL,KAAK,YAAY,SAAS,OAAO,cAAcA,EAAE,IAGjD,KAAK,eAAeA,EAAE;EAElC;;EAEI,WAAWA,IAAI;AACX,YAAQ,KAAK,OAAK;MACd,KAAKiF,EAAM,MAAM;AACb,aAAK,WAAWjF,EAAE;AAClB;MAChB;MACY,KAAKiF,EAAM,QAAQ;AACf,aAAK,aAAajF,EAAE;AACpB;MAChB;MACY,KAAKiF,EAAM,SAAS;AAChB,aAAK,cAAcjF,EAAE;AACrB;MAChB;MACY,KAAKiF,EAAM,aAAa;AACpB,aAAK,iBAAiBjF,EAAE;AACxB;MAChB;MACY,KAAKiF,EAAM,WAAW;AAClB,aAAK,gBAAgBjF,EAAE;AACvB;MAChB;MACY,KAAKiF,EAAM,UAAU;AACjB,aAAK,cAAcjF,EAAE;AACrB;MAChB;MACY,KAAKiF,EAAM,cAAc;AACrB,aAAK,iBAAiBjF,EAAE;AACxB;MAChB;MACY,KAAKiF,EAAM,UAAU;AACjB,aAAK,cAAcjF,EAAE;AACrB;MAChB;MACY,KAAKiF,EAAM,uBAAuB;AAC9B,aAAK,yBAAyBjF,EAAE;AAChC;MAChB;MACY,KAAKiF,EAAM,qBAAqB;AAC5B,aAAK,uBAAuBjF,EAAE;AAC9B;MAChB;MACY,KAAKiF,EAAM,qBAAqB;AAC5B,aAAK,uBAAuBjF,EAAE;AAC9B;MAChB;MACY,KAAKiF,EAAM,wBAAwB;AAC/B,aAAK,0BAA0BjF,EAAE;AACjC;MAChB;MACY,KAAKiF,EAAM,sBAAsB;AAC7B,aAAK,wBAAwBjF,EAAE;AAC/B;MAChB;MACY,KAAKiF,EAAM,sBAAsB;AAC7B,aAAK,wBAAwBjF,EAAE;AAC/B;MAChB;MACY,KAAKiF,EAAM,4BAA4B;AACnC,aAAK,6BAA6BjF,EAAE;AACpC;MAChB;MACY,KAAKiF,EAAM,0BAA0B;AACjC,aAAK,2BAA2BjF,EAAE;AAClC;MAChB;MACY,KAAKiF,EAAM,0BAA0B;AACjC,aAAK,2BAA2BjF,EAAE;AAClC;MAChB;MACY,KAAKiF,EAAM,0BAA0B;AACjC,aAAK,4BAA4BjF,EAAE;AACnC;MAChB;MACY,KAAKiF,EAAM,+BAA+B;AACtC,aAAK,gCAAgCjF,EAAE;AACvC;MAChB;MACY,KAAKiF,EAAM,qBAAqB;AAC5B,aAAK,wBAAwBjF,EAAE;AAC/B;MAChB;MACY,KAAKiF,EAAM,0BAA0B;AACjC,aAAK,4BAA4BjF,EAAE;AACnC;MAChB;MACY,KAAKiF,EAAM,+BAA+B;AACtC,aAAK,gCAAgCjF,EAAE;AACvC;MAChB;MACY,KAAKiF,EAAM,oCAAoC;AAC3C,aAAK,oCAAoCjF,EAAE;AAC3C;MAChB;MACY,KAAKiF,EAAM,kCAAkC;AACzC,aAAK,kCAAkCjF,EAAE;AACzC;MAChB;MACY,KAAKiF,EAAM,kCAAkC;AACzC,aAAK,kCAAkCjF,EAAE;AACzC;MAChB;MACY,KAAKiF,EAAM,iCAAiC;AACxC,aAAK,kCAAkCjF,EAAE;AACzC;MAChB;MACY,KAAKiF,EAAM,4BAA4B;AACnC,aAAK,8BAA8BjF,EAAE;AACrC;MAChB;MACY,KAAKiF,EAAM,iCAAiC;AACxC,aAAK,kCAAkCjF,EAAE;AACzC;MAChB;MACY,KAAKiF,EAAM,sCAAsC;AAC7C,aAAK,sCAAsCjF,EAAE;AAC7C;MAChB;MACY,KAAKiF,EAAM,2CAA2C;AAClD,aAAK,0CAA0CjF,EAAE;AACjD;MAChB;MACY,KAAKiF,EAAM,+BAA+B;AACtC,aAAK,gCAAgCjF,EAAE;AACvC;MAChB;MACY,KAAKiF,EAAM,uBAAuB;AAC9B,aAAK,0BAA0BjF,EAAE;AACjC;MAChB;MACY,KAAKiF,EAAM,gBAAgB;AACvB,aAAK,oBAAoBjF,EAAE;AAC3B;MAChB;MACY,KAAKiF,EAAM,sBAAsB;AAC7B,aAAK,yBAAyBjF,EAAE;AAChC;MAChB;MACY,KAAKiF,EAAM,wBAAwB;AAC/B,aAAK,2BAA2BjF,EAAE;AAClC;MAChB;MACY,KAAKiF,EAAM,+BAA+B;AACtC,aAAK,iCAAiCjF,EAAE;AACxC;MAChB;MACY,KAAKiF,EAAM,+BAA+B;AACtC,aAAK,iCAAiCjF,EAAE;AACxC;MAChB;MACY,KAAKiF,EAAM,0BAA0B;AACjC,aAAK,6BAA6BjF,EAAE;AACpC;MAChB;MACY,KAAKiF,EAAM,8BAA8B;AACrC,aAAK,gCAAgCjF,EAAE;AACvC;MAChB;MACY,KAAKiF,EAAM,wBAAwB;AAC/B,aAAK,0BAA0BjF,EAAE;AACjC;MAChB;MACY,KAAKiF,EAAM,eAAe;AACtB,aAAK,mBAAmBjF,EAAE;AAC1B;MAChB;MACY,KAAKiF,EAAM,yBAAyB;AAChC,aAAK,4BAA4BjF,EAAE;AACnC;MAChB;MACY,KAAKiF,EAAM,eAAe;AACtB,aAAK,mBAAmBjF,EAAE;AAC1B;MAChB;MACY,KAAKiF,EAAM,oBAAoB;AAC3B,aAAK,uBAAuBjF,EAAE;AAC9B;MAChB;MACY,KAAKiF,EAAM,SAAS;AAChB,aAAK,cAAcjF,EAAE;AACrB;MAChB;MACY,KAAKiF,EAAM,wBAAwB;AAC/B,aAAK,0BAA0BjF,EAAE;AACjC;MAChB;MACY,KAAKiF,EAAM,6BAA6B;AACpC,aAAK,8BAA8BjF,EAAE;AACrC;MAChB;MACY,KAAKiF,EAAM,kCAAkC;AACzC,aAAK,kCAAkCjF,EAAE;AACzC;MAChB;MACY,KAAKiF,EAAM,uCAAuC;AAC9C,aAAK,sCAAsCjF,EAAE;AAC7C;MAChB;MACY,KAAKiF,EAAM,kBAAkB;AACzB,aAAK,qBAAqBjF,EAAE;AAC5B;MAChB;MACY,KAAKiF,EAAM,aAAa;AACpB,aAAK,iBAAiBjF,EAAE;AACxB;MAChB;MACY,KAAKiF,EAAM,kBAAkB;AACzB,aAAK,qBAAqBjF,EAAE;AAC5B;MAChB;MACY,KAAKiF,EAAM,SAAS;AAChB,aAAK,cAAcjF,EAAE;AACrB;MAChB;MACY,KAAKiF,EAAM,qBAAqB;AAC5B,aAAK,wBAAwBjF,EAAE;AAC/B;MAChB;MACY,KAAKiF,EAAM,cAAc;AACrB,aAAK,kBAAkBjF,EAAE;AACzB;MAChB;MACY,KAAKiF,EAAM,oBAAoB;AAC3B,aAAK,uBAAuBjF,EAAE;AAC9B;MAChB;MACY,KAAKiF,EAAM,8BAA8B;AACrC,aAAK,gCAAgCjF,EAAE;AACvC;MAChB;MACY,KAAKiF,EAAM,kCAAkC;AACzC,aAAK,oCAAoCjF,EAAE;AAC3C;MAChB;MACY,KAAKiF,EAAM,yCAAyC;AAChD,aAAK,0CAA0CjF,EAAE;AACjD;MAChB;MACY,KAAKiF,EAAM,yCAAyC;AAChD,aAAK,0CAA0CjF,EAAE;AACjD;MAChB;MACY,KAAKiF,EAAM,iCAAiC;AACxC,aAAK,mCAAmCjF,EAAE;AAC1C;MAChB;MACY,KAAKiF,EAAM,+CAA+C;AACtD,aAAK,+CAA+CjF,EAAE;AACtD;MAChB;MACY,KAAKiF,EAAM,8BAA8B;AACrC,aAAK,gCAAgCjF,EAAE;AACvC;MAChB;MACY,KAAKiF,EAAM,kCAAkC;AACzC,aAAK,oCAAoCjF,EAAE;AAC3C;MAChB;MACY,KAAKiF,EAAM,yCAAyC;AAChD,aAAK,0CAA0CjF,EAAE;AACjD;MAChB;MACY,KAAKiF,EAAM,yCAAyC;AAChD,aAAK,0CAA0CjF,EAAE;AACjD;MAChB;MACY,KAAKiF,EAAM,iCAAiC;AACxC,aAAK,mCAAmCjF,EAAE;AAC1C;MAChB;MACY,KAAKiF,EAAM,eAAe;AACtB,aAAK,mBAAmBjF,EAAE;AAC1B;MAChB;MACY,KAAKiF,EAAM,eAAe;AACtB,aAAK,mBAAmBjF,EAAE;AAC1B;MAChB;MACY,KAAKiF,EAAM,uBAAuB;AAC9B,aAAK,0BAA0BjF,EAAE;AACjC;MAChB;MACY,KAAKiF,EAAM,mBAAmB;AAC1B,aAAK,sBAAsBjF,EAAE;AAC7B;MAChB;MACY,KAAKiF,EAAM,qBAAqB;AAC5B,aAAK,yBAA0B;AAC/B;MAChB;MACY,KAAKA,EAAM,qBAAqB;AAC5B,aAAK,yBAAyBjF,EAAE;AAChC;MAChB;MACY;AACI,cAAM,IAAI,MAAM,eAAe;IAE/C;EACA;;;;EAII,WAAWA,IAAI;AACX,YAAQA,IAAE;MACN,KAAKhM,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,WAAW;AACd,aAAK,yBAA0B;AAC/B;MAChB;MACY,KAAKA,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,eAAeP,EAAE;AACtB;MAChB;MACY,KAAKhM,EAAE,KAAK;AACR,aAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,eAAegM,EAAE;IAEtC;EACA;;;EAGI,aAAaA,IAAI;AACb,YAAQA,IAAE;MACN,KAAKhM,EAAE,WAAW;AACd,aAAK,yBAA0B;AAC/B;MAChB;MACY,KAAKA,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,WAAWX,EAAqB;AACrC;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,eAAegM,EAAE;IAEtC;EACA;;;EAGI,cAAcA,IAAI;AACd,YAAQA,IAAE;MACN,KAAKhM,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,WAAWX,EAAqB;AACrC;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,eAAegM,EAAE;IAEtC;EACA;;;EAGI,iBAAiBA,IAAI;AACjB,YAAQA,IAAE;MACN,KAAKhM,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,WAAWX,EAAqB;AACrC;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,eAAegM,EAAE;IAEtC;EACA;;;EAGI,gBAAgBA,IAAI;AAChB,YAAQA,IAAE;MACN,KAAKhM,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,WAAWX,EAAqB;AACrC;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,eAAegM,EAAE;IAEtC;EACA;;;EAGI,cAAcA,IAAI;AACd,QAAIsF,GAActF,EAAE;AAChB,WAAK,qBAAsB,GAC3B,KAAK,QAAQiF,EAAM,UACnB,KAAK,cAAcjF,EAAE;;AAGrB,cAAQA,IAAE;QACN,KAAKhM,EAAE,kBAAkB;AACrB,eAAK,QAAQiR,EAAM;AACnB;QACpB;QACgB,KAAKjR,EAAE,SAAS;AACZ,eAAK,QAAQiR,EAAM;AACnB;QACpB;QACgB,KAAKjR,EAAE,eAAe;AAClB,eAAK,KAAKuM,EAAI,sCAAsC,GACpD,KAAK,oBAAoB,CAAC,GAC1B,KAAK,QAAQ0E,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;AAC1B;QACpB;QACgB,KAAKhM,EAAE,KAAK;AACR,eAAK,KAAKuM,EAAI,gBAAgB,GAC9B,KAAK,WAAW,GAAG,GACnB,KAAK,cAAe;AACpB;QACpB;QACgB;AACI,eAAK,KAAKA,EAAI,8BAA8B,GAC5C,KAAK,WAAW,GAAG,GACnB,KAAK,QAAQ0E,EAAM,MACnB,KAAK,WAAWjF,EAAE;MAEtC;EACA;;;EAGI,iBAAiBA,IAAI;AACjB,QAAIsF,GAActF,EAAE;AAChB,WAAK,mBAAoB,GACzB,KAAK,QAAQiF,EAAM,UACnB,KAAK,cAAcjF,EAAE;;AAGrB,cAAQA,IAAE;QACN,KAAKhM,EAAE,mBAAmB;AACtB,eAAK,KAAKuM,EAAI,iBAAiB,GAC/B,KAAK,QAAQ0E,EAAM;AACnB;QACpB;QACgB,KAAKjR,EAAE,KAAK;AACR,eAAK,KAAKuM,EAAI,gBAAgB,GAC9B,KAAK,WAAW,IAAI,GACpB,KAAK,cAAe;AACpB;QACpB;QACgB;AACI,eAAK,KAAKA,EAAI,8BAA8B,GAC5C,KAAK,oBAAoB,CAAC,GAC1B,KAAK,QAAQ0E,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;MAE9C;EACA;;;EAGI,cAAcA,IAAI;AACd,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,WAAW;AACd,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,SAAS;AACZ,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,QAAQiR,EAAM,MACnB,KAAK,oBAAqB;AAC1B;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrCvG,EAAM,WAAW4F;AACjB;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,QAAQ,GACtB,KAAK,cAAe;AACpB;MAChB;MACY;AACIvG,UAAM,WAAW,OAAO,cAAcoL,GAAapF,EAAE,IAAIuF,GAAavF,EAAE,IAAIA,EAAE;IAE9F;EACA;;;EAGI,yBAAyBA,IAAI;AACrBA,IAAAA,OAAOhM,EAAE,UACT,KAAK,QAAQiR,EAAM,uBAGnB,KAAK,WAAW,GAAG,GACnB,KAAK,QAAQA,EAAM,QACnB,KAAK,aAAajF,EAAE;EAEhC;;;EAGI,uBAAuBA,IAAI;AACnBsF,OAActF,EAAE,KAChB,KAAK,QAAQiF,EAAM,qBACnB,KAAK,uBAAuBjF,EAAE,MAG9B,KAAK,WAAW,IAAI,GACpB,KAAK,QAAQiF,EAAM,QACnB,KAAK,aAAajF,EAAE;EAEhC;EACI,oBAAoBsG,IAAK;AACrB,QAAI,CAAC,KAAK,aAAa,WAAW,KAAK,kBAAkB,KAAK;AAC1D,aAAO,CAAC,KAAK,mBAAoB;AAErC,SAAK,mBAAoB;AACzB,UAAMtM,IAAQ,KAAK;AAGnB,YAFAA,EAAM,UAAU,KAAK,kBACV,KAAK,aAAa,KAAK,KAAK,iBAAiB,MAAM,GACpD;MACN,KAAKhG,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;AACH,eAAA,KAAK,WAAW,KAAK,iBAAiB,MAAM,GAC5C,KAAK,QAAQiR,EAAM,uBACZ;MAEX,KAAKjR,EAAE;AACH,eAAA,KAAK,WAAW,KAAK,iBAAiB,MAAM,GAC5C,KAAK,QAAQiR,EAAM,wBACZ;MAEX,KAAKjR,EAAE;AACH,eAAA,KAAK,WAAW,KAAK,iBAAiB,MAAM,GAC5C,KAAK,oBAAqB,GAC1B,KAAK,QAAQiR,EAAM,MACZ;MAEX;AACI,eAAO,CAAC,KAAK,mBAAoB;IAEjD;EACA;;;EAGI,uBAAuBjF,IAAI;AACnB,SAAK,oBAAoBA,EAAE,MAC3B,KAAK,WAAW,IAAI,GACpB,KAAK,QAAQiF,EAAM,QACnB,KAAK,aAAajF,EAAE;EAEhC;;;EAGI,0BAA0BA,IAAI;AACtBA,IAAAA,OAAOhM,EAAE,UACT,KAAK,QAAQiR,EAAM,wBAGnB,KAAK,WAAW,GAAG,GACnB,KAAK,QAAQA,EAAM,SACnB,KAAK,cAAcjF,EAAE;EAEjC;;;EAGI,wBAAwBA,IAAI;AACpBsF,OAActF,EAAE,KAChB,KAAK,QAAQiF,EAAM,sBACnB,KAAK,wBAAwBjF,EAAE,MAG/B,KAAK,WAAW,IAAI,GACpB,KAAK,QAAQiF,EAAM,SACnB,KAAK,cAAcjF,EAAE;EAEjC;;;EAGI,wBAAwBA,IAAI;AACpB,SAAK,oBAAoBA,EAAE,MAC3B,KAAK,WAAW,IAAI,GACpB,KAAK,QAAQiF,EAAM,SACnB,KAAK,cAAcjF,EAAE;EAEjC;;;EAGI,6BAA6BA,IAAI;AAC7B,YAAQA,IAAE;MACN,KAAKhM,EAAE,SAAS;AACZ,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,kBAAkB;AACrB,aAAK,QAAQiR,EAAM,0BACnB,KAAK,WAAW,IAAI;AACpB;MAChB;MACY;AACI,aAAK,WAAW,GAAG,GACnB,KAAK,QAAQA,EAAM,aACnB,KAAK,iBAAiBjF,EAAE;IAExC;EACA;;;EAGI,2BAA2BA,IAAI;AACvBsF,OAActF,EAAE,KAChB,KAAK,QAAQiF,EAAM,0BACnB,KAAK,2BAA2BjF,EAAE,MAGlC,KAAK,WAAW,IAAI,GACpB,KAAK,QAAQiF,EAAM,aACnB,KAAK,iBAAiBjF,EAAE;EAEpC;;;EAGI,2BAA2BA,IAAI;AACvB,SAAK,oBAAoBA,EAAE,MAC3B,KAAK,WAAW,IAAI,GACpB,KAAK,QAAQiF,EAAM,aACnB,KAAK,iBAAiBjF,EAAE;EAEpC;;;EAGI,4BAA4BA,IAAI;AACxBA,IAAAA,OAAOhM,EAAE,gBACT,KAAK,QAAQiR,EAAM,+BACnB,KAAK,WAAW,GAAG,MAGnB,KAAK,QAAQA,EAAM,aACnB,KAAK,iBAAiBjF,EAAE;EAEpC;;;EAGI,gCAAgCA,IAAI;AAC5BA,IAAAA,OAAOhM,EAAE,gBACT,KAAK,QAAQiR,EAAM,+BACnB,KAAK,WAAW,GAAG,MAGnB,KAAK,QAAQA,EAAM,aACnB,KAAK,iBAAiBjF,EAAE;EAEpC;;;EAGI,wBAAwBA,IAAI;AACxB,YAAQA,IAAE;MACN,KAAKhM,EAAE,cAAc;AACjB,aAAK,QAAQiR,EAAM,0BACnB,KAAK,WAAW,GAAG;AACnB;MAChB;MACY,KAAKjR,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,WAAWX,EAAqB;AACrC;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,8BAA8B,GAC5C,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,eAAeP,EAAE;IAEtC;EACA;;;EAGI,4BAA4BA,IAAI;AAC5B,YAAQA,IAAE;MACN,KAAKhM,EAAE,cAAc;AACjB,aAAK,QAAQiR,EAAM,+BACnB,KAAK,WAAW,GAAG;AACnB;MAChB;MACY,KAAKjR,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,QAAQ0E,EAAM,qBACnB,KAAK,WAAWrF,EAAqB;AACrC;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,8BAA8B,GAC5C,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,QAAQ0E,EAAM,qBACnB,KAAK,eAAejF,EAAE;IAEtC;EACA;;;EAGI,gCAAgCA,IAAI;AAChC,YAAQA,IAAE;MACN,KAAKhM,EAAE,cAAc;AACjB,aAAK,WAAW,GAAG;AACnB;MAChB;MACY,KAAKA,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,QAAQiR,EAAM,aACnB,KAAK,WAAW,GAAG;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,QAAQ0E,EAAM,qBACnB,KAAK,WAAWrF,EAAqB;AACrC;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,8BAA8B,GAC5C,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,QAAQ0E,EAAM,qBACnB,KAAK,eAAejF,EAAE;IAEtC;EACA;;;EAGI,oCAAoCA,IAAI;AAChCA,IAAAA,OAAOhM,EAAE,UACT,KAAK,QAAQiR,EAAM,mCAEdK,GAActF,EAAE,KACrB,KAAK,WAAW,GAAG,GACnB,KAAK,QAAQiF,EAAM,iCACnB,KAAK,kCAAkCjF,EAAE,MAGzC,KAAK,WAAW,GAAG,GACnB,KAAK,QAAQiF,EAAM,qBACnB,KAAK,wBAAwBjF,EAAE;EAE3C;;;EAGI,kCAAkCA,IAAI;AAC9BsF,OAActF,EAAE,KAChB,KAAK,QAAQiF,EAAM,kCACnB,KAAK,kCAAkCjF,EAAE,MAGzC,KAAK,WAAW,IAAI,GACpB,KAAK,QAAQiF,EAAM,qBACnB,KAAK,wBAAwBjF,EAAE;EAE3C;;;EAGI,kCAAkCA,IAAI;AAC9B,SAAK,oBAAoBA,EAAE,MAC3B,KAAK,WAAW,IAAI,GACpB,KAAK,QAAQiF,EAAM,qBACnB,KAAK,wBAAwBjF,EAAE;EAE3C;;;EAGI,kCAAkCA,IAAI;AAClC,QAAI,KAAK,aAAa,WAAWuG,GAAG,QAAQ,KAAK,KAC7Cd,GAAoC,KAAK,aAAa,KAAKc,GAAG,OAAO,MAAM,CAAC,GAAG;AAC/E,WAAK,eAAevG,EAAE;AACtB,eAASqB,IAAI,GAAGA,IAAIkF,GAAG,OAAO,QAAQlF;AAClC,aAAK,eAAe,KAAK,SAAA,CAAU;AAEvC,WAAK,QAAQ4D,EAAM;IAC/B,MACkB,MAAK,mBAAA,MACX,KAAK,QAAQA,EAAM,qBACnB,KAAK,wBAAwBjF,EAAE;EAE3C;;;EAGI,8BAA8BA,IAAI;AAC9B,YAAQA,IAAE;MACN,KAAKhM,EAAE,cAAc;AACjB,aAAK,QAAQiR,EAAM,iCACnB,KAAK,WAAW,GAAG;AACnB;MAChB;MACY,KAAKjR,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM,2CACnB,KAAK,WAAW,GAAG;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,WAAWX,EAAqB;AACrC;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,8BAA8B,GAC5C,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,eAAeP,EAAE;IAEtC;EACA;;;EAGI,kCAAkCA,IAAI;AAClC,YAAQA,IAAE;MACN,KAAKhM,EAAE,cAAc;AACjB,aAAK,QAAQiR,EAAM,sCACnB,KAAK,WAAW,GAAG;AACnB;MAChB;MACY,KAAKjR,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM,2CACnB,KAAK,WAAW,GAAG;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,QAAQ0E,EAAM,4BACnB,KAAK,WAAWrF,EAAqB;AACrC;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,8BAA8B,GAC5C,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,QAAQ0E,EAAM,4BACnB,KAAK,eAAejF,EAAE;IAEtC;EACA;;;EAGI,sCAAsCA,IAAI;AACtC,YAAQA,IAAE;MACN,KAAKhM,EAAE,cAAc;AACjB,aAAK,WAAW,GAAG;AACnB;MAChB;MACY,KAAKA,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM,2CACnB,KAAK,WAAW,GAAG;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,QAAQiR,EAAM,aACnB,KAAK,WAAW,GAAG;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,QAAQ0E,EAAM,4BACnB,KAAK,WAAWrF,EAAqB;AACrC;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,8BAA8B,GAC5C,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,QAAQ0E,EAAM,4BACnB,KAAK,eAAejF,EAAE;IAEtC;EACA;;;EAGI,0CAA0CA,IAAI;AACtCA,IAAAA,OAAOhM,EAAE,WACT,KAAK,QAAQiR,EAAM,+BACnB,KAAK,WAAW,GAAG,MAGnB,KAAK,QAAQA,EAAM,4BACnB,KAAK,8BAA8BjF,EAAE;EAEjD;;;EAGI,gCAAgCA,IAAI;AAChC,QAAI,KAAK,aAAa,WAAWuG,GAAG,QAAQ,KAAK,KAC7Cd,GAAoC,KAAK,aAAa,KAAKc,GAAG,OAAO,MAAM,CAAC,GAAG;AAC/E,WAAK,eAAevG,EAAE;AACtB,eAASqB,IAAI,GAAGA,IAAIkF,GAAG,OAAO,QAAQlF;AAClC,aAAK,eAAe,KAAK,SAAA,CAAU;AAEvC,WAAK,QAAQ4D,EAAM;IAC/B,MACkB,MAAK,mBAAA,MACX,KAAK,QAAQA,EAAM,4BACnB,KAAK,8BAA8BjF,EAAE;EAEjD;;;EAGI,0BAA0BA,IAAI;AAC1B,YAAQA,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;AAEH;MAEJ,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,KAAK;AACR,aAAK,QAAQiR,EAAM,sBACnB,KAAK,yBAAyBjF,EAAE;AAChC;MAChB;MACY,KAAKhM,EAAE,aAAa;AAChB,aAAK,KAAKuM,EAAI,uCAAuC,GACrD,KAAK,YAAY,GAAG,GACpB,KAAK,QAAQ0E,EAAM;AACnB;MAChB;MACY;AACI,aAAK,YAAY,EAAE,GACnB,KAAK,QAAQA,EAAM,gBACnB,KAAK,oBAAoBjF,EAAE;IAE3C;EACA;;;EAGI,oBAAoBA,IAAI;AACpB,YAAQA,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,KAAK;AACR,aAAK,eAAgB,GACrB,KAAK,QAAQiR,EAAM,sBACnB,KAAK,yBAAyBjF,EAAE;AAChC;MAChB;MACY,KAAKhM,EAAE,aAAa;AAChB,aAAK,eAAgB,GACrB,KAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,gBAAgB;AACnB,aAAK,KAAKuM,EAAI,kCAAkC,GAChD,KAAK,YAAY,QAAQ,OAAO,cAAcP,EAAE;AAChD;MAChB;MACY,KAAKhM,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,YAAY,QAAQX;AACzB;MAChB;MACY;AACI,aAAK,YAAY,QAAQ,OAAO,cAAcwF,GAAapF,EAAE,IAAIuF,GAAavF,EAAE,IAAIA,EAAE;IAEtG;EACA;;;EAGI,yBAAyBA,IAAI;AACzB,YAAQA,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;AAEH;MAEJ,KAAKA,EAAE,SAAS;AACZ,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,aAAa;AAChB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,QAAQiR,EAAM,MACnB,KAAK,oBAAqB;AAC1B;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,QAAQ,GACtB,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,YAAY,EAAE,GACnB,KAAK,QAAQ0E,EAAM,gBACnB,KAAK,oBAAoBjF,EAAE;IAE3C;EACA;;;EAGI,2BAA2BA,IAAI;AAC3B,YAAQA,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;AAEH;MAEJ,KAAKA,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,YAAY;AACf,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,qBAAqB,GACnC,KAAK,QAAQ0E,EAAM,MACnB,KAAK,oBAAqB;AAC1B;MAChB;MACY;AACI,aAAK,QAAQA,EAAM,0BACnB,KAAK,6BAA6BjF,EAAE;IAEpD;EACA;;;EAGI,iCAAiCA,IAAI;AACjC,YAAQA,IAAE;MACN,KAAKhM,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,WAAW;AACd,aAAK,yBAA0B;AAC/B;MAChB;MACY,KAAKA,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,YAAY,SAASX;AAC1B;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,QAAQ,GACtB,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,YAAY,SAAS,OAAO,cAAcP,EAAE;IAEjE;EACA;;;EAGI,iCAAiCA,IAAI;AACjC,YAAQA,IAAE;MACN,KAAKhM,EAAE,YAAY;AACf,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,WAAW;AACd,aAAK,yBAA0B;AAC/B;MAChB;MACY,KAAKA,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,YAAY,SAASX;AAC1B;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,QAAQ,GACtB,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,YAAY,SAAS,OAAO,cAAcP,EAAE;IAEjE;EACA;;;EAGI,6BAA6BA,IAAI;AAC7B,YAAQA,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,WAAW;AACd,aAAK,gBAAiB,GACtB,KAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,WAAW;AACd,aAAK,yBAA0B;AAC/B;MAChB;MACY,KAAKA,EAAE,mBAAmB;AACtB,aAAK,gBAAiB,GACtB,KAAK,QAAQiR,EAAM,MACnB,KAAK,oBAAqB;AAC1B;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,YAAY,SAASX;AAC1B;MAChB;MACY,KAAK5L,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,cAAc;AACjB,aAAK,KAAKuM,EAAI,2CAA2C,GACzD,KAAK,YAAY,SAAS,OAAO,cAAcP,EAAE;AACjD;MAChB;MACY,KAAKhM,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,QAAQ,GACtB,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,YAAY,SAAS,OAAO,cAAcP,EAAE;IAEjE;EACA;;;EAGI,gCAAgCA,IAAI;AAChC,YAAQA,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,WAAW;AACd,aAAK,gBAAiB,GACtB,KAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,SAAS;AACZ,aAAK,gBAAiB,GACtB,KAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,gBAAiB,GACtB,KAAK,QAAQiR,EAAM,MACnB,KAAK,oBAAqB;AAC1B;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,QAAQ,GACtB,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,KAAKA,EAAI,kCAAkC,GAChD,KAAK,QAAQ0E,EAAM,uBACnB,KAAK,0BAA0BjF,EAAE;IAEjD;EACA;;;EAGI,0BAA0BA,IAAI;AAC1B,YAAQA,IAAE;MACN,KAAKhM,EAAE,mBAAmB;AACtB,cAAMgG,IAAQ,KAAK;AACnBA,UAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,MACnB,KAAK,oBAAqB;AAC1B;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,QAAQ,GACtB,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,KAAKA,EAAI,sBAAsB,GACpC,KAAK,QAAQ0E,EAAM,uBACnB,KAAK,0BAA0BjF,EAAE;IAEjD;EACA;;;EAGI,mBAAmBA,IAAI;AACnB,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,mBAAmB;AACtB,aAAK,QAAQiR,EAAM,MACnB,KAAK,mBAAmBjL,CAAK;AAC7B;MAChB;MACY,KAAKhG,EAAE,KAAK;AACR,aAAK,mBAAmBgG,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY,KAAKhG,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrCvG,EAAM,QAAQ4F;AACd;MAChB;MACY;AACI5F,UAAM,QAAQ,OAAO,cAAcgG,EAAE;IAErD;EACA;;;EAGI,4BAA4BA,IAAI;AACxB,SAAK,wBAAwBuG,GAAG,WAAW,IAAI,KAC/C,KAAK,oBAAoBA,GAAG,UAAU,SAAS,CAAC,GAChD,KAAK,QAAQtB,EAAM,iBAEd,KAAK,wBAAwBsB,GAAG,SAAS,KAAK,KAEnD,KAAK,kBAAkB,KAAK,mBAAmBA,GAAG,QAAQ,SAAS,CAAC,GACpE,KAAK,QAAQtB,EAAM,WAEd,KAAK,wBAAwBsB,GAAG,aAAa,IAAI,IAClD,KAAK,gBACL,KAAK,QAAQtB,EAAM,iBAGnB,KAAK,KAAK1E,EAAI,kBAAkB,GAChC,KAAK,oBAAoBgG,GAAG,YAAY,SAAS,CAAC,GAClD,KAAK,aAAa,OAAO,WACzB,KAAK,QAAQtB,EAAM,iBAKjB,KAAK,mBAAA,MACX,KAAK,KAAK1E,EAAI,wBAAwB,GACtC,KAAK,oBAAoB,CAAC,GAC1B,KAAK,QAAQ0E,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;EAEtC;;;EAGI,mBAAmBA,IAAI;AACnB,YAAQA,IAAE;MACN,KAAKhM,EAAE,cAAc;AACjB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,2BAA2B,GACzC,KAAK,QAAQ0E,EAAM;AACnB,cAAMjL,IAAQ,KAAK;AACnB,aAAK,mBAAmBA,CAAK;AAC7B;MAChB;MACY;AACI,aAAK,QAAQiL,EAAM,SACnB,KAAK,cAAcjF,EAAE;IAErC;EACA;;;EAGI,uBAAuBA,IAAI;AACvB,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,cAAc;AACjB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,2BAA2B,GACzC,KAAK,QAAQ0E,EAAM,MACnB,KAAK,mBAAmBjL,CAAK;AAC7B;MAChB;MACY,KAAKhG,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1B,KAAK,mBAAmBvG,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACIA,UAAM,QAAQ,KACd,KAAK,QAAQiL,EAAM,SACnB,KAAK,cAAcjF,EAAE;IAErC;EACA;;;EAGI,cAAcA,IAAI;AACd,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,cAAc;AACjB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,gBAAgB;AACnBgG,UAAM,QAAQ,KACd,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrCvG,EAAM,QAAQ4F;AACd;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1B,KAAK,mBAAmBvG,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACIA,UAAM,QAAQ,OAAO,cAAcgG,EAAE;IAErD;EACA;;;EAGI,0BAA0BA,IAAI;AAC1B,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,kBAAkB;AACrBgG,UAAM,QAAQ,KACd,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,gBAAgB;AACnBgG,UAAM,QAAQ;AACd;MAChB;MACY;AACI,aAAK,QAAQiL,EAAM,SACnB,KAAK,cAAcjF,EAAE;IAErC;EACA;;;EAGI,8BAA8BA,IAAI;AAC1BA,IAAAA,OAAOhM,EAAE,eACT,KAAK,QAAQiR,EAAM,oCAGnB,KAAK,QAAQA,EAAM,SACnB,KAAK,cAAcjF,EAAE;EAEjC;;;EAGI,kCAAkCA,IAAI;AAC9BA,IAAAA,OAAOhM,EAAE,eACT,KAAK,QAAQiR,EAAM,yCAGnB,KAAK,QAAQA,EAAM,kBACnB,KAAK,qBAAqBjF,EAAE;EAExC;;;EAGI,sCAAsCA,IAAI;AAClCA,IAAAA,OAAOhM,EAAE,qBAAqBgM,OAAOhM,EAAE,OACvC,KAAK,KAAKuM,EAAI,aAAa,GAE/B,KAAK,QAAQ0E,EAAM,aACnB,KAAK,iBAAiBjF,EAAE;EAChC;;;EAGI,qBAAqBA,IAAI;AACrB,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,cAAc;AACjB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1B,KAAK,mBAAmBvG,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACIA,UAAM,QAAQ,KACd,KAAK,QAAQiL,EAAM,SACnB,KAAK,cAAcjF,EAAE;IAErC;EACA;;;EAGI,iBAAiBA,IAAI;AACjB,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,mBAAmB;AACtB,aAAK,QAAQiR,EAAM,MACnB,KAAK,mBAAmBjL,CAAK;AAC7B;MAChB;MACY,KAAKhG,EAAE,kBAAkB;AACrB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,cAAc;AACjBgG,UAAM,QAAQ;AACd;MAChB;MACY,KAAKhG,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1B,KAAK,mBAAmBvG,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACIA,UAAM,QAAQ,MACd,KAAK,QAAQiL,EAAM,SACnB,KAAK,cAAcjF,EAAE;IAErC;EACA;;;EAGI,qBAAqBA,IAAI;AACrB,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,cAAc;AACjBgG,UAAM,QAAQ,OACd,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,wBAAwB,GACtC,KAAK,QAAQ0E,EAAM,MACnB,KAAK,mBAAmBjL,CAAK;AAC7B;MAChB;MACY,KAAKhG,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1B,KAAK,mBAAmBvG,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACIA,UAAM,QAAQ,OACd,KAAK,QAAQiL,EAAM,SACnB,KAAK,cAAcjF,EAAE;IAErC;EACA;;;EAGI,cAAcA,IAAI;AACd,YAAQA,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,WAAW;AACd,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,QAAQiR,EAAM,qBACnB,KAAK,wBAAwBjF,EAAE;AAC/B;MAChB;MACY,KAAKhM,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1B,KAAK,oBAAoB,IAAI;AAC7B,cAAMvG,IAAQ,KAAK;AACnBA,UAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,KAAKuG,EAAI,kCAAkC,GAChD,KAAK,QAAQ0E,EAAM,qBACnB,KAAK,wBAAwBjF,EAAE;IAE/C;EACA;;;EAGI,wBAAwBA,IAAI;AACxB,QAAIoF,GAAapF,EAAE;AACf,WAAK,oBAAoB,OAAO,aAAauF,GAAavF,EAAE,CAAC,CAAC,GAC9D,KAAK,QAAQiF,EAAM;;AAGnB,cAAQjF,IAAE;QACN,KAAKhM,EAAE;QACP,KAAKA,EAAE;QACP,KAAKA,EAAE;QACP,KAAKA,EAAE;AAEH;QAEJ,KAAKA,EAAE,MAAM;AACT,eAAK,KAAKuM,EAAI,uBAAuB,GACrC,KAAK,oBAAoBX,EAAqB,GAC9C,KAAK,QAAQqF,EAAM;AACnB;QACpB;QACgB,KAAKjR,EAAE,mBAAmB;AACtB,eAAK,KAAKuM,EAAI,kBAAkB,GAChC,KAAK,oBAAoB,IAAI;AAC7B,gBAAMvG,IAAQ,KAAK;AACnBA,YAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,QAAQiL,EAAM;AACnB;QACpB;QACgB,KAAKjR,EAAE,KAAK;AACR,eAAK,KAAKuM,EAAI,YAAY,GAC1B,KAAK,oBAAoB,IAAI;AAC7B,gBAAMvG,IAAQ,KAAK;AACnBA,YAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;QACpB;QACgB;AACI,eAAK,oBAAoB,OAAO,cAAcgG,EAAE,CAAC,GACjD,KAAK,QAAQiF,EAAM;MAEvC;EACA;;;EAGI,kBAAkBjF,IAAI;AAClB,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,WAAW;AACd,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,QAAQiR,EAAM,MACnB,KAAK,mBAAmBjL,CAAK;AAC7B;MAChB;MACY,KAAKhG,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrCvG,EAAM,QAAQ4F;AACd;MAChB;MACY,KAAK5L,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACIA,UAAM,QAAQ,OAAO,cAAcoL,GAAapF,EAAE,IAAIuF,GAAavF,EAAE,IAAIA,EAAE;IAE3F;EACA;;;EAGI,uBAAuBA,IAAI;AACvB,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;AAEH;MAEJ,KAAKA,EAAE,mBAAmB;AACtB,aAAK,QAAQiR,EAAM,MACnB,KAAK,mBAAmBjL,CAAK;AAC7B;MAChB;MACY,KAAKhG,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACQ,aAAK,wBAAwBuM,GAAG,QAAQ,KAAK,IAC7C,KAAK,QAAQtB,EAAM,+BAEd,KAAK,wBAAwBsB,GAAG,QAAQ,KAAK,IAClD,KAAK,QAAQtB,EAAM,+BAIb,KAAK,mBAAA,MACX,KAAK,KAAK1E,EAAI,wCAAwC,GACtDvG,EAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;IAG9C;EACA;;;EAGI,gCAAgCA,IAAI;AAChC,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,WAAW;AACd,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,gBAAgB;AACnB,aAAK,KAAKuM,EAAI,0CAA0C,GACxDvG,EAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,YAAY;AACf,aAAK,KAAKuM,EAAI,0CAA0C,GACxDvG,EAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,8BAA8B,GAC5CvG,EAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,MACnB,KAAK,mBAAmBjL,CAAK;AAC7B;MAChB;MACY,KAAKhG,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,KAAKuG,EAAI,yCAAyC,GACvDvG,EAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;IAE1C;EACA;;;EAGI,oCAAoCA,IAAI;AACpC,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;AAEH;MAEJ,KAAKA,EAAE,gBAAgB;AACnBgG,UAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,YAAY;AACfgG,UAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,8BAA8B,GAC5CvG,EAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,MACnB,KAAK,mBAAmBjL,CAAK;AAC7B;MAChB;MACY,KAAKhG,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,KAAKuG,EAAI,yCAAyC,GACvDvG,EAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;IAE1C;EACA;;;EAGI,0CAA0CA,IAAI;AAC1C,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrCvG,EAAM,YAAY4F;AAClB;MAChB;MACY,KAAK5L,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,6BAA6B,GAC3CvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACIA,UAAM,YAAY,OAAO,cAAcgG,EAAE;IAEzD;EACA;;;EAGI,0CAA0CA,IAAI;AAC1C,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,YAAY;AACf,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrCvG,EAAM,YAAY4F;AAClB;MAChB;MACY,KAAK5L,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,6BAA6B,GAC3CvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACIA,UAAM,YAAY,OAAO,cAAcgG,EAAE;IAEzD;EACA;;;EAGI,mCAAmCA,IAAI;AACnC,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,WAAW;AACd,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,QAAQiR,EAAM,MACnB,KAAK,mBAAmBjL,CAAK;AAC7B;MAChB;MACY,KAAKhG,EAAE,gBAAgB;AACnB,aAAK,KAAKuM,EAAI,yDAAyD,GACvEvG,EAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,YAAY;AACf,aAAK,KAAKuM,EAAI,yDAAyD,GACvEvG,EAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,KAAKuG,EAAI,yCAAyC,GACvDvG,EAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;IAE1C;EACA;;;EAGI,+CAA+CA,IAAI;AAC/C,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;AAEH;MAEJ,KAAKA,EAAE,mBAAmB;AACtB,aAAK,mBAAmBgG,CAAK,GAC7B,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,gBAAgB;AACnBgG,UAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,YAAY;AACfgG,UAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,KAAKuG,EAAI,yCAAyC,GACvDvG,EAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;IAE1C;EACA;;;EAGI,gCAAgCA,IAAI;AAChC,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE,WAAW;AACd,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,gBAAgB;AACnB,aAAK,KAAKuM,EAAI,0CAA0C,GACxDvG,EAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,YAAY;AACf,aAAK,KAAKuM,EAAI,0CAA0C,GACxDvG,EAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,8BAA8B,GAC5CvG,EAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,MACnB,KAAK,mBAAmBjL,CAAK;AAC7B;MAChB;MACY,KAAKhG,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,KAAKuG,EAAI,yCAAyC,GACvDvG,EAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;IAE1C;EACA;;;EAGI,oCAAoCA,IAAI;AACpC,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;AAEH;MAEJ,KAAKA,EAAE,gBAAgB;AACnBgG,UAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,YAAY;AACfgG,UAAM,WAAW,IACjB,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,8BAA8B,GAC5CvG,EAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,MACnB,KAAK,mBAAmBjL,CAAK;AAC7B;MAChB;MACY,KAAKhG,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,KAAKuG,EAAI,yCAAyC,GACvDvG,EAAM,cAAc,MACpB,KAAK,QAAQiL,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;IAE1C;EACA;;;EAGI,0CAA0CA,IAAI;AAC1C,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,gBAAgB;AACnB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrCvG,EAAM,YAAY4F;AAClB;MAChB;MACY,KAAK5L,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,6BAA6B,GAC3CvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACIA,UAAM,YAAY,OAAO,cAAcgG,EAAE;IAEzD;EACA;;;EAGI,0CAA0CA,IAAI;AAC1C,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,YAAY;AACf,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB,GACrCvG,EAAM,YAAY4F;AAClB;MAChB;MACY,KAAK5L,EAAE,mBAAmB;AACtB,aAAK,KAAKuM,EAAI,6BAA6B,GAC3CvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACIA,UAAM,YAAY,OAAO,cAAcgG,EAAE;IAEzD;EACA;;;EAGI,mCAAmCA,IAAI;AACnC,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;MACP,KAAKA,EAAE;AAEH;MAEJ,KAAKA,EAAE,mBAAmB;AACtB,aAAK,mBAAmBgG,CAAK,GAC7B,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,YAAY,GAC1BvG,EAAM,cAAc,MACpB,KAAK,mBAAmBA,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,KAAKuG,EAAI,+CAA+C,GAC7D,KAAK,QAAQ0E,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;IAE1C;EACA;;;EAGI,mBAAmBA,IAAI;AACnB,UAAMhG,IAAQ,KAAK;AACnB,YAAQgG,IAAE;MACN,KAAKhM,EAAE,mBAAmB;AACtB,aAAK,mBAAmBgG,CAAK,GAC7B,KAAK,QAAQiL,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,MAAM;AACT,aAAK,KAAKuM,EAAI,uBAAuB;AACrC;MAChB;MACY,KAAKvM,EAAE,KAAK;AACR,aAAK,mBAAmBgG,CAAK,GAC7B,KAAK,cAAe;AACpB;MAChB;IAGA;EACA;;;EAGI,mBAAmBgG,IAAI;AACnB,YAAQA,IAAE;MACN,KAAKhM,EAAE,sBAAsB;AACzB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,KAAK;AACR,aAAK,KAAKuM,EAAI,UAAU,GACxB,KAAK,cAAe;AACpB;MAChB;MACY;AACI,aAAK,eAAeP,EAAE;IAEtC;EACA;;;EAGI,0BAA0BA,IAAI;AACtBA,IAAAA,OAAOhM,EAAE,uBACT,KAAK,QAAQiR,EAAM,qBAGnB,KAAK,WAAW,GAAG,GACnB,KAAK,QAAQA,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;EAEtC;;;EAGI,sBAAsBA,IAAI;AACtB,YAAQA,IAAE;MACN,KAAKhM,EAAE,mBAAmB;AACtB,aAAK,QAAQiR,EAAM;AACnB;MAChB;MACY,KAAKjR,EAAE,sBAAsB;AACzB,aAAK,WAAW,GAAG;AACnB;MAChB;MACY;AACI,aAAK,WAAW,IAAI,GACpB,KAAK,QAAQiR,EAAM,eACnB,KAAK,mBAAmBjF,EAAE;IAE1C;EACA;;;EAGI,2BAA2B;AACvB,QAAIwG,KAAS,KAAK,cAAc,MAAM,KAAK,aAAa,MAAM,KAAK,aAAa,GAAG;AACnF,QAAIA,KAAS;AACT,UAAI,KAAK,aAAa;AAClBA,QAAAA,KAAS,KAAK,cAAc,IAAK;WAEhC;AAED,aAAK,SAAS,OAEd,KAAK,aAAa,MAAM,KAAK,aAAa,KAAK,SAAS,GACxD,KAAK,wBAAwB,GAC7B,KAAK,aAAa,gBAAgB;AAClC;MAChB;AAEYA,IAAAA,OAAW,KAGX,KAAK,aAAa,MAAM,KAAK,gBAC7B,KAAK,4CAA4CxS,EAAE,SAAS,GAC5D,KAAK,QACD,CAAC,KAAK,iCAAA,KAAsCwO,GAAoB,KAAK,aAAa,KAAK,CAAC,CAAC,IACnFyC,EAAM,sBACN,KAAK,eAIf,KAAK,QAAQ,KAAK;EAE9B;;;EAGI,yBAAyBjF,IAAI;AACrBwC,OAAoBxC,EAAE,IACtB,KAAK,4CAA4CA,EAAE,KAG/CA,OAAOhM,EAAE,aACT,KAAK,KAAKuM,EAAI,8BAA8B,GAEhD,KAAK,QAAQ,KAAK,aAClB,KAAK,WAAWP,EAAE;EAE9B;AACA;ACnpFA,IAAMyG,KAA4B,oBAAI,IAAI,CAACzS,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,UAAUA,EAAE,QAAQA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,GAAG,CAAC;AAAhH,IACM0S,KAAuC,oBAAI,IAAI;EACjD,GAAGD;EACHzS,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;AACN,CAAC;AAXD,IAYM2S,KAAwB,oBAAI,IAAI;EAClC3S,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;AACN,CAAC;AAtBD,IAuBM4S,KAA6B,oBAAI,IAAI,CAAC,GAAGD,IAAuB3S,EAAE,IAAIA,EAAE,EAAE,CAAC;AAvBjF,IAwBM6S,KAA+B,oBAAI,IAAI,CAAC,GAAGF,IAAuB3S,EAAE,MAAM,CAAC;AAxBjF,IAyBM8S,KAA0B,oBAAI,IAAI,CAAC9S,EAAE,gBAAgBA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,KAAK,CAAC;AAzB3F,IA0BM+S,KAAuB,oBAAI,IAAI,CAAC/S,EAAE,MAAMA,EAAE,gBAAgBA,EAAE,KAAK,CAAC;AA1BxE,IA2BMgT,KAAoB,oBAAI,IAAI,CAAChT,EAAE,IAAIA,EAAE,UAAUA,EAAE,IAAI,CAAC;AA3B5D,IA4BMiT,KAAqB,oBAAI,IAAI,CAACjT,EAAE,OAAOA,EAAE,OAAOA,EAAE,OAAOA,EAAE,UAAUA,EAAE,IAAI,CAAC;AA5BlF,IA6BMkT,KAAgB,oBAAI,IAAI,CAAClT,EAAE,OAAOA,EAAE,UAAUA,EAAE,IAAI,CAAC;AA7B3D,IA8BMmT,KAAc,oBAAI,IAAI,CAACnT,EAAE,IAAIA,EAAE,EAAE,CAAC;AAEjC,IAAMoT,KAAN,MAAuB;EAC1B,IAAI,2BAA2B;AAC3B,WAAO,KAAK,cAAe,IAAG,KAAK,YAAY,mBAAmB,KAAK,OAAO,IAAI,KAAK;EAC/F;EACI,YAAY1J,IAAU2J,GAAa3G,IAAS;AACxC,SAAK,cAAc2G,GACnB,KAAK,UAAU3G,IACf,KAAK,QAAQ,CAAE,GACf,KAAK,SAAS,CAAE,GAChB,KAAK,WAAW,IAChB,KAAK,YAAY,GACjB,KAAK,eAAe1M,EAAE,SACtB,KAAK,UAAU0J;EACvB;;EAEI,SAASE,IAAS;AACd,WAAO,KAAK,MAAM,YAAYA,IAAS,KAAK,QAAQ;EAC5D;;EAEI,gBAAgB;AACZ,WAAO,KAAK,iBAAiB5J,EAAE,YAAY,KAAK,YAAY,gBAAgB,KAAK,OAAO,MAAMwQ,EAAG;EACzG;EACI,wBAAwB;AACpB,SAAK,UAAU,KAAK,MAAM,KAAK,QAAQ,GACvC,KAAK,eAAe,KAAK,OAAO,KAAK,QAAQ;EACrD;;EAEI,KAAK5G,IAAS0J,GAAO;AACjB,SAAK,YACL,KAAK,MAAM,KAAK,QAAQ,IAAI1J,IAC5B,KAAK,UAAUA,IACf,KAAK,OAAO,KAAK,QAAQ,IAAI0J,GAC7B,KAAK,eAAeA,GAChB,KAAK,cAAA,KACL,KAAK,aAET,KAAK,QAAQ,WAAW1J,IAAS0J,GAAO,IAAI;EACpD;EACI,MAAM;AACF,UAAMC,KAAS,KAAK;AAChB,SAAK,YAAY,KAAK,KAAK,cAAa,KACxC,KAAK,aAET,KAAK,YACL,KAAK,sBAAuB,GAC5B,KAAK,QAAQ,UAAUA,IAAQ,IAAI;EAC3C;EACI,QAAQC,IAAYC,GAAY;AAC5B,UAAMC,KAAM,KAAK,SAASF,EAAU;AACpC,SAAK,MAAME,EAAG,IAAID,GACdC,OAAQ,KAAK,aACb,KAAK,UAAUD;EAE3B;EACI,YAAYE,IAAkBF,GAAYG,IAAc;AACpD,UAAMC,IAAe,KAAK,SAASF,EAAgB,IAAI;AACvD,SAAK,MAAM,OAAOE,GAAc,GAAGJ,CAAU,GAC7C,KAAK,OAAO,OAAOI,GAAc,GAAGD,EAAY,GAChD,KAAK,YACDC,MAAiB,KAAK,YACtB,KAAK,sBAAuB,GAEhC,KAAK,QAAQ,WAAW,KAAK,SAAS,KAAK,cAAcA,MAAiB,KAAK,QAAQ;EAC/F;EACI,sBAAsBpN,IAAS;AAC3B,QAAIqN,IAAY,KAAK,WAAW;AAChC;AACIA,UAAY,KAAK,OAAO,YAAYrN,IAASqN,IAAY,CAAC;WACrDA,IAAY,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAMA,CAAS,CAAC,MAAMtD,EAAG;AACzF,SAAK,gBAAgBsD,IAAY,IAAI,IAAIA,CAAS;EAC1D;EACI,gBAAgBJ,IAAK;AACjB,WAAO,KAAK,YAAYA,MAAK;AACzB,YAAMH,IAAS,KAAK;AAChB,WAAK,YAAY,KAAK,KAAK,cAAa,MACxC,KAAK,aAAa,IAEtB,KAAK,YACL,KAAK,sBAAuB,GAC5B,KAAK,QAAQ,UAAUA,GAAQ,KAAK,WAAWG,EAAG;IAC9D;EACA;EACI,sBAAsB9J,IAAS;AAC3B,UAAM8J,IAAM,KAAK,SAAS9J,EAAO;AACjC,SAAK,gBAAgB8J,IAAM,IAAI,IAAIA,CAAG;EAC9C;EACI,eAAeK,IAAUC,GAAU;AAC/B,UAAMN,KAAM,KAAK,iBAAiBK,IAAUC,CAAQ;AACpD,SAAK,gBAAgBN,KAAM,IAAI,IAAIA,EAAG;EAC9C;EACI,+BAA+B;AAC3B,SAAK,eAAe1C,IAAkBR,EAAG,IAAI;EACrD;EACI,0BAA0B;AACtB,SAAK,eAAe2C,IAAa3C,EAAG,IAAI;EAChD;EACI,wBAAwB;AAGpB,SAAK,YAAY,GACjB,KAAK,gBAAgB,CAAC;EAC9B;EACI,iBAAiBuD,IAAUE,GAAW;AAClC,aAAS5G,KAAI,KAAK,UAAUA,MAAK,GAAGA;AAChC,UAAI0G,GAAS,IAAI,KAAK,OAAO1G,EAAC,CAAC,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAMA,EAAC,CAAC,MAAM4G;AACpF,eAAO5G;AAGf,WAAO;EACf;EACI,YAAY0G,IAAUC,GAAU;AAC5B,UAAMN,KAAM,KAAK,iBAAiBK,IAAUC,CAAQ;AACpD,SAAK,gBAAgBN,KAAM,CAAC;EACpC;EACI,0BAA0B;AACtB,SAAK,YAAYR,IAAe1C,EAAG,IAAI;EAC/C;EACI,8BAA8B;AAC1B,SAAK,YAAYyC,IAAoBzC,EAAG,IAAI;EACpD;EACI,6BAA6B;AACzB,SAAK,YAAYwC,IAAmBxC,EAAG,IAAI;EACnD;EACI,OAAO5G,IAAS;AACZ,UAAM8J,IAAM,KAAK,SAAS9J,EAAO;AAC7B8J,SAAO,MACHA,MAAQ,KAAK,WACb,KAAK,IAAK,KAGV,KAAK,MAAM,OAAOA,GAAK,CAAC,GACxB,KAAK,OAAO,OAAOA,GAAK,CAAC,GACzB,KAAK,YACL,KAAK,sBAAuB,GAC5B,KAAK,QAAQ,UAAU9J,IAAS,KAAK;EAGrD;;EAEI,mCAAmC;AAE/B,WAAO,KAAK,YAAY,KAAK,KAAK,OAAO,CAAC,MAAM5J,EAAE,OAAO,KAAK,MAAM,CAAC,IAAI;EACjF;EACI,SAAS4J,IAAS;AACd,WAAO,KAAK,SAASA,EAAO,IAAI;EACxC;EACI,kBAAkBA,IAAS;AACvB,UAAMsK,IAAa,KAAK,SAAStK,EAAO,IAAI;AAC5C,WAAOsK,KAAc,IAAI,KAAK,MAAMA,CAAU,IAAI;EAC1D;EACI,2BAA2B;AACvB,WAAO,KAAK,aAAa,KAAK,KAAK,OAAO,CAAC,MAAMlU,EAAE;EAC3D;;EAEI,kBAAkByG,IAAS0N,GAAW;AAClC,aAAS9G,KAAI,KAAK,UAAUA,MAAK,GAAGA,MAAK;AACrC,YAAM+G,IAAK,KAAK,OAAO/G,EAAC;AACxB,cAAQ,KAAK,YAAY,gBAAgB,KAAK,MAAMA,EAAC,CAAC,GAAC;QACnD,KAAKmD,EAAG,MAAM;AACV,cAAI4D,MAAO3N;AACP,mBAAO;AACX,cAAI0N,EAAU,IAAIC,CAAE;AAChB,mBAAO;AACX;QACpB;QACgB,KAAK5D,EAAG,KAAK;AACT,cAAIuC,GAAqB,IAAIqB,CAAE;AAC3B,mBAAO;AACX;QACpB;QACgB,KAAK5D,EAAG,QAAQ;AACZ,cAAIsC,GAAwB,IAAIsB,CAAE;AAC9B,mBAAO;AACX;QACpB;MACA;IACA;AACQ,WAAO;EACf;EACI,WAAW3N,IAAS;AAChB,WAAO,KAAK,kBAAkBA,IAASkM,EAAqB;EACpE;EACI,mBAAmBlM,IAAS;AACxB,WAAO,KAAK,kBAAkBA,IAASmM,EAA0B;EACzE;EACI,iBAAiBnM,IAAS;AACtB,WAAO,KAAK,kBAAkBA,IAASoM,EAA4B;EAC3E;EACI,2BAA2B;AACvB,aAASxF,KAAI,KAAK,UAAUA,MAAK,GAAGA,MAAK;AACrC,YAAM+G,IAAK,KAAK,OAAO/G,EAAC;AACxB,cAAQ,KAAK,YAAY,gBAAgB,KAAK,MAAMA,EAAC,CAAC,GAAC;QACnD,KAAKmD,EAAG,MAAM;AACV,cAAIQ,GAAiB,IAAIoD,CAAE;AACvB,mBAAO;AACX,cAAIzB,GAAsB,IAAIyB,CAAE;AAC5B,mBAAO;AACX;QACpB;QACgB,KAAK5D,EAAG,KAAK;AACT,cAAIuC,GAAqB,IAAIqB,CAAE;AAC3B,mBAAO;AACX;QACpB;QACgB,KAAK5D,EAAG,QAAQ;AACZ,cAAIsC,GAAwB,IAAIsB,CAAE;AAC9B,mBAAO;AACX;QACpB;MACA;IACA;AACQ,WAAO;EACf;EACI,gBAAgB3N,IAAS;AACrB,aAAS4G,IAAI,KAAK,UAAUA,KAAK,GAAGA;AAChC,UAAI,KAAK,YAAY,gBAAgB,KAAK,MAAMA,CAAC,CAAC,MAAMmD,EAAG;AAG3D,gBAAQ,KAAK,OAAOnD,CAAC,GAAC;UAClB,KAAK5G;AACD,mBAAO;UAEX,KAAKzG,EAAE;UACP,KAAKA,EAAE;AACH,mBAAO;QAE3B;AAEQ,WAAO;EACf;EACI,kCAAkC;AAC9B,aAASqN,KAAI,KAAK,UAAUA,MAAK,GAAGA;AAChC,UAAI,KAAK,YAAY,gBAAgB,KAAK,MAAMA,EAAC,CAAC,MAAMmD,EAAG;AAG3D,gBAAQ,KAAK,OAAOnD,EAAC,GAAC;UAClB,KAAKrN,EAAE;UACP,KAAKA,EAAE;UACP,KAAKA,EAAE;AACH,mBAAO;UAEX,KAAKA,EAAE;UACP,KAAKA,EAAE;AACH,mBAAO;QAE3B;AAEQ,WAAO;EACf;EACI,iBAAiByG,IAAS;AACtB,aAAS4G,IAAI,KAAK,UAAUA,KAAK,GAAGA;AAChC,UAAI,KAAK,YAAY,gBAAgB,KAAK,MAAMA,CAAC,CAAC,MAAMmD,EAAG;AAG3D,gBAAQ,KAAK,OAAOnD,CAAC,GAAC;UAClB,KAAK5G;AACD,mBAAO;UAEX,KAAKzG,EAAE;UACP,KAAKA,EAAE;AACH;UAEJ;AACI,mBAAO;QAE3B;AAEQ,WAAO;EACf;;EAEI,yBAAyB;AACrB,WAAOyS,GAA0B,IAAI,KAAK,YAAY;AAClD,WAAK,IAAK;EAEtB;EACI,mCAAmC;AAC/B,WAAOC,GAAqC,IAAI,KAAK,YAAY;AAC7D,WAAK,IAAK;EAEtB;EACI,oCAAoC2B,IAAa;AAC7C,WAAO,KAAK,iBAAiBA,MAAe3B,GAAqC,IAAI,KAAK,YAAY;AAClG,WAAK,IAAK;EAEtB;AACA;AC9TA,IAAM4B,KAAoB;AACnB,IAAIC;CACV,SAAUA,IAAW;AAClBA,EAAAA,GAAUA,GAAU,SAAY,CAAC,IAAI,UACrCA,GAAUA,GAAU,UAAa,CAAC,IAAI;AAC1C,GAAGA,OAAcA,KAAY,CAAA,EAAG;AAChC,IAAMC,KAAS,EAAE,MAAMD,GAAU,OAAQ;AAElC,IAAME,KAAN,MAA4B;EAC/B,YAAYpB,IAAa;AACrB,SAAK,cAAcA,IACnB,KAAK,UAAU,CAAE,GACjB,KAAK,WAAW;EACxB;;;;EAII,+BAA+BI,IAAYiB,GAAS;AAChD,UAAMC,KAAa,CAAE,GACfC,IAAgBF,EAAQ,QACxBG,IAAY,KAAK,YAAY,WAAWpB,EAAU,GAClDqB,IAAiB,KAAK,YAAY,gBAAgBrB,EAAU;AAClE,aAASpG,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQA,KAAK;AAC1C,YAAMvL,KAAQ,KAAK,QAAQuL,CAAC;AAC5B,UAAIvL,GAAM,SAASyS,GAAU;AACzB;AAEJ,YAAM,EAAE,SAAA3K,EAAO,IAAK9H;AACpB,UAAI,KAAK,YAAY,WAAW8H,CAAO,MAAMiL,KACzC,KAAK,YAAY,gBAAgBjL,CAAO,MAAMkL,GAAgB;AAC9D,cAAMC,IAAe,KAAK,YAAY,YAAYnL,CAAO;AACrDmL,UAAa,WAAWH,KACxBD,GAAW,KAAK,EAAE,KAAKtH,GAAG,OAAO0H,EAAAA,CAAc;MAEnE;IACA;AACQ,WAAOJ;EACf;EACI,wBAAwBlB,IAAY;AAChC,QAAI,KAAK,QAAQ,SAASa;AACtB;AACJ,UAAMI,IAAU,KAAK,YAAY,YAAYjB,EAAU,GACjDkB,KAAa,KAAK,+BAA+BlB,IAAYiB,CAAO;AAC1E,QAAIC,GAAW,SAASL;AACpB;AAEJ,UAAMU,IAAa,IAAI,IAAIN,EAAQ,IAAI,CAACO,MAAW,CAACA,EAAO,MAAMA,EAAO,KAAK,CAAC,CAAC;AAC/E,QAAIC,IAAkB;AAEtB,aAAS,IAAI,GAAG,IAAIP,GAAW,QAAQ,KAAK;AACxC,YAAMQ,IAAYR,GAAW,CAAC;AAE1BQ,QAAU,MAAM,MAAM,CAACC,OAAUJ,EAAW,IAAII,GAAM,IAAI,MAAMA,GAAM,KAAK,MAC3EF,KAAmB,GACfA,KAAmBZ,MACnB,KAAK,QAAQ,OAAOa,EAAU,KAAK,CAAC;IAGxD;EACA;;EAEI,eAAe;AACX,SAAK,QAAQ,QAAQX,EAAM;EACnC;EACI,YAAY5K,IAAS5D,GAAO;AACxB,SAAK,wBAAwB4D,EAAO,GACpC,KAAK,QAAQ,QAAQ;MACjB,MAAM2K,GAAU;MAChB,SAAA3K;MACA,OAAA5D;IACZ,CAAS;EACT;EACI,2BAA2B4D,IAAS5D,GAAO;AACvC,UAAMqP,KAAc,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AACtD,SAAK,QAAQ,OAAOA,IAAa,GAAG;MAChC,MAAMd,GAAU;MAChB,SAAA3K;MACA,OAAA5D;IACZ,CAAS;EACT;EACI,YAAYlE,IAAO;AACf,UAAMwT,IAAa,KAAK,QAAQ,QAAQxT,EAAK;AACzCwT,SAAc,KACd,KAAK,QAAQ,OAAOA,GAAY,CAAC;EAE7C;;;;;;EAMI,oBAAoB;AAChB,UAAMC,KAAY,KAAK,QAAQ,QAAQf,EAAM;AACzCe,IAAAA,MAAa,IACb,KAAK,QAAQ,OAAO,GAAGA,KAAY,CAAC,IAGpC,KAAK,QAAQ,SAAS;EAElC;;EAEI,kCAAkC9O,IAAS;AACvC,UAAM3E,IAAQ,KAAK,QAAQ,KAAK,CAACA,OAAUA,GAAM,SAASyS,GAAU,UAAU,KAAK,YAAY,WAAWzS,GAAM,OAAO,MAAM2E,EAAO;AACpI,WAAO3E,KAASA,EAAM,SAASyS,GAAU,UAAUzS,IAAQ;EACnE;EACI,gBAAgB8H,IAAS;AACrB,WAAO,KAAK,QAAQ,KAAK,CAAC9H,MAAUA,EAAM,SAASyS,GAAU,WAAWzS,EAAM,YAAY8H,EAAO;EACzG;AACA;AC5GO,IAAM4L,MAAqB;;EAE9B,iBAAiB;AACb,WAAO;MACH,UAAU;MACV,MAAM9E,GAAc;MACpB,YAAY,CAAE;IACjB;EACJ;EACD,yBAAyB;AACrB,WAAO;MACH,UAAU;MACV,YAAY,CAAE;IACjB;EACJ;EACD,cAAcjK,IAASgP,IAAclK,GAAO;AACxC,WAAO;MACH,UAAU9E;MACV,SAAAA;MACA,OAAA8E;MACA,cAAAkK;MACA,YAAY,CAAE;MACd,YAAY;IACf;EACJ;EACD,kBAAkBjL,IAAM;AACpB,WAAO;MACH,UAAU;MACV,MAAAA;MACA,YAAY;IACf;EACJ;EACD,eAAejK,IAAO;AAClB,WAAO;MACH,UAAU;MACV,OAAAA;MACA,YAAY;IACf;EACJ;;EAED,YAAYkL,IAAYiK,IAAS;AAC7BjK,IAAAA,GAAW,WAAW,KAAKiK,EAAO,GAClCA,GAAQ,aAAajK;EACxB;EACD,aAAaA,IAAYiK,IAASC,GAAe;AAC7C,UAAM9B,KAAepI,GAAW,WAAW,QAAQkK,CAAa;AAChElK,IAAAA,GAAW,WAAW,OAAOoI,IAAc,GAAG6B,EAAO,GACrDA,GAAQ,aAAajK;EACxB;EACD,mBAAmBmK,IAAiBC,IAAgB;AAChDD,IAAAA,GAAgB,UAAUC;EAC7B;EACD,mBAAmBD,IAAiB;AAChC,WAAOA,GAAgB;EAC1B;EACD,gBAAgBlM,IAAU3I,IAAM+U,GAAUC,IAAU;AAChD,UAAMC,IAActM,GAAS,WAAW,KAAK,CAACvC,MAASA,EAAK,aAAa,eAAe;AACxF,QAAI6O;AACAA,QAAY,OAAOjV,IACnBiV,EAAY,WAAWF,GACvBE,EAAY,WAAWD;SAEtB;AACD,YAAM5O,IAAO;QACT,UAAU;QACV,MAAApG;QACA,UAAA+U;QACA,UAAAC;QACA,YAAY;MACf;AACDP,MAAAA,IAAmB,YAAY9L,IAAUvC,CAAI;IACzD;EACK;EACD,gBAAgBuC,IAAUuM,IAAM;AAC5BvM,IAAAA,GAAS,OAAOuM;EACnB;EACD,gBAAgBvM,IAAU;AACtB,WAAOA,GAAS;EACnB;EACD,WAAWvC,IAAM;AACb,QAAIA,GAAK,YAAY;AACjB,YAAMuM,KAAMvM,GAAK,WAAW,WAAW,QAAQA,EAAI;AACnDA,MAAAA,GAAK,WAAW,WAAW,OAAOuM,IAAK,CAAC,GACxCvM,GAAK,aAAa;IAC9B;EACK;EACD,WAAWsE,IAAYT,IAAM;AACzB,QAAIS,GAAW,WAAW,SAAS,GAAG;AAClC,YAAMyK,IAAWzK,GAAW,WAAWA,GAAW,WAAW,SAAS,CAAC;AACvE,UAAI+J,IAAmB,WAAWU,CAAQ,GAAG;AACzCA,UAAS,SAASlL;AAClB;MAChB;IACA;AACQwK,IAAAA,IAAmB,YAAY/J,IAAY+J,IAAmB,eAAexK,EAAI,CAAC;EACrF;EACD,iBAAiBS,IAAYT,IAAM2K,GAAe;AAC9C,UAAMO,KAAWzK,GAAW,WAAWA,GAAW,WAAW,QAAQkK,CAAa,IAAI,CAAC;AACnFO,IAAAA,MAAYV,IAAmB,WAAWU,EAAQ,IAClDA,GAAS,SAASlL,KAGlBwK,IAAmB,aAAa/J,IAAY+J,IAAmB,eAAexK,EAAI,GAAG2K,CAAa;EAEzG;EACD,gBAAgBQ,IAAW5K,IAAO;AAC9B,UAAM6K,IAAoB,IAAI,IAAID,GAAU,MAAM,IAAI,CAACE,OAASA,GAAK,IAAI,CAAC;AAC1E,aAASC,KAAI,GAAGA,KAAI/K,GAAM,QAAQ+K;AACzBF,QAAkB,IAAI7K,GAAM+K,EAAC,EAAE,IAAI,KACpCH,GAAU,MAAM,KAAK5K,GAAM+K,EAAC,CAAC;EAGxC;;EAED,cAAcnP,IAAM;AAChB,WAAOA,GAAK,WAAW,CAAC;EAC3B;EACD,cAAcA,IAAM;AAChB,WAAOA,GAAK;EACf;EACD,cAAcA,IAAM;AAChB,WAAOA,GAAK;EACf;EACD,YAAYyC,IAAS;AACjB,WAAOA,GAAQ;EAClB;;EAED,WAAWA,IAAS;AAChB,WAAOA,GAAQ;EAClB;EACD,gBAAgBA,IAAS;AACrB,WAAOA,GAAQ;EAClB;EACD,mBAAmB2M,IAAU;AACzB,WAAOA,GAAS;EACnB;EACD,sBAAsBC,IAAa;AAC/B,WAAOA,GAAY;EACtB;EACD,wBAAwBR,IAAa;AACjC,WAAOA,GAAY;EACtB;EACD,4BAA4BA,IAAa;AACrC,WAAOA,GAAY;EACtB;EACD,4BAA4BA,IAAa;AACrC,WAAOA,GAAY;EACtB;;EAED,WAAW7O,IAAM;AACb,WAAOA,GAAK,aAAa;EAC5B;EACD,cAAcA,IAAM;AAChB,WAAOA,GAAK,aAAa;EAC5B;EACD,mBAAmBA,IAAM;AACrB,WAAOA,GAAK,aAAa;EAC5B;EACD,cAAcA,IAAM;AAChB,WAAO,OAAO,UAAU,eAAe,KAAKA,IAAM,SAAS;EAC9D;;EAED,0BAA0BA,IAAMiB,IAAU;AACtCjB,IAAAA,GAAK,qBAAqBiB;EAC7B;EACD,0BAA0BjB,IAAM;AAC5B,WAAOA,GAAK;EACf;EACD,6BAA6BA,IAAMsP,IAAa;AAC5CtP,IAAAA,GAAK,qBAAqB,EAAE,GAAGA,GAAK,oBAAoB,GAAGsP,GAAa;EAC3E;AACL;AA3KO,ICCDC,KAAqB;ADDpB,ICEDC,KAAkB;ADFjB,ICGDC,KAAwB;ADHvB,ICIDC,KAAiC;EACnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AD5DO,IC6DDC,KAA8C;EAChD,GAAGD;EACH;EACA;AACJ;ADjEO,ICkEDE,KAAyB,oBAAI,IAAI;EACnC;EACA;EACA;AACJ,CAAC;ADtEM,ICuEDC,KAAoC,CAAC,oCAAoC,sCAAsC;ADvE9G,ICwEDC,KAAmD;EACrD,GAAGD;EACH;EACA;AACJ;AAEA,SAASE,GAAUpB,IAAUqB,IAAU;AACnC,SAAOA,GAAS,KAAK,CAACC,MAAWtB,GAAS,WAAWsB,CAAM,CAAC;AAChE;AAEO,SAASC,GAAarR,IAAO;AAChC,SAAQA,GAAM,SAAS0Q,MACnB1Q,GAAM,aAAa,SAClBA,GAAM,aAAa,QAAQA,GAAM,aAAa2Q;AACvD;AACO,SAASW,GAAgBtR,IAAO;AACnC,MAAIA,GAAM,SAAS0Q;AACf,WAAOhG,GAAc;AAEzB,QAAM,EAAE,UAAAqF,GAAQ,IAAK/P;AACrB,MAAI+P,MAAYA,GAAS,YAAW,MAAOa;AACvC,WAAOlG,GAAc;AAEzB,MAAI,EAAE,UAAAoF,EAAQ,IAAK9P;AACnB,MAAI8P,MAAa,MAAM;AAEnB,QADAA,IAAWA,EAAS,YAAa,GAC7BiB,GAAuB,IAAIjB,CAAQ;AACnC,aAAOpF,GAAc;AAEzB,QAAIyG,KAAWpB,OAAa,OAAOe,KAA8CD;AACjF,QAAIK,GAAUpB,GAAUqB,EAAQ;AAC5B,aAAOzG,GAAc;AAIzB,QAFAyG,KACIpB,OAAa,OAAOiB,KAAoCC,IACxDC,GAAUpB,GAAUqB,EAAQ;AAC5B,aAAOzG,GAAc;EAEjC;AACI,SAAOA,GAAc;AACzB;AC/GA,IAAM6G,KAAa;EACf,WAAW;EACX,iBAAiB;AACrB;AAHA,IAKMC,KAAsB;AAL5B,IAMMC,KAA+B;AANrC,IAOMC,KAA2B,IAAI,IAAI;EACrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,EAAE,IAAI,CAACrB,OAAS,CAACA,GAAK,YAAa,GAAEA,EAAI,CAAC,CAAC;AAlE3C,IAmEMsB,KAA2B,oBAAI,IAAI;EACrC,CAAC,iBAAiB,EAAE,QAAQ,SAAS,MAAM,WAAW,WAAWnH,EAAG,MAAA,CAAO;EAC3E,CAAC,iBAAiB,EAAE,QAAQ,SAAS,MAAM,WAAW,WAAWA,EAAG,MAAA,CAAO;EAC3E,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAWA,EAAG,MAAA,CAAO;EACrE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAWA,EAAG,MAAA,CAAO;EACrE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAWA,EAAG,MAAA,CAAO;EACrE,CAAC,eAAe,EAAE,QAAQ,SAAS,MAAM,SAAS,WAAWA,EAAG,MAAA,CAAO;EACvE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAWA,EAAG,MAAA,CAAO;EACrE,CAAC,YAAY,EAAE,QAAQ,OAAO,MAAM,QAAQ,WAAWA,EAAG,IAAA,CAAK;EAC/D,CAAC,aAAa,EAAE,QAAQ,OAAO,MAAM,SAAS,WAAWA,EAAG,IAAA,CAAK;EACjE,CAAC,SAAS,EAAE,QAAQ,IAAI,MAAM,SAAS,WAAWA,EAAG,MAAA,CAAO;EAC5D,CAAC,eAAe,EAAE,QAAQ,SAAS,MAAM,SAAS,WAAWA,EAAG,MAAA,CAAO;AAC3E,CAAC;AA/ED,IAiFaoH,KAA+B,IAAI,IAAI;EAChD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,EAAE,IAAI,CAACxD,OAAO,CAACA,GAAG,YAAa,GAAEA,EAAE,CAAC,CAAC;AAtHrC,IAwHMyD,KAAwB,oBAAI,IAAI;EAClC7X,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;EACFA,EAAE;AACN,CAAC;AAEM,SAAS8X,GAAWC,IAAe;AACtC,QAAM3D,KAAK2D,GAAc;AAGzB,SAFwB3D,OAAOpU,EAAE,QAC7B+X,GAAc,MAAM,KAAK,CAAC,EAAE,MAAAhX,GAAI,MAAOA,OAAS0P,GAAM,SAAS1P,OAAS0P,GAAM,QAAQ1P,OAAS0P,GAAM,IAAI,KACnFoH,GAAsB,IAAIzD,EAAE;AAC1D;AAEO,SAAS4D,GAAuBhS,IAAO;AAC1C,WAASqH,KAAI,GAAGA,KAAIrH,GAAM,MAAM,QAAQqH;AACpC,QAAIrH,GAAM,MAAMqH,EAAC,EAAE,SAASmK,IAAqB;AAC7CxR,MAAAA,GAAM,MAAMqH,EAAC,EAAE,OAAOoK;AACtB;IACZ;AAEA;AACO,SAASQ,GAAoBjS,IAAO;AACvC,WAASqH,KAAI,GAAGA,KAAIrH,GAAM,MAAM,QAAQqH,MAAK;AACzC,UAAM6K,IAAmBR,GAAyB,IAAI1R,GAAM,MAAMqH,EAAC,EAAE,IAAI;AACrE6K,SAAoB,SACpBlS,GAAM,MAAMqH,EAAC,EAAE,OAAO6K;EAElC;AACA;AACO,SAASC,GAAoBnS,IAAO;AACvC,WAASqH,KAAI,GAAGA,KAAIrH,GAAM,MAAM,QAAQqH,MAAK;AACzC,UAAM+K,IAAoBT,GAAyB,IAAI3R,GAAM,MAAMqH,EAAC,EAAE,IAAI;AACtE+K,UACApS,GAAM,MAAMqH,EAAC,EAAE,SAAS+K,EAAkB,QAC1CpS,GAAM,MAAMqH,EAAC,EAAE,OAAO+K,EAAkB,MACxCpS,GAAM,MAAMqH,EAAC,EAAE,YAAY+K,EAAkB;EAEzD;AACA;AACO,SAASC,GAAsBrS,IAAO;AACzC,QAAMsS,KAAkBV,GAA6B,IAAI5R,GAAM,OAAO;AAClEsS,EAAAA,MAAmB,SACnBtS,GAAM,UAAUsS,IAChBtS,GAAM,QAAQ8K,GAAS9K,GAAM,OAAO;AAE5C;AAEA,SAASuS,GAA6BnE,IAAIoE,IAAI;AAC1C,SAAOA,OAAOhI,EAAG,WAAW4D,OAAOpU,EAAE,MAAMoU,OAAOpU,EAAE,MAAMoU,OAAOpU,EAAE,MAAMoU,OAAOpU,EAAE,MAAMoU,OAAOpU,EAAE;AACrG;AACA,SAASyY,GAAuBrE,IAAIoE,IAAIjN,GAAO;AAC3C,MAAIiN,OAAOhI,EAAG,UAAU4D,OAAOpU,EAAE,gBAAA;AAC7B,aAASqN,KAAI,GAAGA,KAAI9B,EAAM,QAAQ8B;AAC9B,UAAI9B,EAAM8B,EAAC,EAAE,SAASoD,GAAM,UAAU;AAClC,cAAMlQ,IAAQgL,EAAM8B,EAAC,EAAE,MAAM,YAAa;AAC1C,eAAO9M,MAAUgX,GAAW,aAAahX,MAAUgX,GAAW;MAC9E;EAAA;AAGI,SAAOiB,OAAOhI,EAAG,QAAQ4D,OAAOpU,EAAE,kBAAkBoU,OAAOpU,EAAE,QAAQoU,OAAOpU,EAAE;AAClF;AACO,SAAS0Y,GAAmBtE,IAAIoE,IAAIjN,GAAOoN,IAAW;AACzD,UAAU,CAACA,MAAaA,OAAcnI,EAAG,SAASiI,GAAuBrE,IAAIoE,IAAIjN,CAAK,MAChF,CAACoN,MAAaA,OAAcnI,EAAG,WAAW+H,GAA6BnE,IAAIoE,EAAE;AACvF;ACxNA,IAAMI,KAAoB;AAA1B,IAEMC,KAAqB;AAF3B,IAGMC,KAAqB;AAE3B,IAAIC;CACH,SAAUA,IAAe;AACtBA,EAAAA,GAAcA,GAAc,UAAa,CAAC,IAAI,WAC9CA,GAAcA,GAAc,cAAiB,CAAC,IAAI,eAClDA,GAAcA,GAAc,cAAiB,CAAC,IAAI,eAClDA,GAAcA,GAAc,UAAa,CAAC,IAAI,WAC9CA,GAAcA,GAAc,oBAAuB,CAAC,IAAI,qBACxDA,GAAcA,GAAc,aAAgB,CAAC,IAAI,cACjDA,GAAcA,GAAc,UAAa,CAAC,IAAI,WAC9CA,GAAcA,GAAc,OAAU,CAAC,IAAI,QAC3CA,GAAcA,GAAc,WAAc,CAAC,IAAI,YAC/CA,GAAcA,GAAc,gBAAmB,CAAC,IAAI,iBACpDA,GAAcA,GAAc,aAAgB,EAAE,IAAI,cAClDA,GAAcA,GAAc,kBAAqB,EAAE,IAAI,mBACvDA,GAAcA,GAAc,gBAAmB,EAAE,IAAI,iBACrDA,GAAcA,GAAc,SAAY,EAAE,IAAI,UAC9CA,GAAcA,GAAc,UAAa,EAAE,IAAI,WAC/CA,GAAcA,GAAc,YAAe,EAAE,IAAI,aACjDA,GAAcA,GAAc,qBAAwB,EAAE,IAAI,sBAC1DA,GAAcA,GAAc,cAAiB,EAAE,IAAI,eACnDA,GAAcA,GAAc,aAAgB,EAAE,IAAI,cAClDA,GAAcA,GAAc,cAAiB,EAAE,IAAI,eACnDA,GAAcA,GAAc,iBAAoB,EAAE,IAAI,kBACtDA,GAAcA,GAAc,mBAAsB,EAAE,IAAI,oBACxDA,GAAcA,GAAc,uBAA0B,EAAE,IAAI;AAChE,GAAGA,MAAkBA,IAAgB,CAAA,EAAG;AACxC,IAAMC,KAAW;EACb,WAAW;EACX,UAAU;EACV,aAAa;EACb,SAAS;EACT,QAAQ;EACR,WAAW;AACf;AAPA,IAQMC,KAAuB,oBAAI,IAAI,CAACjZ,EAAE,OAAOA,EAAE,OAAOA,EAAE,OAAOA,EAAE,OAAOA,EAAE,EAAE,CAAC;AAR/E,IASMkZ,KAAuB;EACzB,kBAAkB;EAClB,wBAAwB;EACxB,aAAa1D;EACb,cAAc;AAClB;AAEO,IAAM2D,KAAN,MAAa;EAChB,YAAY/W,IAASsH,GAErB0P,KAAkB,MAElBC,IAAgB,MAAM;AAClB,SAAK,kBAAkBD,IACvB,KAAK,gBAAgBC,GACrB,KAAK,eAAe,MACpB,KAAK,UAAU,OAEf,KAAK,gBAAgBN,EAAc,SAEnC,KAAK,wBAAwBA,EAAc,SAE3C,KAAK,cAAc,MAEnB,KAAK,cAAc,MAEnB,KAAK,mBAAmB,OAOxB,KAAK,yBAAyB,CAAE,GAEhC,KAAK,yBAAyB,CAAE,GAEhC,KAAK,wCAAwC,OAE7C,KAAK,aAAa,MAElB,KAAK,kBAAkB,OAEvB,KAAK,yBAAyB,OAC9B,KAAK,UAAU;MACX,GAAGG;MACH,GAAG9W;IACN,GACD,KAAK,cAAc,KAAK,QAAQ,aAChC,KAAK,eAAe,KAAK,QAAQ,cAE7B,KAAK,iBACL,KAAK,QAAQ,yBAAyB,OAE1C,KAAK,WAAWsH,KAAsD,KAAK,YAAY,eAAgB,GACvG,KAAK,YAAY,IAAIiI,GAAU,KAAK,SAAS,IAAI,GACjD,KAAK,2BAA2B,IAAI8C,GAAsB,KAAK,WAAW,GAC1E,KAAK,oBAAoB2E,KAAkBtI,GAAS,KAAK,YAAY,WAAWsI,EAAe,CAAC,IAAIpZ,EAAE,SACtG,KAAK,iBAAiBoZ,MAA2E,KAAK,UAAU,KAAK,iBAAiB,GACtI,KAAK,eAAe,IAAIhG,GAAiB,KAAK,UAAU,KAAK,aAAa,IAAI;EACtF;;EAEI,OAAO,MAAMxO,IAAMxC,GAAS;AACxB,UAAMkX,KAAS,IAAI,KAAKlX,CAAO;AAC/B,WAAAkX,GAAO,UAAU,MAAM1U,IAAM,IAAI,GAC1B0U,GAAO;EACtB;EACI,OAAO,kBAAkBF,IAAiBhX,GAAS;AAC/C,UAAMmX,KAAO;MACT,GAAGL;MACH,GAAG9W;IACN;AAGDgX,IAAAA,OAA4EA,KAAkBG,GAAK,YAAY,cAAcC,EAAG,UAAUhJ,EAAG,MAAM,CAAE,CAAA;AAIrJ,UAAMiJ,IAAeF,GAAK,YAAY,cAAc,gBAAgB/I,EAAG,MAAM,CAAA,CAAE,GACzE8I,IAAS,IAAI,KAAKC,IAAME,GAAcL,EAAe;AAC3D,WAAIE,EAAO,sBAAsBtZ,EAAE,YAC/BsZ,EAAO,uBAAuB,QAAQP,EAAc,WAAW,GAEnEO,EAAO,iCAAkC,GACzCA,EAAO,uBAAwB,GAC/BA,EAAO,oBAAqB,GAC5BA,EAAO,2BAA4B,GAC5BA;EACf;EACI,cAAc;AACV,UAAMI,KAAc,KAAK,YAAY,cAAc,KAAK,QAAQ,GAC1DtO,IAAW,KAAK,YAAY,uBAAwB;AAC1D,WAAA,KAAK,YAAYsO,IAAatO,CAAQ,GAC/BA;EACf;;;EAGI,KAAKpF,IAAO2G,GAAMgN,IAAa;AAC3B,QAAI9L;AACJ,QAAI,CAAC,KAAK;AACN;AACJ,UAAMlE,KAAOkE,IAAK7H,GAAM,cAAc,QAAQ6H,MAAO,SAASA,IAAKmL,IAC7DY,IAAM;MACR,MAAAjN;MACA,WAAWhD,EAAI;MACf,UAAUA,EAAI;MACd,aAAaA,EAAI;MACjB,SAASgQ,KAAchQ,EAAI,YAAYA,EAAI;MAC3C,QAAQgQ,KAAchQ,EAAI,WAAWA,EAAI;MACzC,WAAWgQ,KAAchQ,EAAI,cAAcA,EAAI;IAClD;AACD,SAAK,aAAaiQ,CAAG;EAC7B;;;EAGI,WAAWzS,IAAM0S,GAAKC,IAAO;AACzB,QAAIjM,GAAIgE;AACR,KAACA,KAAMhE,IAAK,KAAK,aAAa,gBAAgB,QAAQgE,MAAO,UAAkBA,EAAG,KAAKhE,GAAI1G,EAAI,GAC3F2S,MAAS,KAAK,aAAa,WAAW,KACtC,KAAK,iBAAiB3S,IAAM0S,CAAG;EAC3C;;EAEI,UAAU1S,IAAM2S,GAAO;AACnB,QAAIjM,IAAIgE;AAKR,QAJI,KAAK,QAAQ,0BACb,KAAK,gBAAgB1K,IAAM,KAAK,YAAY,IAE/C0K,KAAMhE,KAAK,KAAK,aAAa,eAAe,QAAQgE,MAAO,UAAkBA,EAAG,KAAKhE,IAAI1G,IAAM,KAAK,aAAa,OAAO,GACrH2S,GAAO;AACP,UAAItK,GACAuK;AACA,WAAK,aAAa,aAAa,KAAK,KAAK,mBACzCvK,IAAU,KAAK,iBACfuK,IAAe,KAAK,qBAGnB,EAAE,SAAAvK,GAAS,cAAAuK,EAAc,IAAG,KAAK,cAEtC,KAAK,iBAAiBvK,GAASuK,CAAY;IACvD;EACA;EACI,iBAAiBvK,IAASqK,GAAK;AAC3B,UAAMG,KAASxK,OAAY,KAAK,YAAY,KAAK,YAAY,gBAAgBA,EAAO,MAAMgB,EAAG;AAC7F,SAAK,mBAAmB,CAACwJ,IACzB,KAAK,UAAU,gBAAgB,CAACA,MAAU,CAAC,KAAK,oBAAoBH,GAAKrK,EAAO;EACxF;;EAEI,qBAAqByK,IAAcC,GAAoB;AACnD,SAAK,eAAeD,IAAczJ,EAAG,IAAI,GACzC,KAAK,UAAU,QAAQ0J,GACvB,KAAK,wBAAwB,KAAK,eAClC,KAAK,gBAAgBnB,EAAc;EAC3C;EACI,2BAA2B;AACvB,SAAK,gBAAgBA,EAAc,MACnC,KAAK,wBAAwBA,EAAc,SAC3C,KAAK,UAAU,QAAQ7H,IAAc;EAC7C;;;EAGI,6BAA6B;AACzB,WAAO,KAAK,aAAa,aAAa,KAAK,KAAK,kBAC1C,KAAK,kBACL,KAAK,aAAa;EAChC;;EAEI,6BAA6B;AACzB,QAAI/J,KAAO,KAAK;AAChB,WAAOA,MAAM;AACT,UAAI,KAAK,YAAY,WAAWA,EAAI,MAAMqS,EAAG,MAAM;AAC/C,aAAK,cAAcrS;AACnB;MAChB;AACYA,MAAAA,KAAO,KAAK,YAAY,cAAcA,EAAI;IACtD;EACA;EACI,mCAAmC;AAC/B,QAAI,EAAA,CAAC,KAAK,mBAAmB,KAAK,YAAY,gBAAgB,KAAK,eAAe,MAAMqJ,EAAG;AAG3F,cAAQ,KAAK,mBAAiB;QAC1B,KAAKxQ,EAAE;QACP,KAAKA,EAAE,UAAU;AACb,eAAK,UAAU,QAAQkR,IAAc;AACrC;QAChB;QACY,KAAKlR,EAAE;QACP,KAAKA,EAAE;QACP,KAAKA,EAAE;QACP,KAAKA,EAAE;QACP,KAAKA,EAAE;QACP,KAAKA,EAAE,UAAU;AACb,eAAK,UAAU,QAAQkR,IAAc;AACrC;QAChB;QACY,KAAKlR,EAAE,QAAQ;AACX,eAAK,UAAU,QAAQkR,IAAc;AACrC;QAChB;QACY,KAAKlR,EAAE,WAAW;AACd,eAAK,UAAU,QAAQkR,IAAc;AACrC;QAChB;MAGA;EACA;;;EAGI,iBAAiBlL,IAAO;AACpB,UAAMjF,IAAOiF,GAAM,QAAQ,IACrB8P,KAAW9P,GAAM,YAAY,IAC7B+P,IAAW/P,GAAM,YAAY;AAEnC,QADA,KAAK,YAAY,gBAAgB,KAAK,UAAUjF,GAAM+U,IAAUC,CAAQ,GACpE/P,GAAM,UAAU;AAEhB,YAAMmU,IADmB,KAAK,YAAY,cAAc,KAAK,QAAQ,EAChC,KAAK,CAAChT,MAAS,KAAK,YAAY,mBAAmBA,CAAI,CAAC;AACzFgT,WACA,KAAK,YAAY,0BAA0BA,GAAanU,GAAM,QAAQ;IAEtF;EACA;;EAEI,qBAAqB4D,IAASxB,GAAU;AACpC,QAAI,KAAK,QAAQ,wBAAwB;AACrC,YAAMuB,KAAMvB,KAAY;QACpB,GAAGA;QACH,UAAUA;MACb;AACD,WAAK,YAAY,0BAA0BwB,IAASD,EAAG;IACnE;AACQ,QAAI,KAAK,+BAAA;AACL,WAAK,qBAAqBC,EAAO;SAEhC;AACD,YAAMwQ,KAAS,KAAK,aAAa;AACjC,WAAK,YAAY,YAAYA,IAAQxQ,EAAO;IACxD;EACA;;;;;;EAMI,eAAe5D,IAAOyP,GAAc;AAChC,UAAM7L,KAAU,KAAK,YAAY,cAAc5D,GAAM,SAASyP,GAAczP,GAAM,KAAK;AACvF,SAAK,qBAAqB4D,IAAS5D,GAAM,QAAQ;EACzD;;EAEI,eAAeA,IAAOyP,GAAc;AAChC,UAAM7L,KAAU,KAAK,YAAY,cAAc5D,GAAM,SAASyP,GAAczP,GAAM,KAAK;AACvF,SAAK,qBAAqB4D,IAAS5D,GAAM,QAAQ,GACjD,KAAK,aAAa,KAAK4D,IAAS5D,GAAM,KAAK;EACnD;;EAEI,mBAAmBS,IAAS6M,GAAO;AAC/B,UAAM1J,KAAU,KAAK,YAAY,cAAcnD,IAAS+J,EAAG,MAAM,CAAA,CAAE;AACnE,SAAK,qBAAqB5G,IAAS,IAAI,GACvC,KAAK,aAAa,KAAKA,IAAS0J,CAAK;EAC7C;;EAEI,gBAAgBtN,IAAO;AACnB,UAAMqU,IAAO,KAAK,YAAY,cAAcrU,GAAM,SAASwK,EAAG,MAAMxK,GAAM,KAAK,GACzEkE,KAAU,KAAK,YAAY,uBAAwB;AACzD,SAAK,YAAY,mBAAmBmQ,GAAMnQ,EAAO,GACjD,KAAK,qBAAqBmQ,GAAMrU,GAAM,QAAQ,GAC9C,KAAK,aAAa,KAAKqU,GAAMrU,GAAM,KAAK,GACpC,KAAK,QAAQ,0BACb,KAAK,YAAY,0BAA0BkE,IAAS,IAAI;EACpE;;EAEI,yBAAyB;AACrB,UAAMN,KAAU,KAAK,YAAY,cAAc4P,EAAG,MAAMhJ,EAAG,MAAM,CAAA,CAAE;AAC/D,SAAK,QAAQ,0BACb,KAAK,YAAY,0BAA0B5G,IAAS,IAAI,GAC5D,KAAK,YAAY,YAAY,KAAK,aAAa,SAASA,EAAO,GAC/D,KAAK,aAAa,KAAKA,IAAS5J,EAAE,IAAI;EAC9C;;EAEI,mBAAmBgG,IAAOoU,GAAQ;AAC9B,UAAM5D,KAAc,KAAK,YAAY,kBAAkBxQ,GAAM,IAAI;AACjE,SAAK,YAAY,YAAYoU,GAAQ5D,EAAW,GAC5C,KAAK,QAAQ,0BACb,KAAK,YAAY,0BAA0BA,IAAaxQ,GAAM,QAAQ;EAElF;;EAEI,kBAAkBA,IAAO;AACrB,QAAIoU,GACAE;AAcJ,QAbI,KAAK,+BAAA,KACJ,EAAE,QAAAF,GAAQ,eAAAE,GAAAA,IAAkB,KAAK,6BAA8B,GAC5DA,KACA,KAAK,YAAY,iBAAiBF,GAAQpU,GAAM,OAAOsU,EAAa,IAGpE,KAAK,YAAY,WAAWF,GAAQpU,GAAM,KAAK,MAInDoU,IAAS,KAAK,aAAa,0BAC3B,KAAK,YAAY,WAAWA,GAAQpU,GAAM,KAAK,IAE/C,CAACA,GAAM;AACP;AACJ,UAAMuU,IAAW,KAAK,YAAY,cAAcH,CAAM,GAChDI,IAAcF,KAAgBC,EAAS,YAAYD,EAAa,IAAIC,EAAS,QAC7EhE,IAAWgE,EAASC,IAAc,CAAC;AAGzC,QADc,KAAK,YAAY,0BAA0BjE,CAAQ,GACtD;AACP,YAAM,EAAE,SAAAkE,IAAS,QAAAC,GAAQ,WAAAC,EAAW,IAAG3U,GAAM;AAC7C,WAAK,YAAY,6BAA6BuQ,GAAU,EAAE,SAAAkE,IAAS,QAAAC,GAAQ,WAAAC,EAAAA,CAAW;IAClG,MACiB,MAAK,QAAQ,0BAClB,KAAK,YAAY,0BAA0BpE,GAAUvQ,GAAM,QAAQ;EAE/E;;EAEI,YAAY4U,IAAOzE,GAAW;AAC1B,aAAS/O,KAAQ,KAAK,YAAY,cAAcwT,EAAK,GAAGxT,IAAOA,KAAQ,KAAK,YAAY,cAAcwT,EAAK;AACvG,WAAK,YAAY,WAAWxT,EAAK,GACjC,KAAK,YAAY,YAAY+O,GAAW/O,EAAK;EAEzD;;EAEI,gBAAgBwC,IAASiR,GAAc;AACnC,QAAI,KAAK,YAAY,0BAA0BjR,EAAO,KAAKiR,EAAa,UAAU;AAC9E,YAAMC,KAAQD,EAAa,UACrBzG,IAAK,KAAK,YAAY,WAAWxK,EAAO,GACxCmR;;;QAGNF,EAAa,SAAStN,EAAU,WAAW6G,MAAOyG,EAAa,UACzD;UACE,QAAQ,EAAE,GAAGC,GAAO;UACpB,SAASA,GAAM;UACf,QAAQA,GAAM;UACd,WAAWA,GAAM;QACrC,IACkB;UACE,SAASA,GAAM;UACf,QAAQA,GAAM;UACd,WAAWA,GAAM;QACpB;;AACL,WAAK,YAAY,6BAA6BlR,IAASmR,CAAM;IACzE;EACA;;EAEI,2CAA2C/U,IAAO;AAE9C,QAAI,CAAC,KAAK;AACN,aAAO;AACX,QAAIwJ,GACAuK;AAQJ,WAPI,KAAK,aAAa,aAAa,KAAK,KAAK,mBACzCvK,IAAU,KAAK,iBACfuK,KAAe,KAAK,qBAGnB,EAAE,SAAAvK,GAAS,cAAAuK,GAAc,IAAG,KAAK,cAElC/T,GAAM,UAAUhG,EAAE,OAClB,KAAK,YAAY,WAAWwP,CAAO,MAAMgK,EAAG,kBAC5C,KAAK,YAAY,gBAAgBhK,CAAO,MAAMgB,EAAG,SAC1C;;MAIX,KAAK,UAAU;;OAGTxK,GAAM,UAAUhG,EAAE,UAAUgG,GAAM,UAAUhG,EAAE,eAC5C,CAAC,KAAK,oBAAoB+Z,IAAcvK,GAASgB,EAAG,IAAI;;EACxE;;EAEI,cAAcxK,IAAO;AACjB,YAAQA,GAAM,MAAI;MACd,KAAKuH,EAAU,WAAW;AACtB,aAAK,YAAYvH,EAAK;AACtB;MAChB;MACY,KAAKuH,EAAU,gBAAgB;AAC3B,aAAK,gBAAgBvH,EAAK;AAC1B;MAChB;MACY,KAAKuH,EAAU,SAAS;AACpB,aAAK,UAAUvH,EAAK;AACpB;MAChB;MACY,KAAKuH,EAAU,SAAS;AACpB,aAAK,UAAUvH,EAAK;AACpB;MAChB;MACY,KAAKuH,EAAU,WAAW;AACtB,aAAK,iBAAiBvH,EAAK;AAC3B;MAChB;MACY,KAAKuH,EAAU,SAAS;AACpB,aAAK,SAASvH,EAAK;AACnB;MAChB;MACY,KAAKuH,EAAU,KAAK;AAChB,aAAK,MAAMvH,EAAK;AAChB;MAChB;MACY,KAAKuH,EAAU,sBAAsB;AACjC,aAAK,sBAAsBvH,EAAK;AAChC;MAChB;IACA;EACA;;;EAGI,oBAAoB6T,IAAKjQ,GAAS+O,IAAW;AACzC,UAAMH,IAAK,KAAK,YAAY,gBAAgB5O,CAAO,GAC7C2B,IAAQ,KAAK,YAAY,YAAY3B,CAAO;AAClD,WAAOoR,GAAkCnB,IAAKrB,GAAIjN,GAAOoN,EAAS;EAC1E;;;EAGI,uCAAuC;AACnC,UAAMsC,KAAa,KAAK,yBAAyB,QAAQ;AACzD,QAAIA,IAAY;AACZ,YAAMC,IAAW,KAAK,yBAAyB,QAAQ,UAAU,CAACpZ,MAAUA,EAAM,SAASyS,GAAU,UAAU,KAAK,aAAa,SAASzS,EAAM,OAAO,CAAC,GAClJqZ,KAAYD,IAAW,IAAID,KAAa,IAAIC,IAAW;AAC7D,eAAS7N,IAAI8N,IAAW9N,KAAK,GAAGA,KAAK;AACjC,cAAMvL,IAAQ,KAAK,yBAAyB,QAAQuL,CAAC;AACrD,aAAK,eAAevL,EAAM,OAAO,KAAK,YAAY,gBAAgBA,EAAM,OAAO,CAAC,GAChFA,EAAM,UAAU,KAAK,aAAa;MAClD;IACA;EACA;;;EAGI,kBAAkB;AACd,SAAK,aAAa,uBAAwB,GAC1C,KAAK,aAAa,wBAAyB,GAC3C,KAAK,yBAAyB,kBAAmB,GACjD,KAAK,gBAAgBiX,EAAc;EAC3C;;EAEI,iBAAiB;AACb,SAAK,aAAa,oCAAoC/Y,EAAE,CAAC,GACzD,KAAK,aAAa,sBAAsBA,EAAE,CAAC;EACnD;;;EAGI,sBAAsB;AAClB,aAASqN,KAAI,KAAK,aAAa,UAAUA,MAAK,GAAGA;AAE7C,cAAQA,OAAM,KAAK,KAAK,kBAAkB,KAAK,oBAAoB,KAAK,aAAa,OAAOA,EAAC,GAAC;QAC1F,KAAKrN,EAAE,IAAI;AACP,eAAK,gBAAgB+Y,EAAc;AACnC;QACpB;QACgB,KAAK/Y,EAAE;QACP,KAAKA,EAAE;QACP,KAAKA,EAAE,OAAO;AACV,eAAK,gBAAgB+Y,EAAc;AACnC;QACpB;QACgB,KAAK/Y,EAAE,SAAS;AACZ,eAAK,gBAAgB+Y,EAAc;AACnC;QACpB;QACgB,KAAK/Y,EAAE,UAAU;AACb,eAAK,gBAAgB+Y,EAAc;AACnC;QACpB;QACgB,KAAK/Y,EAAE,OAAO;AACV,eAAK,gBAAgB+Y,EAAc;AACnC;QACpB;QACgB,KAAK/Y,EAAE,MAAM;AACT,eAAK,gBAAgB+Y,EAAc;AACnC;QACpB;QACgB,KAAK/Y,EAAE,UAAU;AACb,eAAK,gBAAgB+Y,EAAc;AACnC;QACpB;QACgB,KAAK/Y,EAAE,QAAQ;AACX,eAAK,6BAA6BqN,EAAC;AACnC;QACpB;QACgB,KAAKrN,EAAE,UAAU;AACb,eAAK,gBAAgB,KAAK,uBAAuB,CAAC;AAClD;QACpB;QACgB,KAAKA,EAAE,MAAM;AACT,eAAK,gBAAgB,KAAK,cAAc+Y,EAAc,aAAaA,EAAc;AACjF;QACpB;QACgB,KAAK/Y,EAAE;QACP,KAAKA,EAAE,IAAI;AACP,cAAIqN,KAAI,GAAG;AACP,iBAAK,gBAAgB0L,EAAc;AACnC;UACxB;AACoB;QACpB;QACgB,KAAK/Y,EAAE,MAAM;AACT,cAAIqN,KAAI,GAAG;AACP,iBAAK,gBAAgB0L,EAAc;AACnC;UACxB;AACoB;QACpB;MACA;AAEQ,SAAK,gBAAgBA,EAAc;EAC3C;;EAEI,6BAA6BqC,IAAW;AACpC,QAAIA,KAAY;AACZ,eAAS/N,IAAI+N,KAAY,GAAG/N,IAAI,GAAGA,KAAK;AACpC,cAAM+G,KAAK,KAAK,aAAa,OAAO/G,CAAC;AACrC,YAAI+G,OAAOpU,EAAE;AACT;AAEC,YAAIoU,OAAOpU,EAAE,OAAO;AACrB,eAAK,gBAAgB+Y,EAAc;AACnC;QACpB;MACA;AAEQ,SAAK,gBAAgBA,EAAc;EAC3C;;;EAGI,gCAAgC3E,IAAI;AAChC,WAAO6E,GAAqB,IAAI7E,EAAE;EAC1C;;EAEI,iCAAiC;AAC7B,WAAO,KAAK,0BAA0B,KAAK,gCAAgC,KAAK,aAAa,YAAY;EACjH;;EAEI,+BAA+B;AAC3B,aAAS/G,KAAI,KAAK,aAAa,UAAUA,MAAK,GAAGA,MAAK;AAClD,YAAMgO,IAAc,KAAK,aAAa,MAAMhO,EAAC;AAC7C,cAAQ,KAAK,aAAa,OAAOA,EAAC,GAAC;QAC/B,KAAKrN,EAAE,UAAU;AACb,cAAI,KAAK,YAAY,gBAAgBqb,CAAW,MAAM7K,EAAG;AACrD,mBAAO,EAAE,QAAQ,KAAK,YAAY,mBAAmB6K,CAAW,GAAG,eAAe,KAAM;AAE5F;QACpB;QACgB,KAAKrb,EAAE,OAAO;AACV,gBAAMoa,KAAS,KAAK,YAAY,cAAciB,CAAW;AACzD,iBAAIjB,KACO,EAAE,QAAAA,IAAQ,eAAeiB,EAAa,IAE1C,EAAE,QAAQ,KAAK,aAAa,MAAMhO,KAAI,CAAC,GAAG,eAAe,KAAM;QAC1F;MAGA;IACA;AACQ,WAAO,EAAE,QAAQ,KAAK,aAAa,MAAM,CAAC,GAAG,eAAe,KAAM;EAC1E;;EAEI,qBAAqBzD,IAAS;AAC1B,UAAMxB,IAAW,KAAK,6BAA8B;AAChDA,MAAS,gBACT,KAAK,YAAY,aAAaA,EAAS,QAAQwB,IAASxB,EAAS,aAAa,IAG9E,KAAK,YAAY,YAAYA,EAAS,QAAQwB,EAAO;EAEjE;;;EAGI,kBAAkBA,IAASiB,GAAI;AAC3B,UAAM2N,KAAK,KAAK,YAAY,gBAAgB5O,EAAO;AACnD,WAAOmH,GAAiByH,EAAE,EAAE,IAAI3N,CAAE;EAC1C;;EAEI,YAAY7E,IAAO;AAEf,QADA,KAAK,kBAAkB,OACnB,KAAK,UAAU,eAAe;AAC9BsV,SAA0B,MAAMtV,EAAK;AACrC;IACZ;AACQ,YAAQ,KAAK,eAAa;MACtB,KAAK+S,EAAc,SAAS;AACxBwC,WAAmB,MAAMvV,EAAK;AAC9B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5ByC,WAAgB,MAAMxV,EAAK;AAC3B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5B0C,WAAgB,MAAMzV,EAAK;AAC3B;MAChB;MACY,KAAK+S,EAAc,SAAS;AACxB2C,WAAY,MAAM1V,EAAK;AACvB;MAChB;MACY,KAAK+S,EAAc,mBAAmB;AAClC4C,WAAoB,MAAM3V,EAAK;AAC/B;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3B6C,WAAe,MAAM5V,EAAK;AAC1B;MAChB;MACY,KAAK+S,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc,aAAa;AAC5B8C,WAAgB,MAAM7V,EAAK;AAC3B;MAChB;MACY,KAAK+S,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc,oBAAoB;AACnC,aAAK,kBAAkB/S,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc,QAAQ;AACvB+C,WAAiB,MAAM9V,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,eAAe;AAC9BgD,WAAqB,MAAM/V,EAAK;AAChC;MAChB;MACY,KAAK+S,EAAc,iBAAiB;AAChCiD,WAAmB,MAAMhW,EAAK;AAC9B;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3BkD,WAAe,MAAMjW,EAAK;AAC1B;MAChB;MACY,KAAK+S,EAAc,kBAAkB;AACjCmD,WAAoB,MAAMlW,EAAK;AAC/B;MAChB;IAGA;EACA;;EAEI,gBAAgBA,IAAO;AAEnB,QADA,KAAK,kBAAkB,OACnB,KAAK,UAAU,eAAe;AAC9BmW,SAA8B,MAAMnW,EAAK;AACzC;IACZ;AACQ,YAAQ,KAAK,eAAa;MACtB,KAAK+S,EAAc,SAAS;AACxBwC,WAAmB,MAAMvV,EAAK;AAC9B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5ByC,WAAgB,MAAMxV,EAAK;AAC3B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5B0C,WAAgB,MAAMzV,EAAK;AAC3B;MAChB;MACY,KAAK+S,EAAc,SAAS;AACxB2C,WAAY,MAAM1V,EAAK;AACvB;MAChB;MACY,KAAK+S,EAAc,mBAAmB;AAClC4C,WAAoB,MAAM3V,EAAK;AAC/B;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3B6C,WAAe,MAAM5V,EAAK;AAC1B;MAChB;MACY,KAAK+S,EAAc,MAAM;AACrB,aAAK,kBAAkB/S,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc,QAAQ;AACvB+C,WAAiB,MAAM9V,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,iBAAiB;AAChCiD,WAAmB,MAAMhW,EAAK;AAC9B;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3BkD,WAAe,MAAMjW,EAAK;AAC1B;MAChB;MACY,KAAK+S,EAAc,kBAAkB;AACjCmD,WAAoB,MAAMlW,EAAK;AAC/B;MAChB;IAGA;EACA;;EAEI,UAAUA,IAAO;AAEb,QADA,KAAK,kBAAkB,OACnB,KAAK,kBAAkB;AACvBoW,SAAc,MAAMpW,EAAK;AACzB;IACZ;AACQ,YAAQ,KAAK,eAAa;MACtB,KAAK+S,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc,gBAAgB;AAC/BqD,WAAc,MAAMpW,EAAK;AACzB;MAChB;MACY,KAAK+S,EAAc,eAAe;AAC9BsD,WAAiB,MAAMrW,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3BuD,WAA+B,MAAMtW,EAAK;AAC1C;MAChB;MACY,KAAK+S,EAAc;MACnB,KAAKA,EAAc,sBAAsB;AACrCwD,WAAwB,MAAMvW,EAAK;AACnC;MAChB;IAGA;EACA;;EAEI,UAAUA,IAAO;AAEb,YADA,KAAK,kBAAkB,OACf,KAAK,eAAa;MACtB,KAAK+S,EAAc,SAAS;AACxByD,WAAqB,MAAMxW,EAAK;AAChC;MAChB;MACY,KAAK+S,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc,YAAY;AAC3B,aAAK,KAAK/S,IAAOuG,EAAI,gBAAgB;AACrC;MAChB;MACY,KAAKwM,EAAc,eAAe;AAC9BsD,WAAiB,MAAMrW,EAAK;AAC5B;MAChB;IAGA;EACA;;EAEI,WAAWA,IAAO;AACd,SAAK,kBAAkB,OACvB,KAAK,eAAeA,IACpB,KAAK,iBAAiBA,EAAK,GACvBA,GAAM,eAAe,CAACA,GAAM,kBAC5B,KAAK,KAAKA,IAAOuG,EAAI,6CAA6C;EAE9E;;;;;;;;;;;;EAYI,iBAAiBvG,IAAO;AAChB,SAAK,2CAA2CA,EAAK,IACrDyW,GAAyB,MAAMzW,EAAK,IAGpC,KAAK,+BAA+BA,EAAK;EAErD;;EAEI,+BAA+BA,IAAO;AAClC,YAAQ,KAAK,eAAa;MACtB,KAAK+S,EAAc,SAAS;AACxBwC,WAAmB,MAAMvV,EAAK;AAC9B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5B2D,WAAmB,MAAM1W,EAAK;AAC9B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5B4D,WAAmB,MAAM3W,EAAK;AAC9B;MAChB;MACY,KAAK+S,EAAc,SAAS;AACxB6D,WAAe,MAAM5W,EAAK;AAC1B;MAChB;MACY,KAAK+S,EAAc,mBAAmB;AAClC8D,WAAuB,MAAM7W,EAAK;AAClC;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3B+D,WAAkB,MAAM9W,EAAK;AAC7B;MAChB;MACY,KAAK+S,EAAc,SAAS;AACxBgE,WAAe,MAAM/W,EAAK;AAC1B;MAChB;MACY,KAAK+S,EAAc,UAAU;AACzBiE,WAAgB,MAAMhX,EAAK;AAC3B;MAChB;MACY,KAAK+S,EAAc,eAAe;AAC9BsD,WAAiB,MAAMrW,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3BkE,WAAkB,MAAMjX,EAAK;AAC7B;MAChB;MACY,KAAK+S,EAAc,iBAAiB;AAChCmE,WAAsB,MAAMlX,EAAK;AACjC;MAChB;MACY,KAAK+S,EAAc,eAAe;AAC9BoE,WAAoB,MAAMnX,EAAK;AAC/B;MAChB;MACY,KAAK+S,EAAc,QAAQ;AACvBqE,WAAc,MAAMpX,EAAK;AACzB;MAChB;MACY,KAAK+S,EAAc,SAAS;AACxBsE,WAAe,MAAMrX,EAAK;AAC1B;MAChB;MACY,KAAK+S,EAAc,WAAW;AAC1BuE,WAAiB,MAAMtX,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,oBAAoB;AACnCwE,WAAwB,MAAMvX,EAAK;AACnC;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5ByE,WAAmB,MAAMxX,EAAK;AAC9B;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3B0E,WAAkB,MAAMzX,EAAK;AAC7B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5B2E,WAAmB,MAAM1X,EAAK;AAC9B;MAChB;MACY,KAAK+S,EAAc,gBAAgB;AAC/B4E,WAAsB,MAAM3X,EAAK;AACjC;MAChB;MACY,KAAK+S,EAAc,kBAAkB;AACjC6E,WAAuB,MAAM5X,EAAK;AAClC;MAChB;MACY,KAAK+S,EAAc,sBAAsB;AACrC8E,WAA2B,MAAM7X,EAAK;AACtC;MAChB;IAGA;EACA;;EAEI,SAASA,IAAO;AACZ,SAAK,kBAAkB,OACvB,KAAK,eAAeA,IAChB,KAAK,mBACL8X,GAAuB,MAAM9X,EAAK,IAGlC,KAAK,6BAA6BA,EAAK;EAEnD;;EAEI,6BAA6BA,IAAO;AAChC,YAAQ,KAAK,eAAa;MACtB,KAAK+S,EAAc,SAAS;AACxBwC,WAAmB,MAAMvV,EAAK;AAC9B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5BgF,WAAiB,MAAM/X,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5BiF,WAAiB,MAAMhY,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,SAAS;AACxBkF,WAAa,MAAMjY,EAAK;AACxB;MAChB;MACY,KAAK+S,EAAc,mBAAmB;AAClCmF,WAAqB,MAAMlY,EAAK;AAChC;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3BoF,WAAgB,MAAMnY,EAAK;AAC3B;MAChB;MACY,KAAK+S,EAAc,SAAS;AACxBqF,WAAa,MAAMpY,EAAK;AACxB;MAChB;MACY,KAAK+S,EAAc,MAAM;AACrBsF,WAAa,MAAMrY,EAAK;AACxB;MAChB;MACY,KAAK+S,EAAc,UAAU;AACzBuF,WAAc,MAAMtY,EAAK;AACzB;MAChB;MACY,KAAK+S,EAAc,eAAe;AAC9BsD,WAAiB,MAAMrW,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3BwF,WAAgB,MAAMvY,EAAK;AAC3B;MAChB;MACY,KAAK+S,EAAc,iBAAiB;AAChCyF,WAAoB,MAAMxY,EAAK;AAC/B;MAChB;MACY,KAAK+S,EAAc,eAAe;AAC9B0F,WAAkB,MAAMzY,EAAK;AAC7B;MAChB;MACY,KAAK+S,EAAc,QAAQ;AACvB2F,WAAY,MAAM1Y,EAAK;AACvB;MAChB;MACY,KAAK+S,EAAc,SAAS;AACxB4F,WAAa,MAAM3Y,EAAK;AACxB;MAChB;MACY,KAAK+S,EAAc,WAAW;AAC1B6F,WAAe,MAAM5Y,EAAK;AAC1B;MAChB;MACY,KAAK+S,EAAc,oBAAoB;AACnC8F,WAAsB,MAAM7Y,EAAK;AACjC;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5B+F,WAAiB,MAAM9Y,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3BgG,WAAgB,MAAM/Y,EAAK;AAC3B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5BiG,WAAiB,MAAMhZ,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,gBAAgB;AAC/BkG,WAAoB,MAAMjZ,EAAK;AAC/B;MAChB;MACY,KAAK+S,EAAc,kBAAkB;AACjCmD,WAAoB,MAAMlW,EAAK;AAC/B;MAChB;IAGA;EACA;;EAEI,MAAMA,IAAO;AACT,YAAQ,KAAK,eAAa;MACtB,KAAK+S,EAAc,SAAS;AACxBwC,WAAmB,MAAMvV,EAAK;AAC9B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5ByC,WAAgB,MAAMxV,EAAK;AAC3B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5B0C,WAAgB,MAAMzV,EAAK;AAC3B;MAChB;MACY,KAAK+S,EAAc,SAAS;AACxB2C,WAAY,MAAM1V,EAAK;AACvB;MAChB;MACY,KAAK+S,EAAc,mBAAmB;AAClC4C,WAAoB,MAAM3V,EAAK;AAC/B;MAChB;MACY,KAAK+S,EAAc,YAAY;AAC3B6C,WAAe,MAAM5V,EAAK;AAC1B;MAChB;MACY,KAAK+S,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc,oBAAoB;AACnCmG,WAAU,MAAMlZ,EAAK;AACrB;MAChB;MACY,KAAK+S,EAAc,MAAM;AACrBoG,WAAU,MAAMnZ,EAAK;AACrB;MAChB;MACY,KAAK+S,EAAc,eAAe;AAC9BsD,WAAiB,MAAMrW,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,aAAa;AAC5BqG,WAAc,MAAMpZ,EAAK;AACzB;MAChB;MACY,KAAK+S,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc,sBAAsB;AACrCsG,WAAY,MAAMrZ,EAAK;AACvB;MAChB;IAGA;EACA;;EAEI,sBAAsBA,IAAO;AACzB,QAAI,KAAK,oBACL,KAAK,kBAAkB,OACnBA,GAAM,MAAM,WAAW,CAAC,MAAMsZ,EAAoB,YAAW;AAC7D,UAAItZ,GAAM,MAAM,WAAW;AACvB;AAEJA,MAAAA,GAAM,QAAQA,GAAM,MAAM,OAAO,CAAC;IAClD;AAEQ,QAAI,KAAK,UAAU,eAAe;AAC9B,WAAK,kBAAkBA,EAAK;AAC5B;IACZ;AACQ,YAAQ,KAAK,eAAa;MACtB,KAAK+S,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc,gBAAgB;AAC/B,aAAK,kBAAkB/S,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc,sBAAsB;AACrCwG,WAA0B,MAAMvZ,EAAK;AACrC;MAChB;MACY,KAAK+S,EAAc;MACnB,KAAKA,EAAc;MACnB,KAAKA,EAAc,QAAQ;AACvB+C,WAAiB,MAAM9V,EAAK;AAC5B;MAChB;MACY,KAAK+S,EAAc,eAAe;AAC9ByG,WAA+B,MAAMxZ,EAAK;AAC1C;MAChB;IAGA;EACA;AACA;AAKA,SAASyZ,GAA+BC,IAAG1Z,IAAO;AAC9C,MAAI2Z,IAAyBD,GAAE,yBAAyB,kCAAkC1Z,GAAM,OAAO;AACvG,SAAI2Z,IACKD,GAAE,aAAa,SAASC,EAAuB,OAAO,IAIjDD,GAAE,aAAa,WAAW1Z,GAAM,KAAK,MAC3C2Z,IAAyB,SAJzBD,GAAE,yBAAyB,YAAYC,CAAsB,GAC7DA,IAAyB,QAO7BC,GAAoBF,IAAG1Z,EAAK,GAEzB2Z;AACX;AAEA,SAASE,GAAsBH,IAAGC,IAAwB;AACtD,MAAIG,IAAgB,MAChBpM,KAAMgM,GAAE,aAAa;AACzB,SAAOhM,MAAO,GAAGA,MAAO;AACpB,UAAM9J,IAAU8V,GAAE,aAAa,MAAMhM,EAAG;AACxC,QAAI9J,MAAY+V,GAAuB;AACnC;AAEAD,IAAAA,GAAE,kBAAkB9V,GAAS8V,GAAE,aAAa,OAAOhM,EAAG,CAAC,MACvDoM,IAAgBlW;EAE5B;AACI,SAAKkW,MACDJ,GAAE,aAAa,gBAAgBhM,KAAM,IAAI,IAAIA,EAAG,GAChDgM,GAAE,yBAAyB,YAAYC,EAAsB,IAE1DG;AACX;AAEA,SAASC,GAAYL,IAAGI,IAAeE,GAAmB;AACtD,MAAIC,KAAcH,IACdI,IAAcR,GAAE,aAAa,kBAAkBI,EAAa;AAChE,WAASzS,IAAI,GAAGzD,IAAUsW,GAAatW,MAAYoW,GAAmB3S,KAAKzD,IAAUsW,GAAa;AAE9FA,QAAcR,GAAE,aAAa,kBAAkB9V,CAAO;AACtD,UAAMuW,IAAeT,GAAE,yBAAyB,gBAAgB9V,CAAO,GACjEwW,KAAkBD,KAAgB9S,KAAKyL;AACR,KAACqH,KAAgBC,MAE9CA,MACAV,GAAE,yBAAyB,YAAYS,CAAY,GAEvDT,GAAE,aAAa,OAAO9V,CAAO,MAG7BA,IAAUyW,GAA2BX,IAAGS,CAAY,GAChDF,OAAgBH,OAChBJ,GAAE,yBAAyB,WAAWS,IAE1CT,GAAE,YAAY,WAAWO,EAAW,GACpCP,GAAE,YAAY,YAAY9V,GAASqW,EAAW,GAC9CA,KAAcrW;EAE1B;AACI,SAAOqW;AACX;AAEA,SAASI,GAA2BX,IAAGS,IAAc;AACjD,QAAM3H,IAAKkH,GAAE,YAAY,gBAAgBS,GAAa,OAAO,GACvD1M,KAAaiM,GAAE,YAAY,cAAcS,GAAa,MAAM,SAAS3H,GAAI2H,GAAa,MAAM,KAAK;AACvG,SAAAT,GAAE,aAAa,QAAQS,GAAa,SAAS1M,EAAU,GACvD0M,GAAa,UAAU1M,IAChBA;AACX;AAEA,SAAS6M,GAAiCZ,IAAGa,IAAgBN,GAAa;AACtE,QAAM7L,KAAKsL,GAAE,YAAY,WAAWa,EAAc,GAC5C1G,IAAM/I,GAASsD,EAAE;AACvB,MAAIsL,GAAE,gCAAgC7F,CAAG;AACrC6F,IAAAA,GAAE,qBAAqBO,CAAW;OAEjC;AACD,UAAMzH,IAAKkH,GAAE,YAAY,gBAAgBa,EAAc;AACnD1G,UAAQ7Z,EAAE,YAAYwY,MAAOhI,EAAG,SAChC+P,KAAiBb,GAAE,YAAY,mBAAmBa,EAAc,IAEpEb,GAAE,YAAY,YAAYa,IAAgBN,CAAW;EAC7D;AACA;AAEA,SAASO,GAA2Bd,IAAGI,IAAeH,GAAwB;AAC1E,QAAMnH,KAAKkH,GAAE,YAAY,gBAAgBC,EAAuB,OAAO,GACjE,EAAE,OAAA3Z,EAAK,IAAK2Z,GACZlM,IAAaiM,GAAE,YAAY,cAAc1Z,EAAM,SAASwS,IAAIxS,EAAM,KAAK;AAC7E0Z,EAAAA,GAAE,YAAYI,IAAerM,CAAU,GACvCiM,GAAE,YAAY,YAAYI,IAAerM,CAAU,GACnDiM,GAAE,yBAAyB,2BAA2BjM,GAAYzN,CAAK,GACvE0Z,GAAE,yBAAyB,YAAYC,CAAsB,GAC7DD,GAAE,aAAa,OAAOC,EAAuB,OAAO,GACpDD,GAAE,aAAa,YAAYI,IAAerM,GAAYzN,EAAM,KAAK;AACrE;AAEA,SAASya,GAAmBf,IAAG1Z,IAAO;AAClC,WAASqH,IAAI,GAAGA,IAAIwL,IAAoBxL,KAAK;AACzC,UAAMsS,KAAyBF,GAA+BC,IAAG1Z,EAAK;AACtE,QAAI,CAAC2Z;AACD;AAEJ,UAAMG,IAAgBD,GAAsBH,IAAGC,EAAsB;AACrE,QAAI,CAACG;AACD;AAEJJ,IAAAA,GAAE,yBAAyB,WAAWC;AACtC,UAAMM,IAAcF,GAAYL,IAAGI,GAAeH,GAAuB,OAAO,GAC1EY,IAAiBb,GAAE,aAAa,kBAAkBC,GAAuB,OAAO;AACtFD,IAAAA,GAAE,YAAY,WAAWO,CAAW,GAChCM,KACAD,GAAiCZ,IAAGa,GAAgBN,CAAW,GACnEO,GAA2Bd,IAAGI,GAAeH,EAAsB;EAC3E;AACA;AAGA,SAASvD,GAAcsD,IAAG1Z,IAAO;AAC7B0Z,EAAAA,GAAE,mBAAmB1Z,IAAO0Z,GAAE,aAAa,wBAAwB;AACvE;AACA,SAASpD,GAA+BoD,IAAG1Z,IAAO;AAC9C0Z,EAAAA,GAAE,mBAAmB1Z,IAAO0Z,GAAE,aAAa,MAAM,CAAC,CAAC;AACvD;AACA,SAASnD,GAAwBmD,IAAG1Z,IAAO;AACvC0Z,EAAAA,GAAE,mBAAmB1Z,IAAO0Z,GAAE,QAAQ;AAC1C;AACA,SAASL,GAAYK,IAAG1Z,IAAO;AAG3B,MAFA0Z,GAAE,UAAU,MAER1Z,GAAM,UAAU;AAGhB,UAAM0a,IAAShB,GAAE,kBAAkB,IAAI;AACvC,aAASrS,KAAIqS,GAAE,aAAa,UAAUrS,MAAKqT,GAAQrT;AAC/CqS,MAAAA,GAAE,gBAAgBA,GAAE,aAAa,MAAMrS,EAAC,GAAGrH,EAAK;AAGpD,QAAI,CAAC0Z,GAAE,mBAAmBA,GAAE,aAAa,YAAY,GAAG;AACpD,YAAMiB,KAAcjB,GAAE,aAAa,MAAM,CAAC,GACpCkB,IAAelB,GAAE,YAAY,0BAA0BiB,EAAW;AACxE,UAAIC,KAAgB,CAACA,EAAa,WAC9BlB,GAAE,gBAAgBiB,IAAa3a,EAAK,GAChC0Z,GAAE,aAAa,YAAY,IAAG;AAC9B,cAAMmB,IAAcnB,GAAE,aAAa,MAAM,CAAC,GACpCoB,IAAepB,GAAE,YAAY,0BAA0BmB,CAAW;AACpEC,aAAgB,CAACA,EAAa,UAC9BpB,GAAE,gBAAgBmB,GAAa7a,EAAK;MAE5D;IAEA;EACA;AACA;AAGA,SAASwW,GAAqBkD,IAAG1Z,IAAO;AACpC0Z,EAAAA,GAAE,iBAAiB1Z,EAAK;AACxB,QAAMiQ,IAAOjQ,GAAM,cAAc0K,GAAc,SAASqQ,GAAwB/a,EAAK;AAChFgb,KAAqBhb,EAAK,KAC3B0Z,GAAE,KAAK1Z,IAAOuG,EAAI,oBAAoB,GAE1CmT,GAAE,YAAY,gBAAgBA,GAAE,UAAUzJ,CAAI,GAC9CyJ,GAAE,gBAAgB3G,EAAc;AACpC;AACA,SAASwC,GAAmBmE,IAAG1Z,IAAO;AAClC0Z,EAAAA,GAAE,KAAK1Z,IAAOuG,EAAI,gBAAgB,IAAI,GACtCmT,GAAE,YAAY,gBAAgBA,GAAE,UAAUhP,GAAc,MAAM,GAC9DgP,GAAE,gBAAgB3G,EAAc,aAChC2G,GAAE,cAAc1Z,EAAK;AACzB;AAGA,SAAS0W,GAAmBgD,IAAG1Z,IAAO;AAC9BA,EAAAA,GAAM,UAAUhG,EAAE,QAClB0f,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,gBAAgB3G,EAAc,eAGhCyC,GAAgBkE,IAAG1Z,EAAK;AAEhC;AACA,SAAS+X,GAAiB2B,IAAG1Z,IAAO;AAChC,QAAMoO,IAAKpO,GAAM;AACjB,GAAIoO,MAAOpU,EAAE,QAAQoU,MAAOpU,EAAE,QAAQoU,MAAOpU,EAAE,QAAQoU,MAAOpU,EAAE,OAC5Dwb,GAAgBkE,IAAG1Z,EAAK;AAEhC;AACA,SAASwV,GAAgBkE,IAAG1Z,IAAO;AAC/B0Z,EAAAA,GAAE,uBAAwB,GAC1BA,GAAE,gBAAgB3G,EAAc,aAChC2G,GAAE,cAAc1Z,EAAK;AACzB;AAGA,SAAS2W,GAAmB+C,IAAG1Z,IAAO;AAClC,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,MAAM;AACT+c,SAAe2C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE,MAAM;AACT0f,MAAAA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,cAAcA,GAAE,aAAa,SAC/BA,GAAE,gBAAgB3G,EAAc;AAChC;IACZ;IACQ;AACI0C,SAAgBiE,IAAG1Z,EAAK;EAEpC;AACA;AACA,SAASgY,GAAiB0B,IAAG1Z,IAAO;AAChC,QAAMoO,IAAKpO,GAAM;AACboO,QAAOpU,EAAE,QAAQoU,MAAOpU,EAAE,QAAQoU,MAAOpU,EAAE,QAAQoU,MAAOpU,EAAE,KAC5Dyb,GAAgBiE,IAAG1Z,EAAK,IAGxB0Z,GAAE,KAAK1Z,IAAOuG,EAAI,gCAAgC;AAE1D;AACA,SAASkP,GAAgBiE,IAAG1Z,IAAO;AAC/B0Z,EAAAA,GAAE,mBAAmBlG,EAAG,MAAMxZ,EAAE,IAAI,GACpC0f,GAAE,cAAcA,GAAE,aAAa,SAC/BA,GAAE,gBAAgB3G,EAAc,SAChC2G,GAAE,cAAc1Z,EAAK;AACzB;AAGA,SAAS4W,GAAe8C,IAAG1Z,IAAO;AAC9B,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,MAAM;AACT+c,SAAe2C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,MAAM;AACT0f,MAAAA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BxK,GAAM,iBAAiB;AACvB;IACZ;IACQ,KAAKhG,EAAE,OAAO;AACV0f,MAAAA,GAAE,qBAAqB1Z,IAAOkL,IAAc,MAAM;AAClD;IACZ;IACQ,KAAKlR,EAAE,UAAU;AACT0f,MAAAA,GAAE,QAAQ,mBACVA,GAAE,qBAAqB1Z,IAAOkL,IAAc,OAAO,KAGnDwO,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,gBAAgB3G,EAAc;AAEpC;IACZ;IACQ,KAAK/Y,EAAE;IACP,KAAKA,EAAE,OAAO;AACV0f,MAAAA,GAAE,qBAAqB1Z,IAAOkL,IAAc,OAAO;AACnD;IACZ;IACQ,KAAKlR,EAAE,QAAQ;AACX0f,MAAAA,GAAE,qBAAqB1Z,IAAOkL,IAAc,WAAW;AACvD;IACZ;IACQ,KAAKlR,EAAE,UAAU;AACb0f,MAAAA,GAAE,gBAAgB1Z,EAAK,GACvB0Z,GAAE,yBAAyB,aAAc,GACzCA,GAAE,aAAa,OACfA,GAAE,gBAAgB3G,EAAc,aAChC2G,GAAE,uBAAuB,QAAQ3G,EAAc,WAAW;AAC1D;IACZ;IACQ,KAAK/Y,EAAE,MAAM;AACT0f,MAAAA,GAAE,KAAK1Z,IAAOuG,EAAI,+BAA+B;AACjD;IACZ;IACQ;AACImP,SAAYgE,IAAG1Z,EAAK;EAEhC;AACA;AACA,SAASiY,GAAayB,IAAG1Z,IAAO;AAC5B,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,MAAM;AACT0f,MAAAA,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc;AAChC;IACZ;IACQ,KAAK/Y,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,MAAM;AACT0b,SAAYgE,IAAG1Z,EAAK;AACpB;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACbihB,SAAqBvB,IAAG1Z,EAAK;AAC7B;IACZ;IACQ;AACI0Z,MAAAA,GAAE,KAAK1Z,IAAOuG,EAAI,gCAAgC;EAE9D;AACA;AACA,SAAS0U,GAAqBvB,IAAG1Z,IAAO;AAChC0Z,EAAAA,GAAE,aAAa,YAAY,KAC3BA,GAAE,aAAa,iCAAkC,GAC7CA,GAAE,aAAa,iBAAiB1f,EAAE,YAClC0f,GAAE,KAAK1Z,IAAOuG,EAAI,qCAAqC,GAE3DmT,GAAE,aAAa,sBAAsB1f,EAAE,QAAQ,GAC/C0f,GAAE,yBAAyB,kBAAmB,GAC9CA,GAAE,uBAAuB,MAAO,GAChCA,GAAE,oBAAqB,KAGvBA,GAAE,KAAK1Z,IAAOuG,EAAI,gCAAgC;AAE1D;AACA,SAASmP,GAAYgE,IAAG1Z,IAAO;AAC3B0Z,EAAAA,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc,YAChC2G,GAAE,cAAc1Z,EAAK;AACzB;AAGA,SAAS6W,GAAuB6C,IAAG1Z,IAAO;AACtC,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,MAAM;AACT+c,SAAe2C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,OAAO;AACV4c,SAAe8C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACb0f,MAAAA,GAAE,KAAK1Z,IAAOuG,EAAI,oBAAoB;AACtC;IACZ;IACQ;AACIoP,SAAoB+D,IAAG1Z,EAAK;EAExC;AACA;AACA,SAASkY,GAAqBwB,IAAG1Z,IAAO;AACpC,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,UAAU;AACb0f,MAAAA,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc;AAChC;IACZ;IACQ,KAAK/Y,EAAE,IAAI;AACP2b,SAAoB+D,IAAG1Z,EAAK;AAC5B;IACZ;IACQ;AACI0Z,MAAAA,GAAE,KAAK1Z,IAAOuG,EAAI,gCAAgC;EAE9D;AACA;AACA,SAASoP,GAAoB+D,IAAG1Z,IAAO;AACnC,QAAMkb,IAAUlb,GAAM,SAASuH,EAAU,MAAMhB,EAAI,2BAA2BA,EAAI;AAClFmT,EAAAA,GAAE,KAAK1Z,IAAOkb,CAAO,GACrBxB,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc,SAChC2G,GAAE,cAAc1Z,EAAK;AACzB;AAGA,SAAS8W,GAAkB4C,IAAG1Z,IAAO;AACjC,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,MAAM;AACT+c,SAAe2C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE,MAAM;AACT0f,MAAAA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,aAAa,OACfA,GAAE,gBAAgB3G,EAAc;AAChC;IACZ;IACQ,KAAK/Y,EAAE,UAAU;AACb0f,MAAAA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,gBAAgB3G,EAAc;AAChC;IACZ;IACQ,KAAK/Y,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,OAAO;AACV0f,MAAAA,GAAE,KAAK1Z,IAAOuG,EAAI,yBAAyB,GAC3CmT,GAAE,aAAa,KAAKA,GAAE,aAAa1f,EAAE,IAAI,GACzC4c,GAAe8C,IAAG1Z,EAAK,GACvB0Z,GAAE,aAAa,OAAOA,GAAE,WAAW;AACnC;IACZ;IACQ,KAAK1f,EAAE,MAAM;AACT0f,MAAAA,GAAE,KAAK1Z,IAAOuG,EAAI,+BAA+B;AACjD;IACZ;IACQ;AACIqP,SAAe8D,IAAG1Z,EAAK;EAEnC;AACA;AACA,SAASmY,GAAgBuB,IAAG1Z,IAAO;AAC/B,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,IAAI;AACP4b,SAAe8D,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACbihB,SAAqBvB,IAAG1Z,EAAK;AAC7B;IACZ;IACQ;AACI0Z,MAAAA,GAAE,KAAK1Z,IAAOuG,EAAI,gCAAgC;EAE9D;AACA;AACA,SAASqP,GAAe8D,IAAG1Z,IAAO;AAC9B0Z,EAAAA,GAAE,mBAAmBlG,EAAG,MAAMxZ,EAAE,IAAI,GACpC0f,GAAE,gBAAgB3G,EAAc,SAChCoI,GAAWzB,IAAG1Z,EAAK;AACvB;AAGA,SAASmb,GAAWzB,IAAG1Z,IAAO;AAC1B,UAAQA,GAAM,MAAI;IACd,KAAKuH,EAAU,WAAW;AACtBsO,SAAgB6D,IAAG1Z,EAAK;AACxB;IACZ;IACQ,KAAKuH,EAAU,sBAAsB;AACjCgS,SAA0BG,IAAG1Z,EAAK;AAClC;IACZ;IACQ,KAAKuH,EAAU,SAAS;AACpB6O,SAAcsD,IAAG1Z,EAAK;AACtB;IACZ;IACQ,KAAKuH,EAAU,WAAW;AACtBwP,SAAe2C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKuH,EAAU,SAAS;AACpB6Q,SAAasB,IAAG1Z,EAAK;AACrB;IACZ;IACQ,KAAKuH,EAAU,KAAK;AAChB2R,SAAUQ,IAAG1Z,EAAK;AAClB;IACZ;EAGA;AACA;AACA,SAASuZ,GAA0BG,IAAG1Z,IAAO;AACzC0Z,EAAAA,GAAE,qCAAsC,GACxCA,GAAE,kBAAkB1Z,EAAK;AAC7B;AACA,SAAS6V,GAAgB6D,IAAG1Z,IAAO;AAC/B0Z,EAAAA,GAAE,qCAAsC,GACxCA,GAAE,kBAAkB1Z,EAAK,GACzB0Z,GAAE,aAAa;AACnB;AACA,SAAS0B,GAAmB1B,IAAG1Z,IAAO;AAC9B0Z,EAAAA,GAAE,aAAa,cAAc,KAC7BA,GAAE,YAAY,gBAAgBA,GAAE,aAAa,MAAM,CAAC,GAAG1Z,GAAM,KAAK;AAE1E;AACA,SAASqb,GAAmB3B,IAAG1Z,IAAO;AAClC,QAAM6a,IAAcnB,GAAE,aAAa,iCAAkC;AACjEmB,OAAenB,GAAE,aAAa,cAAc,MAC5CA,GAAE,aAAa,OACfA,GAAE,YAAY,gBAAgBmB,GAAa7a,GAAM,KAAK;AAE9D;AACA,SAASsb,GAAuB5B,IAAG1Z,IAAO;AACtC,QAAM6a,IAAcnB,GAAE,aAAa,iCAAkC;AACjEA,EAAAA,GAAE,cAAcmB,MAChBnB,GAAE,YAAY,WAAWmB,CAAW,GACpCnB,GAAE,aAAa,sBAAuB,GACtCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,gBAAgB3G,EAAc;AAExC;AACA,SAASwI,GAAsB7B,IAAG1Z,IAAO;AACjC0Z,EAAAA,GAAE,aAAa,iBAAiB1f,EAAE,CAAC,KACnC0f,GAAE,eAAgB,GAEtBA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI;AACnC;AACA,SAASgR,GAA6B9B,IAAG1Z,IAAO;AACxC0Z,EAAAA,GAAE,aAAa,iBAAiB1f,EAAE,CAAC,KACnC0f,GAAE,eAAgB,GAElB1O,GAAiB,IAAI0O,GAAE,aAAa,YAAY,KAChDA,GAAE,aAAa,IAAK,GAExBA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI;AACnC;AACA,SAASiR,GAAkB/B,IAAG1Z,IAAO;AAC7B0Z,EAAAA,GAAE,aAAa,iBAAiB1f,EAAE,CAAC,KACnC0f,GAAE,eAAgB,GAEtBA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAG/BkP,GAAE,kBAAkB,MACpBA,GAAE,aAAa;AACnB;AACA,SAASgC,GAAmBhC,IAAG1Z,IAAO;AAClC,QAAM2b,IAAajC,GAAE,aAAa,YAAY;AAC9C,GAAI,CAACA,GAAE,eAAeiC,OACdjC,GAAE,aAAa,iBAAiB1f,EAAE,CAAC,KACnC0f,GAAE,eAAgB,GAEtBA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC1BmR,MACDjC,GAAE,cAAcA,GAAE,aAAa;AAG3C;AACA,SAASkC,GAAuBlC,IAAG1Z,IAAO;AACtC0Z,EAAAA,GAAE,aAAa;AACf,QAAMtL,IAAKpO,GAAM;AACjB,WAASqH,KAAIqS,GAAE,aAAa,UAAUrS,MAAK,GAAGA,MAAK;AAC/C,UAAMwU,IAAYnC,GAAE,aAAa,OAAOrS,EAAC;AACzC,QAAK+G,MAAOpU,EAAE,MAAM6hB,MAAc7hB,EAAE,OAC9BoU,MAAOpU,EAAE,MAAMoU,MAAOpU,EAAE,QAAQ6hB,MAAc7hB,EAAE,MAAM6hB,MAAc7hB,EAAE,KAAM;AAC9E0f,MAAAA,GAAE,aAAa,oCAAoCmC,CAAS,GAC5DnC,GAAE,aAAa,sBAAsBmC,CAAS;AAC9C;IACZ;AACQ,QAAIA,MAAc7hB,EAAE,WAChB6hB,MAAc7hB,EAAE,OAChB6hB,MAAc7hB,EAAE,KAChB0f,GAAE,kBAAkBA,GAAE,aAAa,MAAMrS,EAAC,GAAGwU,CAAS;AACtD;EAEZ;AACQnC,EAAAA,GAAE,aAAa,iBAAiB1f,EAAE,CAAC,KACnC0f,GAAE,eAAgB,GAEtBA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI;AACnC;AACA,SAASsR,GAAwBpC,IAAG1Z,IAAO;AACnC0Z,EAAAA,GAAE,aAAa,iBAAiB1f,EAAE,CAAC,KACnC0f,GAAE,eAAgB,GAEtBA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,UAAU,QAAQxO,IAAc;AACtC;AACA,SAAS6Q,GAAqBrC,IAAG1Z,IAAO;AAChC0Z,EAAAA,GAAE,aAAa,WAAW1f,EAAE,MAAM,MAClC0f,GAAE,aAAa,uBAAwB,GACvCA,GAAE,aAAa,sBAAsB1f,EAAE,MAAM,IAEjD0f,GAAE,qCAAsC,GACxCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,aAAa;AACnB;AACA,SAASsC,GAAgBtC,IAAG1Z,IAAO;AAC/B,QAAMic,IAAqBvC,GAAE,yBAAyB,kCAAkClG,EAAG,CAAC;AACxFyI,QACAxB,GAAmBf,IAAG1Z,EAAK,GAC3B0Z,GAAE,aAAa,OAAOuC,EAAmB,OAAO,GAChDvC,GAAE,yBAAyB,YAAYuC,CAAkB,IAE7DvC,GAAE,qCAAsC,GACxCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,yBAAyB,YAAYA,GAAE,aAAa,SAAS1Z,EAAK;AACxE;AACA,SAASkc,GAAgBxC,IAAG1Z,IAAO;AAC/B0Z,EAAAA,GAAE,qCAAsC,GACxCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,yBAAyB,YAAYA,GAAE,aAAa,SAAS1Z,EAAK;AACxE;AACA,SAASmc,GAAmBzC,IAAG1Z,IAAO;AAClC0Z,EAAAA,GAAE,qCAAsC,GACpCA,GAAE,aAAa,WAAW1f,EAAE,IAAI,MAChCygB,GAAmBf,IAAG1Z,EAAK,GAC3B0Z,GAAE,qCAAsC,IAE5CA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,yBAAyB,YAAYA,GAAE,aAAa,SAAS1Z,EAAK;AACxE;AACA,SAASoc,GAAqB1C,IAAG1Z,IAAO;AACpC0Z,EAAAA,GAAE,qCAAsC,GACxCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,yBAAyB,aAAc,GACzCA,GAAE,aAAa;AACnB;AACA,SAAS2C,GAAoB3C,IAAG1Z,IAAO;AAC/B0Z,EAAAA,GAAE,YAAY,gBAAgBA,GAAE,QAAQ,MAAMhP,GAAc,UAAUgP,GAAE,aAAa,iBAAiB1f,EAAE,CAAC,KACzG0f,GAAE,eAAgB,GAEtBA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,aAAa,OACfA,GAAE,gBAAgB3G,EAAc;AACpC;AACA,SAASuJ,GAAmB5C,IAAG1Z,IAAO;AAClC0Z,EAAAA,GAAE,qCAAsC,GACxCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,aAAa,OACf1Z,GAAM,iBAAiB;AAC3B;AACA,SAASuc,GAAcvc,IAAO;AAC1B,QAAMwc,KAAYhV,GAAaxH,IAAOyK,GAAM,IAAI;AAChD,SAAO+R,MAAa,QAAQA,GAAU,YAAa,MAAK5J;AAC5D;AACA,SAAS6J,GAAoB/C,IAAG1Z,IAAO;AACnC0Z,EAAAA,GAAE,qCAAsC,GACxCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC1B+R,GAAcvc,EAAK,MACpB0Z,GAAE,aAAa,QAEnB1Z,GAAM,iBAAiB;AAC3B;AACA,SAAS0c,GAAoBhD,IAAG1Z,IAAO;AACnC0Z,EAAAA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BxK,GAAM,iBAAiB;AAC3B;AACA,SAAS2c,GAAiBjD,IAAG1Z,IAAO;AAC5B0Z,EAAAA,GAAE,aAAa,iBAAiB1f,EAAE,CAAC,KACnC0f,GAAE,eAAgB,GAEtBA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,aAAa,OACf1Z,GAAM,iBAAiB;AAC3B;AACA,SAAS4c,GAAoBlD,IAAG1Z,IAAO;AACnCA,EAAAA,GAAM,UAAUwT,EAAG,KACnBxT,GAAM,QAAQhG,EAAE,KAChBsiB,GAAmB5C,IAAG1Z,EAAK;AAC/B;AACA,SAAS6c,GAAuBnD,IAAG1Z,IAAO;AACtC0Z,EAAAA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAG/BkP,GAAE,kBAAkB,MACpBA,GAAE,UAAU,QAAQxO,IAAc,QAClCwO,GAAE,wBAAwBA,GAAE,eAC5BA,GAAE,aAAa,OACfA,GAAE,gBAAgB3G,EAAc;AACpC;AACA,SAAS+J,GAAkBpD,IAAG1Z,IAAO;AAC7B0Z,EAAAA,GAAE,aAAa,iBAAiB1f,EAAE,CAAC,KACnC0f,GAAE,eAAgB,GAEtBA,GAAE,qCAAsC,GACxCA,GAAE,aAAa,OACfA,GAAE,qBAAqB1Z,IAAOkL,IAAc,OAAO;AACvD;AACA,SAAS6R,GAAqBrD,IAAG1Z,IAAO;AACpC0Z,EAAAA,GAAE,aAAa,OACfA,GAAE,qBAAqB1Z,IAAOkL,IAAc,OAAO;AACvD;AAGA,SAAS8R,GAAsBtD,IAAG1Z,IAAO;AACrC0Z,EAAAA,GAAE,qBAAqB1Z,IAAOkL,IAAc,OAAO;AACvD;AACA,SAAS+R,GAAqBvD,IAAG1Z,IAAO;AACpC0Z,EAAAA,GAAE,qCAAsC,GACxCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,aAAa,OACfA,GAAE,gBACEA,GAAE,kBAAkB3G,EAAc,YAC9B2G,GAAE,kBAAkB3G,EAAc,cAClC2G,GAAE,kBAAkB3G,EAAc,iBAClC2G,GAAE,kBAAkB3G,EAAc,UAClC2G,GAAE,kBAAkB3G,EAAc,UAChCA,EAAc,qBACdA,EAAc;AAC5B;AACA,SAASmK,GAAuBxD,IAAG1Z,IAAO;AAClC0Z,EAAAA,GAAE,aAAa,iBAAiB1f,EAAE,UAClC0f,GAAE,aAAa,IAAK,GAExBA,GAAE,qCAAsC,GACxCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI;AACnC;AACA,SAAS2S,GAAiBzD,IAAG1Z,IAAO;AAC5B0Z,EAAAA,GAAE,aAAa,WAAW1f,EAAE,IAAI,KAChC0f,GAAE,aAAa,uBAAwB,GAE3CA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI;AACnC;AACA,SAAS4S,GAAiB1D,IAAG1Z,IAAO;AAC5B0Z,EAAAA,GAAE,aAAa,WAAW1f,EAAE,IAAI,KAChC0f,GAAE,aAAa,oCAAoC1f,EAAE,GAAG,GAE5D0f,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI;AACnC;AACA,SAAS6S,GAAmB3D,IAAG1Z,IAAO;AAClC0Z,EAAAA,GAAE,qCAAsC,GACxC4D,GAAsCtd,EAAK,GAC3Cud,GAAmCvd,EAAK,GACpCA,GAAM,cACN0Z,GAAE,eAAe1Z,IAAOwK,EAAG,MAAM,IAGjCkP,GAAE,eAAe1Z,IAAOwK,EAAG,MAAM,GAErCxK,GAAM,iBAAiB;AAC3B;AACA,SAASwd,GAAkB9D,IAAG1Z,IAAO;AACjC0Z,EAAAA,GAAE,qCAAsC,GACxC+D,GAAmCzd,EAAK,GACxCud,GAAmCvd,EAAK,GACpCA,GAAM,cACN0Z,GAAE,eAAe1Z,IAAOwK,EAAG,GAAG,IAG9BkP,GAAE,eAAe1Z,IAAOwK,EAAG,GAAG,GAElCxK,GAAM,iBAAiB;AAC3B;AACA,SAAS0d,GAAsBhE,IAAG1Z,IAAO;AACrC0Z,EAAAA,GAAE,qCAAsC,GACxCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI;AACnC;AACA,SAASuM,GAAe2C,IAAG1Z,IAAO;AAC9B,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,QAAQ;AACXkiB,SAAgBxC,IAAG1Z,EAAK;AACxB;IACZ;IACQ,KAAKhG,EAAE,GAAG;AACNgiB,SAAgBtC,IAAG1Z,EAAK;AACxB;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,IAAI;AACPwhB,SAA6B9B,IAAG1Z,EAAK;AACrC;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,YAAY;AACfuhB,SAAsB7B,IAAG1Z,EAAK;AAC9B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,IAAI;AACP4hB,SAAuBlC,IAAG1Z,EAAK;AAC/B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,QAAQ;AACXsiB,SAAmB5C,IAAG1Z,EAAK;AAC3B;IACZ;IACQ,KAAKhG,EAAE,IAAI;AACP2iB,SAAiBjD,IAAG1Z,EAAK;AACzB;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE,KAAK;AACRmjB,SAAiBzD,IAAG1Z,EAAK;AACzB;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE,IAAI;AACPojB,SAAiB1D,IAAG1Z,EAAK;AACzB;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE,SAAS;AACZyhB,SAAkB/B,IAAG1Z,EAAK;AAC1B;IACZ;IACQ,KAAKhG,EAAE,KAAK;AACR8iB,SAAkBpD,IAAG1Z,EAAK;AAC1B;IACZ;IACQ,KAAKhG,EAAE,KAAK;AACRwjB,SAAkB9D,IAAG1Z,EAAK;AAC1B;IACZ;IACQ,KAAKhG,EAAE,MAAM;AACTohB,SAAmB1B,IAAG1Z,EAAK;AAC3B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,UAAU;AACb4c,SAAe8C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE,MAAM;AACTqhB,SAAmB3B,IAAG1Z,EAAK;AAC3B;IACZ;IACQ,KAAKhG,EAAE,MAAM;AACT0hB,SAAmBhC,IAAG1Z,EAAK;AAC3B;IACZ;IACQ,KAAKhG,EAAE,MAAM;AACTmiB,SAAmBzC,IAAG1Z,EAAK;AAC3B;IACZ;IACQ,KAAKhG,EAAE,MAAM;AACTqjB,SAAmB3D,IAAG1Z,EAAK;AAC3B;IACZ;IACQ,KAAKhG,EAAE,OAAO;AACVqiB,SAAoB3C,IAAG1Z,EAAK;AAC5B;IACZ;IACQ,KAAKhG,EAAE,OAAO;AACVyiB,SAAoB/C,IAAG1Z,EAAK;AAC5B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,QAAQ;AACX0iB,SAAoBhD,IAAG1Z,EAAK;AAC5B;IACZ;IACQ,KAAKhG,EAAE,OAAO;AACV4iB,SAAoBlD,IAAG1Z,EAAK;AAC5B;IACZ;IACQ,KAAKhG,EAAE,QAAQ;AACX+hB,SAAqBrC,IAAG1Z,EAAK;AAC7B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,SAAS;AACZoiB,SAAqB1C,IAAG1Z,EAAK;AAC7B;IACZ;IACQ,KAAKhG,EAAE,QAAQ;AACX+iB,SAAqBrD,IAAG1Z,EAAK;AAC7B;IACZ;IACQ,KAAKhG,EAAE,QAAQ;AACXijB,SAAqBvD,IAAG1Z,EAAK;AAC7B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE,UAAU;AACbkjB,SAAuBxD,IAAG1Z,EAAK;AAC/B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE,UAAU;AACbgjB,SAAsBtD,IAAG1Z,EAAK;AAC9B;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACbshB,SAAuB5B,IAAG1Z,EAAK;AAC/B;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACb6iB,SAAuBnD,IAAG1Z,EAAK;AAC/B;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACT0f,MAAAA,GAAE,QAAQ,mBACVsD,GAAsBtD,IAAG1Z,EAAK,IAG9B0d,GAAsBhE,IAAG1Z,EAAK;AAElC;IACZ;IACQ,KAAKhG,EAAE,WAAW;AACd8hB,SAAwBpC,IAAG1Z,EAAK;AAChC;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;AAEH;IAEJ;AACI0jB,SAAsBhE,IAAG1Z,EAAK;EAE1C;AACA;AACA,SAAS2d,GAAiBjE,IAAG1Z,IAAO;AAChC,MAAI0Z,GAAE,aAAa,WAAW1f,EAAE,IAAI,MAChC0f,GAAE,gBAAgB3G,EAAc,YAG5B2G,GAAE,QAAQ,yBAAwB;AAClC,UAAMmB,IAAcnB,GAAE,aAAa,iCAAkC;AACjEmB,SACAnB,GAAE,gBAAgBmB,GAAa7a,EAAK;EAEpD;AAEA;AACA,SAAS4d,GAAiBlE,IAAG1Z,IAAO;AAC5B0Z,EAAAA,GAAE,aAAa,WAAW1f,EAAE,IAAI,MAChC0f,GAAE,gBAAgB3G,EAAc,YAChCgG,GAAgBW,IAAG1Z,EAAK;AAEhC;AACA,SAAS6d,GAAoBnE,IAAG1Z,IAAO;AACnC,QAAMoO,IAAKpO,GAAM;AACb0Z,EAAAA,GAAE,aAAa,WAAWtL,CAAE,MAC5BsL,GAAE,aAAa,uBAAwB,GACvCA,GAAE,aAAa,sBAAsBtL,CAAE;AAE/C;AACA,SAAS0P,GAAiBpE,IAAG;AACzB,QAAMiC,KAAajC,GAAE,aAAa,YAAY,GACxC,EAAE,aAAAqE,EAAW,IAAKrE;AACnBiC,EAAAA,OACDjC,GAAE,cAAc,QAEfqE,KAAepC,OAAejC,GAAE,aAAa,WAAW1f,EAAE,IAAI,MAC/D0f,GAAE,aAAa,uBAAwB,GACnCiC,KACAjC,GAAE,aAAa,sBAAsB1f,EAAE,IAAI,IAEtC+jB,KACLrE,GAAE,aAAa,OAAOqE,CAAW;AAG7C;AACA,SAASC,GAActE,IAAG;AACjBA,EAAAA,GAAE,aAAa,iBAAiB1f,EAAE,CAAC,KACpC0f,GAAE,mBAAmBlG,EAAG,GAAGxZ,EAAE,CAAC,GAElC0f,GAAE,eAAgB;AACtB;AACA,SAASuE,GAAevE,IAAG;AACnBA,EAAAA,GAAE,aAAa,mBAAmB1f,EAAE,EAAE,MACtC0f,GAAE,aAAa,oCAAoC1f,EAAE,EAAE,GACvD0f,GAAE,aAAa,sBAAsB1f,EAAE,EAAE;AAEjD;AACA,SAASkkB,GAAexE,IAAG1Z,IAAO;AAC9B,QAAMoO,IAAKpO,GAAM;AACb0Z,EAAAA,GAAE,aAAa,WAAWtL,CAAE,MAC5BsL,GAAE,aAAa,oCAAoCtL,CAAE,GACrDsL,GAAE,aAAa,sBAAsBtL,CAAE;AAE/C;AACA,SAAS+P,GAA2BzE,IAAG;AAC/BA,EAAAA,GAAE,aAAa,yBAAA,MACfA,GAAE,aAAa,uBAAwB,GACvCA,GAAE,aAAa,6BAA8B;AAErD;AACA,SAAS0E,GAAmB1E,IAAG1Z,IAAO;AAClC,QAAMoO,IAAKpO,GAAM;AACb0Z,EAAAA,GAAE,aAAa,WAAWtL,CAAE,MAC5BsL,GAAE,aAAa,uBAAwB,GACvCA,GAAE,aAAa,sBAAsBtL,CAAE,GACvCsL,GAAE,yBAAyB,kBAAmB;AAEtD;AACA,SAAS2E,GAAe3E,IAAG;AACvBA,EAAAA,GAAE,qCAAsC,GACxCA,GAAE,mBAAmBlG,EAAG,IAAIxZ,EAAE,EAAE,GAChC0f,GAAE,aAAa,IAAK,GACpBA,GAAE,aAAa;AACnB;AACA,SAASE,GAAoBF,IAAG1Z,IAAO;AACnC,QAAMoO,IAAKpO,GAAM,SACX6T,KAAM7T,GAAM;AAClB,WAASqH,IAAIqS,GAAE,aAAa,UAAUrS,IAAI,GAAGA,KAAK;AAC9C,UAAMzD,IAAU8V,GAAE,aAAa,MAAMrS,CAAC,GAChCwU,IAAYnC,GAAE,aAAa,OAAOrS,CAAC;AAEzC,QAAIwM,OAAQgI,MAAchI,OAAQ7Z,EAAE,WAAW0f,GAAE,YAAY,WAAW9V,CAAO,MAAMwK,IAAK;AACtFsL,MAAAA,GAAE,aAAa,oCAAoC7F,EAAG,GAClD6F,GAAE,aAAa,YAAYrS,KAC3BqS,GAAE,aAAa,gBAAgBrS,CAAC;AACpC;IACZ;AACQ,QAAIqS,GAAE,kBAAkB9V,GAASiY,CAAS;AACtC;EAEZ;AACA;AACA,SAASzD,GAAasB,IAAG1Z,IAAO;AAC5B,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,QAAQ;AACXygB,SAAmBf,IAAG1Z,EAAK;AAC3B;IACZ;IACQ,KAAKhG,EAAE,GAAG;AACNgkB,SAActE,EAAC;AACf;IACZ;IACQ,KAAK1f,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,YAAY;AACf6jB,SAAoBnE,IAAG1Z,EAAK;AAC5B;IACZ;IACQ,KAAKhG,EAAE,IAAI;AACPikB,SAAevE,EAAC;AAChB;IACZ;IACQ,KAAK1f,EAAE;IACP,KAAKA,EAAE,IAAI;AACPkkB,SAAexE,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,IAAI;AACPmkB,SAA2BzE,EAAC;AAC5B;IACZ;IACQ,KAAK1f,EAAE,IAAI;AACPqkB,SAAe3E,EAAC;AAChB;IACZ;IACQ,KAAK1f,EAAE,MAAM;AACT2jB,SAAiBjE,IAAG1Z,EAAK;AACzB;IACZ;IACQ,KAAKhG,EAAE,MAAM;AACT4jB,SAAiBlE,IAAG1Z,EAAK;AACzB;IACZ;IACQ,KAAKhG,EAAE,MAAM;AACT8jB,SAAiBpE,EAAC;AAClB;IACZ;IACQ,KAAK1f,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,SAAS;AACZokB,SAAmB1E,IAAG1Z,EAAK;AAC3B;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACbihB,SAAqBvB,IAAG1Z,EAAK;AAC7B;IACZ;IACQ;AACI4Z,SAAoBF,IAAG1Z,EAAK;EAExC;AACA;AACA,SAASkZ,GAAUQ,IAAG1Z,IAAO;AACrB0Z,EAAAA,GAAE,uBAAuB,SAAS,IAClCN,GAAcM,IAAG1Z,EAAK,IAGtBqZ,GAAYK,IAAG1Z,EAAK;AAE5B;AAGA,SAASqY,GAAaqB,IAAG1Z,IAAO;AAC5B,MAAI6H;AACA7H,EAAAA,GAAM,UAAUhG,EAAE,YACjB6N,IAAK6R,GAAE,mBAAmB,QAAQ7R,MAAO,UAAkBA,EAAG,KAAK6R,IAAGA,GAAE,aAAa,OAAO,IAEjGA,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgBA,GAAE;AACxB;AACA,SAASP,GAAUO,IAAG1Z,IAAO;AACzB0Z,EAAAA,GAAE,KAAK1Z,IAAOuG,EAAI,kCAAkC,GACpDmT,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgBA,GAAE,uBACpBA,GAAE,MAAM1Z,EAAK;AACjB;AAGA,SAAS8V,GAAiB4D,IAAG1Z,IAAO;AAChC,MAAIiT,GAAqB,IAAIyG,GAAE,aAAa,YAAY;AAKpD,YAJAA,GAAE,uBAAuB,SAAS,GAClCA,GAAE,wCAAwC,OAC1CA,GAAE,wBAAwBA,GAAE,eAC5BA,GAAE,gBAAgB3G,EAAc,eACxB/S,GAAM,MAAI;MACd,KAAKuH,EAAU,WAAW;AACtBwO,WAAqB2D,IAAG1Z,EAAK;AAC7B;MAChB;MACY,KAAKuH,EAAU,sBAAsB;AACjCiS,WAA+BE,IAAG1Z,EAAK;AACvC;MAChB;IAEA;;AAGQse,OAAa5E,IAAG1Z,EAAK;AAE7B;AACA,SAASue,GAAuB7E,IAAG1Z,IAAO;AACtC0Z,EAAAA,GAAE,aAAa,wBAAyB,GACxCA,GAAE,yBAAyB,aAAc,GACzCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,gBAAgB3G,EAAc;AACpC;AACA,SAASyL,GAAwB9E,IAAG1Z,IAAO;AACvC0Z,EAAAA,GAAE,aAAa,wBAAyB,GACxCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,gBAAgB3G,EAAc;AACpC;AACA,SAAS0L,GAAmB/E,IAAG1Z,IAAO;AAClC0Z,EAAAA,GAAE,aAAa,wBAAyB,GACxCA,GAAE,mBAAmBlG,EAAG,UAAUxZ,EAAE,QAAQ,GAC5C0f,GAAE,gBAAgB3G,EAAc,iBAChCmE,GAAsBwC,IAAG1Z,EAAK;AAClC;AACA,SAAS0e,GAAqBhF,IAAG1Z,IAAO;AACpC0Z,EAAAA,GAAE,aAAa,wBAAyB,GACxCA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,gBAAgB3G,EAAc;AACpC;AACA,SAAS4L,GAAkBjF,IAAG1Z,IAAO;AACjC0Z,EAAAA,GAAE,aAAa,wBAAyB,GACxCA,GAAE,mBAAmBlG,EAAG,OAAOxZ,EAAE,KAAK,GACtC0f,GAAE,gBAAgB3G,EAAc,eAChCoE,GAAoBuC,IAAG1Z,EAAK;AAChC;AACA,SAAS4e,GAAqBlF,IAAG1Z,IAAO;AAChC0Z,EAAAA,GAAE,aAAa,gBAAgB1f,EAAE,KAAK,MACtC0f,GAAE,aAAa,sBAAsB1f,EAAE,KAAK,GAC5C0f,GAAE,oBAAqB,GACvBA,GAAE,iBAAiB1Z,EAAK;AAEhC;AACA,SAAS6e,GAAqBnF,IAAG1Z,IAAO;AAChCuc,KAAcvc,EAAK,IACnB0Z,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,IAG/B8T,GAAa5E,IAAG1Z,EAAK,GAEzBA,GAAM,iBAAiB;AAC3B;AACA,SAAS8e,GAAoBpF,IAAG1Z,IAAO;AAC/B,GAAC0Z,GAAE,eAAeA,GAAE,aAAa,cAAc,MAC/CA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,cAAcA,GAAE,aAAa,SAC/BA,GAAE,aAAa,IAAK;AAE5B;AACA,SAAS1C,GAAgB0C,IAAG1Z,IAAO;AAC/B,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,IAAI;AACP2kB,SAAkBjF,IAAG1Z,EAAK;AAC1B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,UAAU;AACb4c,SAAe8C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE,KAAK;AACRykB,SAAmB/E,IAAG1Z,EAAK;AAC3B;IACZ;IACQ,KAAKhG,EAAE,MAAM;AACT8kB,SAAoBpF,IAAG1Z,EAAK;AAC5B;IACZ;IACQ,KAAKhG,EAAE,OAAO;AACV4kB,SAAqBlF,IAAG1Z,EAAK;AAC7B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,OAAO;AACV0kB,SAAqBhF,IAAG1Z,EAAK;AAC7B;IACZ;IACQ,KAAKhG,EAAE,OAAO;AACV6kB,SAAqBnF,IAAG1Z,EAAK;AAC7B;IACZ;IACQ,KAAKhG,EAAE,SAAS;AACZukB,SAAuB7E,IAAG1Z,EAAK;AAC/B;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACbwkB,SAAwB9E,IAAG1Z,EAAK;AAChC;IACZ;IACQ;AACIse,SAAa5E,IAAG1Z,EAAK;EAEjC;AACA;AACA,SAASsY,GAAcoB,IAAG1Z,IAAO;AAC7B,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,OAAO;AACN0f,MAAAA,GAAE,aAAa,gBAAgB1f,EAAE,KAAK,MACtC0f,GAAE,aAAa,sBAAsB1f,EAAE,KAAK,GAC5C0f,GAAE,oBAAqB;AAE3B;IACZ;IACQ,KAAK1f,EAAE,UAAU;AACbihB,SAAqBvB,IAAG1Z,EAAK;AAC7B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;AAEH;IAEJ;AACIskB,SAAa5E,IAAG1Z,EAAK;EAEjC;AACA;AACA,SAASse,GAAa5E,IAAG1Z,IAAO;AAC5B,QAAM+e,IAA4BrF,GAAE;AACpCA,EAAAA,GAAE,yBAAyB,MAE3ByB,GAAWzB,IAAG1Z,EAAK,GACnB0Z,GAAE,yBAAyBqF;AAC/B;AAGA,SAASvF,GAA+BE,IAAG1Z,IAAO;AAC9C0Z,EAAAA,GAAE,uBAAuB,KAAK1Z,EAAK;AACvC;AACA,SAAS+V,GAAqB2D,IAAG1Z,IAAO;AACpC0Z,EAAAA,GAAE,uBAAuB,KAAK1Z,EAAK,GACnC0Z,GAAE,wCAAwC;AAC9C;AACA,SAASrD,GAAiBqD,IAAG1Z,IAAO;AAChC,MAAIqH,IAAI;AACR,MAAIqS,GAAE;AACF,WAAOrS,IAAIqS,GAAE,uBAAuB,QAAQrS;AACxCiX,SAAa5E,IAAGA,GAAE,uBAAuBrS,CAAC,CAAC;;AAI/C,WAAOA,IAAIqS,GAAE,uBAAuB,QAAQrS;AACxCqS,MAAAA,GAAE,kBAAkBA,GAAE,uBAAuBrS,CAAC,CAAC;AAGvDqS,EAAAA,GAAE,gBAAgBA,GAAE,uBACpBA,GAAE,cAAc1Z,EAAK;AACzB;AAGA,IAAMgf,KAAsB,oBAAI,IAAI,CAAChlB,EAAE,SAASA,EAAE,KAAKA,EAAE,UAAUA,EAAE,OAAOA,EAAE,IAAIA,EAAE,OAAOA,EAAE,IAAIA,EAAE,OAAOA,EAAE,EAAE,CAAC;AAC/G,SAASid,GAAkByC,IAAG1Z,IAAO;AACjC,QAAMoO,IAAKpO,GAAM;AACbgf,KAAoB,IAAI5Q,CAAE,IACtBsL,GAAE,aAAa,gBAAgB1f,EAAE,OAAO,MACxC0f,GAAE,aAAa,uBAAwB,GACvCA,GAAE,aAAa,sBAAsB1f,EAAE,OAAO,GAC9C0f,GAAE,yBAAyB,kBAAmB,GAC9CA,GAAE,gBAAgB3G,EAAc,UAChCiE,GAAgB0C,IAAG1Z,EAAK,KAI5B+W,GAAe2C,IAAG1Z,EAAK;AAE/B;AACA,SAASuY,GAAgBmB,IAAG1Z,IAAO;AAC/B,QAAMoO,IAAKpO,GAAM;AACjB,UAAQoO,GAAE;IACN,KAAKpU,EAAE;IACP,KAAKA,EAAE,OAAO;AACN0f,MAAAA,GAAE,aAAa,gBAAgB1f,EAAE,OAAO,MACxC0f,GAAE,aAAa,uBAAwB,GACvCA,GAAE,aAAa,sBAAsB1f,EAAE,OAAO,GAC9C0f,GAAE,yBAAyB,kBAAmB,GAC9CA,GAAE,gBAAgB3G,EAAc,UAC5B3E,MAAOpU,EAAE,SACTse,GAAcoB,IAAG1Z,EAAK;AAG9B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;AAEH;IAEJ;AACIoe,SAAasB,IAAG1Z,EAAK;EAEjC;AACA;AAGA,SAASkX,GAAsBwC,IAAG1Z,IAAO;AACrC,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,MAAM;AACT+c,SAAe2C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE,KAAK;AACR0f,MAAAA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BxK,GAAM,iBAAiB;AACvB;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACb4c,SAAe8C,IAAG1Z,EAAK;AACvB;IACZ;IACQ;AACIgW,SAAmB0D,IAAG1Z,EAAK;EAEvC;AACA;AACA,SAASwY,GAAoBkB,IAAG1Z,IAAO;AACnC,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,UAAU;AACT0f,MAAAA,GAAE,aAAa,iBAAiB1f,EAAE,aAClC0f,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc;AAEpC;IACZ;IACQ,KAAK/Y,EAAE,UAAU;AACbihB,SAAqBvB,IAAG1Z,EAAK;AAC7B;IACZ;IACQ,KAAKhG,EAAE;AAEH;IAEJ;AACIgc,SAAmB0D,IAAG1Z,EAAK;EAEvC;AACA;AACA,SAASgW,GAAmB0D,IAAG1Z,IAAO;AAC9B0Z,EAAAA,GAAE,aAAa,iBAAiB1f,EAAE,aAClC0f,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc,UAChC2G,GAAE,cAAc1Z,EAAK;AAE7B;AAGA,SAASmX,GAAoBuC,IAAG1Z,IAAO;AACnC,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,IAAI;AACP0f,MAAAA,GAAE,aAAa,4BAA6B,GAC5CA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,gBAAgB3G,EAAc;AAChC;IACZ;IACQ,KAAK/Y,EAAE;IACP,KAAKA,EAAE,IAAI;AACP0f,MAAAA,GAAE,aAAa,4BAA6B,GAC5CA,GAAE,mBAAmBlG,EAAG,IAAIxZ,EAAE,EAAE,GAChC0f,GAAE,gBAAgB3G,EAAc,QAChCqE,GAAcsC,IAAG1Z,EAAK;AACtB;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,OAAO;AACN0f,MAAAA,GAAE,aAAa,gCAAA,MACfA,GAAE,aAAa,4BAA6B,GAC5CA,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc,UAChCiE,GAAgB0C,IAAG1Z,EAAK;AAE5B;IACZ;IACQ;AACIgX,SAAgB0C,IAAG1Z,EAAK;EAEpC;AACA;AACA,SAASyY,GAAkBiB,IAAG1Z,IAAO;AACjC,QAAMoO,IAAKpO,GAAM;AACjB,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,OAAO;AACN0f,MAAAA,GAAE,aAAa,gBAAgBtL,CAAE,MACjCsL,GAAE,aAAa,4BAA6B,GAC5CA,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc;AAEpC;IACZ;IACQ,KAAK/Y,EAAE,OAAO;AACN0f,MAAAA,GAAE,aAAa,gCAAA,MACfA,GAAE,aAAa,4BAA6B,GAC5CA,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc,UAChCuF,GAAcoB,IAAG1Z,EAAK;AAE1B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;AAEH;IAEJ;AACIse,SAAcoB,IAAG1Z,EAAK;EAElC;AACA;AAGA,SAASoX,GAAcsC,IAAG1Z,IAAO;AAC7B,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE;IACP,KAAKA,EAAE,IAAI;AACP0f,MAAAA,GAAE,aAAa,2BAA4B,GAC3CA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BkP,GAAE,gBAAgB3G,EAAc,SAChC2G,GAAE,yBAAyB,aAAc;AACzC;IACZ;IACQ,KAAK1f,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,IAAI;AACH0f,MAAAA,GAAE,aAAa,gBAAgB1f,EAAE,EAAE,MACnC0f,GAAE,aAAa,2BAA4B,GAC3CA,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc,eAChCoE,GAAoBuC,IAAG1Z,EAAK;AAEhC;IACZ;IACQ;AACIgX,SAAgB0C,IAAG1Z,EAAK;EAEpC;AACA;AACA,SAAS0Y,GAAYgB,IAAG1Z,IAAO;AAC3B,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,IAAI;AACH0f,MAAAA,GAAE,aAAa,gBAAgB1f,EAAE,EAAE,MACnC0f,GAAE,aAAa,2BAA4B,GAC3CA,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc;AAEpC;IACZ;IACQ,KAAK/Y,EAAE,OAAO;AACN0f,MAAAA,GAAE,aAAa,gBAAgB1f,EAAE,EAAE,MACnC0f,GAAE,aAAa,2BAA4B,GAC3CA,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc,eAChC0F,GAAkBiB,IAAG1Z,EAAK;AAE9B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,OAAO;AACV,OAAI0f,GAAE,aAAa,gBAAgB1Z,GAAM,KAAK,KAAK0Z,GAAE,aAAa,gBAAgB1f,EAAE,EAAE,OAClF0f,GAAE,aAAa,2BAA4B,GAC3CA,GAAE,aAAa,IAAK,GACpBA,GAAE,gBAAgB3G,EAAc,eAChC0F,GAAkBiB,IAAG1Z,EAAK;AAE9B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;AAEH;IAEJ;AACIse,SAAcoB,IAAG1Z,EAAK;EAElC;AACA;AAGA,SAASqX,GAAeqC,IAAG1Z,IAAO;AAC9B,QAAMoO,IAAKpO,GAAM;AACbgf,KAAoB,IAAI5Q,CAAE,KACtBsL,GAAE,aAAa,gBAAgB1f,EAAE,EAAE,KAAK0f,GAAE,aAAa,gBAAgB1f,EAAE,EAAE,OAC3E0f,GAAE,gBAAiB,GACnBtC,GAAcsC,IAAG1Z,EAAK,KAI1B+W,GAAe2C,IAAG1Z,EAAK;AAE/B;AACA,SAAS2Y,GAAae,IAAG1Z,IAAO;AAC5B,QAAMoO,IAAKpO,GAAM;AACjB,UAAQoO,GAAE;IACN,KAAKpU,EAAE;IACP,KAAKA,EAAE,IAAI;AACH0f,MAAAA,GAAE,aAAa,gBAAgBtL,CAAE,MACjCsL,GAAE,aAAa,uBAAwB,GACvCA,GAAE,aAAa,sBAAsBtL,CAAE,GACvCsL,GAAE,yBAAyB,kBAAmB,GAC9CA,GAAE,gBAAgB3G,EAAc;AAEpC;IACZ;IACQ,KAAK/Y,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,IAAI;AACH0f,MAAAA,GAAE,aAAa,gBAAgBtL,CAAE,MACjCsL,GAAE,gBAAiB,GACnBhB,GAAYgB,IAAG1Z,EAAK;AAExB;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;AAEH;IAEJ;AACIoe,SAAasB,IAAG1Z,EAAK;EAEjC;AACA;AAGA,SAASsX,GAAiBoC,IAAG1Z,IAAO;AAChC,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,MAAM;AACT+c,SAAe2C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE,QAAQ;AACP0f,MAAAA,GAAE,aAAa,iBAAiB1f,EAAE,UAClC0f,GAAE,aAAa,IAAK,GAExBA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI;AAC/B;IACZ;IACQ,KAAKxQ,EAAE,UAAU;AACT0f,MAAAA,GAAE,aAAa,iBAAiB1f,EAAE,UAClC0f,GAAE,aAAa,IAAK,GAEpBA,GAAE,aAAa,iBAAiB1f,EAAE,YAClC0f,GAAE,aAAa,IAAK,GAExBA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI;AAC/B;IACZ;IACQ,KAAKxQ,EAAE,IAAI;AACH0f,MAAAA,GAAE,aAAa,iBAAiB1f,EAAE,UAClC0f,GAAE,aAAa,IAAK,GAEpBA,GAAE,aAAa,iBAAiB1f,EAAE,YAClC0f,GAAE,aAAa,IAAK,GAExBA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BxK,GAAM,iBAAiB;AACvB;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,QAAQ;AACP0f,MAAAA,GAAE,aAAa,iBAAiB1f,EAAE,MAAM,MACxC0f,GAAE,aAAa,sBAAsB1f,EAAE,MAAM,GAC7C0f,GAAE,oBAAqB,GACnB1Z,GAAM,UAAUhG,EAAE,UAClB0f,GAAE,iBAAiB1Z,EAAK;AAGhC;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE,UAAU;AACb4c,SAAe8C,IAAG1Z,EAAK;AACvB;IACZ;EAGA;AACA;AACA,SAAS4Y,GAAec,IAAG1Z,IAAO;AAC9B,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,UAAU;AACT0f,MAAAA,GAAE,aAAa,WAAW,KAC1BA,GAAE,aAAa,iBAAiB1f,EAAE,UAClC0f,GAAE,aAAa,OAAOA,GAAE,aAAa,WAAW,CAAC,MAAM1f,EAAE,YACzD0f,GAAE,aAAa,IAAK,GAEpBA,GAAE,aAAa,iBAAiB1f,EAAE,YAClC0f,GAAE,aAAa,IAAK;AAExB;IACZ;IACQ,KAAK1f,EAAE,QAAQ;AACP0f,MAAAA,GAAE,aAAa,iBAAiB1f,EAAE,UAClC0f,GAAE,aAAa,IAAK;AAExB;IACZ;IACQ,KAAK1f,EAAE,QAAQ;AACP0f,MAAAA,GAAE,aAAa,iBAAiB1f,EAAE,MAAM,MACxC0f,GAAE,aAAa,sBAAsB1f,EAAE,MAAM,GAC7C0f,GAAE,oBAAqB;AAE3B;IACZ;IACQ,KAAK1f,EAAE,UAAU;AACbihB,SAAqBvB,IAAG1Z,EAAK;AAC7B;IACZ;EAGA;AACA;AAGA,SAASuX,GAAwBmC,IAAG1Z,IAAO;AACvC,QAAMoO,IAAKpO,GAAM;AACboO,QAAOpU,EAAE,WACToU,MAAOpU,EAAE,SACToU,MAAOpU,EAAE,SACToU,MAAOpU,EAAE,SACToU,MAAOpU,EAAE,SACToU,MAAOpU,EAAE,MACToU,MAAOpU,EAAE,MACToU,MAAOpU,EAAE,MACT0f,GAAE,aAAa,sBAAsB1f,EAAE,MAAM,GAC7C0f,GAAE,oBAAqB,GACvBA,GAAE,iBAAiB1Z,EAAK,KAGxBsX,GAAiBoC,IAAG1Z,EAAK;AAEjC;AACA,SAAS6Y,GAAsBa,IAAG1Z,IAAO;AACrC,QAAMoO,IAAKpO,GAAM;AACboO,QAAOpU,EAAE,WACToU,MAAOpU,EAAE,SACToU,MAAOpU,EAAE,SACToU,MAAOpU,EAAE,SACToU,MAAOpU,EAAE,SACToU,MAAOpU,EAAE,MACToU,MAAOpU,EAAE,MACToU,MAAOpU,EAAE,KACL0f,GAAE,aAAa,gBAAgBtL,CAAE,MACjCsL,GAAE,aAAa,sBAAsB1f,EAAE,MAAM,GAC7C0f,GAAE,oBAAqB,GACvBA,GAAE,SAAS1Z,EAAK,KAIpB4Y,GAAec,IAAG1Z,EAAK;AAE/B;AAGA,SAASwX,GAAmBkC,IAAG1Z,IAAO;AAClC,UAAQA,GAAM,OAAK;;IAEf,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,OAAO;AACV4c,SAAe8C,IAAG1Z,EAAK;AACvB;IACZ;;IAEQ,KAAKhG,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE;IACP,KAAKA,EAAE,OAAO;AACV0f,MAAAA,GAAE,uBAAuB,CAAC,IAAI3G,EAAc,UAC5C2G,GAAE,gBAAgB3G,EAAc,UAChCiE,GAAgB0C,IAAG1Z,EAAK;AACxB;IACZ;IACQ,KAAKhG,EAAE,KAAK;AACR0f,MAAAA,GAAE,uBAAuB,CAAC,IAAI3G,EAAc,iBAC5C2G,GAAE,gBAAgB3G,EAAc,iBAChCmE,GAAsBwC,IAAG1Z,EAAK;AAC9B;IACZ;IACQ,KAAKhG,EAAE,IAAI;AACP0f,MAAAA,GAAE,uBAAuB,CAAC,IAAI3G,EAAc,eAC5C2G,GAAE,gBAAgB3G,EAAc,eAChCoE,GAAoBuC,IAAG1Z,EAAK;AAC5B;IACZ;IACQ,KAAKhG,EAAE;IACP,KAAKA,EAAE,IAAI;AACP0f,MAAAA,GAAE,uBAAuB,CAAC,IAAI3G,EAAc,QAC5C2G,GAAE,gBAAgB3G,EAAc,QAChCqE,GAAcsC,IAAG1Z,EAAK;AACtB;IACZ;IACQ;AACI0Z,MAAAA,GAAE,uBAAuB,CAAC,IAAI3G,EAAc,SAC5C2G,GAAE,gBAAgB3G,EAAc,SAChCgE,GAAe2C,IAAG1Z,EAAK;EAEnC;AACA;AACA,SAAS8Y,GAAiBY,IAAG1Z,IAAO;AAC5BA,EAAAA,GAAM,UAAUhG,EAAE,YAClBihB,GAAqBvB,IAAG1Z,EAAK;AAErC;AACA,SAASoZ,GAAcM,IAAG1Z,IAAO;AACzB0Z,EAAAA,GAAE,aAAa,YAAY,KAC3BA,GAAE,aAAa,sBAAsB1f,EAAE,QAAQ,GAC/C0f,GAAE,yBAAyB,kBAAmB,GAC9CA,GAAE,uBAAuB,MAAO,GAChCA,GAAE,oBAAqB,GACvBA,GAAE,MAAM1Z,EAAK,KAGbqZ,GAAYK,IAAG1Z,EAAK;AAE5B;AAGA,SAASyX,GAAkBiC,IAAG1Z,IAAO;AAC7BA,EAAAA,GAAM,UAAUhG,EAAE,OAClB+c,GAAe2C,IAAG1Z,EAAK,IAGvBiW,GAAeyD,IAAG1Z,EAAK;AAE/B;AACA,SAAS+Y,GAAgBW,IAAG1Z,IAAO;AAC/B,MAAI6H;AACJ,MAAI7H,GAAM,UAAUhG,EAAE,MAAA;AAMlB,QALK0f,GAAE,oBACHA,GAAE,gBAAgB3G,EAAc,mBAIhC2G,GAAE,QAAQ,0BAA0BA,GAAE,aAAa,OAAO,CAAC,MAAM1f,EAAE,MAAM;AACzE0f,MAAAA,GAAE,gBAAgBA,GAAE,aAAa,MAAM,CAAC,GAAG1Z,EAAK;AAEhD,YAAM6a,KAAcnB,GAAE,aAAa,MAAM,CAAC;AACtCmB,MAAAA,MAAe,EAAG,GAAAhT,IAAK6R,GAAE,YAAY,0BAA0BmB,EAAW,OAAO,QAAQhT,MAAO,WAAkBA,EAAG,WACrH6R,GAAE,gBAAgBmB,IAAa7a,EAAK;IAEpD;EAAA;AAGQiW,OAAeyD,IAAG1Z,EAAK;AAE/B;AACA,SAASiW,GAAeyD,IAAG1Z,IAAO;AAC9B0Z,EAAAA,GAAE,gBAAgB3G,EAAc,SAChCoI,GAAWzB,IAAG1Z,EAAK;AACvB;AAGA,SAAS0X,GAAmBgC,IAAG1Z,IAAO;AAClC,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,MAAM;AACT+c,SAAe2C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACb0f,MAAAA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI;AAC/B;IACZ;IACQ,KAAKxQ,EAAE,OAAO;AACV0f,MAAAA,GAAE,eAAe1Z,IAAOwK,EAAG,IAAI,GAC/BxK,GAAM,iBAAiB;AACvB;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACb4c,SAAe8C,IAAG1Z,EAAK;AACvB;IACZ;EAGA;AACA;AACA,SAASgZ,GAAiBU,IAAG1Z,IAAO;AAC5BA,EAAAA,GAAM,UAAUhG,EAAE,YAAY,CAAC0f,GAAE,aAAa,yBAAA,MAC9CA,GAAE,aAAa,IAAK,GAChB,CAACA,GAAE,mBAAmBA,GAAE,aAAa,iBAAiB1f,EAAE,aACxD0f,GAAE,gBAAgB3G,EAAc;AAG5C;AAGA,SAAS4E,GAAsB+B,IAAG1Z,IAAO;AACrC,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,MAAM;AACT+c,SAAe2C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACb4c,SAAe8C,IAAG1Z,EAAK;AACvB;IACZ;EAGA;AACA;AACA,SAASiZ,GAAoBS,IAAG1Z,IAAO;AAC/BA,EAAAA,GAAM,UAAUhG,EAAE,SAClB0f,GAAE,gBAAgB3G,EAAc;AAExC;AAGA,SAAS6E,GAAuB8B,IAAG1Z,IAAO;AAClCA,EAAAA,GAAM,UAAUhG,EAAE,OAClB+c,GAAe2C,IAAG1Z,EAAK,IAGvBkW,GAAoBwD,IAAG1Z,EAAK;AAEpC;AACA,SAASkW,GAAoBwD,IAAG1Z,IAAO;AACnC0Z,EAAAA,GAAE,gBAAgB3G,EAAc,SAChCoI,GAAWzB,IAAG1Z,EAAK;AACvB;AAGA,SAAS6X,GAA2B6B,IAAG1Z,IAAO;AAC1C,UAAQA,GAAM,OAAK;IACf,KAAKhG,EAAE,MAAM;AACT+c,SAAe2C,IAAG1Z,EAAK;AACvB;IACZ;IACQ,KAAKhG,EAAE,UAAU;AACb4c,SAAe8C,IAAG1Z,EAAK;AACvB;IACZ;EAGA;AACA;AAGA,SAASmW,GAA8BuD,IAAG1Z,IAAO;AAC7CA,EAAAA,GAAM,QAAQif,IACdvF,GAAE,kBAAkB1Z,EAAK;AAC7B;AACA,SAASsV,GAA0BoE,IAAG1Z,IAAO;AACzC0Z,EAAAA,GAAE,kBAAkB1Z,EAAK,GACzB0Z,GAAE,aAAa;AACnB;AACA,SAASwF,GAA+BxF,IAAG;AACvC,SAAOA,GAAE,YAAY,gBAAgBA,GAAE,aAAa,OAAO,MAAMlP,EAAG,QAChE,CAACkP,GAAE,oBAAoBA,GAAE,aAAa,cAAcA,GAAE,aAAa,OAAO;AAC1EA,IAAAA,GAAE,aAAa,IAAK;AAE5B;AACA,SAASjD,GAAyBiD,IAAG1Z,IAAO;AACxC,MAAImf,GAA0Bnf,EAAK;AAC/Bkf,OAA+BxF,EAAC,GAChCA,GAAE,+BAA+B1Z,EAAK;OAErC;AACD,UAAMwJ,IAAUkQ,GAAE,2BAA4B,GACxC0F,KAAY1F,GAAE,YAAY,gBAAgBlQ,CAAO;AACnD4V,IAAAA,OAAc5U,EAAG,SACjB8S,GAAsCtd,EAAK,IAEtCof,OAAc5U,EAAG,QACtB6U,GAAqCrf,EAAK,GAC1Cyd,GAAmCzd,EAAK,IAE5Cud,GAAmCvd,EAAK,GACpCA,GAAM,cACN0Z,GAAE,eAAe1Z,IAAOof,EAAS,IAGjC1F,GAAE,eAAe1Z,IAAOof,EAAS,GAErCpf,GAAM,iBAAiB;EAC/B;AACA;AACA,SAAS8X,GAAuB4B,IAAG1Z,IAAO;AACtC,MAAIA,GAAM,UAAUhG,EAAE,KAAKgG,GAAM,UAAUhG,EAAE,IAAI;AAC7CklB,OAA+BxF,EAAC,GAChCA,GAAE,6BAA6B1Z,EAAK;AACpC;EACR;AACI,WAASqH,IAAIqS,GAAE,aAAa,UAAUrS,IAAI,GAAGA,KAAK;AAC9C,UAAMzD,KAAU8V,GAAE,aAAa,MAAMrS,CAAC;AACtC,QAAIqS,GAAE,YAAY,gBAAgB9V,EAAO,MAAM4G,EAAG,MAAM;AACpDkP,MAAAA,GAAE,6BAA6B1Z,EAAK;AACpC;IACZ;AACQ,UAAMS,IAAUiZ,GAAE,YAAY,WAAW9V,EAAO;AAChD,QAAInD,EAAQ,YAAA,MAAkBT,GAAM,SAAS;AAEzCA,MAAAA,GAAM,UAAUS,GAChBiZ,GAAE,aAAa,gBAAgBrS,CAAC;AAChC;IACZ;EACA;AACA;AClqGIrN,EAAE,MACFA,EAAE,MACFA,EAAE,UACFA,EAAE,SACFA,EAAE,IACFA,EAAE,KACFA,EAAE,OACFA,EAAE,OACFA,EAAE,IACFA,EAAE,KACFA,EAAE,OACFA,EAAE,QACFA,EAAE,MACFA,EAAE,MACFA,EAAE,OACFA,EAAE,QACFA,EAAE,OACFA,EAAE;ACOC,IAAMslB,KAAW1c,GAAM,KAAK;AAA5B,IAUM2c,KAAa3c,GAAM,OAAO;AAUvC,SAASA,GAAMtI,IAAM;AACnB,SAAOsI;AAQP,WAASA,GAAMzB,GAAM;AACnB,UAAMyB,KAASzB,KAAQA,EAAK,YAAYA,EAAK,SAAS7G,EAAI,KAAM,CAAA;AAEhE,QACE,OAAOsI,GAAM,QAAS,YACtBA,GAAM,OAAO,KACb,OAAOA,GAAM,UAAW,YACxBA,GAAM,SAAS;AAEf,aAAO;QACL,MAAMA,GAAM;QACZ,QAAQA,GAAM;QACd,QACE,OAAOA,GAAM,UAAW,YAAYA,GAAM,SAAS,KAC/CA,GAAM,SACN;MACd;EAEA;AACA;AAUO,SAASoB,GAAS7C,IAAM;AAC7B,QAAMrB,KAAQyf,GAAWpe,EAAI,GACvBpB,IAAMuf,GAASne,EAAI;AAEzB,MAAIrB,MAASC;AACX,WAAO,EAAC,OAAAD,IAAO,KAAAC,EAAG;AAEtB;AC6CO,IAAMyf;;;;;;;;;;;;;;;EAgBT,SAAUC,IAAM;AACd,QAAIA,MAAS;AACX,aAAOC;AAGT,QAAI,OAAOD,MAAS;AAClB,aAAOE,GAAYF,EAAI;AAGzB,QAAI,OAAOA,MAAS;AAClB,aAAO,MAAM,QAAQA,EAAI,IAAIG,GAAWH,EAAI,IAAII,GAAaJ,EAAI;AAGnE,QAAI,OAAOA,MAAS;AAClB,aAAOK,GAAYL,EAAI;AAGzB,UAAM,IAAI,MAAM,8CAA8C;EACpE;;AAOA,SAASG,GAAWG,IAAO;AAEzB,QAAMtiB,KAAS,CAAA;AACf,MAAIrD,IAAQ;AAEZ,SAAO,EAAEA,IAAQ2lB,GAAM;AACrBtiB,IAAAA,GAAOrD,CAAK,IAAIolB,GAAQO,GAAM3lB,CAAK,CAAC;AAGtC,SAAOulB,GAAYxjB,EAAG;AAMtB,WAASA,MAAOuI,GAAY;AAC1B,QAAItK,IAAQ;AAEZ,WAAO,EAAEA,IAAQqD,GAAO;AACtB,UAAIA,GAAOrD,CAAK,EAAE,MAAM,MAAMsK,CAAU,EAAG,QAAO;AAGpD,WAAO;EACX;AACA;AAQA,SAASmb,GAAahiB,IAAO;AAC3B,QAAMmiB;;IAAwDniB;;AAE9D,SAAO8hB,GAAYlc,CAAG;AAMtB,WAASA,EAAItC,IAAM;AACjB,UAAM8e;;;MACoB9e;;AAI1B,QAAIzG;AAEJ,SAAKA,KAAOmD;AACV,UAAIoiB,EAAavlB,CAAG,MAAMslB,GAActlB,CAAG,EAAG,QAAO;AAGvD,WAAO;EACX;AACA;AAQA,SAASolB,GAAYjiB,IAAO;AAC1B,SAAO8hB,GAAYrlB,EAAI;AAKvB,WAASA,GAAK6G,GAAM;AAClB,WAAOA,KAAQA,EAAK,SAAStD;EACjC;AACA;AAQA,SAAS8hB,GAAYO,IAAc;AACjC,SAAOriB;AAMP,WAASA,GAAMtD,GAAOH,IAAOga,GAAQ;AACnC,WAAO,CAAA,EACL+L,GAAe5lB,CAAK,KAClB2lB,GAAa;MACX;MACA3lB;MACA,OAAOH,MAAU,WAAWA,KAAQ;MACpCga,KAAU;IACpB;EAEA;AACA;AAEA,SAASsL,KAAK;AACZ,SAAO;AACT;AAMA,SAASS,GAAe5lB,IAAO;AAC7B,SAAOA,OAAU,QAAQ,OAAOA,MAAU,YAAY,UAAUA;AAClE;ACnEA,IAAM6lB,KAAQ,CAAA;AAAd,IAKaC,KAAW;AALxB,IAUaC,KAAO;AAVpB,IAeaC,KAAO;AAiDb,SAASC,GAAard,IAAMsc,IAAMgB,GAASC,IAAS;AAEzD,MAAI7iB;AAEA,SAAO4hB,MAAS,cAAc,OAAOgB,KAAY,cACnDC,KAAUD,GAEVA,IAAUhB,MAGV5hB,IAAQ4hB;AAGV,QAAMkB,IAAKnB,GAAQ3hB,CAAK,GAClB+iB,IAAOF,KAAU,KAAK;AAE5BG,IAAQ1d,IAAM,QAAW,CAAA,CAAE,EAAC;AAO5B,WAAS0d,EAAQ1f,IAAM/G,GAAO0mB,GAAS;AACrC,UAAMvmB;;MACJ4G,MAAQ,OAAOA,MAAS,WAAWA,KAAO,CAAA;;AAG5C,QAAI,OAAO5G,GAAM,QAAS,UAAU;AAClC,YAAMQ;;QAEJ,OAAOR,GAAM,WAAY,WACrBA,GAAM;;UAER,OAAOA,GAAM,QAAS,WACpBA,GAAM,OACN;;;AAEN,aAAO,eAAewmB,IAAO,QAAQ;QACnC,OACE,YAAiB5f,GAAK,QAAQpG,IAAO,MAAMA,IAAO,MAAM,OAAO;MAClE,CAAA;IACP;AAEI,WAAOgmB;AAEP,aAASA,KAAQ;AAEf,UAAIpf,IAASye,IAETY,GAEAve,GAEAwe;AAEJ,WAAI,CAACxB,MAAQkB,EAAGxf,IAAM/G,GAAO0mB,EAAQA,EAAQ,SAAS,CAAC,KAAK,MAAS,OAEnEnf,IAASuf,GAAST,EAAQtf,IAAM2f,CAAO,CAAC,GAEpCnf,EAAO,CAAC,MAAM2e;AAChB,eAAO3e;AAIX,UAAI,cAAcR,MAAQA,GAAK,UAAU;AACvC,cAAMggB;;UAA2ChgB;;AAEjD,YAAIggB,EAAa,YAAYxf,EAAO,CAAC,MAAM4e;AAIzC,eAHA9d,KAAUie,KAAUS,EAAa,SAAS,SAAS,MAAMP,GACzDK,KAAeH,EAAQ,OAAOK,CAAY,GAEnC1e,IAAS,MAAMA,IAAS0e,EAAa,SAAS,UAAQ;AAC3D,kBAAM/f,IAAQ+f,EAAa,SAAS1e,CAAM;AAI1C,gBAFAue,IAAYH,EAAQzf,GAAOqB,GAAQwe,EAAY,EAAC,GAE5CD,EAAU,CAAC,MAAMV;AACnB,qBAAOU;AAGTve,gBACE,OAAOue,EAAU,CAAC,KAAM,WAAWA,EAAU,CAAC,IAAIve,IAASme;UACzE;MAEA;AAEM,aAAOjf;IACb;EACA;AACA;AAUA,SAASuf,GAAS3mB,IAAO;AACvB,SAAI,MAAM,QAAQA,EAAK,IACdA,KAGL,OAAOA,MAAU,WACZ,CAAC8lB,IAAU9lB,EAAK,IAGlBA,MAAU,OAA8B6lB,KAAQ,CAAC7lB,EAAK;AAC/D;ACvHO,SAASwmB,GAAM5d,IAAMie,IAAeC,GAAkBC,IAAc;AAEzE,MAAIZ,GAEAjB,GAEAgB;AAGF,SAAOW,MAAkB,cACzB,OAAOC,KAAqB,cAE5B5B,IAAO,QACPgB,IAAUW,IACVV,IAAUW,MAGV5B,IAAO2B,IAEPX,IAAUY,GACVX,IAAUY,KAGZd,GAAard,IAAMsc,GAAM8B,GAAUb,CAAO;AAM1C,WAASa,EAASpgB,IAAM2f,GAAS;AAC/B,UAAM1M,IAAS0M,EAAQA,EAAQ,SAAS,CAAC,GACnC1mB,KAAQga,IAASA,EAAO,SAAS,QAAQjT,EAAI,IAAI;AACvD,WAAOsf,EAAQtf,IAAM/G,IAAOga,CAAM;EACtC;AACA;AC/QA,IAAMoN,KACJ;AADF,IAKMC,KAAgB,oBAAI,IAAI;EAC5B;EACA;EACA;EACA;EACA;AACF,CAAC;AAXD,IAcMC,KAAe,EAAC,wBAAwB,MAAM,kBAAkB,MAAK;AAapE,SAASC,GAAIxe,IAAM/G,IAAS;AACjC,QAAMsH,IAAWke,GAAaze,EAAI,GAE5BC,KAAMqB,GAAO,QAAQ;IACzB,UAAU,EAAA,MAACM,IAAI,SAAEnB,IAASoB,MAAAA,IAAM,SAAAC,IAAS,SAAAC,IAAS,KAAK2c,GAAS;IAChE,SAAAC;EACD,CAAA,GAGKze,IAAQ;IACZ,QAAQK,IACJ,IAAIyP,GAAOuO,EAAY,IACvBvO,GAAO,kBAAkB,QAAWuO,EAAY;IACpD,OAAOvgB,GAAM;AACXiC,MAAAA,GAAIjC,GAAMkC,CAAK;IAChB;IACD,UAAU;IACV,SAASjH,MAAW,CAAA;EACxB;AAEEgH,EAAAA,GAAID,IAAME,CAAK,GACf0e,GAAe1e,GAAOkc,GAAY,CAAA;AAElC,QAAMyC,IAAKte,IAAWL,EAAM,OAAO,WAAWA,EAAM,OAAO,YAAW,GAChE1B,IAASuB,GAAW8e,GAAI;;IAE5B,MAAM3e,EAAM,QAAQ;EACrB,CAAA;AAgBD,SAdIA,EAAM,YACR0d,GAAMpf,GAAQ,WAAW,SAAUR,GAAM/G,IAAOga,GAAQ;AACtD,UAAM6N;;;MAAwD9gB;;AAC9D,QAAI8gB,EAAO,MAAM,UAAU7N,KAAUha,OAAU,QAAW;AAExD,YAAMma,KAAWH,EAAO;AAExB,aAAAG,GAASna,EAAK,IAAI6nB,EAAO,MAAM,QACxB7nB;IACf;EACK,CAAA,GAKDuH,EAAO,SAAS,UAChBA,EAAO,SAAS,WAAW,KAC3BA,EAAO,SAAS,CAAC,EAAE,SAASwB,GAAK,OAE1BxB,EAAO,SAAS,CAAC,IAGnBA;AACT;AAYA,SAAS8B,GAAIxB,IAAOoB,IAAO;AACzB,MAAIjJ,IAAQ;AAGZ,MAAI6H;AACF,WAAO,EAAE7H,IAAQ6H,GAAM;AACrBoB,MAAAA,GAAM,OAAOpB,GAAM7H,CAAK,CAAC;AAG/B;AAYA,SAAS2K,GAAK5D,IAAMkC,IAAO;AACzBI,KAAItC,GAAK,UAAUkC,EAAK;AAC1B;AAYA,SAASO,GAAQzC,IAAMkC,IAAO;AAC5BU,KAAS5C,IAAMkC,EAAK,GAEpBI,GAAItC,GAAK,UAAUkC,EAAK,GAExBY,GAAO9C,IAAMkC,EAAK;AACpB;AAYA,SAAS2B,GAAK7D,IAAMkC,IAAO;AAMrBA,EAAAA,GAAM,OAAO,UAAU,QAAQ,MACjCA,GAAM,OAAO,UAAU,QAAQ;AAIjC,QAAMrD,IAAQ;IACZ,MAAMkiB,EAAgB;IACtB,OAAO/gB,GAAK;IACZ,UAAUghB,GAAqBhhB,EAAI;EACvC;AAEE4gB,KAAe1e,IAAOkc,GAAWpe,EAAI,CAAC,GAEtCkC,GAAM,OAAO,eAAerD,GAE5BqD,GAAM,OAAO,cAAcA,GAAM,OAAO,YAAY;AACtD;AAYA,SAAS6B,GAAQ/D,IAAMkC,IAAO;AAE5B,QAAMrD,IAAQ;IACZ,MAAMkiB,EAAgB;IACtB,MAAM;IACN,aAAa;IACb,UAAU;IACV,UAAU;IACV,UAAUC,GAAqBhhB,EAAI;EACvC;AAEE4gB,KAAe1e,IAAOkc,GAAWpe,EAAI,CAAC,GAEtCkC,GAAM,OAAO,eAAerD,GAE5BqD,GAAM,OAAO,cAAcA,GAAM,OAAO,YAAY;AACtD;AAYA,SAAS4e,GAAO9gB,IAAMkC,IAAO;AAE3BA,EAAAA,GAAM,WAAW;AAGjB,QAAM+e,IAAQC,GAAqBlhB,EAAI;AAIvC,MAAI,cAAcA,MAAQ,cAAcihB,GAAO;AAE7C,UAAME;;MACJX,GAAI,EAAC,MAAM,QAAQ,UAAUxgB,GAAK,SAAQ,GAAGkC,GAAM,OAAO;;AAE5D+e,MAAM,WAAWE,GAAS;EAC9B;AAKErd,KAAQ,EAAC,MAAM,WAAW,OAAO,EAAC,QAAQmd,EAAK,EAAC,GAAG/e,EAAK;AAC1D;AAYA,SAAS4B,GAAQ9D,IAAMkC,IAAO;AAG5B,QAAMmB,IAAOrD,GAAK,OAGZnB,KAAQ;IACZ,MAAMkiB,EAAgB;IACtB,MAAA1d;IACA,UAAU2d,GAAqBhhB,EAAI;EACvC;AACE4gB,KAAe1e,IAAOkc,GAAWpe,EAAI,CAAC,GAEtCkC,GAAM,OAAO,eAAerD,IAE5BqD,GAAM,OAAO,cAAcA,GAAM,OAAO,YAAY;AACtD;AAYA,SAASwe,GAAU1gB,IAAMkC,IAAO;AA4C9B,MAzCAA,GAAM,OAAO,UAAU,aAAa,OAAO,IAC3CA,GAAM,OAAO,UAAU,aAAa,MAAM,IAG1CA,GAAM,OAAO,UAAU,aAAa,aAAa,IAGjDA,GAAM,OAAO,UAAU,aAAa,WAAW,CAAA,GAG/CA,GAAM,OAAO,UAAU,aAAa,kBAAkB,OACtDA,GAAM,OAAO,UAAU,aAAa,mBAAmB,OACvDA,GAAM,OAAO,UAAU,aAAa,gBAAgB,OAGpDA,GAAM,OAAO,UAAU,aAAa,QAAQ,OAG5Ckf,GAASlf,IAAOkc,GAAWpe,EAAI,CAAC,GAEhCkC,GAAM,OAAO,UAAU;IACrBA,GAAM,QAAQ,YACVlC,GAAK,MAAM,QAAQqgB,IAAwB,UAAU,IACrDrgB,GAAK;IACT;EACJ,GAEEkC,GAAM,OAAO,UAAU,gBAAe,GAepCA,GAAM,OAAO,UAAU,UAAU;EAEjCA,GAAM,OAAO,UAAU,UAAU,IACjC;AACAA,IAAAA,GAAM,OAAO,UAAU,aAAa,mBAAmB;AAGvD,UAAM2C,IAAK3C,GAAM,OAAO,UAAU,SAAQ;AAE1CA,IAAAA,GAAM,OAAO,UAAU,WAAW2C,CAAE;EACxC;AACA;AAYA,SAAS8b,GAAQU,IAAOnf,IAAO;AAC7B,QAAMlC;;IAA6BqhB;;AAEnC,MACEnf,GAAM,QAAQ,eACdA,GAAM,QAAQ,YAAY,SAASlC,EAAK,IAAI;AAE5C8gB,OAAO9gB,GAAMkC,EAAK;OACb;AACL,QAAIof,KAAQ;AAEZ,UAAIhB,GAAc,IAAItgB,EAAK,IAAI,MAC7BshB,KACE,2cAGE,IAAI,MAAM,qBAAqBthB,EAAK,OAAO,WAAWshB,EAAK;EACrE;AACA;AAYA,SAASV,GAAe1e,IAAOT,IAAO;AACpC2f,KAASlf,IAAOT,EAAK;AAKrB,QAAM5C,IAAQqD,GAAM,OAAO,UAAU;AAEjCrD,OAASA,EAAM,aACjBA,EAAM,SAAS,UAAUqD,GAAM,OAAO,UAAU,aAAa,MAC7DrD,EAAM,SAAS,SAASqD,GAAM,OAAO,UAAU,aAAa,MAAM,GAClErD,EAAM,SAAS,YAAYqD,GAAM,OAAO,UAAU,aAAa,SAAS,GAExEA,GAAM,OAAO,eAAerD,GAE5BqD,GAAM,OAAO,cAAcA,GAAM,OAAO,YAAY,IAWtDA,GAAM,OAAO,UAAU,SAAS,OAEhCA,GAAM,OAAO,UAAU,SAAS,OAIhCA,GAAM,OAAO,UAAU,SAAS,OAEhCA,GAAM,OAAO,UAAU,cAAc6H,IAAc,MAEnD7H,GAAM,OAAO,UAAU,cAAc,IAErCA,GAAM,OAAO,UAAU,wBAAwB,IAE/CA,GAAM,OAAO,UAAU,kBAAkB,MAEzCA,GAAM,OAAO,UAAU,wBAAwB,MAE/CA,GAAM,OAAO,UAAU,eAAe,MAEtCA,GAAM,OAAO,UAAU,cAAc,EAAC,MAAM,IAAI,OAAO,GAAE;AAC3D;AAYA,SAASkf,GAASlf,IAAOT,IAAO;AAC9B,MAAIA,MAASA,GAAM,WAAW,QAAW;AAEvC,UAAMR,IAAW;MACf,WAAWQ,GAAM;MACjB,UAAUA,GAAM;MAChB,aAAaA,GAAM;MACnB,SAAS;MACT,QAAQ;MACR,WAAW;IACjB;AAIIS,IAAAA,GAAM,OAAO,UAAU,aAAa,eAAe,CAACT,GAAM,SAAS,GACnES,GAAM,OAAO,UAAU,aAAa,oBAAoBT,GAAM,QAC9DS,GAAM,OAAO,UAAU,aAAa,OAAOT,GAAM,MAEjDS,GAAM,OAAO,UAAU,kBAAkBjB;EAC7C;AACA;AAYA,SAAS2B,GAAS5C,IAAMkC,IAAO;AAC7B,QAAM5C,IAAUU,GAAK,QAAQ,YAAW;AAGxC,MAAIkC,GAAM,OAAO,UAAU,UAAU6H,IAAc,UAAW;AAE9D6W,KAAe1e,IAAOkc,GAAWpe,EAAI,CAAC;AAEtC,QAAMqI,KAAUnG,GAAM,OAAO,aAAa;AAC1C,MAAImP,IAAK,kBAAkBhJ,KAAUA,GAAQ,eAAexG,GAAc;AAEtEwP,QAAOxP,GAAc,QAAQvC,MAAY,UAC3C+R,IAAKxP,GAAc;AAGrB,QAAMrB,IAASwD;;IAEb,EAAC,GAAGhE,IAAM,UAAU,CAAA,EAAE;IACtB,EAAC,OAAOqR,MAAOxP,GAAc,MAAM,QAAQ,OAAM;EACrD,GAGQ0f,IAAM;IACV,MAAMR,EAAgB;IACtB,SAAAzhB;IACA,OAAOkiB,GAAcliB,CAAO;;IAE5B,aAAa;IACb,gBAAgB;;;IAGhB,OAAO,WAAWkB,IAASA,EAAO,QAAQ,CAAE;IAC5C,UAAUwgB,GAAqBhhB,EAAI;EACvC;AAQEkC,EAAAA,GAAM,OAAO,eAAeqf,GAE5Brf,GAAM,OAAO,cAAcA,GAAM,OAAO,YAAY,GAMpDA,GAAM,OAAO,UAAU,mBAAmB5C;AAG5C;AAYA,SAASwD,GAAO9C,IAAMkC,IAAO;AAC3B,QAAM5C,IAAUU,GAAK,QAAQ,YAAW;AAUxC,MAPE,CAACkC,GAAM,OAAO,UAAU,iBACxBqC,GAAiB,SAASjF,CAAO,KAM/B4C,GAAM,OAAO,UAAU,UAAU6H,IAAc,UAAW;AAE9D6W,KAAe1e,IAAOic,GAASne,EAAI,CAAC;AAGpC,QAAMuhB,KAAM;IACV,MAAMR,EAAgB;IACtB,SAAAzhB;IACA,OAAOkiB,GAAcliB,CAAO;IAC5B,aAAa;IACb,gBAAgB;IAChB,OAAO,CAAE;IACT,UAAU0hB,GAAqBhhB,EAAI;EACvC;AAQEkC,EAAAA,GAAM,OAAO,eAAeqf,IAE5Brf,GAAM,OAAO,cAAcA,GAAM,OAAO,YAAY;EASlD5C,MAAY4C,GAAM,OAAO,UAAU;GAElCA,GAAM,OAAO,UAAU,UAAU6H,IAAc;EAE9C7H,GAAM,OAAO,UAAU,UAAU6H,IAAc;EAE/C7H,GAAM,OAAO,UAAU,UAAU6H,IAAc,iBAGjD7H,GAAM,OAAO,UAAU,QAAQ6H,IAAc;AAEjD;AAUA,SAAS0W,GAAazgB,IAAM;AAC1B,QAAMyhB,KAAOzhB,GAAK,SAAS,SAASA,GAAK,SAAS,CAAC,IAAIA;AACvD,SAAO,CAAA,EACLyhB,OACGA,GAAK,SAAS,aACZA,GAAK,SAAS,aAAaA,GAAK,QAAQ,YAAa,MAAK;AAEnE;AAUA,SAAST,GAAqBhhB,IAAM;AAClC,QAAMrB,KAAQyf,GAAWpe,EAAI,KAAK;IAChC,MAAM;IACN,QAAQ;IACR,QAAQ;EACZ,GACQpB,IAAMuf,GAASne,EAAI,KAAK;IAC5B,MAAM;IACN,QAAQ;IACR,QAAQ;EACZ;AAcE,SAXiB;IACf,WAAWrB,GAAM;IACjB,UAAUA,GAAM;IAChB,aAAaA,GAAM;IACnB,SAASC,EAAI;IACb,QAAQA,EAAI;IACZ,WAAWA,EAAI;EACnB;AAKA;AAUA,SAASsiB,GAAqBlhB,IAAM;AAClC,SAAO,cAAcA,KACjB0hB,GAAgB,EAAC,GAAG1hB,IAAM,UAAU,CAAA,EAAE,CAAC,IACvC0hB,GAAgB1hB,EAAI;AAC1B;ACppBe,SAAS2hB,GAAU1mB,IAAS;AASzC,SAAO,SAAU+G,IAAMd,GAAM;AAG3B;;MADoCsf,GAAIxe,IAAM,EAAC,GAAG/G,IAAS,MAAAiG,EAAI,CAAC;;EAEpE;AACA;ACzBO,SAAS0gB,GAAOxoB,IAAOyoB,IAAW;AACvC,QAAMroB,IAAS,OAAOJ,EAAK;AAE3B,MAAI,OAAOyoB,MAAc;AACvB,UAAM,IAAI,UAAU,oBAAoB;AAG1C,MAAI1b,KAAQ,GACRlN,IAAQO,EAAO,QAAQqoB,EAAS;AAEpC,SAAO5oB,MAAU;AACfkN,IAAAA,MACAlN,IAAQO,EAAO,QAAQqoB,IAAW5oB,IAAQ4oB,GAAU,MAAM;AAG5D,SAAO1b;AACT;ACLO,IAAM2b,KAAaC,GAAW,UAAU;AAAxC,IAcMC,KAAoBD,GAAW,YAAY;AAdjD,IAqCME,KAAaF,GAAW,qBAAqB;AAanD,SAASG,GAAa1c,IAAM;AACjC;;;IAGEA,OAAS,SAASA,KAAO,MAAMA,OAAS;;AAE5C;AAaO,IAAM2c,KAAaJ,GAAW,IAAI;AAAlC,IAoBMK,KAAgBL,GAAW,YAAY;AApB7C,IAmCMM,KAAmBN,GAAW,gBAAgB;AAiBpD,SAASO,EAAmB9c,IAAM;AACvC,SAAOA,OAAS,QAAQA,KAAO;AACjC;AAWO,SAAS+c,GAA0B/c,IAAM;AAC9C,SAAOA,OAAS,SAASA,KAAO,KAAKA,OAAS;AAChD;AAiBO,SAASgd,EAAchd,IAAM;AAClC,SAAOA,OAAS,MAAMA,OAAS,MAAMA,OAAS;AAChD;AAuBO,IAAMid,KAAqBV,GAAW,IAAA,OAAA,iBAAA,GAAc,CAAA;AAApD,IAsBMW,KAAoBX,GAAW,IAAI;AAUhD,SAASA,GAAWY,IAAO;AACzB,SAAOjmB;AAUP,WAASA,GAAM8I,GAAM;AACnB,WAAOA,MAAS,QAAQA,IAAO,MAAMmd,GAAM,KAAK,OAAO,aAAand,CAAI,CAAC;EAC7E;AACA;ACxKO,SAASod,GAAe5gB,IAAM1B,IAAMrF,GAAS;AAElD,QAAM4nB,IAAUxE,IADCpjB,KAAW,CAAA,GACK,UAAU,CAAE,CAAA,GACvC6nB,IAAQC,GAAQziB,EAAI;AAC1B,MAAI0iB,IAAY;AAEhB,SAAO,EAAEA,IAAYF,EAAM;AACzBzD,OAAard,IAAM,QAAQsd,CAAO;AAIpC,WAASA,EAAQtf,GAAM2f,GAAS;AAC9B,QAAI1mB,KAAQ,IAERgqB;AAEJ,WAAO,EAAEhqB,KAAQ0mB,EAAQ,UAAQ;AAC/B,YAAM1M,IAAS0M,EAAQ1mB,EAAK,GAEtBma,IAAW6P,KAAcA,GAAY,WAAW;AAEtD,UACEJ;QACE5P;QACAG,IAAWA,EAAS,QAAQH,CAAM,IAAI;QACtCgQ;MACV;AAEQ;AAGFA,MAAAA,KAAchQ;IACpB;AAEI,QAAIgQ;AACF,aAAO1d,GAAQvF,GAAM2f,CAAO;EAElC;AAYE,WAASpa,GAAQvF,GAAM2f,GAAS;AAC9B,UAAM1M,KAAS0M,EAAQA,EAAQ,SAAS,CAAC,GACnC7hB,KAAOglB,EAAME,CAAS,EAAE,CAAC,GACzBE,IAAUJ,EAAME,CAAS,EAAE,CAAC;AAClC,QAAIrkB,IAAQ;AAGZ,UAAM1F,KADWga,GAAO,SACD,QAAQjT,CAAI;AACnC,QAAImjB,IAAS,OAETriB,IAAQ,CAAA;AAEZhD,IAAAA,GAAK,YAAY;AAEjB,QAAIyB,IAAQzB,GAAK,KAAKkC,EAAK,KAAK;AAEhC,WAAOT,KAAO;AACZ,YAAMsD,IAAWtD,EAAM,OAEjB6jB,IAAc;QAClB,OAAO7jB,EAAM;QACb,OAAOA,EAAM;QACb,OAAO,CAAC,GAAGogB,GAAS3f,CAAI;MAChC;AACM,UAAI5G,IAAQ8pB,EAAQ,GAAG3jB,GAAO6jB,CAAW;AA8BzC,UA5BI,OAAOhqB,KAAU,aACnBA,IAAQA,EAAM,SAAS,IAAI,EAAC,MAAM,QAAQ,OAAAA,EAAK,IAAI,SAIjDA,MAAU,QAIZ0E,GAAK,YAAY+E,IAAW,KAExBlE,MAAUkE,KACZ/B,EAAM,KAAK;QACT,MAAM;QACN,OAAOd,EAAK,MAAM,MAAMrB,GAAOkE,CAAQ;MACxC,CAAA,GAGC,MAAM,QAAQzJ,CAAK,IACrB0H,EAAM,KAAK,GAAG1H,CAAK,IACVA,KACT0H,EAAM,KAAK1H,CAAK,GAGlBuF,IAAQkE,IAAWtD,EAAM,CAAC,EAAE,QAC5B4jB,IAAS,OAGP,CAACrlB,GAAK;AACR;AAGFyB,UAAQzB,GAAK,KAAKkC,EAAK,KAAK;IAClC;AAEI,WAAImjB,KACExkB,IAAQqB,EAAK,MAAM,UACrBc,EAAM,KAAK,EAAC,MAAM,QAAQ,OAAOd,EAAK,MAAM,MAAMrB,CAAK,EAAC,CAAC,GAG3DsU,GAAO,SAAS,OAAOha,IAAO,GAAG,GAAG6H,CAAK,KAEzCA,IAAQ,CAACd,CAAI,GAGR/G,KAAQ6H,EAAM;EACzB;AACA;AAUA,SAASiiB,GAAQM,IAAa;AAE5B,QAAM7iB,KAAS,CAAA;AAEf,MAAI,CAAC,MAAM,QAAQ6iB,EAAW;AAC5B,UAAM,IAAI,UAAU,mDAAmD;AAKzE,QAAM/iB,IACJ,CAAC+iB,GAAY,CAAC,KAAK,MAAM,QAAQA,GAAY,CAAC,CAAC,IAC3CA,KACA,CAACA,EAAW;AAElB,MAAIpqB,KAAQ;AAEZ,SAAO,EAAEA,KAAQqH,EAAK,UAAQ;AAC5B,UAAMgjB,IAAQhjB,EAAKrH,EAAK;AACxBuH,IAAAA,GAAO,KAAK,CAAC+iB,GAAaD,EAAM,CAAC,CAAC,GAAGE,GAAWF,EAAM,CAAC,CAAC,CAAC,CAAC;EAC9D;AAEE,SAAO9iB;AACT;AAUA,SAAS+iB,GAAazlB,IAAM;AAC1B,SAAO,OAAOA,MAAS,WAAW,IAAI,OAAO2lB,EAAO3lB,EAAI,GAAG,GAAG,IAAIA;AACpE;AAUA,SAAS0lB,GAAWN,IAAS;AAC3B,SAAO,OAAOA,MAAY,aACtBA,KACA,WAAY;AACV,WAAOA;EACf;AACA;ACvPA,IAAMQ,KAAc;AAApB,IAEMC,KAAiB,CAAC,YAAY,QAAQ,SAAS,OAAO;AASrD,SAASC,KAAiC;AAC/C,SAAO;IACL,YAAY,CAACC,EAA4B;IACzC,OAAO;MACL,iBAAiBC;MACjB,sBAAsBC;MACtB,qBAAqBA;MACrB,oBAAoBA;IACrB;IACD,MAAM;MACJ,iBAAiBC;MACjB,sBAAsBC;MACtB,qBAAqBC;MACrB,oBAAoBC;IAC1B;EACA;AACA;AASO,SAASC,KAA+B;AAC7C,SAAO;IACL,QAAQ;MACN;QACE,WAAW;QACX,QAAQ;QACR,OAAO;QACP,aAAAV;QACA,gBAAAC;MACD;MACD;QACE,WAAW;QACX,QAAQ;QACR,OAAO;QACP,aAAAD;QACA,gBAAAC;MACD;MACD;QACE,WAAW;QACX,QAAQ;QACR,OAAO;QACP,aAAAD;QACA,gBAAAC;MACR;IACA;EACA;AACA;AAMA,SAASG,GAAqBjlB,IAAO;AACnC,OAAK,MAAM,EAAC,MAAM,QAAQ,OAAO,MAAM,KAAK,IAAI,UAAU,CAAA,EAAE,GAAGA,EAAK;AACtE;AAMA,SAASklB,GAA0BllB,IAAO;AACxC,OAAK,OAAO,MAAM,iBAAiB,KAAK,MAAMA,EAAK;AACrD;AAMA,SAASqlB,GAAwBrlB,IAAO;AACtC,OAAK,OAAO,KAAK,iBAAiB,KAAK,MAAMA,EAAK;AACpD;AAMA,SAASslB,GAAuBtlB,IAAO;AACrC,OAAK,OAAO,KAAK,KAAK,KAAK,MAAMA,EAAK;AACtC,QAAMmB,KAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AACtCA,EAAAA,GAAK,MACZA,GAAK,MAAM,YAAY,KAAK,eAAenB,EAAK;AAClD;AAMA,SAASolB,GAAyBplB,IAAO;AACvC,OAAK,OAAO,KAAK,cAAc,KAAK,MAAMA,EAAK;AACjD;AAMA,SAASmlB,GAAoBnlB,IAAO;AAClC,OAAK,KAAKA,EAAK;AACjB;AAGA,SAASglB,GAA6B7hB,IAAM;AAC1C4gB;IACE5gB;IACA;MACE,CAAC,mDAAmDqiB,EAAO;MAC3D,CAAC,IAAA,OAAyD,gEAAA,IAAA,GAAEC,EAAS;IACtE;IACD,EAAC,QAAQ,CAAC,QAAQ,eAAe,EAAC;EACtC;AACA;AAYA,SAASD,GAAQvrB,IAAGyrB,IAAUC,GAAQC,IAAMllB,GAAO;AACjD,MAAI0Q,IAAS;AAcb,MAXI,CAAC5Q,GAASE,CAAK,MAKf,MAAM,KAAKglB,EAAQ,MACrBC,IAASD,KAAWC,GACpBD,KAAW,IACXtU,IAAS,YAGP,CAACyU,GAAgBF,CAAM;AACzB,WAAO;AAGT,QAAMG,IAAQC,GAASJ,IAASC,EAAI;AAEpC,MAAI,CAACE,EAAM,CAAC,EAAG,QAAO;AAGtB,QAAMnkB,IAAS;IACb,MAAM;IACN,OAAO;IACP,KAAKyP,IAASsU,KAAWI,EAAM,CAAC;IAChC,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAOJ,KAAWI,EAAM,CAAC,EAAC,CAAC;EACzD;AAEE,SAAIA,EAAM,CAAC,IACF,CAACnkB,GAAQ,EAAC,MAAM,QAAQ,OAAOmkB,EAAM,CAAC,EAAC,CAAC,IAG1CnkB;AACT;AAUA,SAAS8jB,GAAUxrB,IAAG+rB,IAAOC,GAAOvlB,IAAO;AACzC;;IAEE,CAACF,GAASE,IAAO,IAAI;IAErB,UAAU,KAAKulB,CAAK,IAEb,QAGF;MACL,MAAM;MACN,OAAO;MACP,KAAK,YAAYD,KAAQ,MAAMC;MAC/B,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAOD,KAAQ,MAAMC,EAAK,CAAC;IACzD;;AACA;AAMA,SAASJ,GAAgBF,IAAQ;AAC/B,QAAMG,KAAQH,GAAO,MAAM,GAAG;AAE9B,SACE,EAAAG,GAAM,SAAS,KACdA,GAAMA,GAAM,SAAS,CAAC,MACpB,IAAI,KAAKA,GAAMA,GAAM,SAAS,CAAC,CAAC,KAC/B,CAAC,aAAa,KAAKA,GAAMA,GAAM,SAAS,CAAC,CAAC,MAC7CA,GAAMA,GAAM,SAAS,CAAC,MACpB,IAAI,KAAKA,GAAMA,GAAM,SAAS,CAAC,CAAC,KAC/B,CAAC,aAAa,KAAKA,GAAMA,GAAM,SAAS,CAAC,CAAC;AAMlD;AAMA,SAASC,GAASG,IAAK;AACrB,QAAMC,KAAY,sBAAsB,KAAKD,EAAG;AAEhD,MAAI,CAACC;AACH,WAAO,CAACD,IAAK,MAAS;AAGxBA,EAAAA,KAAMA,GAAI,MAAM,GAAGC,GAAU,KAAK;AAElC,MAAIC,IAAQD,GAAU,CAAC,GACnBE,KAAoBD,EAAM,QAAQ,GAAG;AACzC,QAAME,IAAgBvD,GAAOmD,IAAK,GAAG;AACrC,MAAIK,IAAgBxD,GAAOmD,IAAK,GAAG;AAEnC,SAAOG,OAAsB,MAAMC,IAAgBC;AACjDL,IAAAA,MAAOE,EAAM,MAAM,GAAGC,KAAoB,CAAC,GAC3CD,IAAQA,EAAM,MAAMC,KAAoB,CAAC,GACzCA,KAAoBD,EAAM,QAAQ,GAAG,GACrCG;AAGF,SAAO,CAACL,IAAKE,CAAK;AACpB;AAOA,SAAS5lB,GAASE,IAAO8lB,IAAO;AAC9B,QAAM7f,IAAOjG,GAAM,MAAM,WAAWA,GAAM,QAAQ,CAAC;AAEnD,UACGA,GAAM,UAAU,KACfmjB,GAAkBld,CAAI,KACtBid,GAAmBjd,CAAI;GAExB,CAAC6f,MAAS7f,MAAS;AAExB;ACpQO,SAAS8f,GAAoBlsB,IAAO;AACzC,SAAOA,GAEN,QAAQ,eAAe,GAAG,EAE1B,QAAQ,UAAU,EAAE,EAOpB,YAAW,EAAG,YAAa;AAC9B;ACdAmsB,GAAkB,OAAOC;AAMzB,SAASC,KAA0B;AACjC,OAAK,OAAM;AACb;AAMA,SAASC,GAAkB7mB,IAAO;AAChC,OAAK,MAAM,EAAC,MAAM,qBAAqB,YAAY,IAAI,OAAO,GAAE,GAAGA,EAAK;AAC1E;AAMA,SAAS8mB,KAAqC;AAC5C,OAAK,OAAM;AACb;AAMA,SAASC,GAAwB/mB,IAAO;AACtC,OAAK;IACH,EAAC,MAAM,sBAAsB,YAAY,IAAI,OAAO,IAAI,UAAU,CAAA,EAAE;IACpEA;EACJ;AACA;AAMA,SAASgnB,GAAuBhnB,IAAO;AACrC,QAAMimB,KAAQ,KAAK,OAAM,GACnB9kB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AACtCA,IAAK,MACZA,EAAK,aAAaslB;IAChB,KAAK,eAAezmB,EAAK;EAC7B,EAAI,YAAW,GACbmB,EAAK,QAAQ8kB;AACf;AAMA,SAASgB,GAAiBjnB,IAAO;AAC/B,OAAK,KAAKA,EAAK;AACjB;AAMA,SAASknB,GAAkClnB,IAAO;AAChD,QAAMimB,KAAQ,KAAK,OAAM,GACnB9kB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AACtCA,IAAK,MACZA,EAAK,aAAaslB;IAChB,KAAK,eAAezmB,EAAK;EAC7B,EAAI,YAAW,GACbmB,EAAK,QAAQ8kB;AACf;AAMA,SAASkB,GAAuBnnB,IAAO;AACrC,OAAK,KAAKA,EAAK;AACjB;AAGA,SAAS2mB,KAAwB;AAC/B,SAAO;AACT;AAMA,SAASD,GAAkBvlB,IAAMlH,IAAGoJ,GAAOjF,IAAM;AAC/C,QAAMgpB,IAAU/jB,EAAM,cAAcjF,EAAI;AACxC,MAAI7D,IAAQ6sB,EAAQ,KAAK,IAAI;AAC7B,QAAMC,IAAOhkB,EAAM,MAAM,mBAAmB,GACtCikB,IAAUjkB,EAAM,MAAM,WAAW;AACvC,SAAA9I,KAAS6sB,EAAQ;IACf/jB,EAAM,KAAKA,EAAM,cAAclC,EAAI,GAAG,EAAC,OAAO,KAAK,QAAQ5G,EAAK,CAAC;EACrE,GACE+sB,EAAO,GACPD,EAAI,GACJ9sB,KAAS6sB,EAAQ,KAAK,GAAG,GAClB7sB;AACT;AASO,SAASgtB,KAA0B;AACxC,SAAO;IACL,OAAO;MACL,uBAAuBX;MACvB,iBAAiBC;MACjB,kCAAkCC;MAClC,uBAAuBC;IACxB;IACD,MAAM;MACJ,uBAAuBC;MACvB,iBAAiBC;MACjB,kCAAkCC;MAClC,uBAAuBC;IAC7B;EACA;AACA;AAWO,SAASK,GAAsBprB,IAAS;AAE7C,MAAIqrB,KAAiB;AAErB,SAAIrrB,MAAWA,GAAQ,mBACrBqrB,KAAiB,OAGZ;IACL,UAAU,EAAC,oBAAAC,GAAkB,mBAAEhB,GAAiB;;IAEhD,QAAQ,CAAC,EAAC,WAAW,KAAK,aAAa,CAAC,SAAS,YAAY,WAAW,EAAC,CAAC;EAC9E;AAME,WAASgB,EAAmBvmB,IAAMlH,GAAGoJ,GAAOjF,GAAM;AAChD,UAAMgpB,IAAU/jB,EAAM,cAAcjF,CAAI;AACxC,QAAI7D,KAAQ6sB,EAAQ,KAAK,IAAI;AAC7B,UAAMC,IAAOhkB,EAAM,MAAM,oBAAoB,GACvCikB,IAAUjkB,EAAM,MAAM,OAAO;AACnC,WAAA9I,MAAS6sB,EAAQ;MACf/jB,EAAM,KAAKA,EAAM,cAAclC,EAAI,GAAG,EAAC,QAAQ5G,IAAO,OAAO,IAAG,CAAC;IACvE,GACI+sB,EAAO,GAEP/sB,MAAS6sB,EAAQ,KAAK,IAAI,GAEtBjmB,GAAK,YAAYA,GAAK,SAAS,SAAS,MAC1CimB,EAAQ,MAAM,CAAC,GAEf7sB,MAAS6sB,EAAQ;OACdK,KAAiB;IAAO,OACvBpkB,EAAM;QACJA,EAAM,cAAclC,IAAMimB,EAAQ,QAAO,CAAE;QAC3CK,KAAiBE,KAASC;MACtC;IACA,IAGIP,EAAI,GAEG9sB;EACX;AACA;AAGA,SAASqtB,GAAe/gB,IAAMzM,IAAOytB,GAAO;AAC1C,SAAOztB,OAAU,IAAIyM,KAAO8gB,GAAO9gB,IAAMzM,IAAOytB,CAAK;AACvD;AAGA,SAASF,GAAO9gB,IAAMzM,IAAOytB,GAAO;AAClC,UAAQA,IAAQ,KAAK,UAAUhhB;AACjC;AC7LA,IAAMihB,KAAiC;EACrC;EACA;EACA;EACA;EACA;EACA;AACF;AAEAC,GAAa,OAAOC;AASb,SAASC,KAA+B;AAC7C,SAAO;IACL,gBAAgB,CAAC,QAAQ;IACzB,OAAO,EAAC,eAAeC,GAAkB;IACzC,MAAM,EAAC,eAAeC,GAAiB;EAC3C;AACA;AASO,SAASC,KAA6B;AAC3C,SAAO;IACL,QAAQ;MACN;QACE,WAAW;QACX,aAAa;QACb,gBAAgBN;MACxB;IACK;IACD,UAAU,EAAC,QAAQC,GAAY;EACnC;AACA;AAMA,SAASG,GAAmBloB,IAAO;AACjC,OAAK,MAAM,EAAC,MAAM,UAAU,UAAU,CAAE,EAAA,GAAGA,EAAK;AAClD;AAMA,SAASmoB,GAAkBnoB,IAAO;AAChC,OAAK,KAAKA,EAAK;AACjB;AAMA,SAAS+nB,GAAa5mB,IAAMlH,IAAGoJ,GAAOjF,IAAM;AAC1C,QAAMgpB,IAAU/jB,EAAM,cAAcjF,EAAI,GAClCipB,IAAOhkB,EAAM,MAAM,eAAe;AACxC,MAAI9I,IAAQ6sB,EAAQ,KAAK,IAAI;AAC7B,SAAA7sB,KAAS8I,EAAM,kBAAkBlC,IAAM;IACrC,GAAGimB,EAAQ,QAAS;IACpB,QAAQ7sB;IACR,OAAO;EACR,CAAA,GACDA,KAAS6sB,EAAQ,KAAK,IAAI,GAC1BC,EAAI,GACG9sB;AACT;AAGA,SAASytB,KAAa;AACpB,SAAO;AACT;ACgDA,SAASK,GAAoB9tB,IAAO;AAClC,SAAOA,GAAM;AACf;AAcO,SAAS+tB,GAAcC,IAAOnsB,IAAS;AAC5C,QAAM8D,IAAW9D,MAAW,CAAA,GAEtBosB,MAAStoB,EAAS,SAAS,CAAE,GAAE,OAAM,GACrCuoB,IAAevoB,EAAS,gBAAgBmoB,IAExCK,IAAa,CAAA,GAEbC,IAAa,CAAA,GAEbC,IAAa,CAAA,GAEbC,KAAsB,CAAA;AAC5B,MAAIC,IAAkB,GAClBC,IAAW;AAIf,SAAO,EAAEA,IAAWR,GAAM,UAAQ;AAEhC,UAAMS,IAAM,CAAA,GAENC,KAAQ,CAAA;AACd,QAAIC,IAAc;AAMlB,SAJIX,GAAMQ,CAAQ,EAAE,SAASD,MAC3BA,IAAkBP,GAAMQ,CAAQ,EAAE,SAG7B,EAAEG,IAAcX,GAAMQ,CAAQ,EAAE,UAAQ;AAC7C,YAAMI,IAAOntB,GAAUusB,GAAMQ,CAAQ,EAAEG,CAAW,CAAC;AAEnD,UAAIhpB,EAAS,oBAAoB,OAAO;AACtC,cAAMkpB,IAAOX,EAAaU,CAAI;AAC9BF,QAAAA,GAAMC,CAAW,IAAIE,IAGnBP,GAAoBK,CAAW,MAAM,UACrCE,IAAOP,GAAoBK,CAAW,OAEtCL,GAAoBK,CAAW,IAAIE;MAE7C;AAEMJ,QAAI,KAAKG,CAAI;IACnB;AAEIR,MAAWI,CAAQ,IAAIC,GACvBJ,EAAWG,CAAQ,IAAIE;EAC3B;AAGE,MAAIC,KAAc;AAElB,MAAI,OAAOV,MAAU,YAAY,YAAYA;AAC3C,WAAO,EAAEU,KAAcJ;AACrBJ,QAAWQ,EAAW,IAAIG,GAAYb,GAAMU,EAAW,CAAC;OAErD;AACL,UAAMviB,IAAO0iB,GAAYb,EAAK;AAE9B,WAAO,EAAEU,KAAcJ;AACrBJ,QAAWQ,EAAW,IAAIviB;EAEhC;AAGEuiB,EAAAA,KAAc;AAEd,QAAMF,KAAM,CAAA,GAENC,IAAQ,CAAA;AAEd,SAAO,EAAEC,KAAcJ,KAAiB;AACtC,UAAMniB,IAAO+hB,EAAWQ,EAAW;AACnC,QAAII,KAAS,IACTC,IAAQ;AAER5iB,UAAS,MACX2iB,KAAS,KACTC,IAAQ,OACC5iB,MAAS,MAClB2iB,KAAS,MACA3iB,MAAS,QAClB4iB,IAAQ;AAIV,QAAIH,IACFlpB,EAAS,oBAAoB,QACzB,IACA,KAAK;MACH;MACA2oB,GAAoBK,EAAW,IAAII,GAAO,SAASC,EAAM;IACrE;AAEI,UAAMJ,IAAOG,KAAS,IAAI,OAAOF,CAAI,IAAIG;AAErCrpB,MAAS,oBAAoB,UAC/BkpB,IAAOE,GAAO,SAASF,IAAOG,EAAM,QAEhCH,IAAOP,GAAoBK,EAAW,MACxCL,GAAoBK,EAAW,IAAIE,IAGrCH,EAAMC,EAAW,IAAIE,IAGvBJ,GAAIE,EAAW,IAAIC;EACvB;AAGER,IAAW,OAAO,GAAG,GAAGK,EAAG,GAC3BJ,EAAW,OAAO,GAAG,GAAGK,CAAK,GAE7BF,IAAW;AAEX,QAAMS,IAAQ,CAAA;AAEd,SAAO,EAAET,IAAWJ,EAAW,UAAQ;AACrC,UAAMK,IAAML,EAAWI,CAAQ,GACzBE,KAAQL,EAAWG,CAAQ;AACjCG,IAAAA,KAAc;AAEd,UAAMriB,IAAO,CAAA;AAEb,WAAO,EAAEqiB,KAAcJ,KAAiB;AACtC,YAAMK,IAAOH,EAAIE,EAAW,KAAK;AACjC,UAAII,IAAS,IACTC,IAAQ;AAEZ,UAAIrpB,EAAS,oBAAoB,OAAO;AACtC,cAAMkpB,IACJP,GAAoBK,EAAW,KAAKD,GAAMC,EAAW,KAAK,IACtDviB,IAAO+hB,EAAWQ,EAAW;AAE/BviB,cAAS,MACX2iB,IAAS,IAAI,OAAOF,CAAI,IACfziB,MAAS,KACdyiB,IAAO,KACTE,IAAS,IAAI,OAAOF,IAAO,IAAI,GAAG,GAClCG,IAAQ,IAAI,OAAOH,IAAO,IAAI,GAAG,MAEjCE,IAAS,IAAI,OAAOF,IAAO,CAAC,GAC5BG,IAAQD,KAGVC,IAAQ,IAAI,OAAOH,CAAI;MAEjC;AAEUlpB,QAAS,mBAAmB,SAAS,CAACgpB,MACxCriB,EAAK,KAAK,GAAG,GAIb3G,EAAS,YAAY;;MAGrB,EAAEA,EAAS,oBAAoB,SAASipB,MAAS,QAChDjpB,EAAS,mBAAmB,SAASgpB,OAEtCriB,EAAK,KAAK,GAAG,GAGX3G,EAAS,oBAAoB,SAC/B2G,EAAK,KAAKyiB,CAAM,GAGlBziB,EAAK,KAAKsiB,CAAI,GAEVjpB,EAAS,oBAAoB,SAC/B2G,EAAK,KAAK0iB,CAAK,GAGbrpB,EAAS,YAAY,SACvB2G,EAAK,KAAK,GAAG,IAIb3G,EAAS,iBAAiB,SAC1BgpB,OAAgBJ,IAAkB,MAElCjiB,EAAK,KAAK,GAAG;IAErB;AAEI2iB,MAAM;MACJtpB,EAAS,iBAAiB,QACtB2G,EAAK,KAAK,EAAE,EAAE,QAAQ,OAAO,EAAE,IAC/BA,EAAK,KAAK,EAAE;IACtB;EACA;AAEE,SAAO2iB,EAAM,KAAK;CAAI;AACxB;AAQA,SAASxtB,GAAUzB,IAAO;AACxB,SAAOA,MAAU,OAA8B,KAAK,OAAOA,EAAK;AAClE;AAQA,SAAS8uB,GAAY9uB,IAAO;AAC1B,QAAMoM,KAAO,OAAOpM,MAAU,WAAWA,GAAM,YAAY,CAAC,IAAI;AAEhE,SAAOoM,OAAS,MAAgBA,OAAS,KACrC,KACAA,OAAS,MAAgBA,OAAS,MAChC,MACAA,OAAS,MAAgBA,OAAS,MAChC,MACA;AACV;AC5XO,SAAS8iB,GAAWtoB,IAAMlH,IAAGoJ,GAAOjF,IAAM;AAC/C,QAAMipB,IAAOhkB,EAAM,MAAM,YAAY,GAC/B+jB,IAAU/jB,EAAM,cAAcjF,EAAI;AACxCgpB,IAAQ,KAAK,IAAI,GACjBA,EAAQ,MAAM,CAAC;AACf,QAAM7sB,IAAQ8I,EAAM;IAClBA,EAAM,cAAclC,IAAMimB,EAAQ,QAAO,CAAE;IAC3CvsB;EACJ;AACE,SAAAwsB,EAAI,GACG9sB;AACT;AAGA,SAASM,GAAIgM,IAAM5M,IAAG4tB,GAAO;AAC3B,SAAO,OAAOA,IAAQ,KAAK,OAAOhhB;AACpC;ACnBO,SAAS6iB,GAAeC,IAAOviB,IAAS;AAC7C,SACEwiB,GAAYD,IAAOviB,GAAQ,aAAa,IAAI,KAC5C,CAACwiB,GAAYD,IAAOviB,GAAQ,gBAAgB,KAAK;AAErD;AAQA,SAASwiB,GAAYD,IAAOloB,IAAMooB,GAAM;AAKtC,MAJI,OAAOpoB,MAAS,aAClBA,KAAO,CAACA,EAAI,IAGV,CAACA,MAAQA,GAAK,WAAW;AAC3B,WAAOooB;AAGT,MAAIzvB,KAAQ;AAEZ,SAAO,EAAEA,KAAQqH,GAAK;AACpB,QAAIkoB,GAAM,SAASloB,GAAKrH,EAAK,CAAC;AAC5B,aAAO;AAIX,SAAO;AACT;AC1BO,SAAS0vB,GAAU7vB,IAAG8vB,IAAI1mB,GAAOjF,IAAM;AAC5C,MAAIhE,IAAQ;AAEZ,SAAO,EAAEA,IAAQiJ,EAAM,OAAO;AAG5B,QACEA,EAAM,OAAOjJ,CAAK,EAAE,cAAc;KAClCsvB,GAAermB,EAAM,OAAOA,EAAM,OAAOjJ,CAAK,CAAC;AAE/C,aAAO,QAAQ,KAAKgE,GAAK,MAAM,IAAI,KAAK;AAI5C,SAAO;;AACT;ACnBO,SAAS4rB,GAAczvB,IAAO0vB,IAAW;AAC9C,QAAMtvB,IAAS,OAAOJ,EAAK;AAC3B,MAAIH,KAAQO,EAAO,QAAQsvB,EAAS,GAChCC,IAAW9vB,IACXkN,IAAQ,GACR6iB,IAAM;AAEV,MAAI,OAAOF,MAAc;AACvB,UAAM,IAAI,UAAU,oBAAoB;AAG1C,SAAO7vB,OAAU;AACXA,IAAAA,OAAU8vB,IACR,EAAE5iB,IAAQ6iB,MACZA,IAAM7iB,KAGRA,IAAQ,GAGV4iB,IAAW9vB,KAAQ6vB,GAAU,QAC7B7vB,KAAQO,EAAO,QAAQsvB,IAAWC,CAAQ;AAG5C,SAAOC;AACT;ACzBO,SAASC,GAAqBjpB,IAAMkC,IAAO;AAChD,SAAO,CAAA,EACLA,GAAM,QAAQ,WAAW,SACvBlC,GAAK;EAEL,CAACA,GAAK;EAEN,WAAW,KAAKA,GAAK,KAAK;EAE1B,CAAC,0CAA0C,KAAKA,GAAK,KAAK;AAEhE;ACbO,SAASkpB,GAAWhnB,IAAO;AAChC,QAAMinB,KAASjnB,GAAM,QAAQ,SAAS;AAEtC,MAAIinB,OAAW,OAAOA,OAAW;AAC/B,UAAM,IAAI;MACR,iCACEA,KACA;IACR;AAGE,SAAOA;AACT;ACJO,SAAS3jB,GAAKxF,IAAMlH,IAAGoJ,GAAOjF,IAAM;AACzC,QAAMksB,IAASD,GAAWhnB,CAAK,GACzBse,IAAMxgB,GAAK,SAAS,IACpBopB,IAASD,MAAW,MAAM,gBAAgB;AAEhD,MAAIF,GAAqBjpB,IAAMkC,CAAK,GAAG;AACrC,UAAMgkB,KAAOhkB,EAAM,MAAM,cAAc,GACjC9I,KAAQ8I,EAAM,YAAYse,GAAK9mB,EAAG;AACxC,WAAAwsB,GAAI,GACG9sB;EACX;AAEE,QAAM6sB,IAAU/jB,EAAM,cAAcjF,EAAI,GAClCosB,KAAWF,EAAO,OAAO,KAAK,IAAIN,GAAcrI,GAAK2I,CAAM,IAAI,GAAG,CAAC,CAAC,GACpEjD,IAAOhkB,EAAM,MAAM,YAAY;AACrC,MAAI9I,IAAQ6sB,EAAQ,KAAKoD,EAAQ;AAEjC,MAAIrpB,GAAK,MAAM;AACb,UAAMmmB,KAAUjkB,EAAM,MAAM,iBAAiBknB,CAAM,EAAE;AACrDhwB,SAAS6sB,EAAQ;MACf/jB,EAAM,KAAKlC,GAAK,MAAM;QACpB,QAAQ5G;QACR,OAAO;QACP,QAAQ,CAAC,GAAG;QACZ,GAAG6sB,EAAQ,QAAO;MACnB,CAAA;IACP,GACIE,GAAO;EACX;AAEE,MAAInmB,GAAK,QAAQA,GAAK,MAAM;AAC1B,UAAMmmB,KAAUjkB,EAAM,MAAM,iBAAiBknB,CAAM,EAAE;AACrDhwB,SAAS6sB,EAAQ,KAAK,GAAG,GACzB7sB,KAAS6sB,EAAQ;MACf/jB,EAAM,KAAKlC,GAAK,MAAM;QACpB,QAAQ5G;QACR,OAAO;;QACP,QAAQ,CAAC,GAAG;QACZ,GAAG6sB,EAAQ,QAAO;MACnB,CAAA;IACP,GACIE,GAAO;EACX;AAEE,SAAA/sB,KAAS6sB,EAAQ,KAAK;CAAI,GAEtBzF,MACFpnB,KAAS6sB,EAAQ,KAAKzF,IAAM;CAAI,IAGlCpnB,KAAS6sB,EAAQ,KAAKoD,EAAQ,GAC9BnD,EAAI,GACG9sB;AACT;AAGA,SAASM,GAAIgM,IAAM5M,IAAG4tB,GAAO;AAC3B,UAAQA,IAAQ,KAAK,UAAUhhB;AACjC;AClEO,SAAS4jB,GAAWpnB,IAAO;AAChC,QAAMinB,KAASjnB,GAAM,QAAQ,SAAS;AAEtC,MAAIinB,OAAW,OAAOA,OAAW;AAC/B,UAAM,IAAI;MACR,kCACEA,KACA;IACR;AAGE,SAAOA;AACT;ACNO,SAASpsB,GAAWiD,IAAMlH,IAAGoJ,GAAOjF,IAAM;AAC/C,QAAMssB,IAAQD,GAAWpnB,CAAK,GACxBknB,IAASG,MAAU,MAAM,UAAU,cACnCrD,IAAOhkB,EAAM,MAAM,YAAY;AACrC,MAAIikB,IAAUjkB,EAAM,MAAM,OAAO;AACjC,QAAM+jB,KAAU/jB,EAAM,cAAcjF,EAAI;AACxC,MAAI7D,IAAQ6sB,GAAQ,KAAK,GAAG;AAC5B,SAAA7sB,KAAS6sB,GAAQ;IACf/jB,EAAM,KAAKA,EAAM,cAAclC,EAAI,GAAG;MACpC,QAAQ5G;MACR,OAAO;MACP,GAAG6sB,GAAQ,QAAO;IACnB,CAAA;EACL,GACE7sB,KAAS6sB,GAAQ,KAAK,KAAK,GAE3BE,EAAO;EAIL,CAACnmB,GAAK;EAEN,eAAe,KAAKA,GAAK,GAAG,KAE5BmmB,IAAUjkB,EAAM,MAAM,oBAAoB,GAC1C9I,KAAS6sB,GAAQ,KAAK,GAAG,GACzB7sB,KAAS6sB,GAAQ;IACf/jB,EAAM,KAAKlC,GAAK,KAAK,EAAC,QAAQ5G,GAAO,OAAO,KAAK,GAAG6sB,GAAQ,QAAO,EAAE,CAAC;EAC5E,GACI7sB,KAAS6sB,GAAQ,KAAK,GAAG,MAGzBE,IAAUjkB,EAAM,MAAM,gBAAgB,GACtC9I,KAAS6sB,GAAQ;IACf/jB,EAAM,KAAKlC,GAAK,KAAK;MACnB,QAAQ5G;MACR,OAAO4G,GAAK,QAAQ,MAAM;;MAC1B,GAAGimB,GAAQ,QAAO;IACnB,CAAA;EACP,IAGEE,EAAO,GAEHnmB,GAAK,UACPmmB,IAAUjkB,EAAM,MAAM,QAAQknB,CAAM,EAAE,GACtChwB,KAAS6sB,GAAQ,KAAK,MAAMsD,CAAK,GACjCnwB,KAAS6sB,GAAQ;IACf/jB,EAAM,KAAKlC,GAAK,OAAO;MACrB,QAAQ5G;MACR,OAAOmwB;MACP,GAAGtD,GAAQ,QAAO;IACnB,CAAA;EACP,GACI7sB,KAAS6sB,GAAQ,KAAKsD,CAAK,GAC3BpD,EAAO,IAGTD,EAAI,GAEG9sB;AACT;ACnEO,SAASowB,GAActnB,IAAO;AACnC,QAAMinB,KAASjnB,GAAM,QAAQ,YAAY;AAEzC,MAAIinB,OAAW,OAAOA,OAAW;AAC/B,UAAM,IAAI;MACR,qCACEA,KACA;IACR;AAGE,SAAOA;AACT;ACZO,SAASM,GAAyBjkB,IAAM;AAC7C,SAAO,QAAQA,GAAK,SAAS,EAAE,EAAE,YAAW,IAAK;AACnD;ACSO,SAASkkB,IAAkBlkB,IAAM;AACtC,MAAIA,OAAS,QAAQ+c,GAA0B/c,EAAI,KAAKkd,GAAkBld,EAAI;AAC5E,WAAO;AAET,MAAIid,GAAmBjd,EAAI;AACzB,WAAO;AAEX;ACcO,SAASmkB,GAAWC,IAASC,IAAQV,GAAQ;AAClD,QAAMW,KAAcJ,IAAkBE,EAAO,GACvCG,IAAaL,IAAkBG,EAAM;AAG3C,SAAIC,OAAgB,SACXC,MAAe;;;;IAIlBZ,MAAW,MACT,EAAC,QAAQ,MAAM,SAAS,KAAI,IAC5B,EAAC,QAAQ,OAAO,SAAS,MAAK;MAChCY,MAAe;;IAEb,EAAC,QAAQ,MAAM,SAAS,KAAI;;;IAE5B,EAAC,QAAQ,OAAO,SAAS,KAAI;MAIjCD,OAAgB,IACXC,MAAe;;IAElB,EAAC,QAAQ,OAAO,SAAS,MAAK;MAC9BA,MAAe;;IAEb,EAAC,QAAQ,MAAM,SAAS,KAAI;;;IAE5B,EAAC,QAAQ,OAAO,SAAS,MAAK;MAI/BA,MAAe;;IAElB,EAAC,QAAQ,OAAO,SAAS,MAAK;MAC9BA,MAAe;;IAEb,EAAC,QAAQ,MAAM,SAAS,MAAK;;;IAE7B,EAAC,QAAQ,OAAO,SAAS,MAAK;;AACtC;ACxEAC,GAAS,OAAOC;AAST,SAASD,GAAShqB,IAAMlH,IAAGoJ,GAAOjF,IAAM;AAC7C,QAAMksB,IAASK,GAActnB,CAAK,GAC5BgkB,IAAOhkB,EAAM,MAAM,UAAU,GAC7B+jB,IAAU/jB,EAAM,cAAcjF,EAAI,GAClCkrB,IAASlC,EAAQ,KAAKkD,CAAM;AAElC,MAAIe,KAAUjE,EAAQ;IACpB/jB,EAAM,kBAAkBlC,IAAM;MAC5B,OAAOmpB;MACP,QAAAhB;MACA,GAAGlC,EAAQ,QAAO;IACnB,CAAA;EACL;AACE,QAAMkE,IAAcD,GAAQ,WAAW,CAAC,GAClCE,IAAOT;IACX1sB,GAAK,OAAO,WAAWA,GAAK,OAAO,SAAS,CAAC;IAC7CktB;IACAhB;EACJ;AAEMiB,IAAK,WACPF,KAAUT,GAAyBU,CAAW,IAAID,GAAQ,MAAM,CAAC;AAGnE,QAAMG,KAAcH,GAAQ,WAAWA,GAAQ,SAAS,CAAC,GACnDI,KAAQX,GAAW1sB,GAAK,MAAM,WAAW,CAAC,GAAGotB,IAAalB,CAAM;AAElEmB,EAAAA,GAAM,WACRJ,KAAUA,GAAQ,MAAM,GAAG,EAAE,IAAIT,GAAyBY,EAAW;AAGvE,QAAMjC,IAAQnC,EAAQ,KAAKkD,CAAM;AAEjC,SAAAjD,EAAI,GAEJhkB,EAAM,iCAAiC;IACrC,OAAOooB,GAAM;IACb,QAAQF,EAAK;EACjB,GACSjC,IAAS+B,KAAU9B;AAC5B;AAQA,SAAS6B,GAAanxB,IAAG8vB,IAAI1mB,GAAO;AAClC,SAAOA,EAAM,QAAQ,YAAY;AACnC;ACxDA,IAAMyB,KAAe,CAAA;AAed,SAAS1J,GAASb,IAAO6B,IAAS;AACvC,QAAM8D,IAAsB4E,IACtB4mB,KACJ,OAAOxrB,EAAS,mBAAoB,YAChCA,EAAS,kBACT,MACAyrB,IACJ,OAAOzrB,EAAS,eAAgB,YAAYA,EAAS,cAAc;AAErE,SAAOkD,GAAI7I,IAAOmxB,IAAiBC,CAAW;AAChD;AAcA,SAASvoB,GAAI7I,IAAOmxB,IAAiBC,GAAa;AAChD,MAAIxqB,GAAK5G,EAAK,GAAG;AACf,QAAI,WAAWA;AACb,aAAOA,GAAM,SAAS,UAAU,CAACoxB,IAAc,KAAKpxB,GAAM;AAG5D,QAAImxB,MAAmB,SAASnxB,MAASA,GAAM;AAC7C,aAAOA,GAAM;AAGf,QAAI,cAAcA;AAChB,aAAOkJ,GAAIlJ,GAAM,UAAUmxB,IAAiBC,CAAW;EAE7D;AAEE,SAAI,MAAM,QAAQpxB,EAAK,IACdkJ,GAAIlJ,IAAOmxB,IAAiBC,CAAW,IAGzC;AACT;AAcA,SAASloB,GAAI1F,IAAQ2tB,IAAiBC,GAAa;AAEjD,QAAMhqB,KAAS,CAAA;AACf,MAAIvH,IAAQ;AAEZ,SAAO,EAAEA,IAAQ2D,GAAO;AACtB4D,IAAAA,GAAOvH,CAAK,IAAIgJ,GAAIrF,GAAO3D,CAAK,GAAGsxB,IAAiBC,CAAW;AAGjE,SAAOhqB,GAAO,KAAK,EAAE;AACvB;AAUA,SAASR,GAAK5G,IAAO;AACnB,SAAO,CAAA,EAAQA,MAAS,OAAOA,MAAU;AAC3C;AC9FO,SAASqxB,GAAsBzqB,IAAMkC,IAAO;AACjD,MAAIwoB,IAAmB;AAIvB,SAAA9K,GAAM5f,IAAM,SAAUA,IAAM;AAC1B,QACG,WAAWA,MAAQ,WAAW,KAAKA,GAAK,KAAK,KAC9CA,GAAK,SAAS;AAEd,aAAA0qB,IAAmB,MACZvL;EAEV,CAAA,GAEM,CAAA,GACJ,CAACnf,GAAK,SAASA,GAAK,QAAQ,MAC3B/F,GAAS+F,EAAI,MACZkC,GAAM,QAAQ,UAAUwoB;AAE/B;AClBO,SAASC,GAAQ3qB,IAAMlH,IAAGoJ,GAAOjF,IAAM;AAC5C,QAAM2tB,IAAO,KAAK,IAAI,KAAK,IAAI,GAAG5qB,GAAK,SAAS,CAAC,GAAG,CAAC,GAC/CimB,IAAU/jB,EAAM,cAAcjF,EAAI;AAExC,MAAIwtB,GAAsBzqB,IAAMkC,CAAK,GAAG;AACtC,UAAMgkB,IAAOhkB,EAAM,MAAM,eAAe,GAClCikB,KAAUjkB,EAAM,MAAM,UAAU,GAChC9I,KAAQ8I,EAAM,kBAAkBlC,IAAM;MAC1C,GAAGimB,EAAQ,QAAS;MACpB,QAAQ;;MACR,OAAO;;IACR,CAAA;AACD,WAAAE,GAAO,GACPD,EAAI,GAGF9sB,KACA;KACCwxB,MAAS,IAAI,MAAM,KAAK;;MAEvBxxB,GAAM;;OAGH,KAAK,IAAIA,GAAM,YAAY,IAAI,GAAGA,GAAM,YAAY;CAAI,CAAC,IAAI;IACxE;EAEA;AAEE,QAAMiwB,IAAW,IAAI,OAAOuB,CAAI,GAC1B1E,IAAOhkB,EAAM,MAAM,YAAY,GAC/BikB,KAAUjkB,EAAM,MAAM,UAAU;AAMtC+jB,IAAQ,KAAKoD,IAAW,GAAG;AAE3B,MAAIjwB,IAAQ8I,EAAM,kBAAkBlC,IAAM;IACxC,QAAQ;IACR,OAAO;;IACP,GAAGimB,EAAQ,QAAO;EACnB,CAAA;AAED,SAAI,SAAS,KAAK7sB,CAAK,MAErBA,IAAQqwB,GAAyBrwB,EAAM,WAAW,CAAC,CAAC,IAAIA,EAAM,MAAM,CAAC,IAGvEA,IAAQA,IAAQiwB,IAAW,MAAMjwB,IAAQiwB,GAErCnnB,EAAM,QAAQ,aAChB9I,KAAS,MAAMiwB,IAGjBlD,GAAO,GACPD,EAAI,GAEG9sB;AACT;ACtEAqE,GAAK,OAAOotB;AAML,SAASptB,GAAKuC,IAAM;AACzB,SAAOA,GAAK,SAAS;AACvB;AAKA,SAAS6qB,KAAW;AAClB,SAAO;AACT;ACZAC,GAAM,OAAOC;AASN,SAASD,GAAM9qB,IAAMlH,IAAGoJ,GAAOjF,IAAM;AAC1C,QAAMssB,IAAQD,GAAWpnB,CAAK,GACxBknB,IAASG,MAAU,MAAM,UAAU,cACnCrD,IAAOhkB,EAAM,MAAM,OAAO;AAChC,MAAIikB,IAAUjkB,EAAM,MAAM,OAAO;AACjC,QAAM+jB,KAAU/jB,EAAM,cAAcjF,EAAI;AACxC,MAAI7D,IAAQ6sB,GAAQ,KAAK,IAAI;AAC7B,SAAA7sB,KAAS6sB,GAAQ;IACf/jB,EAAM,KAAKlC,GAAK,KAAK,EAAC,QAAQ5G,GAAO,OAAO,KAAK,GAAG6sB,GAAQ,QAAO,EAAE,CAAC;EAC1E,GACE7sB,KAAS6sB,GAAQ,KAAK,IAAI,GAE1BE,EAAO;EAIJ,CAACnmB,GAAK,OAAOA,GAAK;EAEnB,eAAe,KAAKA,GAAK,GAAG,KAE5BmmB,IAAUjkB,EAAM,MAAM,oBAAoB,GAC1C9I,KAAS6sB,GAAQ,KAAK,GAAG,GACzB7sB,KAAS6sB,GAAQ;IACf/jB,EAAM,KAAKlC,GAAK,KAAK,EAAC,QAAQ5G,GAAO,OAAO,KAAK,GAAG6sB,GAAQ,QAAO,EAAE,CAAC;EAC5E,GACI7sB,KAAS6sB,GAAQ,KAAK,GAAG,MAGzBE,IAAUjkB,EAAM,MAAM,gBAAgB,GACtC9I,KAAS6sB,GAAQ;IACf/jB,EAAM,KAAKlC,GAAK,KAAK;MACnB,QAAQ5G;MACR,OAAO4G,GAAK,QAAQ,MAAM;MAC1B,GAAGimB,GAAQ,QAAO;IACnB,CAAA;EACP,IAGEE,EAAO,GAEHnmB,GAAK,UACPmmB,IAAUjkB,EAAM,MAAM,QAAQknB,CAAM,EAAE,GACtChwB,KAAS6sB,GAAQ,KAAK,MAAMsD,CAAK,GACjCnwB,KAAS6sB,GAAQ;IACf/jB,EAAM,KAAKlC,GAAK,OAAO;MACrB,QAAQ5G;MACR,OAAOmwB;MACP,GAAGtD,GAAQ,QAAO;IACnB,CAAA;EACP,GACI7sB,KAAS6sB,GAAQ,KAAKsD,CAAK,GAC3BpD,EAAO,IAGT/sB,KAAS6sB,GAAQ,KAAK,GAAG,GACzBC,EAAI,GAEG9sB;AACT;AAKA,SAAS2xB,KAAY;AACnB,SAAO;AACT;AC5EAC,GAAe,OAAOC;AASf,SAASD,GAAehrB,IAAMlH,IAAGoJ,GAAOjF,IAAM;AACnD,QAAM9D,IAAO6G,GAAK,eACZkmB,IAAOhkB,EAAM,MAAM,gBAAgB;AACzC,MAAIikB,IAAUjkB,EAAM,MAAM,OAAO;AACjC,QAAM+jB,IAAU/jB,EAAM,cAAcjF,EAAI;AACxC,MAAI7D,KAAQ6sB,EAAQ,KAAK,IAAI;AAC7B,QAAMiF,IAAMhpB,EAAM,KAAKlC,GAAK,KAAK;IAC/B,QAAQ5G;IACR,OAAO;IACP,GAAG6sB,EAAQ,QAAO;EACnB,CAAA;AACD7sB,EAAAA,MAAS6sB,EAAQ,KAAKiF,IAAM,IAAI,GAEhC/E,EAAO;AAEP,QAAMqC,IAAQtmB,EAAM;AACpBA,IAAM,QAAQ,CAAA,GACdikB,IAAUjkB,EAAM,MAAM,WAAW;AAKjC,QAAMC,KAAYD,EAAM,KAAKA,EAAM,cAAclC,EAAI,GAAG;IACtD,QAAQ5G;IACR,OAAO;IACP,GAAG6sB,EAAQ,QAAO;EACnB,CAAA;AACD,SAAAE,EAAO,GACPjkB,EAAM,QAAQsmB,GACdtC,EAAI,GAEA/sB,MAAS,UAAU,CAAC+xB,KAAOA,MAAQ/oB,KACrC/I,MAAS6sB,EAAQ,KAAK9jB,KAAY,GAAG,IAC5BhJ,MAAS,aAElBC,KAAQA,GAAM,MAAM,GAAG,EAAE,IAEzBA,MAAS6sB,EAAQ,KAAK,GAAG,GAGpB7sB;AACT;AAKA,SAAS6xB,KAAqB;AAC5B,SAAO;AACT;ACzDAE,GAAW,OAAOC;AAQX,SAASD,GAAWnrB,IAAMlH,IAAGoJ,GAAO;AACzC,MAAI9I,KAAQ4G,GAAK,SAAS,IACtBqpB,IAAW,KACXpwB,IAAQ;AAKZ,SAAO,IAAI,OAAO,aAAaowB,IAAW,UAAU,EAAE,KAAKjwB,EAAK;AAC9DiwB,SAAY;AAmBd,OAbE,WAAW,KAAKjwB,EAAK,MACnB,WAAW,KAAKA,EAAK,KAAK,WAAW,KAAKA,EAAK,KAAM,QAAQ,KAAKA,EAAK,OAEzEA,KAAQ,MAAMA,KAAQ,MAUjB,EAAEH,IAAQiJ,EAAM,OAAO,UAAQ;AACpC,UAAM+D,IAAU/D,EAAM,OAAOjJ,CAAK,GAC5BoyB,IAAanpB,EAAM,eAAe+D,CAAO;AAE/C,QAAI1G;AAKJ,QAAK0G,EAAQ;AAEb,aAAQ1G,KAAQ8rB,EAAW,KAAKjyB,EAAK,KAAI;AACvC,YAAIyJ,IAAWtD,GAAM;AAInBnG,QAAAA,GAAM,WAAWyJ,CAAQ,MAAM,MAC/BzJ,GAAM,WAAWyJ,IAAW,CAAC,MAAM,MAEnCA,KAGFzJ,KAAQA,GAAM,MAAM,GAAGyJ,CAAQ,IAAI,MAAMzJ,GAAM,MAAMmG,GAAM,QAAQ,CAAC;MAC1E;EACA;AAEE,SAAO8pB,IAAWjwB,KAAQiwB;AAC5B;AAKA,SAAS+B,KAAiB;AACxB,SAAO;AACT;AC/DO,SAASE,GAAqBtrB,IAAMkC,IAAO;AAChD,QAAMse,IAAMvmB,GAAS+F,EAAI;AAEzB,SAAO,CAAA,EACL,CAACkC,GAAM,QAAQ;EAEblC,GAAK;EAEL,CAACA,GAAK;EAENA,GAAK,YACLA,GAAK,SAAS,WAAW,KACzBA,GAAK,SAAS,CAAC,EAAE,SAAS;GAEzBwgB,MAAQxgB,GAAK,OAAO,YAAYwgB,MAAQxgB,GAAK;EAE9C,oBAAoB,KAAKA,GAAK,GAAG;;EAGjC,CAAC,iBAAiB,KAAKA,GAAK,GAAG;AAErC;ACxBAurB,GAAK,OAAOC;AASL,SAASD,GAAKvrB,IAAMlH,IAAGoJ,GAAOjF,IAAM;AACzC,QAAMssB,IAAQD,GAAWpnB,CAAK,GACxBknB,IAASG,MAAU,MAAM,UAAU,cACnCtD,IAAU/jB,EAAM,cAAcjF,EAAI;AAExC,MAAIipB,GAEAC;AAEJ,MAAImF,GAAqBtrB,IAAMkC,CAAK,GAAG;AAErC,UAAMsmB,IAAQtmB,EAAM;AACpBA,MAAM,QAAQ,CAAA,GACdgkB,IAAOhkB,EAAM,MAAM,UAAU;AAC7B,QAAI9I,KAAQ6sB,EAAQ,KAAK,GAAG;AAC5B,WAAA7sB,MAAS6sB,EAAQ;MACf/jB,EAAM,kBAAkBlC,IAAM;QAC5B,QAAQ5G;QACR,OAAO;QACP,GAAG6sB,EAAQ,QAAO;MACnB,CAAA;IACP,GACI7sB,MAAS6sB,EAAQ,KAAK,GAAG,GACzBC,EAAI,GACJhkB,EAAM,QAAQsmB,GACPpvB;EACX;AAEE8sB,MAAOhkB,EAAM,MAAM,MAAM,GACzBikB,KAAUjkB,EAAM,MAAM,OAAO;AAC7B,MAAI9I,IAAQ6sB,EAAQ,KAAK,GAAG;AAC5B,SAAA7sB,KAAS6sB,EAAQ;IACf/jB,EAAM,kBAAkBlC,IAAM;MAC5B,QAAQ5G;MACR,OAAO;MACP,GAAG6sB,EAAQ,QAAO;IACnB,CAAA;EACL,GACE7sB,KAAS6sB,EAAQ,KAAK,IAAI,GAC1BE,GAAO;EAIJ,CAACnmB,GAAK,OAAOA,GAAK;EAEnB,eAAe,KAAKA,GAAK,GAAG,KAE5BmmB,KAAUjkB,EAAM,MAAM,oBAAoB,GAC1C9I,KAAS6sB,EAAQ,KAAK,GAAG,GACzB7sB,KAAS6sB,EAAQ;IACf/jB,EAAM,KAAKlC,GAAK,KAAK,EAAC,QAAQ5G,GAAO,OAAO,KAAK,GAAG6sB,EAAQ,QAAO,EAAE,CAAC;EAC5E,GACI7sB,KAAS6sB,EAAQ,KAAK,GAAG,MAGzBE,KAAUjkB,EAAM,MAAM,gBAAgB,GACtC9I,KAAS6sB,EAAQ;IACf/jB,EAAM,KAAKlC,GAAK,KAAK;MACnB,QAAQ5G;MACR,OAAO4G,GAAK,QAAQ,MAAM;MAC1B,GAAGimB,EAAQ,QAAO;IACnB,CAAA;EACP,IAGEE,GAAO,GAEHnmB,GAAK,UACPmmB,KAAUjkB,EAAM,MAAM,QAAQknB,CAAM,EAAE,GACtChwB,KAAS6sB,EAAQ,KAAK,MAAMsD,CAAK,GACjCnwB,KAAS6sB,EAAQ;IACf/jB,EAAM,KAAKlC,GAAK,OAAO;MACrB,QAAQ5G;MACR,OAAOmwB;MACP,GAAGtD,EAAQ,QAAO;IACnB,CAAA;EACP,GACI7sB,KAAS6sB,EAAQ,KAAKsD,CAAK,GAC3BpD,GAAO,IAGT/sB,KAAS6sB,EAAQ,KAAK,GAAG,GAEzBC,EAAI,GACG9sB;AACT;AAQA,SAASoyB,GAASxrB,IAAMlH,IAAGoJ,GAAO;AAChC,SAAOopB,GAAqBtrB,IAAMkC,CAAK,IAAI,MAAM;AACnD;AC5GAupB,GAAc,OAAOC;AASd,SAASD,GAAczrB,IAAMlH,IAAGoJ,GAAOjF,IAAM;AAClD,QAAM9D,IAAO6G,GAAK,eACZkmB,IAAOhkB,EAAM,MAAM,eAAe;AACxC,MAAIikB,IAAUjkB,EAAM,MAAM,OAAO;AACjC,QAAM+jB,IAAU/jB,EAAM,cAAcjF,EAAI;AACxC,MAAI7D,KAAQ6sB,EAAQ,KAAK,GAAG;AAC5B,QAAMpiB,IAAO3B,EAAM,kBAAkBlC,IAAM;IACzC,QAAQ5G;IACR,OAAO;IACP,GAAG6sB,EAAQ,QAAO;EACnB,CAAA;AACD7sB,EAAAA,MAAS6sB,EAAQ,KAAKpiB,IAAO,IAAI,GAEjCsiB,EAAO;AAEP,QAAMqC,IAAQtmB,EAAM;AACpBA,IAAM,QAAQ,CAAA,GACdikB,IAAUjkB,EAAM,MAAM,WAAW;AAKjC,QAAMC,KAAYD,EAAM,KAAKA,EAAM,cAAclC,EAAI,GAAG;IACtD,QAAQ5G;IACR,OAAO;IACP,GAAG6sB,EAAQ,QAAO;EACnB,CAAA;AACD,SAAAE,EAAO,GACPjkB,EAAM,QAAQsmB,GACdtC,EAAI,GAEA/sB,MAAS,UAAU,CAAC0K,KAAQA,MAAS1B,KACvC/I,MAAS6sB,EAAQ,KAAK9jB,KAAY,GAAG,IAC5BhJ,MAAS,aAElBC,KAAQA,GAAM,MAAM,GAAG,EAAE,IAEzBA,MAAS6sB,EAAQ,KAAK,GAAG,GAGpB7sB;AACT;AAKA,SAASsyB,KAAoB;AAC3B,SAAO;AACT;ACtDO,SAASC,GAAYzpB,IAAO;AACjC,QAAMinB,KAASjnB,GAAM,QAAQ,UAAU;AAEvC,MAAIinB,OAAW,OAAOA,OAAW,OAAOA,OAAW;AACjD,UAAM,IAAI;MACR,kCACEA,KACA;IACR;AAGE,SAAOA;AACT;ACVO,SAASyC,GAAiB1pB,IAAO;AACtC,QAAM2pB,KAASF,GAAYzpB,EAAK,GAC1B4pB,IAAc5pB,GAAM,QAAQ;AAElC,MAAI,CAAC4pB;AACH,WAAOD,OAAW,MAAM,MAAM;AAGhC,MAAIC,MAAgB,OAAOA,MAAgB,OAAOA,MAAgB;AAChE,UAAM,IAAI;MACR,kCACEA,IACA;IACR;AAGE,MAAIA,MAAgBD;AAClB,UAAM,IAAI;MACR,yBACEA,KACA,4BACAC,IACA;IACR;AAGE,SAAOA;AACT;AC7BO,SAASC,GAAmB7pB,IAAO;AACxC,QAAMinB,KAASjnB,GAAM,QAAQ,iBAAiB;AAE9C,MAAIinB,OAAW,OAAOA,OAAW;AAC/B,UAAM,IAAI;MACR,kCACEA,KACA;IACR;AAGE,SAAOA;AACT;ACZO,SAAS6C,GAAU9pB,IAAO;AAC/B,QAAMinB,KAASjnB,GAAM,QAAQ,QAAQ;AAErC,MAAIinB,OAAW,OAAOA,OAAW,OAAOA,OAAW;AACjD,UAAM,IAAI;MACR,kCACEA,KACA;IACR;AAGE,SAAOA;AACT;ACHO,SAAS7oB,GAAKN,IAAMiT,IAAQ/Q,GAAOjF,IAAM;AAC9C,QAAMipB,IAAOhkB,EAAM,MAAM,MAAM,GACzB+pB,IAAgB/pB,EAAM;AAE5B,MAAI2pB,IAAS7rB,GAAK,UAAU+rB,GAAmB7pB,CAAK,IAAIypB,GAAYzpB,CAAK;AAEzE,QAAM4pB,IAAc9rB,GAAK,UACrB6rB,MAAW,MACT,MACA,MACFD,GAAiB1pB,CAAK;AAC1B,MAAIgqB,KACFjZ,MAAU/Q,EAAM,iBAAiB2pB,MAAW3pB,EAAM,iBAAiB;AAErE,MAAI,CAAClC,GAAK,SAAS;AACjB,UAAMmsB,IAAgBnsB,GAAK,WAAWA,GAAK,SAAS,CAAC,IAAI;AAqCzD;;OAzBG6rB,MAAW,OAAOA,MAAW;MAE9BM,MACC,CAACA,EAAc,YAAY,CAACA,EAAc,SAAS,CAAC;MAErDjqB,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM,UACxCA,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM,cACxCA,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM,UACxCA,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM;MAExCA,EAAM,WAAWA,EAAM,WAAW,SAAS,CAAC,MAAM,KAClDA,EAAM,WAAWA,EAAM,WAAW,SAAS,CAAC,MAAM,KAClDA,EAAM,WAAWA,EAAM,WAAW,SAAS,CAAC,MAAM,MAElDgqB,KAAqB,OAWnBF,GAAU9pB,CAAK,MAAM2pB,KAAUM;MAAe;AAChD,UAAIlzB,KAAQ;AAEZ,aAAO,EAAEA,KAAQ+G,GAAK,SAAS,UAAQ;AACrC,cAAMO,KAAOP,GAAK,SAAS/G,EAAK;AAEhC,YACEsH,MACAA,GAAK,SAAS,cACdA,GAAK,YACLA,GAAK,SAAS,CAAC,KACfA,GAAK,SAAS,CAAC,EAAE,SAAS,iBAC1B;AACA2rB,UAAAA,KAAqB;AACrB;QACV;MACA;IACA;EACA;AAEMA,EAAAA,OACFL,IAASC,IAGX5pB,EAAM,gBAAgB2pB;AACtB,QAAMzyB,IAAQ8I,EAAM,cAAclC,IAAM/C,EAAI;AAC5C,SAAAiF,EAAM,iBAAiB2pB,GACvB3pB,EAAM,gBAAgB+pB,GACtB/F,EAAI,GACG9sB;AACT;AC3FO,SAASgzB,GAAoBlqB,IAAO;AACzC,QAAMtB,KAAQsB,GAAM,QAAQ,kBAAkB;AAE9C,MAAItB,OAAU,SAASA,OAAU,SAASA,OAAU;AAClD,UAAM,IAAI;MACR,kCACEA,KACA;IACR;AAGE,SAAOA;AACT;ACLO,SAASyrB,GAASrsB,IAAMiT,IAAQ/Q,GAAOjF,IAAM;AAClD,QAAMqvB,IAAiBF,GAAoBlqB,CAAK;AAChD,MAAI2pB,IAAS3pB,EAAM,iBAAiBypB,GAAYzpB,CAAK;AAGjD+Q,EAAAA,MAAUA,GAAO,SAAS,UAAUA,GAAO,YAC7C4Y,KACG,OAAO5Y,GAAO,SAAU,YAAYA,GAAO,QAAQ,KAChDA,GAAO,QACP,MACH/Q,EAAM,QAAQ,wBAAwB,QACnC,IACA+Q,GAAO,SAAS,QAAQjT,EAAI,KAChC6rB;AAGJ,MAAI5D,IAAO4D,EAAO,SAAS;AAE3B,GACES,MAAmB,SAClBA,MAAmB,YAChBrZ,MAAUA,GAAO,SAAS,UAAUA,GAAO,UAAWjT,GAAK,aAE/DioB,IAAO,KAAK,KAAKA,IAAO,CAAC,IAAI;AAG/B,QAAMhC,IAAU/jB,EAAM,cAAcjF,EAAI;AACxCgpB,IAAQ,KAAK4F,IAAS,IAAI,OAAO5D,IAAO4D,EAAO,MAAM,CAAC,GACtD5F,EAAQ,MAAMgC,CAAI;AAClB,QAAM/B,KAAOhkB,EAAM,MAAM,UAAU,GAC7B9I,IAAQ8I,EAAM;IAClBA,EAAM,cAAclC,IAAMimB,EAAQ,QAAO,CAAE;IAC3CvsB;EACJ;AACE,SAAAwsB,GAAI,GAEG9sB;AAGP,WAASM,EAAIgM,IAAMzM,IAAOytB,GAAO;AAC/B,WAAIztB,MACMytB,IAAQ,KAAK,IAAI,OAAOuB,CAAI,KAAKviB,MAGnCghB,IAAQmF,IAASA,IAAS,IAAI,OAAO5D,IAAO4D,EAAO,MAAM,KAAKnmB;EAC1E;AACA;ACjDO,SAAS6mB,GAAUvsB,IAAMlH,IAAGoJ,GAAOjF,IAAM;AAC9C,QAAMipB,IAAOhkB,EAAM,MAAM,WAAW,GAC9BikB,IAAUjkB,EAAM,MAAM,UAAU,GAChC9I,IAAQ8I,EAAM,kBAAkBlC,IAAM/C,EAAI;AAChD,SAAAkpB,EAAO,GACPD,EAAI,GACG9sB;AACT;ACDO,IAAMozB;;EAGTnO,GAAQ;IACN;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;;IAEA;EACD,CAAA;;AC7BE,SAASza,GAAK5D,IAAMlH,IAAGoJ,GAAOjF,IAAM;AAOzC,UALoB+C,GAAK,SAAS,KAAK,SAAUysB,GAAG;AAClD,WAAOD,GAASC,CAAC;EAClB,CAAA,IAE+BvqB,EAAM,oBAAoBA,EAAM,eAC/C,KAAKA,GAAOlC,IAAM/C,EAAI;AACzC;ACdO,SAASyvB,GAAYxqB,IAAO;AACjC,QAAMinB,KAASjnB,GAAM,QAAQ,UAAU;AAEvC,MAAIinB,OAAW,OAAOA,OAAW;AAC/B,UAAM,IAAI;MACR,mCACEA,KACA;IACR;AAGE,SAAOA;AACT;ACXAwD,GAAO,OAAOC;AASP,SAASD,GAAO3sB,IAAMlH,IAAGoJ,GAAOjF,IAAM;AAC3C,QAAMksB,IAASuD,GAAYxqB,CAAK,GAC1BgkB,IAAOhkB,EAAM,MAAM,QAAQ,GAC3B+jB,IAAU/jB,EAAM,cAAcjF,EAAI,GAClCkrB,IAASlC,EAAQ,KAAKkD,IAASA,CAAM;AAE3C,MAAIe,KAAUjE,EAAQ;IACpB/jB,EAAM,kBAAkBlC,IAAM;MAC5B,OAAOmpB;MACP,QAAAhB;MACA,GAAGlC,EAAQ,QAAO;IACnB,CAAA;EACL;AACE,QAAMkE,IAAcD,GAAQ,WAAW,CAAC,GAClCE,IAAOT;IACX1sB,GAAK,OAAO,WAAWA,GAAK,OAAO,SAAS,CAAC;IAC7CktB;IACAhB;EACJ;AAEMiB,IAAK,WACPF,KAAUT,GAAyBU,CAAW,IAAID,GAAQ,MAAM,CAAC;AAGnE,QAAMG,KAAcH,GAAQ,WAAWA,GAAQ,SAAS,CAAC,GACnDI,KAAQX,GAAW1sB,GAAK,MAAM,WAAW,CAAC,GAAGotB,IAAalB,CAAM;AAElEmB,EAAAA,GAAM,WACRJ,KAAUA,GAAQ,MAAM,GAAG,EAAE,IAAIT,GAAyBY,EAAW;AAGvE,QAAMjC,IAAQnC,EAAQ,KAAKkD,IAASA,CAAM;AAE1C,SAAAjD,EAAI,GAEJhkB,EAAM,iCAAiC;IACrC,OAAOooB,GAAM;IACb,QAAQF,EAAK;EACjB,GACSjC,IAAS+B,KAAU9B;AAC5B;AAQA,SAASwE,GAAW9zB,IAAG8vB,IAAI1mB,GAAO;AAChC,SAAOA,EAAM,QAAQ,UAAU;AACjC;ACxDO,SAAS2B,GAAK7D,IAAMlH,IAAGoJ,GAAOjF,IAAM;AACzC,SAAOiF,EAAM,KAAKlC,GAAK,OAAO/C,EAAI;AACpC;ACNO,SAAS4vB,GAAoB3qB,IAAO;AACzC,QAAM4qB,KAAa5qB,GAAM,QAAQ,kBAAkB;AAEnD,MAAI4qB,KAAa;AACf,UAAM,IAAI;MACR,6CACEA,KACA;IACR;AAGE,SAAOA;AACT;ACNO,SAASC,GAAcj0B,IAAG8vB,IAAI1mB,GAAO;AAC1C,QAAM9I,MACJ4yB,GAAU9pB,CAAK,KAAKA,EAAM,QAAQ,aAAa,MAAM,KACrD,OAAO2qB,GAAoB3qB,CAAK,CAAC;AAEnC,SAAOA,EAAM,QAAQ,aAAa9I,GAAM,MAAM,GAAG,EAAE,IAAIA;AACzD;ACGO,IAAM4zB,KAAS;EACtB,YAAE1E;EACA,OAAOK;EACT,MAAEnjB;EACF,YAAEzI;EACF,UAAEitB;EACF,WAAErB;EACF,SAAEgC;EACF,MAAEltB;EACF,OAAEqtB;EACF,gBAAEE;EACF,YAAEG;EACF,MAAEI;EACF,eAAEE;EACF,MAAEnrB;EACF,UAAE+rB;EACF,WAAEE;EACF,MAAE3oB;EACF,QAAE+oB;EACF,MAAE9oB;EACAkpB,eAAAA;AACF;ACFO,SAASE,KAAuB;AACrC,SAAO;IACL,OAAO;MACL,OAAOC;MACP,WAAWC;MACX,aAAaA;MACb,UAAUC;IACX;IACD,MAAM;MACJ,UAAUC;MACV,OAAOC;MACP,WAAWpH;MACX,aAAaA;MACb,UAAUA;IAChB;EACA;AACA;AAMA,SAASgH,GAAWruB,IAAO;AACzB,QAAMwoB,KAAQxoB,GAAM;AAEpB,OAAK;IACH;MACE,MAAM;MACN,OAAOwoB,GAAM,IAAI,SAAUoF,GAAG;AAC5B,eAAOA,MAAM,SAAS,OAAOA;MACrC,CAAO;MACD,UAAU,CAAA;IACX;IACD5tB;EACJ,GACE,KAAK,KAAK,UAAU;AACtB;AAMA,SAASyuB,GAAUzuB,IAAO;AACxB,OAAK,KAAKA,EAAK,GACf,KAAK,KAAK,UAAU;AACtB;AAMA,SAASuuB,GAASvuB,IAAO;AACvB,OAAK,MAAM,EAAC,MAAM,YAAY,UAAU,CAAE,EAAA,GAAGA,EAAK;AACpD;AAMA,SAASqnB,GAAKrnB,IAAO;AACnB,OAAK,KAAKA,EAAK;AACjB;AAMA,SAASsuB,GAAUtuB,IAAO;AACxB,OAAK,MAAM,EAAC,MAAM,aAAa,UAAU,CAAE,EAAA,GAAGA,EAAK;AACrD;AAQA,SAASwuB,GAAaxuB,IAAO;AAC3B,MAAIzF,KAAQ,KAAK,OAAM;AAEnB,OAAK,KAAK,YACZA,KAAQA,GAAM,QAAQ,cAAc8pB,EAAO;AAG7C,QAAMljB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AACtCA,IAAK,MACZA,EAAK,QAAQ5G,IACb,KAAK,KAAKyF,EAAK;AACjB;AAOA,SAASqkB,GAAQ7kB,IAAIkvB,IAAI;AAEvB,SAAOA,OAAO,MAAMA,KAAKlvB;AAC3B;AAWO,SAASmvB,GAAmBvyB,IAAS;AAC1C,QAAM8D,KAAW9D,MAAW,CAAA,GACtBwyB,IAAU1uB,GAAS,kBACnB2uB,KAAkB3uB,GAAS,gBAC3BuoB,IAAevoB,GAAS,cACxB4uB,IAASF,IAAU,MAAM;AAE/B,SAAO;IACL,QAAQ;MACN,EAAC,WAAW,MAAM,aAAa,YAAW;MAC1C,EAAC,WAAW;GAAM,aAAa,YAAW;;;MAG1C,EAAC,SAAS,MAAM,WAAW,KAAK,OAAO,SAAS;;MAEhD,EAAC,WAAW,KAAK,aAAa,YAAW;;;MAGzC,EAAC,SAAS,MAAM,WAAW,KAAK,OAAO,IAAG;;;;;;MAM1C,EAAC,SAAS,MAAM,WAAW,KAAK,OAAO,QAAO;IAC/C;IACD,UAAU;MACR,YAAYG;MACZ,OAAOC;MACP,WAAWC;MACX,UAAUC;IAChB;EACA;AAME,WAASF,EAAY7tB,GAAMlH,GAAGoJ,GAAOjF,IAAM;AACzC,WAAO+wB,EAAcC,EAAkBjuB,GAAMkC,GAAOjF,EAAI,GAAG+C,EAAK,KAAK;EACzE;AAUE,WAAS+tB,EAAe/tB,GAAMlH,GAAGoJ,GAAOjF,IAAM;AAC5C,UAAM4qB,IAAMqG,GAAqBluB,GAAMkC,GAAOjF,EAAI,GAC5C7D,IAAQ40B,EAAc,CAACnG,CAAG,CAAC;AAEjC,WAAOzuB,EAAM,MAAM,GAAGA,EAAM,QAAQ;CAAI,CAAC;EAC7C;AAME,WAAS00B,GAAgB9tB,GAAMlH,GAAGoJ,GAAOjF,IAAM;AAC7C,UAAMipB,IAAOhkB,EAAM,MAAM,WAAW,GAC9BikB,IAAUjkB,EAAM,MAAM,UAAU,GAChC9I,IAAQ8I,EAAM,kBAAkBlC,GAAM;MAC1C,GAAG/C;MACH,QAAQ0wB;MACR,OAAOA;IACR,CAAA;AACD,WAAAxH,EAAO,GACPD,EAAI,GACG9sB;EACX;AAME,WAAS40B,EAAcG,GAAQ9G,GAAO;AACpC,WAAOF,GAAcgH,GAAQ;MAC3B,OAAA9G;;MAEA,iBAAAqG;;MAEA,SAAAD;;MAEA,cAAAnG;IACD,CAAA;EACL;AAOE,WAAS2G,EAAkBjuB,GAAMkC,GAAOjF,GAAM;AAC5C,UAAM8C,KAAWC,EAAK;AACtB,QAAI/G,IAAQ;AAEZ,UAAMuH,IAAS,CAAA,GACT2lB,IAAUjkB,EAAM,MAAM,OAAO;AAEnC,WAAO,EAAEjJ,IAAQ8G,GAAS;AACxBS,QAAOvH,CAAK,IAAIi1B,GAAqBnuB,GAAS9G,CAAK,GAAGiJ,GAAOjF,CAAI;AAGnE,WAAAkpB,EAAO,GAEA3lB;EACX;AAOE,WAAS0tB,GAAqBluB,GAAMkC,GAAOjF,GAAM;AAC/C,UAAM8C,KAAWC,EAAK;AACtB,QAAI/G,IAAQ;AAEZ,UAAMuH,IAAS,CAAA,GACT2lB,IAAUjkB,EAAM,MAAM,UAAU;AAEtC,WAAO,EAAEjJ,IAAQ8G,GAAS;AAIxBS,QAAOvH,CAAK,IAAI60B,GAAgB/tB,GAAS9G,CAAK,GAAG+G,GAAMkC,GAAOjF,CAAI;AAGpE,WAAAkpB,EAAO,GAEA3lB;EACX;AAME,WAASotB,GAAoB5tB,GAAMiT,GAAQ/Q,GAAO;AAChD,QAAI9I,KAAQg1B,GAAgB,WAAWpuB,GAAMiT,GAAQ/Q,CAAK;AAE1D,WAAIA,EAAM,MAAM,SAAS,WAAW,MAClC9I,KAAQA,GAAM,QAAQ,OAAO,MAAM,IAG9BA;EACX;AACA;ACvRO,SAASi1B,KAA8B;AAC5C,SAAO;IACL,MAAM;MACJ,2BAA2BC;MAC3B,6BAA6BA;MAC7B,WAAWC;IACjB;EACA;AACA;AASO,SAASC,KAA4B;AAC1C,SAAO;IACL,QAAQ,CAAC,EAAC,SAAS,MAAM,WAAW,KAAK,OAAO,QAAO,CAAC;IACxD,UAAU,EAAC,UAAUC,GAAwB;EACjD;AACA;AAMA,SAASH,GAAUzvB,IAAO;AAExB,QAAMmB,KAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AACtCA,EAAAA,GAAK,MACZA,GAAK,UAAUnB,GAAM,SAAS;AAChC;AAMA,SAAS0vB,GAA8B1vB,IAAO;AAC5C,QAAMoU,KAAS,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAE/C,MACEA,MACAA,GAAO,SAAS,cAChB,OAAOA,GAAO,WAAY,WAC1B;AACA,UAAMjT,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AACtCA,MAAK;AACZ,UAAMyhB,KAAOzhB,EAAK,SAAS,CAAC;AAE5B,QAAIyhB,MAAQA,GAAK,SAAS,QAAQ;AAChC,YAAMrO,IAAWH,GAAO;AACxB,UAAIha,IAAQ,IAERy1B;AAEJ,aAAO,EAAEz1B,IAAQma,EAAS,UAAQ;AAChC,cAAMub,IAAUvb,EAASna,CAAK;AAC9B,YAAI01B,EAAQ,SAAS,aAAa;AAChCD,cAAkBC;AAClB;QACV;MACA;AAEUD,YAAoB1uB,MAEtByhB,GAAK,QAAQA,GAAK,MAAM,MAAM,CAAC,GAE3BA,GAAK,MAAM,WAAW,IACxBzhB,EAAK,SAAS,MAAK,IAEnBA,EAAK,YACLyhB,GAAK,YACL,OAAOA,GAAK,SAAS,MAAM,UAAW,aAEtCA,GAAK,SAAS,MAAM,UACpBA,GAAK,SAAS,MAAM,UACpBzhB,EAAK,SAAS,QAAQ,OAAO,OAAO,CAAA,GAAIyhB,GAAK,SAAS,KAAK;IAGrE;EACA;AAEE,OAAK,KAAK5iB,EAAK;AACjB;AAMA,SAAS4vB,GAAyBzuB,IAAMiT,IAAQ/Q,GAAOjF,IAAM;AAC3D,QAAMwkB,IAAOzhB,GAAK,SAAS,CAAC,GACtB4uB,IACJ,OAAO5uB,GAAK,WAAY,aAAayhB,KAAQA,EAAK,SAAS,aACvDoN,IAAW,OAAO7uB,GAAK,UAAU,MAAM,OAAO,MAC9CimB,IAAU/jB,EAAM,cAAcjF,EAAI;AAEpC2xB,OACF3I,EAAQ,KAAK4I,CAAQ;AAGvB,MAAIz1B,KAAQg1B,GAAgB,SAASpuB,IAAMiT,IAAQ/Q,GAAO;IACxD,GAAGjF;IACH,GAAGgpB,EAAQ,QAAO;EACnB,CAAA;AAED,SAAI2I,MACFx1B,KAAQA,GAAM,QAAQ,mCAAmCsD,CAAK,IAGzDtD;AAMP,WAASsD,EAAM2B,GAAI;AACjB,WAAOA,IAAKwwB;EAChB;AACA;AC5GO,SAASC,KAAkB;AAChC,SAAO;IACLlL,GAAgC;IAChCwC,GAAyB;IACzBU,GAA8B;IAC9BmG,GAAsB;IACtBoB,GAA2B;EAC/B;AACA;AAYO,SAASU,GAAc9zB,IAAS;AACrC,SAAO;IACL,YAAY;MACVmpB,GAA8B;MAC9BiC,GAAsBprB,EAAO;MAC7BgsB,GAA4B;MAC5BuG,GAAmBvyB,EAAO;MAC1BuzB,GAAyB;IAC/B;EACA;AACA;ACxCO,SAASQ,GAAO1uB,IAAM3B,IAAOswB,GAAQC,IAAO;AACjD,QAAMtwB,IAAM0B,GAAK;AACjB,MAAI6uB,IAAa,GAEb5rB;AAWJ,MARI5E,KAAQ,IACVA,KAAQ,CAACA,KAAQC,IAAM,IAAIA,IAAMD,KAEjCA,KAAQA,KAAQC,IAAMA,IAAMD,IAE9BswB,IAASA,IAAS,IAAIA,IAAS,GAG3BC,GAAM,SAAS;AACjB3rB,QAAa,MAAM,KAAK2rB,EAAK,GAC7B3rB,EAAW,QAAQ5E,IAAOswB,CAAM,GAEhC3uB,GAAK,OAAO,GAAGiD,CAAU;;AAMzB,SAHI0rB,KAAQ3uB,GAAK,OAAO3B,IAAOswB,CAAM,GAG9BE,IAAaD,GAAM;AACxB3rB,UAAa2rB,GAAM,MAAMC,GAAYA,IAAa,GAAK,GACvD5rB,EAAW,QAAQ5E,IAAO,CAAC,GAE3B2B,GAAK,OAAO,GAAGiD,CAAU,GACzB4rB,KAAc,KACdxwB,MAAS;AAGf;AC7CA,IAAMywB,KAAiB,CAAA,EAAG;AAUnB,SAASC,GAAkBC,IAAY;AAE5C,QAAMhtB,KAAM,CAAA;AACZ,MAAIrJ,IAAQ;AAEZ,SAAO,EAAEA,IAAQq2B,GAAW;AAC1BC,OAAgBjtB,IAAKgtB,GAAWr2B,CAAK,CAAC;AAGxC,SAAOqJ;AACT;AAYA,SAASitB,GAAgBjtB,IAAKktB,IAAW;AAEvC,MAAIC;AAEJ,OAAKA,KAAQD,IAAW;AAGtB,UAAME,KAFQN,GAAe,KAAK9sB,IAAKmtB,CAAI,IAAIntB,GAAImtB,CAAI,IAAI,YAEpCntB,GAAImtB,CAAI,IAAI,CAAE,IAE/BE,IAAQH,GAAUC,CAAI;AAE5B,QAAIjqB;AAEJ,QAAImqB;AACF,WAAKnqB,KAAQmqB,GAAO;AACbP,WAAe,KAAKM,GAAMlqB,CAAI,MAAGkqB,EAAKlqB,CAAI,IAAI,CAAA;AACnD,cAAMpM,IAAQu2B,EAAMnqB,CAAI;AACxBoqB;;UAEEF,EAAKlqB,CAAI;UACT,MAAM,QAAQpM,CAAK,IAAIA,IAAQA,IAAQ,CAACA,CAAK,IAAI,CAAA;QAC3D;MACA;EAEA;AACA;AAaA,SAASw2B,GAAWC,IAAUvvB,IAAM;AAClC,MAAIrH,IAAQ;AAEZ,QAAMkvB,KAAS,CAAA;AAEf,SAAO,EAAElvB,IAAQqH,GAAK;AAEnB,KAACA,GAAKrH,CAAK,EAAE,QAAQ,UAAU42B,KAAW1H,IAAQ,KAAK7nB,GAAKrH,CAAK,CAAC;AAGrE+1B,KAAOa,IAAU,GAAG,GAAG1H,EAAM;AAC/B;ACvFA,IAAM2H,KAAY;EAChB,UAAUC;EACV,SAAS;AACX;AAHA,IAIMvL,KAAS;EACb,UAAUwL;EACV,SAAS;AACX;AAPA,IAQMvL,KAAO;EACX,UAAUwL;EACV,SAAS;AACX;AAXA,IAYMhL,KAAQ;EACZ,UAAUiL;EACV,SAAS;AACX;AAfA,IAgBMC,KAAsB;EAC1B,UAAUC;EACV,SAAS;AACX;AAnBA,IAoBMC,KAAc;EAClB,MAAM;EACN,UAAUC;EACV,UAAUC;AACZ;AAxBA,IAyBMC,KAAmB;EACvB,MAAM;EACN,UAAUC;EACV,UAAUC;AACZ;AA7BA,IA8BMC,KAAgB;EACpB,MAAM;EACN,UAAUC;EACV,UAAUC;AACZ;AAlCA,IAqCMhtB,KAAO,CAAE;AAUR,SAASitB,KAAqB;AACnC,SAAO;IACLjtB,MAAAA;EACD;AACH;AAGA,IAAI2B,MAAO;AAGX,OAAOA,MAAO;AACZ3B,KAAK2B,GAAI,IAAImrB,IACbnrB,OACIA,QAAS,KAAIA,MAAO,KAAYA,QAAS,OAAIA,MAAO;AAE1D3B,GAAK,EAAE,IAAI8sB;AACX9sB,GAAK,EAAE,IAAI8sB;AACX9sB,GAAK,EAAE,IAAI8sB;AACX9sB,GAAK,EAAE,IAAI8sB;AACX9sB,GAAK,EAAE,IAAI,CAAC8sB,IAAeH,EAAgB;AAC3C3sB,GAAK,GAAG,IAAI,CAAC8sB,IAAeH,EAAgB;AAC5C3sB,GAAK,EAAE,IAAI,CAAC8sB,IAAeN,EAAW;AACtCxsB,GAAK,GAAG,IAAI,CAAC8sB,IAAeN,EAAW;AAmBvC,SAASO,GAAsBG,IAASxS,IAAIyS,GAAK;AAC/C,QAAMC,KAAO;AAEb,MAAIC,GAEA7tB;AACJ,SAAO1E;AAYP,WAASA,EAAM6G,IAAM;AACnB,WAAI,CAAC2rB,GAAS3rB,EAAI,KAAK,CAACqrB,GAAc,KAAKI,IAAMA,GAAK,QAAQ,KAAKG,GAAmBH,GAAK,MAAM,IACxFD,EAAIxrB,EAAI,KAEjBurB,GAAQ,MAAM,iBAAiB,GAC/BA,GAAQ,MAAM,sBAAsB,GAC7BlM,EAAMrf,EAAI;EACrB;AAYE,WAASqf,EAAMrf,IAAM;AACnB,WAAI2rB,GAAS3rB,EAAI,KACfurB,GAAQ,QAAQvrB,EAAI,GACbqf,KAELrf,OAAS,MACXurB,GAAQ,QAAQvrB,EAAI,GACb6rB,MAEFL,EAAIxrB,EAAI;EACnB;AAgBE,WAAS6rB,GAAY7rB,IAAM;AAEzB,WAAIA,OAAS,KACJurB,GAAQ,MAAMZ,IAAqBmB,GAAkBC,CAAc,EAAE/rB,EAAI,IAI9EA,OAAS,MAAMA,OAAS,MAAMwc,GAAkBxc,EAAI,KACtDnC,IAAO,MACP0tB,GAAQ,QAAQvrB,EAAI,GACb6rB,MASFC,EAAiB9rB,EAAI;EAChC;AAYE,WAAS+rB,EAAe/rB,IAAM;AAC5B,WAAAurB,GAAQ,QAAQvrB,EAAI,GACpB0rB,IAAM,MACCG;EACX;AAYE,WAASC,EAAiB9rB,IAAM;AAG9B,WAAInC,KAAQ6tB,KAAOpP,GAAWmP,GAAK,QAAQ,KACzCF,GAAQ,KAAK,sBAAsB,GACnCA,GAAQ,KAAK,iBAAiB,GACvBxS,GAAG/Y,EAAI,KAETwrB,EAAIxrB,EAAI;EACnB;AACA;AAaA,SAAS8qB,GAAoBS,IAASxS,IAAIyS,GAAK;AAC7C,QAAMC,KAAO;AACb,SAAOO;AAYP,WAASA,EAAShsB,GAAM;AACtB,WAAIA,MAAS,MAAMA,MAAS,OAAO,CAAC+qB,GAAY,KAAKU,IAAMA,GAAK,QAAQ,KAAKG,GAAmBH,GAAK,MAAM,IAClGD,EAAIxrB,CAAI,KAEjBurB,GAAQ,MAAM,iBAAiB,GAC/BA,GAAQ,MAAM,oBAAoB,GAG3BA,GAAQ,MAAMjB,IAAWiB,GAAQ,QAAQvM,IAAQuM,GAAQ,QAAQtM,IAAMgN,CAAQ,GAAGT,CAAG,GAAGA,CAAG,EAAExrB,CAAI;EAC5G;AAYE,WAASisB,EAASjsB,GAAM;AACtB,WAAAurB,GAAQ,KAAK,oBAAoB,GACjCA,GAAQ,KAAK,iBAAiB,GACvBxS,GAAG/Y,CAAI;EAClB;AACA;AAaA,SAASirB,GAAyBM,IAASxS,IAAIyS,GAAK;AAClD,QAAMC,KAAO;AACb,MAAIS,IAAS,IACTC,IAAO;AACX,SAAOC;AAYP,WAASA,EAAcpsB,IAAM;AAC3B,YAAKA,OAAS,MAAMA,OAAS,QAAQkrB,GAAiB,KAAKO,IAAMA,GAAK,QAAQ,KAAK,CAACG,GAAmBH,GAAK,MAAM,KAChHF,GAAQ,MAAM,iBAAiB,GAC/BA,GAAQ,MAAM,qBAAqB,GACnCW,KAAU,OAAO,cAAclsB,EAAI,GACnCurB,GAAQ,QAAQvrB,EAAI,GACbqsB,KAEFb,EAAIxrB,EAAI;EACnB;AAYE,WAASqsB,EAAqBrsB,IAAM;AAElC,QAAIsc,GAAWtc,EAAI,KAAKksB,EAAO,SAAS;AAEtC,aAAAA,KAAU,OAAO,cAAclsB,EAAI,GACnCurB,GAAQ,QAAQvrB,EAAI,GACbqsB;AAET,QAAIrsB,OAAS,IAAI;AACf,YAAM+e,KAAWmN,EAAO,YAAa;AACrC,UAAInN,OAAa,UAAUA,OAAa;AACtC,eAAAwM,GAAQ,QAAQvrB,EAAI,GACbssB;IAEf;AACI,WAAOd,EAAIxrB,EAAI;EACnB;AAYE,WAASssB,GAAsBtsB,IAAM;AACnC,WAAIA,OAAS,MACXurB,GAAQ,QAAQvrB,EAAI,GAChBmsB,IACKI,KAETJ,IAAO,MACAG,OAEFd,EAAIxrB,EAAI;EACnB;AAYE,WAASusB,EAAcvsB,IAAM;AAG3B,WAAOA,OAAS,QAAQ0c,GAAa1c,EAAI,KAAK+c,GAA0B/c,EAAI,KAAKkd,GAAkBld,EAAI,KAAKid,GAAmBjd,EAAI,IAAIwrB,EAAIxrB,EAAI,IAAIurB,GAAQ,QAAQvM,IAAQuM,GAAQ,QAAQtM,IAAMuN,CAAa,GAAGhB,CAAG,EAAExrB,EAAI;EAC9N;AAYE,WAASwsB,EAAcxsB,IAAM;AAC3B,WAAAurB,GAAQ,KAAK,qBAAqB,GAClCA,GAAQ,KAAK,iBAAiB,GACvBxS,GAAG/Y,EAAI;EAClB;AACA;AAaA,SAASuqB,GAAkBgB,IAASxS,IAAIyS,GAAK;AAC3C,MAAI/I,KAAO;AACX,SAAOgK;AAYP,WAASA,EAAgBzsB,GAAM;AAC7B,YAAKA,MAAS,MAAMA,MAAS,QAAQyiB,KAAO,KAC1CA,MACA8I,GAAQ,QAAQvrB,CAAI,GACbysB,KAELzsB,MAAS,MAAMyiB,OAAS,KAC1B8I,GAAQ,QAAQvrB,CAAI,GACb0sB,KAEFlB,EAAIxrB,CAAI;EACnB;AAYE,WAAS0sB,EAAe1sB,GAAM;AAE5B,WAAOA,MAAS,OAAOwrB,EAAIxrB,CAAI,IAAI+Y,GAAG/Y,CAAI;EAC9C;AACA;AAaA,SAASwqB,GAAee,IAASxS,IAAIyS,GAAK;AAExC,MAAImB,IAEAC,GAEAT;AACJ,SAAOU;AAYP,WAASA,EAAa7sB,GAAM;AAI1B,WAAIA,MAAS,MAAMA,MAAS,KACnBurB,GAAQ,MAAM9L,IAAOqN,IAAaC,CAAmB,EAAE/sB,CAAI,IAShEA,MAAS,QAAQ+c,GAA0B/c,CAAI,KAAKkd,GAAkBld,CAAI,KAAKA,MAAS,MAAMid,GAAmBjd,CAAI,IAChH8sB,GAAY9sB,CAAI,KAEzBmsB,IAAO,MACPZ,GAAQ,QAAQvrB,CAAI,GACb6sB;EACX;AAYE,WAASE,EAAoB/sB,GAAM;AAEjC,WAAIA,MAAS,KACX2sB,KAA0B,QAK1BC,IAA8BD,IAC9BA,KAA0B,SAE5BpB,GAAQ,QAAQvrB,CAAI,GACb6sB;EACX;AAWE,WAASC,GAAY9sB,GAAM;AAGzB,WAAI4sB,KAA+BD,MAA2B,CAACR,IACtDX,EAAIxrB,CAAI,IAEV+Y,GAAG/Y,CAAI;EAClB;AACA;AAaA,SAASyqB,GAAac,IAASxS,IAAI;AACjC,MAAIiU,IAAW,GACXC,KAAY;AAChB,SAAOC;AAYP,WAASA,EAAWltB,GAAM;AACxB,WAAIA,MAAS,MACXgtB,KACAzB,GAAQ,QAAQvrB,CAAI,GACbktB,KAMLltB,MAAS,MAAMitB,KAAYD,IACtBG,EAAkBntB,CAAI,IAM3BA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACtNurB,GAAQ,MAAM9L,IAAO1G,IAAIoU,CAAiB,EAAEntB,CAAI,IAErDA,MAAS,QAAQ+c,GAA0B/c,CAAI,KAAKkd,GAAkBld,CAAI,IACrE+Y,GAAG/Y,CAAI,KAEhBurB,GAAQ,QAAQvrB,CAAI,GACbktB;EACX;AAYE,WAASC,EAAkBntB,GAAM;AAE/B,WAAIA,MAAS,MACXitB,MAEF1B,GAAQ,QAAQvrB,CAAI,GACbktB;EACX;AACA;AAiBA,SAASxC,GAAca,IAASxS,IAAIyS,GAAK;AACvC,SAAO/L;AAYP,WAASA,GAAMzf,GAAM;AAEnB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,OAChLurB,GAAQ,QAAQvrB,CAAI,GACbyf,MAMLzf,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbotB,KAMLptB,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbqtB;;MAITrtB,MAAS;MAETA,MAAS,QAAQ+c,GAA0B/c,CAAI,KAAKkd,GAAkBld,CAAI,IACjE+Y,GAAG/Y,CAAI,IAETwrB,EAAIxrB,CAAI;;EACnB;AAeE,WAASqtB,EAAkBrtB,GAAM;AAG/B,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAM+c,GAA0B/c,CAAI,KAAKkd,GAAkBld,CAAI,IACnG+Y,GAAG/Y,CAAI,IAETyf,GAAMzf,CAAI;EACrB;AAYE,WAASotB,EAA6BptB,GAAM;AAE1C,WAAOsc,GAAWtc,CAAI,IAAIstB,EAA8BttB,CAAI,IAAIwrB,EAAIxrB,CAAI;EAC5E;AAYE,WAASstB,EAA8BttB,GAAM;AAE3C,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbyf,MAELnD,GAAWtc,CAAI,KACjBurB,GAAQ,QAAQvrB,CAAI,GACbstB,KAIF9B,EAAIxrB,CAAI;EACnB;AACA;AAiBA,SAAS4qB,GAA4BW,IAASxS,IAAIyS,GAAK;AACrD,SAAOryB;AAYP,WAASA,GAAM6G,GAAM;AAEnB,WAAAurB,GAAQ,QAAQvrB,CAAI,GACb4iB;EACX;AAYE,WAASA,EAAM5iB,GAAM;AAEnB,WAAOwc,GAAkBxc,CAAI,IAAIwrB,EAAIxrB,CAAI,IAAI+Y,GAAG/Y,CAAI;EACxD;AACA;AAQA,SAAS+qB,GAAY/qB,IAAM;AACzB,SAAOA,OAAS,QAAQA,OAAS,MAAMA,OAAS,MAAMA,OAAS,MAAMA,OAAS,MAAMA,OAAS,MAAMA,OAAS,OAAO+c,GAA0B/c,EAAI;AACnJ;AAQA,SAASkrB,GAAiBlrB,IAAM;AAC9B,SAAO,CAACsc,GAAWtc,EAAI;AACzB;AAMA,SAASqrB,GAAcrrB,IAAM;AAK3B,SAAO,EAAEA,OAAS,MAAM2rB,GAAS3rB,EAAI;AACvC;AAMA,SAAS2rB,GAAS3rB,IAAM;AACtB,SAAOA,OAAS,MAAMA,OAAS,MAAMA,OAAS,MAAMA,OAAS,MAAMwc,GAAkBxc,EAAI;AAC3F;AAMA,SAAS4rB,GAAmB2B,IAAQ;AAClC,MAAI95B,KAAQ85B,GAAO,QACfvyB,IAAS;AACb,SAAOvH,QAAS;AACd,UAAM4F,KAAQk0B,GAAO95B,EAAK,EAAE,CAAC;AAC7B,SAAK4F,GAAM,SAAS,eAAeA,GAAM,SAAS,iBAAiB,CAACA,GAAM,WAAW;AACnF2B,UAAS;AACT;IACN;AAII,QAAI3B,GAAM,+BAA+B;AACvC2B,UAAS;AACT;IACN;EACA;AACE,SAAIuyB,GAAO,SAAS,KAAK,CAACvyB,MAGxBuyB,GAAOA,GAAO,SAAS,CAAC,EAAE,CAAC,EAAE,gCAAgC,OAExDvyB;AACT;AC7xBO,SAASwyB,GAAa55B,IAAO;AAElC,QAAMoH,KAAS,CAAE;AACjB,MAAIvH,IAAQ,IACR0F,KAAQ,GACRs0B,IAAO;AACX,SAAO,EAAEh6B,IAAQG,GAAM,UAAQ;AAC7B,UAAMoM,IAAOpM,GAAM,WAAWH,CAAK;AAEnC,QAAIiqB,IAAU;AAGd,QAAI1d,MAAS,MAAMwc,GAAkB5oB,GAAM,WAAWH,IAAQ,CAAC,CAAC,KAAK+oB,GAAkB5oB,GAAM,WAAWH,IAAQ,CAAC,CAAC;AAChHg6B,UAAO;aAGAztB,IAAO;AACT,0BAAoB,KAAK,OAAO,aAAaA,CAAI,CAAC,MACrD0d,IAAU,OAAO,aAAa1d,CAAI;aAI7BA,IAAO,SAAUA,IAAO,OAAQ;AACvC,YAAMhE,IAAOpI,GAAM,WAAWH,IAAQ,CAAC;AAGnCuM,UAAO,SAAUhE,IAAO,SAAUA,IAAO,SAC3C0hB,IAAU,OAAO,aAAa1d,GAAMhE,CAAI,GACxCyxB,IAAO,KAIP/P,IAAU;IAElB;AAGMA,UAAU,OAAO,aAAa1d,CAAI;AAEhC0d,UACF1iB,GAAO,KAAKpH,GAAM,MAAMuF,IAAO1F,CAAK,GAAG,mBAAmBiqB,CAAO,CAAC,GAClEvkB,KAAQ1F,IAAQg6B,IAAO,GACvB/P,IAAU,KAER+P,MACFh6B,KAASg6B,GACTA,IAAO;EAEb;AACE,SAAOzyB,GAAO,KAAK,EAAE,IAAIpH,GAAM,MAAMuF,EAAK;AAC5C;AC1FO,SAASu0B,GAAWtD,IAAYmD,IAAQI,GAAS;AAEtD,QAAMC,KAAS,CAAA;AACf,MAAIn6B,IAAQ;AAEZ,SAAO,EAAEA,IAAQ22B,GAAW,UAAQ;AAClC,UAAMyD,IAAUzD,GAAW32B,CAAK,EAAE;AAE9Bo6B,SAAW,CAACD,GAAO,SAASC,CAAO,MACrCN,KAASM,EAAQN,IAAQI,CAAO,GAChCC,GAAO,KAAKC,CAAO;EAEzB;AAEE,SAAON;AACT;ACSO,SAASO,EAAavC,IAASxS,IAAIplB,GAAM6vB,IAAK;AACnD,QAAMuK,IAAQvK,KAAMA,KAAM,IAAI,OAAO;AACrC,MAAIf,IAAO;AACX,SAAOtpB;AAGP,WAASA,EAAM6G,IAAM;AACnB,WAAIgd,EAAchd,EAAI,KACpBurB,GAAQ,MAAM53B,CAAI,GACX8W,EAAOzK,EAAI,KAEb+Y,GAAG/Y,EAAI;EAClB;AAGE,WAASyK,EAAOzK,IAAM;AACpB,WAAIgd,EAAchd,EAAI,KAAKyiB,MAASsL,KAClCxC,GAAQ,QAAQvrB,EAAI,GACbyK,MAET8gB,GAAQ,KAAK53B,CAAI,GACVolB,GAAG/Y,EAAI;EAClB;AACA;ACnDO,IAAMguB,KAAY;EACvB,SAAS;EACT,UAAUC;AACZ;AAOA,SAASA,GAAkB1C,IAASxS,IAAIyS,GAAK;AAC3C,SAAOryB;AAgBP,WAASA,GAAM6G,GAAM;AACnB,WAAOgd,EAAchd,CAAI,IAAI8tB,EAAavC,IAAS3I,GAAO,YAAY,EAAE5iB,CAAI,IAAI4iB,EAAM5iB,CAAI;EAC9F;AAgBE,WAAS4iB,EAAM5iB,GAAM;AACnB,WAAOA,MAAS,QAAQ8c,EAAmB9c,CAAI,IAAI+Y,GAAG/Y,CAAI,IAAIwrB,EAAIxrB,CAAI;EAC1E;AACA;ACpCO,SAASkuB,GAAkB3C,IAASxS,IAAI;AAE7C,MAAIoT;AACJ,SAAOhzB;AAGP,WAASA,GAAM6G,GAAM;AACnB,WAAI8c,EAAmB9c,CAAI,KACzBurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GACzBY,IAAO,MACAhzB,MAEL6jB,EAAchd,CAAI,IACb8tB,EAAavC,IAASpyB,IAAOgzB,IAAO,eAAe,YAAY,EAAEnsB,CAAI,IAEvE+Y,GAAG/Y,CAAI;EAClB;AACA;ACnCA,IAAMmuB,KAAS;EACb,UAAUC;EACV,SAAS;AACX;AAeO,SAASC,KAAc;AAE5B,SAAO;IACL,UAAU;MACP,IAAK;QACJ,MAAM;QACN,UAAUC;QACV,cAAc;UACZ,UAAUC;QACX;QACD,MAAMC;MACd;IACK;IACD,MAAM;MACH,IAAK;QACJ,MAAM;QACN,UAAUC;MACX;MACA,IAAK;QACJ,MAAM;QACN,KAAK;QACL,UAAUC;QACV,WAAWC;MACnB;IACA;EACG;AACH;AAOA,SAASD,GAAiCnD,IAASxS,IAAIyS,GAAK;AAC1D,QAAMC,KAAO;AACb,MAAIh4B,IAAQg4B,GAAK,OAAO;AACxB,QAAMmD,IAAUnD,GAAK,OAAO,iBAAiBA,GAAK,OAAO,eAAe,CAAA;AAExE,MAAIoD;AAGJ,SAAOp7B,OAAS;AACd,UAAM4F,KAAQoyB,GAAK,OAAOh4B,CAAK,EAAE,CAAC;AAClC,QAAI4F,GAAM,SAAS,cAAc;AAC/Bw1B,UAAax1B;AACb;IACN;AAGI,QAAIA,GAAM,SAAS,qBAAqBA,GAAM,SAAS,eAAeA,GAAM,SAAS,WAAWA,GAAM,SAAS,WAAWA,GAAM,SAAS;AACvI;EAEN;AACE,SAAOF;AAKP,WAASA,EAAM6G,IAAM;AACnB,QAAI,CAAC6uB,KAAc,CAACA,EAAW;AAC7B,aAAOrD,EAAIxrB,EAAI;AAEjB,UAAM9B,IAAK4hB,GAAoB2L,GAAK,eAAe;MACjD,OAAOoD,EAAW;MAClB,KAAKpD,GAAK,IAAG;IACnB,CAAK,CAAC;AACF,WAAIvtB,EAAG,YAAY,CAAC,MAAM,MAAM,CAAC0wB,EAAQ,SAAS1wB,EAAG,MAAM,CAAC,CAAC,IACpDstB,EAAIxrB,EAAI,KAEjBurB,GAAQ,MAAM,4BAA4B,GAC1CA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,4BAA4B,GAClCxS,GAAG/Y,EAAI;EAClB;AACA;AAIA,SAAS2uB,GAAkCpB,IAAQI,IAAS;AAC1D,MAAIl6B,IAAQ85B,GAAO;AAKnB,SAAO95B;AACL,QAAI85B,GAAO95B,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgB85B,GAAO95B,CAAK,EAAE,CAAC,MAAM,SAAS;AAC7D85B,MAAAA,GAAO95B,CAAK,EAAE,CAAC;AAC5B;IACN;AAGE85B,EAAAA,GAAO95B,IAAQ,CAAC,EAAE,CAAC,EAAE,OAAO,QAC5B85B,GAAO95B,IAAQ,CAAC,EAAE,CAAC,EAAE,OAAO;AAI5B,QAAMq7B,KAAO;IACX,MAAM;IACN,OAAO,OAAO,OAAO,CAAA,GAAIvB,GAAO95B,IAAQ,CAAC,EAAE,CAAC,EAAE,KAAK;IACnD,KAAK,OAAO,OAAO,CAAA,GAAI85B,GAAOA,GAAO,SAAS,CAAC,EAAE,CAAC,EAAE,GAAG;EACxD,GAGK5J,IAAS;IACb,MAAM;IACN,OAAO,OAAO,OAAO,CAAA,GAAI4J,GAAO95B,IAAQ,CAAC,EAAE,CAAC,EAAE,GAAG;IACjD,KAAK,OAAO,OAAO,CAAA,GAAI85B,GAAO95B,IAAQ,CAAC,EAAE,CAAC,EAAE,GAAG;EAChD;AAEDkwB,IAAO,IAAI,UACXA,EAAO,IAAI,UACXA,EAAO,IAAI;AAEX,QAAMoL,IAAS;IACb,MAAM;IACN,OAAO,OAAO,OAAO,CAAA,GAAIpL,EAAO,GAAG;IACnC,KAAK,OAAO,OAAO,CAAA,GAAI4J,GAAOA,GAAO,SAAS,CAAC,EAAE,CAAC,EAAE,KAAK;EAC1D,GAEKhtB,IAAQ;IACZ,MAAM;IACN,aAAa;IACb,OAAO,OAAO,OAAO,CAAA,GAAIwuB,EAAO,KAAK;IACrC,KAAK,OAAO,OAAO,CAAE,GAAEA,EAAO,GAAG;EAClC,GAGKC,IAAc;;IAEpBzB,GAAO95B,IAAQ,CAAC;IAAG85B,GAAO95B,IAAQ,CAAC;IAAG,CAAC,SAASq7B,IAAMnB,EAAO;;IAE7DJ,GAAO95B,IAAQ,CAAC;IAAG85B,GAAO95B,IAAQ,CAAC;;IAEnC,CAAC,SAASkwB,GAAQgK,EAAO;IAAG,CAAC,QAAQhK,GAAQgK,EAAO;;IAEpD,CAAC,SAASoB,GAAQpB,EAAO;IAAG,CAAC,SAASptB,GAAOotB,EAAO;IAAG,CAAC,QAAQptB,GAAOotB,EAAO;IAAG,CAAC,QAAQoB,GAAQpB,EAAO;;IAEzGJ,GAAOA,GAAO,SAAS,CAAC;IAAGA,GAAOA,GAAO,SAAS,CAAC;IAAG,CAAC,QAAQuB,IAAMnB,EAAO;EAAC;AAC7E,SAAAJ,GAAO,OAAO95B,GAAO85B,GAAO,SAAS95B,IAAQ,GAAG,GAAGu7B,CAAW,GACvDzB;AACT;AAMA,SAASkB,GAAwBlD,IAASxS,IAAIyS,GAAK;AACjD,QAAMC,KAAO,MACPmD,IAAUnD,GAAK,OAAO,iBAAiBA,GAAK,OAAO,eAAe,CAAA;AACxE,MAAIhJ,IAAO,GAEP5kB;AAOJ,SAAO1E;AAYP,WAASA,EAAM6G,IAAM;AACnB,WAAAurB,GAAQ,MAAM,iBAAiB,GAC/BA,GAAQ,MAAM,4BAA4B,GAC1CA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,4BAA4B,GAClC0D;EACX;AAYE,WAASA,GAAUjvB,IAAM;AACvB,WAAIA,OAAS,KAAWwrB,EAAIxrB,EAAI,KAChCurB,GAAQ,MAAM,uBAAuB,GACrCA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,uBAAuB,GACpCA,GAAQ,MAAM,uBAAuB,GACrCA,GAAQ,MAAM,aAAa,EAAE,cAAc,UACpC2D;EACX;AAYE,WAASA,EAASlvB,IAAM;AACtB;;MAEAyiB,IAAO;MAEPziB,OAAS,MAAM,CAACnC;;MAGhBmC,OAAS,QAAQA,OAAS,MAAM+c,GAA0B/c,EAAI;;AAC5D,aAAOwrB,EAAIxrB,EAAI;AAEjB,QAAIA,OAAS,IAAI;AACfurB,MAAAA,GAAQ,KAAK,aAAa;AAC1B,YAAMlyB,KAAQkyB,GAAQ,KAAK,uBAAuB;AAClD,aAAKqD,EAAQ,SAAS9O,GAAoB2L,GAAK,eAAepyB,EAAK,CAAC,CAAC,KAGrEkyB,GAAQ,MAAM,4BAA4B,GAC1CA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,4BAA4B,GACzCA,GAAQ,KAAK,iBAAiB,GACvBxS,MANEyS,EAAIxrB,EAAI;IAOvB;AACI,WAAK+c,GAA0B/c,EAAI,MACjCnC,IAAO,OAET4kB,KACA8I,GAAQ,QAAQvrB,EAAI,GACbA,OAAS,KAAKmvB,IAAaD;EACtC;AAYE,WAASC,EAAWnvB,IAAM;AACxB,WAAIA,OAAS,MAAMA,OAAS,MAAMA,OAAS,MACzCurB,GAAQ,QAAQvrB,EAAI,GACpByiB,KACOyM,KAEFA,EAASlvB,EAAI;EACxB;AACA;AAMA,SAASsuB,GAAwB/C,IAASxS,IAAIyS,GAAK;AACjD,QAAMC,KAAO,MACPmD,IAAUnD,GAAK,OAAO,iBAAiBA,GAAK,OAAO,eAAe,CAAA;AAExE,MAAI2D,GACA3M,IAAO,GAEP5kB;AACJ,SAAO1E;AAYP,WAASA,GAAM6G,GAAM;AACnB,WAAAurB,GAAQ,MAAM,uBAAuB,EAAE,aAAa,MACpDA,GAAQ,MAAM,4BAA4B,GAC1CA,GAAQ,MAAM,kCAAkC,GAChDA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,kCAAkC,GACxC8D;EACX;AAYE,WAASA,EAAcrvB,GAAM;AAC3B,WAAIA,MAAS,MACXurB,GAAQ,MAAM,6BAA6B,GAC3CA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,6BAA6B,GAC1CA,GAAQ,MAAM,kCAAkC,GAChDA,GAAQ,MAAM,aAAa,EAAE,cAAc,UACpC+D,KAEF9D,EAAIxrB,CAAI;EACnB;AAeE,WAASsvB,EAAYtvB,GAAM;AACzB;;MAEAyiB,IAAO;MAEPziB,MAAS,MAAM,CAACnC;;MAGhBmC,MAAS,QAAQA,MAAS,MAAM+c,GAA0B/c,CAAI;;AAC5D,aAAOwrB,EAAIxrB,CAAI;AAEjB,QAAIA,MAAS,IAAI;AACfurB,MAAAA,GAAQ,KAAK,aAAa;AAC1B,YAAMlyB,IAAQkyB,GAAQ,KAAK,kCAAkC;AAC7D,aAAA6D,IAAatP,GAAoB2L,GAAK,eAAepyB,CAAK,CAAC,GAC3DkyB,GAAQ,MAAM,kCAAkC,GAChDA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,kCAAkC,GAC/CA,GAAQ,KAAK,4BAA4B,GAClCgE;IACb;AACI,WAAKxS,GAA0B/c,CAAI,MACjCnC,IAAO,OAET4kB,KACA8I,GAAQ,QAAQvrB,CAAI,GACbA,MAAS,KAAKwvB,KAAcF;EACvC;AAeE,WAASE,GAAYxvB,GAAM;AACzB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCurB,GAAQ,QAAQvrB,CAAI,GACpByiB,KACO6M,KAEFA,EAAYtvB,CAAI;EAC3B;AAYE,WAASuvB,GAAWvvB,GAAM;AACxB,WAAIA,MAAS,MACXurB,GAAQ,MAAM,kBAAkB,GAChCA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,kBAAkB,GAC1BqD,EAAQ,SAASQ,CAAU,KAC9BR,EAAQ,KAAKQ,CAAU,GAMlBtB,EAAavC,IAASkE,GAAiB,iCAAiC,KAE1EjE,EAAIxrB,CAAI;EACnB;AAYE,WAASyvB,EAAgBzvB,GAAM;AAE7B,WAAO+Y,GAAG/Y,CAAI;EAClB;AACA;AAMA,SAASuuB,GAA+BhD,IAASxS,IAAIyS,GAAK;AAUxD,SAAOD,GAAQ,MAAMyC,IAAWjV,IAAIwS,GAAQ,QAAQ4C,IAAQpV,IAAIyS,CAAG,CAAC;AACtE;AAGA,SAASgD,GAAyBjD,IAAS;AACzCA,EAAAA,GAAQ,KAAK,uBAAuB;AACtC;AAMA,SAAS6C,GAAe7C,IAASxS,IAAIyS,GAAK;AACxC,QAAMC,KAAO;AACb,SAAOqC,EAAavC,IAASmE,GAAa,+BAA+B,CAAK;AAK9E,WAASA,EAAY1vB,GAAM;AACzB,UAAMtC,IAAO+tB,GAAK,OAAOA,GAAK,OAAO,SAAS,CAAC;AAC/C,WAAO/tB,KAAQA,EAAK,CAAC,EAAE,SAAS,iCAAiCA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,IAAI,EAAE,WAAW,IAAIqb,GAAG/Y,CAAI,IAAIwrB,EAAIxrB,CAAI;EAC7I;AACA;ACndO,SAAS2vB,GAAiBl6B,IAAS;AAExC,MAAIm6B,KADan6B,MAAW,CAAE,GACR;AACtB,QAAMo6B,KAAY;IAChB,MAAM;IACN,UAAUC;IACV,YAAYC;EACb;AACD,SAAIH,KAAW,SACbA,IAAS,OAEJ;IACL,MAAM;MACH,KAAMC;IACR;IACD,YAAY;MACV,MAAM,CAACA,EAAS;IACjB;IACD,kBAAkB;MAChB,MAAM,CAAC,GAAG;IAChB;EACG;AAOD,WAASE,EAAwBxC,GAAQI,GAAS;AAChD,QAAIl6B,KAAQ;AAGZ,WAAO,EAAEA,KAAQ85B,EAAO;AAEtB,UAAIA,EAAO95B,EAAK,EAAE,CAAC,MAAM,WAAW85B,EAAO95B,EAAK,EAAE,CAAC,EAAE,SAAS,oCAAoC85B,EAAO95B,EAAK,EAAE,CAAC,EAAE,QAAQ;AACzH,YAAImxB,IAAOnxB;AAGX,eAAOmxB;AAEL,cAAI2I,EAAO3I,CAAI,EAAE,CAAC,MAAM,UAAU2I,EAAO3I,CAAI,EAAE,CAAC,EAAE,SAAS,oCAAoC2I,EAAO3I,CAAI,EAAE,CAAC,EAAE;UAE/G2I,EAAO95B,EAAK,EAAE,CAAC,EAAE,IAAI,SAAS85B,EAAO95B,EAAK,EAAE,CAAC,EAAE,MAAM,WAAW85B,EAAO3I,CAAI,EAAE,CAAC,EAAE,IAAI,SAAS2I,EAAO3I,CAAI,EAAE,CAAC,EAAE,MAAM,QAAQ;AACzH2I,cAAO95B,EAAK,EAAE,CAAC,EAAE,OAAO,yBACxB85B,EAAO3I,CAAI,EAAE,CAAC,EAAE,OAAO;AAGvB,kBAAMoL,IAAgB;cACpB,MAAM;cACN,OAAO,OAAO,OAAO,CAAE,GAAEzC,EAAO3I,CAAI,EAAE,CAAC,EAAE,KAAK;cAC9C,KAAK,OAAO,OAAO,CAAE,GAAE2I,EAAO95B,EAAK,EAAE,CAAC,EAAE,GAAG;YAC5C,GAGK4K,KAAO;cACX,MAAM;cACN,OAAO,OAAO,OAAO,CAAE,GAAEkvB,EAAO3I,CAAI,EAAE,CAAC,EAAE,GAAG;cAC5C,KAAK,OAAO,OAAO,CAAE,GAAE2I,EAAO95B,EAAK,EAAE,CAAC,EAAE,KAAK;YAC9C,GAIKw8B,KAAa,CAAC,CAAC,SAASD,GAAerC,CAAO,GAAG,CAAC,SAASJ,EAAO3I,CAAI,EAAE,CAAC,GAAG+I,CAAO,GAAG,CAAC,QAAQJ,EAAO3I,CAAI,EAAE,CAAC,GAAG+I,CAAO,GAAG,CAAC,SAAStvB,IAAMsvB,CAAO,CAAC,GAClJuC,IAAavC,EAAQ,OAAO,WAAW,WAAW;AACpDuC,iBAEF1G,GAAOyG,IAAYA,GAAW,QAAQ,GAAGvC,GAAWwC,GAAY3C,EAAO,MAAM3I,IAAO,GAAGnxB,EAAK,GAAGk6B,CAAO,CAAC,GAIzGnE,GAAOyG,IAAYA,GAAW,QAAQ,GAAG,CAAC,CAAC,QAAQ5xB,IAAMsvB,CAAO,GAAG,CAAC,SAASJ,EAAO95B,EAAK,EAAE,CAAC,GAAGk6B,CAAO,GAAG,CAAC,QAAQJ,EAAO95B,EAAK,EAAE,CAAC,GAAGk6B,CAAO,GAAG,CAAC,QAAQqC,GAAerC,CAAO,CAAC,CAAC,GAC/KnE,GAAO+D,GAAQ3I,IAAO,GAAGnxB,KAAQmxB,IAAO,GAAGqL,EAAU,GACrDx8B,KAAQmxB,IAAOqL,GAAW,SAAS;AACnC;UACZ;MAEA;AAGI,SADAx8B,KAAQ,IACD,EAAEA,KAAQ85B,EAAO;AAClBA,QAAO95B,EAAK,EAAE,CAAC,EAAE,SAAS,qCAC5B85B,EAAO95B,EAAK,EAAE,CAAC,EAAE,OAAO;AAG5B,WAAO85B;EACX;AAME,WAASuC,EAAsBvE,GAASxS,GAAIyS,IAAK;AAC/C,UAAM3xB,IAAW,KAAK,UAChB0zB,IAAS,KAAK;AACpB,QAAI9K,KAAO;AACX,WAAOtpB;AAGP,aAASA,GAAM6G,GAAM;AACnB,aAAInG,MAAa,OAAO0zB,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE,SAAS,oBACrD/B,GAAIxrB,CAAI,KAEjBurB,EAAQ,MAAM,gCAAgC,GACvC4E,EAAKnwB,CAAI;IACtB;AAGI,aAASmwB,EAAKnwB,GAAM;AAClB,YAAM2iB,IAASuB,IAAkBrqB,CAAQ;AACzC,UAAImG,MAAS;AAEX,eAAIyiB,KAAO,IAAU+I,GAAIxrB,CAAI,KAC7BurB,EAAQ,QAAQvrB,CAAI,GACpByiB,MACO0N;AAET,UAAI1N,KAAO,KAAK,CAACmN,EAAQ,QAAOpE,GAAIxrB,CAAI;AACxC,YAAM3G,KAAQkyB,EAAQ,KAAK,gCAAgC,GACrD3I,IAAQsB,IAAkBlkB,CAAI;AACpC,aAAA3G,GAAM,QAAQ,CAACupB,KAASA,MAAU,KAAK,CAAA,CAAQD,GAC/CtpB,GAAM,SAAS,CAACspB,KAAUA,MAAW,KAAK,CAAA,CAAQC,GAC3C7J,EAAG/Y,CAAI;IACpB;EACA;AACA;ACpHO,IAAMowB,KAAN,MAAc;;;;EAInB,cAAc;AAMZ,SAAK,MAAM,CAAE;EACjB;;;;;;;;;EAUE,IAAI38B,IAAOg2B,GAAQ4G,IAAK;AACtBC,OAAkB,MAAM78B,IAAOg2B,GAAQ4G,EAAG;EAC9C;;;;;;;;;;;;;;;;;;;EAqBE,QAAQ9C,IAAQ;AAMd,QALA,KAAK,IAAI,KAAK,SAAU,GAAGgD,GAAG;AAC5B,aAAO,EAAE,CAAC,IAAIA,EAAE,CAAC;IACvB,CAAK,GAGG,KAAK,IAAI,WAAW;AACtB;AAqBF,QAAI98B,IAAQ,KAAK,IAAI;AAErB,UAAM+8B,KAAO,CAAE;AACf,WAAO/8B,IAAQ;AACbA,WAAS,GACT+8B,GAAK,KAAKjD,GAAO,MAAM,KAAK,IAAI95B,CAAK,EAAE,CAAC,IAAI,KAAK,IAAIA,CAAK,EAAE,CAAC,CAAC,GAAG,KAAK,IAAIA,CAAK,EAAE,CAAC,CAAC,GAGnF85B,GAAO,SAAS,KAAK,IAAI95B,CAAK,EAAE,CAAC;AAEnC+8B,IAAAA,GAAK,KAAKjD,GAAO,MAAA,CAAO,GACxBA,GAAO,SAAS;AAChB,QAAIkD,IAAQD,GAAK,IAAK;AACtB,WAAOC,KAAO;AACZ,iBAAWxzB,KAAWwzB;AACpBlD,QAAAA,GAAO,KAAKtwB,CAAO;AAErBwzB,UAAQD,GAAK,IAAK;IACxB;AAGI,SAAK,IAAI,SAAS;EACtB;AACA;AAWA,SAASF,GAAkBI,IAASC,IAAIlH,GAAQ4G,IAAK;AACnD,MAAI58B,IAAQ;AAGZ,MAAI,EAAAg2B,MAAW,KAAK4G,GAAI,WAAW,IAGnC;AAAA,WAAO58B,IAAQi9B,GAAQ,IAAI,UAAQ;AACjC,UAAIA,GAAQ,IAAIj9B,CAAK,EAAE,CAAC,MAAMk9B,IAAI;AAChCD,QAAAA,GAAQ,IAAIj9B,CAAK,EAAE,CAAC,KAAKg2B,GAOzBiH,GAAQ,IAAIj9B,CAAK,EAAE,CAAC,EAAE,KAAK,GAAG48B,EAAG;AAGjC;MACN;AACI58B,WAAS;IACb;AACEi9B,IAAAA,GAAQ,IAAI,KAAK,CAACC,IAAIlH,GAAQ4G,EAAG,CAAC;EAAA;AACpC;ACzIO,SAASO,GAAcrD,IAAQ95B,IAAO;AAC3C,MAAIo9B,IAAiB;AAErB,QAAMhP,KAAQ,CAAE;AAChB,SAAOpuB,KAAQ85B,GAAO,UAAQ;AAC5B,UAAMuD,IAAQvD,GAAO95B,EAAK;AAC1B,QAAIo9B,GAAAA;AACF,UAAIC,EAAM,CAAC,MAAM;AAGXA,UAAM,CAAC,EAAE,SAAS,kBACpBjP,GAAM,KAAK0L,GAAO95B,KAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,yBAAyB,SAAS,MAAM;eAM5Eq9B,EAAM,CAAC,EAAE,SAAS,gBAAA;AACzB,YAAIvD,GAAO95B,KAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,wBAAwB;AACxD,gBAAMs9B,IAAalP,GAAM,SAAS;AAClCA,UAAAA,GAAMkP,CAAU,IAAIlP,GAAMkP,CAAU,MAAM,SAAS,WAAW;QACxE;MAAA,WAGeD,EAAM,CAAC,EAAE,SAAS;AACzB;IAAA,MAEOA,GAAM,CAAC,MAAM,WAAWA,EAAM,CAAC,EAAE,SAAS,wBACnDD,IAAiB;AAEnBp9B,IAAAA,MAAS;EACb;AACE,SAAOouB;AACT;AC3BO,SAASmP,KAAW;AACzB,SAAO;IACL,MAAM;MACJ,MAAM;QACJ,MAAM;QACN,UAAUC;QACV,YAAYC;MACpB;IACA;EACG;AACH;AAMA,SAASD,GAAc1F,IAASxS,IAAIyS,GAAK;AACvC,QAAMC,KAAO;AACb,MAAIhJ,IAAO,GACP0O,IAAQ,GAERhF;AACJ,SAAOhzB;AAkBP,WAASA,EAAM6G,GAAM;AACnB,QAAIvM,IAAQg4B,GAAK,OAAO,SAAS;AACjC,WAAOh4B,IAAQ,MAAI;AACjB,YAAME,IAAO83B,GAAK,OAAOh4B,CAAK,EAAE,CAAC,EAAE;AACnC,UAAIE,MAAS;MAEbA,MAAS,aAAcF;UAAa;IAC1C;AACI,UAAMiK,IAAOjK,IAAQ,KAAKg4B,GAAK,OAAOh4B,CAAK,EAAE,CAAC,EAAE,OAAO,MACjDuI,IAAO0B,MAAS,eAAeA,MAAS,aAAa0zB,IAAeC;AAG1E,WAAIr1B,MAASo1B,KAAgB3F,GAAK,OAAO,KAAKA,GAAK,IAAA,EAAM,IAAI,IACpDD,EAAIxrB,CAAI,IAEVhE,EAAKgE,CAAI;EACpB;AAcE,WAASqxB,GAAcrxB,GAAM;AAC3B,WAAAurB,GAAQ,MAAM,WAAW,GACzBA,GAAQ,MAAM,UAAU,GACjB+F,EAAatxB,CAAI;EAC5B;AAcE,WAASsxB,EAAatxB,GAAM;AAC1B,WAAIA,MAAS,QAcbmsB,IAAO,MAEPgF,KAAS,IACFI,EAAavxB,CAAI;EAC5B;AAgBE,WAASuxB,EAAavxB,GAAM;AAC1B,WAAIA,MAAS,OAEJwrB,EAAIxrB,CAAI,IAEb8c,EAAmB9c,CAAI,IAErBmxB,IAAQ,KACVA,IAAQ,GAGR1F,GAAK,YAAY,MACjBF,GAAQ,KAAK,UAAU,GACvBA,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClBiG,KAIFhG,EAAIxrB,CAAI,IAEbgd,EAAchd,CAAI,IAIb8tB,EAAavC,IAASgG,GAAc,YAAY,EAAEvxB,CAAI,KAE/DmxB,KAAS,GACLhF,MACFA,IAAO,OAEP1J,KAAQ,IAENziB,MAAS,OACXurB,GAAQ,MAAM,kBAAkB,GAChCA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,kBAAkB,GAE/BY,IAAO,MACAoF,MAIThG,GAAQ,MAAM,MAAM,GACbkG,GAAYzxB,CAAI;EAC3B;AAcE,WAASyxB,GAAYzxB,GAAM;AACzB,WAAIA,MAAS,QAAQA,MAAS,OAAO+c,GAA0B/c,CAAI,KACjEurB,GAAQ,KAAK,MAAM,GACZgG,EAAavxB,CAAI,MAE1BurB,GAAQ,QAAQvrB,CAAI,GACbA,MAAS,KAAK0xB,KAAgBD;EACzC;AAcE,WAASC,GAAc1xB,GAAM;AAC3B,WAAIA,MAAS,MAAMA,MAAS,OAC1BurB,GAAQ,QAAQvrB,CAAI,GACbyxB,MAEFA,GAAYzxB,CAAI;EAC3B;AAcE,WAASwxB,EAAmBxxB,GAAM;AAKhC,WAHAyrB,GAAK,YAAY,OAGbA,GAAK,OAAO,KAAKA,GAAK,IAAG,EAAG,IAAI,IAC3BD,EAAIxrB,CAAI,KAEjBurB,GAAQ,MAAM,mBAAmB,GAEjCY,IAAO,OACHnP,EAAchd,CAAI,IACb8tB,EAAavC,IAASoG,GAAqB,cAAclG,GAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC,EAAEzrB,CAAI,IAE7I2xB,EAAoB3xB,CAAI;EACnC;AAgBE,WAAS2xB,EAAoB3xB,GAAM;AACjC,WAAIA,MAAS,MAAMA,MAAS,KACnB4xB,GAAyB5xB,CAAI,IAElCA,MAAS,OACXmsB,IAAO,MAEPZ,GAAQ,MAAM,kBAAkB,GAChCA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,kBAAkB,GACxBsG,KAIFC,EAAiB9xB,CAAI;EAChC;AAaE,WAAS6xB,EAAwB7xB,GAAM;AACrC,WAAIgd,EAAchd,CAAI,IACb8tB,EAAavC,IAASqG,IAA0B,YAAY,EAAE5xB,CAAI,IAEpE4xB,GAAyB5xB,CAAI;EACxC;AAaE,WAAS4xB,GAAyB5xB,GAAM;AAEtC,WAAIA,MAAS,MACXmxB,KAAS,GACThF,IAAO,MACPZ,GAAQ,MAAM,sBAAsB,GACpCA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,sBAAsB,GAC5BwG,KAIL/xB,MAAS,MACXmxB,KAAS,GAEFY,EAAgC/xB,CAAI,KAEzCA,MAAS,QAAQ8c,EAAmB9c,CAAI,IACnCgyB,EAAuBhyB,CAAI,IAE7B8xB,EAAiB9xB,CAAI;EAChC;AAaE,WAAS+xB,EAAgC/xB,GAAM;AAC7C,WAAIA,MAAS,MACXurB,GAAQ,MAAM,sBAAsB,GAC7B0G,EAAoBjyB,CAAI,KAI1B8xB,EAAiB9xB,CAAI;EAChC;AAaE,WAASiyB,EAAoBjyB,GAAM;AACjC,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbiyB,KAILjyB,MAAS,MACXmsB,IAAO,MACPZ,GAAQ,KAAK,sBAAsB,GACnCA,GAAQ,MAAM,sBAAsB,GACpCA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,sBAAsB,GAC5B2G,MAET3G,GAAQ,KAAK,sBAAsB,GAC5B2G,EAAiClyB,CAAI;EAChD;AAaE,WAASkyB,EAAiClyB,GAAM;AAC9C,WAAIgd,EAAchd,CAAI,IACb8tB,EAAavC,IAASyG,GAAwB,YAAY,EAAEhyB,CAAI,IAElEgyB,EAAuBhyB,CAAI;EACtC;AAaE,WAASgyB,EAAuBhyB,GAAM;AACpC,WAAIA,MAAS,MACJ2xB,EAAoB3xB,CAAI,IAE7BA,MAAS,QAAQ8c,EAAmB9c,CAAI,IAKtC,CAACmsB,KAAQ1J,MAAS0O,IACbW,EAAiB9xB,CAAI,KAI9BurB,GAAQ,KAAK,mBAAmB,GAChCA,GAAQ,KAAK,WAAW,GAGjBxS,GAAG/Y,CAAI,KAET8xB,EAAiB9xB,CAAI;EAChC;AAaE,WAAS8xB,EAAiB9xB,GAAM;AAE9B,WAAOwrB,EAAIxrB,CAAI;EACnB;AAcE,WAASoxB,EAAapxB,GAAM;AAI1B,WAAAurB,GAAQ,MAAM,UAAU,GACjB4G,EAAanyB,CAAI;EAC5B;AAgBE,WAASmyB,EAAanyB,GAAM;AAC1B,WAAIA,MAAS,OACXurB,GAAQ,MAAM,kBAAkB,GAChCA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,kBAAkB,GACxB4G,KAELnyB,MAAS,QAAQ8c,EAAmB9c,CAAI,KAC1CurB,GAAQ,KAAK,UAAU,GAChBxS,GAAG/Y,CAAI,KAEZgd,EAAchd,CAAI,IACb8tB,EAAavC,IAAS4G,GAAc,YAAY,EAAEnyB,CAAI,KAI/DurB,GAAQ,MAAM,MAAM,GACb6G,EAAYpyB,CAAI;EAC3B;AAcE,WAASoyB,EAAYpyB,GAAM;AACzB,WAAIA,MAAS,QAAQA,MAAS,OAAO+c,GAA0B/c,CAAI,KACjEurB,GAAQ,KAAK,MAAM,GACZ4G,EAAanyB,CAAI,MAE1BurB,GAAQ,QAAQvrB,CAAI,GACbA,MAAS,KAAKqyB,KAAgBD;EACzC;AAcE,WAASC,GAAcryB,GAAM;AAC3B,WAAIA,MAAS,MAAMA,MAAS,OAC1BurB,GAAQ,QAAQvrB,CAAI,GACboyB,KAEFA,EAAYpyB,CAAI;EAC3B;AACA;AAIA,SAASkxB,GAAa3D,IAAQI,IAAS;AACrC,MAAIl6B,IAAQ,IACR6+B,KAA0B,MAE1BC,IAAU,GAEVC,IAAW,CAAC,GAAG,GAAG,GAAG,CAAC,GAEtBhQ,IAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAClBiQ,IAAgC,OAChCC,KAAe,GAEfC,GAEAC,GAEAC;AACJ,QAAM3+B,KAAM,IAAIk8B,GAAS;AACzB,SAAO,EAAE38B,IAAQ85B,GAAO,UAAQ;AAC9B,UAAMuD,IAAQvD,GAAO95B,CAAK,GACpB4F,IAAQy3B,EAAM,CAAC;AACjBA,MAAM,CAAC,MAAM,UAEXz3B,EAAM,SAAS,eACjBo5B,IAAgC,OAG5BC,OAAiB,MACnBI,GAAc5+B,IAAKy5B,IAAS+E,IAAcC,GAAcC,CAAW,GACnEA,IAAc,QACdF,KAAe,IAIjBC,IAAe;MACb,MAAM;MACN,OAAO,OAAO,OAAO,CAAA,GAAIt5B,EAAM,KAAK;;MAEpC,KAAK,OAAO,OAAO,CAAE,GAAEA,EAAM,GAAG;IACjC,GACDnF,GAAI,IAAIT,GAAO,GAAG,CAAC,CAAC,SAASk/B,GAAchF,EAAO,CAAC,CAAC,KAC3Ct0B,EAAM,SAAS,cAAcA,EAAM,SAAS,uBACrDi5B,KAA0B,MAC1BO,KAAc,QACdL,IAAW,CAAC,GAAG,GAAG,GAAG,CAAC,GACtBhQ,IAAO,CAAC,GAAG/uB,IAAQ,GAAG,GAAG,CAAC,GAGtBg/B,MACFA,IAAgC,OAChCG,IAAc;MACZ,MAAM;MACN,OAAO,OAAO,OAAO,CAAA,GAAIv5B,EAAM,KAAK;;MAEpC,KAAK,OAAO,OAAO,CAAE,GAAEA,EAAM,GAAG;IACjC,GACDnF,GAAI,IAAIT,GAAO,GAAG,CAAC,CAAC,SAASm/B,GAAajF,EAAO,CAAC,CAAC,IAErD4E,IAAUl5B,EAAM,SAAS,sBAAsB,IAAIu5B,IAAc,IAAI,KAG9DL,MAAYl5B,EAAM,SAAS,UAAUA,EAAM,SAAS,0BAA0BA,EAAM,SAAS,2BACpGi5B,KAA0B,OAGtB9P,EAAK,CAAC,MAAM,MACVgQ,EAAS,CAAC,MAAM,MAClBhQ,EAAK,CAAC,IAAIA,EAAK,CAAC,GAChBqQ,KAAcE,GAAU7+B,IAAKy5B,IAAS6E,GAAUD,GAAS,QAAWM,EAAW,GAC/EL,IAAW,CAAC,GAAG,GAAG,GAAG,CAAC,IAExBhQ,EAAK,CAAC,IAAI/uB,MAEH4F,EAAM,SAAS,uBACpBi5B,KACFA,KAA0B,SAEtBE,EAAS,CAAC,MAAM,MAClBhQ,EAAK,CAAC,IAAIA,EAAK,CAAC,GAChBqQ,KAAcE,GAAU7+B,IAAKy5B,IAAS6E,GAAUD,GAAS,QAAWM,EAAW,IAEjFL,IAAWhQ,GACXA,IAAO,CAACgQ,EAAS,CAAC,GAAG/+B,GAAO,GAAG,CAAC,MAK7B4F,EAAM,SAAS,eACtBo5B,IAAgC,MAChCC,KAAej/B,KACN4F,EAAM,SAAS,cAAcA,EAAM,SAAS,uBACrDq5B,KAAej/B,GACX++B,EAAS,CAAC,MAAM,KAClBhQ,EAAK,CAAC,IAAIA,EAAK,CAAC,GAChBqQ,KAAcE,GAAU7+B,IAAKy5B,IAAS6E,GAAUD,GAAS9+B,GAAOo/B,EAAW,KAClErQ,EAAK,CAAC,MAAM,MACrBqQ,KAAcE,GAAU7+B,IAAKy5B,IAASnL,GAAM+P,GAAS9+B,GAAOo/B,EAAW,IAEzEN,IAAU,KACDA,MAAYl5B,EAAM,SAAS,UAAUA,EAAM,SAAS,0BAA0BA,EAAM,SAAS,4BACtGmpB,EAAK,CAAC,IAAI/uB;EAEhB;AAUE,OATIi/B,OAAiB,KACnBI,GAAc5+B,IAAKy5B,IAAS+E,IAAcC,GAAcC,CAAW,GAErE1+B,GAAI,QAAQy5B,GAAQ,MAAM,GAK1Bl6B,IAAQ,IACD,EAAEA,IAAQk6B,GAAQ,OAAO,UAAQ;AACtC,UAAMmD,IAAQnD,GAAQ,OAAOl6B,CAAK;AAC9Bq9B,MAAM,CAAC,MAAM,WAAWA,EAAM,CAAC,EAAE,SAAS,YAC5CA,EAAM,CAAC,EAAE,SAASF,GAAcjD,GAAQ,QAAQl6B,CAAK;EAE3D;AACE,SAAO85B;AACT;AAcA,SAASwF,GAAU7+B,IAAKy5B,IAASqF,GAAOT,IAASU,GAAQC,GAAc;AAGrE,QAAMC,IAAYZ,OAAY,IAAI,gBAAgBA,OAAY,IAAI,mBAAmB,aAG/Ea,IAAY;AASdJ,IAAM,CAAC,MAAM,MACfE,EAAa,MAAM,OAAO,OAAO,CAAE,GAAEG,GAAS1F,GAAQ,QAAQqF,EAAM,CAAC,CAAC,CAAC,GACvE9+B,GAAI,IAAI8+B,EAAM,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQE,GAAcvF,EAAO,CAAC,CAAC;AAUxD,QAAM2F,KAAMD,GAAS1F,GAAQ,QAAQqF,EAAM,CAAC,CAAC;AAkB7C,MAjBAE,IAAe;IACb,MAAMC;IACN,OAAO,OAAO,OAAO,CAAA,GAAIG,EAAG;;IAE5B,KAAK,OAAO,OAAO,CAAA,GAAIA,EAAG;EAC3B,GACDp/B,GAAI,IAAI8+B,EAAM,CAAC,GAAG,GAAG,CAAC,CAAC,SAASE,GAAcvF,EAAO,CAAC,CAAC,GAWnDqF,EAAM,CAAC,MAAM,GAAG;AAClB,UAAMO,IAAeF,GAAS1F,GAAQ,QAAQqF,EAAM,CAAC,CAAC,GAChDQ,IAAaH,GAAS1F,GAAQ,QAAQqF,EAAM,CAAC,CAAC,GAE9CS,KAAa;MACjB,MAAML;MACN,OAAO,OAAO,OAAO,CAAA,GAAIG,CAAY;MACrC,KAAK,OAAO,OAAO,CAAA,GAAIC,CAAU;IAClC;AAED,QADAt/B,GAAI,IAAI8+B,EAAM,CAAC,GAAG,GAAG,CAAC,CAAC,SAASS,IAAY9F,EAAO,CAAC,CAAC,GACjD4E,OAAY,GAAG;AAEjB,YAAMp5B,KAAQw0B,GAAQ,OAAOqF,EAAM,CAAC,CAAC,GAC/B55B,IAAMu0B,GAAQ,OAAOqF,EAAM,CAAC,CAAC;AAMnC,UALA75B,GAAM,CAAC,EAAE,MAAM,OAAO,OAAO,CAAA,GAAIC,EAAI,CAAC,EAAE,GAAG,GAC3CD,GAAM,CAAC,EAAE,OAAO,aAChBA,GAAM,CAAC,EAAE,cAAc,QAGnB65B,EAAM,CAAC,IAAIA,EAAM,CAAC,IAAI,GAAG;AAC3B,cAAMU,IAAIV,EAAM,CAAC,IAAI,GACfzC,IAAIyC,EAAM,CAAC,IAAIA,EAAM,CAAC,IAAI;AAChC9+B,QAAAA,GAAI,IAAIw/B,GAAGnD,GAAG,CAAA,CAAE;MACxB;IACA;AACIr8B,IAAAA,GAAI,IAAI8+B,EAAM,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,QAAQS,IAAY9F,EAAO,CAAC,CAAC;EAC5D;AASE,SAAIsF,MAAW,WACbC,EAAa,MAAM,OAAO,OAAO,CAAA,GAAIG,GAAS1F,GAAQ,QAAQsF,CAAM,CAAC,GACrE/+B,GAAI,IAAI++B,GAAQ,GAAG,CAAC,CAAC,QAAQC,GAAcvF,EAAO,CAAC,CAAC,GACpDuF,IAAe,SAEVA;AACT;AAYA,SAASJ,GAAc5+B,IAAKy5B,IAASl6B,GAAOmuB,IAAO+R,GAAW;AAE5D,QAAMC,IAAQ,CAAE,GACVC,IAAUR,GAAS1F,GAAQ,QAAQl6B,CAAK;AAC1CkgC,QACFA,EAAU,MAAM,OAAO,OAAO,CAAA,GAAIE,CAAO,GACzCD,EAAM,KAAK,CAAC,QAAQD,GAAWhG,EAAO,CAAC,IAEzC/L,GAAM,MAAM,OAAO,OAAO,CAAA,GAAIiS,CAAO,GACrCD,EAAM,KAAK,CAAC,QAAQhS,IAAO+L,EAAO,CAAC,GACnCz5B,GAAI,IAAIT,IAAQ,GAAG,GAAGmgC,CAAK;AAC7B;AAOA,SAASP,GAAS9F,IAAQ95B,IAAO;AAC/B,QAAMq9B,IAAQvD,GAAO95B,EAAK,GACpBqgC,KAAOhD,EAAM,CAAC,MAAM,UAAU,UAAU;AAC9C,SAAOA,EAAM,CAAC,EAAEgD,EAAI;AACtB;AC5yBA,IAAMC,KAAgB;EACpB,MAAM;EACN,UAAUC;AACZ;AAUO,SAASC,KAAkB;AAChC,SAAO;IACL,MAAM;MACH,IAAKF;IACZ;EACG;AACH;AAMA,SAASC,GAAsBzI,IAASxS,IAAIyS,GAAK;AAC/C,QAAMC,KAAO;AACb,SAAO7G;AAYP,WAASA,EAAK5kB,IAAM;AAClB;;MAEAyrB,GAAK,aAAa;;MAGlB,CAACA,GAAK,qCACGD,EAAIxrB,EAAI,KAEjBurB,GAAQ,MAAM,eAAe,GAC7BA,GAAQ,MAAM,qBAAqB,GACnCA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,qBAAqB,GAC3BlH;;EACX;AAYE,WAASA,EAAOrkB,IAAM;AAIpB,WAAI+c,GAA0B/c,EAAI,KAChCurB,GAAQ,MAAM,6BAA6B,GAC3CA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,6BAA6B,GACnCzG,KAEL9kB,OAAS,MAAMA,OAAS,OAC1BurB,GAAQ,MAAM,2BAA2B,GACzCA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,2BAA2B,GACjCzG,KAEF0G,EAAIxrB,EAAI;EACnB;AAYE,WAAS8kB,EAAM9kB,IAAM;AACnB,WAAIA,OAAS,MACXurB,GAAQ,MAAM,qBAAqB,GACnCA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,qBAAqB,GAClCA,GAAQ,KAAK,eAAe,GACrB3I,KAEF4I,EAAIxrB,EAAI;EACnB;AAKE,WAAS4iB,EAAM5iB,IAAM;AAEnB,WAAI8c,EAAmB9c,EAAI,IAClB+Y,GAAG/Y,EAAI,IAKZgd,EAAchd,EAAI,IACburB,GAAQ,MAAM;MACnB,UAAU2I;IAClB,GAASnb,IAAIyS,CAAG,EAAExrB,EAAI,IAIXwrB,EAAIxrB,EAAI;EACnB;AACA;AAMA,SAASk0B,GAAkB3I,IAASxS,IAAIyS,GAAK;AAC3C,SAAOsC,EAAavC,IAAS3I,IAAO,YAAY;AAYhD,WAASA,GAAM5iB,GAAM;AAKnB,WAAOA,MAAS,OAAOwrB,EAAIxrB,CAAI,IAAI+Y,GAAG/Y,CAAI;EAC9C;AACA;ACvHO,SAASm0B,GAAI1+B,IAAS;AAC3B,SAAOo0B,GAAkB;IACvByB,GAAoB;IACpB+C,GAAa;IACbsB,GAAiBl6B,EAAO;IACxBu7B,GAAU;IACViD,GAAe;EAChB,CAAA;AACH;AClCA,IAAM91B,KAAe,CAAA;AAWN,SAASi2B,GAAU3+B,IAAS;AAGzC,QAAMg2B;;IAAuC;KACvClyB,IAAW9D,MAAW0I,IACtBN,KAAO4tB,GAAK,KAAI,GAEhB4I,IACJx2B,GAAK,wBAAwBA,GAAK,sBAAsB,CAAE,IACtDy2B,IACJz2B,GAAK,2BAA2BA,GAAK,yBAAyB,CAAE,IAC5D02B,IACJ12B,GAAK,yBAAyBA,GAAK,uBAAuB,CAAE;AAE9Dw2B,IAAoB,KAAKF,GAAI56B,CAAQ,CAAC,GACtC+6B,EAAuB,KAAKhL,GAAiB,CAAA,GAC7CiL,EAAqB,KAAKhL,GAAchwB,CAAQ,CAAC;AACnD;ACtBA,IAAMi7B,SAAwBC,aAAAA;EAC5B;AACF;AAFA,IAIaC,KAAoB,MAAM;AAC/B,QAAA/G,SAAUgH,aAAAA,YAAWH,EAAqB;AAEhD,MAAI,CAAC7G;AACH,UAAM,IAAI;MACR;IACF;AAGK,SAAAA;AACT;AAdA,IAgBaiH,KAA2B,MAAM;AACtC,QAAAC,SAAaC,aAAAA,QAA2B,IAAI,GAE5C,EAAE,SAAAC,IAAS,WAAAC,EAAU,IAAIN,GAAkB;AAEjD,aAAAO,aAAAA,WAAU,MAAM;AACd,UAAMh4B,IAAU43B,GAAW;AAE3B,QAAK53B;AAEL,aAAA83B,GAAQ93B,CAAO,GAER,MAAM+3B,EAAU/3B,CAAO;EAAA,GAC7B,CAAC83B,IAASC,CAAS,CAAC,GAOhB,EAAE,SALME,aAAAA,aAAY,CAACC,MAA2B;AAChDA,UACLN,GAAW,UAAUM;EACvB,GAAG,CAAA,CAAE,EAEgB;AACvB;AArCA,IAuCaC,KAAyB,CAAC,EAAE,UAAA76B,GAAAA,MAAkC;AACzE,QAAM,CAAC86B,IAAcC,CAAe,QAAIC,aAAAA,UAAS,EAAE,GAC7CC,SAAcV,aAAAA,QAAoC,IAAI,GACtDW,QAAqBX,aAAAA,QAAW,oBAAA,IAAA,CAAkB,GAClDY,QAAkBZ,aAAAA,QAAW,oBAAA,IAAA,CAAkB;AAErDG,mBAAAA,WAAU,OACRO,GAAY,UAAU,IAAI;IACxB,CAACpgC,OAAY;AACX,iBAAWD,KAASC;AACdD,UAAM,kBAAkBA,EAAM,OAAO,MACvBmgC,EAAAngC,EAAM,OAAO,EAAE;IAGrC;IACA;MACE,YAAY;MACZ,WAAW;IAAA;EAEf,GAGgBugC,EAAA,QAAQ,QAAQ,CAACz4B,OAAY;;AACxBw4B,MAAA,QAAQ,IAAIx4B,EAAO,IAC1BiE,IAAAs0B,GAAA,YAAA,QAAAt0B,EAAS,QAAQjE,EAAAA;EAAO,CACrC,GACDy4B,EAAgB,QAAQ,MAAM,GAEvB,MAAM;;AAAA,YAAAx0B,KAAAs0B,GAAY,YAAZ,OAAA,SAAAt0B,GAAqB,WAAA;EAAA,IACjC,CAAA,CAAE,OAEL+zB,aAAAA,WAAU,MAAM;AACd,UAAMU,KAAWF,EAAmB,SAC9BG,IAAe,MAAM;AACnB,YAAAC,IAAgB,OAAO,YAAY,GACnCC,KACJ,OAAO,cAAc,OAAO,WAAW,SAAS,KAAK;AAEvD,UAAID;AACFP,UAAgB,EAAE;eACTQ,IAAkB;AAC3B,cAAMC,KAAW,MAAM,KAAKJ,EAAQ,EAAE,IAAI,GACpCK,KAASD,MAAA,OAAA,SAAAA,GAAU,OAAM;AAC/BT,UAAgBU,CAAM;MAAA;IAE1B;AAES,WAAA,SAAA,iBAAiB,UAAUJ,CAAY,GAEzC,MAAM;AACXD,MAAAA,GAAS,MAAM,GACN,SAAA,oBAAoB,UAAUC,CAAY;IACrD;EACF,GAAG,CAAA,CAAE;AAEC,QAAAK,QAAaC,aAAAA,SAAQ,OAClB;IACL,SAAS,CAACj5B,OAAgC;AACxC,UAAKA,IAED;AAAA,YAAA,CAACu4B,GAAY,SAAS;AACRE,YAAA,QAAQ,IAAIz4B,EAAO;AACnC;QAAA;AAGiBw4B,UAAA,QAAQ,IAAIx4B,EAAO,GAC1Bu4B,GAAA,QAAQ,QAAQv4B,EAAO;MAAA;IACrC;IACA,WAAW,CAACA,OAAgC;;AACrCA,MAAAA,OAEWy4B,EAAA,QAAQ,OAAOz4B,EAAO,GACnBw4B,EAAA,QAAQ,OAAOx4B,EAAO,IAC7BiE,IAAAs0B,GAAA,YAAA,QAAAt0B,EAAS,UAAUjE,EAAAA;IAAO;EAE1C,IACC,CAAA,CAAE,GAECrJ,QAAQsiC,aAAAA;IACZ,OAAO,EAAE,cAAAb,IAAc,iBAAAC,GAAiB,GAAGW,EAAW;IACtD,CAACZ,IAAcC,GAAiBW,CAAU;EAC5C;AAGE,SAAAE,GAAA,IAAC3B,IAAsB,EAAA,OAAA5gC,GAAe,UAAA2G,GAAS,CAAA;AAEnD;AA7HA,IChBa67B,KAAW;EACtB,OAAO;EACP,MAAM;EACN,QAAQ;EACR,KAAK;EACL,QAAQ;EACR,QAAQ;EACR,MAAM;EACN,SAAS;AACX;ADOA,ICLaC,KAAiB;EAC5B,OAAO;EACP,MAAM;EACN,QAAQ;EACR,KAAK;EACL,QAAQ;EACR,QAAQ;EACR,MAAM;EACN,SAAS;AACX;ADJA,ICMaC,KAAe,CAAC;EAC3B,OAAAC;EACA,OAAAjX;EACA,WAAAkX;EACA,QAAAC;AACF,MAOIN,GAAA;EAAC;EAAA;IACC,WAAWO;MACT;MACAH,OAAU,YAAY,SAAS;MAC/BE,KAASJ,GAAeE,EAAK,IAAIH,GAASG,EAAK;MAC/CC;IACF;IAEC,UAAAlX;EAAA;AACH;AC7CJ,IAAIqX,KAAsB,OAAO;AAAjC,IAAsDC,KAAwB,OAAO;AAArF,IACIhN,KAAiB,OAAO,UAAU;AAItC,SAASiN,GAAmBC,IAAaC,IAAa;AAClD,SAAO,SAAiBrD,IAAGnD,GAAG7zB,GAAO;AACjC,WAAOo6B,GAAYpD,IAAGnD,GAAG7zB,CAAK,KAAKq6B,GAAYrD,IAAGnD,GAAG7zB,CAAK;EAC7D;AACL;AAMA,SAASs6B,GAAiBC,IAAe;AACrC,SAAO,SAAoBvD,GAAGnD,IAAG7zB,GAAO;AACpC,QAAI,CAACg3B,KAAK,CAACnD,MAAK,OAAOmD,KAAM,YAAY,OAAOnD,MAAM;AAClD,aAAO0G,GAAcvD,GAAGnD,IAAG7zB,CAAK;AAEpC,QAAIw6B,IAAQx6B,EAAM,OACdy6B,IAAUD,EAAM,IAAIxD,CAAC,GACrB0D,IAAUF,EAAM,IAAI3G,EAAC;AACzB,QAAI4G,KAAWC;AACX,aAAOD,MAAY5G,MAAK6G,MAAY1D;AAExCwD,MAAM,IAAIxD,GAAGnD,EAAC,GACd2G,EAAM,IAAI3G,IAAGmD,CAAC;AACd,QAAI14B,KAASi8B,GAAcvD,GAAGnD,IAAG7zB,CAAK;AACtC,WAAAw6B,EAAM,OAAOxD,CAAC,GACdwD,EAAM,OAAO3G,EAAC,GACPv1B;EACV;AACL;AAKA,SAASq8B,GAAoBvjC,IAAQ;AACjC,SAAO6iC,GAAoB7iC,EAAM,EAAE,OAAO8iC,GAAsB9iC,EAAM,CAAC;AAC3E;AAIA,IAAIwjC,KAAS,OAAO,UACf,SAAUxjC,IAAQ6B,IAAU;AACzB,SAAOi0B,GAAe,KAAK91B,IAAQ6B,EAAQ;AACnD;AAIA,SAAS4hC,GAAmB7D,IAAGnD,IAAG;AAC9B,SAAOmD,OAAMnD,MAAM,CAACmD,MAAK,CAACnD,MAAKmD,OAAMA,MAAKnD,OAAMA;AACpD;AAEA,IAAIiH,KAAe;AAAnB,IACIC,KAAe;AADnB,IAEIC,KAAc;AAFlB,IAGIC,KAA2B,OAAO;AAHtC,IAGgEjjC,KAAO,OAAO;AAI9E,SAASkjC,GAAelE,IAAGnD,IAAG7zB,GAAO;AACjC,MAAIjJ,KAAQigC,GAAE;AACd,MAAInD,GAAE,WAAW98B;AACb,WAAO;AAEX,SAAOA,OAAU;AACb,QAAI,CAACiJ,EAAM,OAAOg3B,GAAEjgC,EAAK,GAAG88B,GAAE98B,EAAK,GAAGA,IAAOA,IAAOigC,IAAGnD,IAAG7zB,CAAK;AAC3D,aAAO;AAGf,SAAO;AACX;AAIA,SAASm7B,GAAcnE,IAAGnD,IAAG;AACzB,SAAOgH,GAAmB7D,GAAE,QAAS,GAAEnD,GAAE,QAAO,CAAE;AACtD;AAIA,SAASuH,GAAepE,IAAGnD,IAAG;AAC1B,SAAQmD,GAAE,SAASnD,GAAE,QACjBmD,GAAE,YAAYnD,GAAE,WAChBmD,GAAE,UAAUnD,GAAE,SACdmD,GAAE,UAAUnD,GAAE;AACtB;AAIA,SAASwH,GAAkBrE,IAAGnD,IAAG;AAC7B,SAAOmD,OAAMnD;AACjB;AAIA,SAASyH,GAAatE,IAAGnD,IAAG7zB,GAAO;AAC/B,MAAI+lB,KAAOiR,GAAE;AACb,MAAIjR,OAAS8N,GAAE;AACX,WAAO;AAEX,MAAI,CAAC9N;AACD,WAAO;AAOX,WALIwV,IAAiB,IAAI,MAAMxV,EAAI,GAC/ByV,IAAYxE,GAAE,QAAS,GACvByE,GACAC,GACA3kC,KAAQ,IACJ0kC,IAAUD,EAAU,KAAA,MACpB,CAAAC,EAAQ,QADqB;AAOjC,aAHIE,IAAY9H,GAAE,QAAS,GACvB+H,IAAW,OACXC,KAAa,IACTH,IAAUC,EAAU,KAAA,MACpB,CAAAD,EAAQ,QADqB;AAIjC,UAAIH,EAAeM,EAAU,GAAG;AAC5BA,QAAAA;AACA;MAChB;AACY,UAAIC,KAASL,EAAQ,OACjBM,IAASL,EAAQ;AACrB,UAAI17B,EAAM,OAAO87B,GAAO,CAAC,GAAGC,EAAO,CAAC,GAAGhlC,IAAO8kC,IAAY7E,IAAGnD,IAAG7zB,CAAK,KACjEA,EAAM,OAAO87B,GAAO,CAAC,GAAGC,EAAO,CAAC,GAAGD,GAAO,CAAC,GAAGC,EAAO,CAAC,GAAG/E,IAAGnD,IAAG7zB,CAAK,GAAG;AACvE47B,YAAWL,EAAeM,EAAU,IAAI;AACxC;MAChB;AACYA,MAAAA;IACZ;AACQ,QAAI,CAACD;AACD,aAAO;AAEX7kC,IAAAA;EACR;AACI,SAAO;AACX;AAIA,IAAIilC,KAAkBnB;AAItB,SAASoB,GAAgBjF,IAAGnD,IAAG7zB,GAAO;AAClC,MAAIpC,KAAa5F,GAAKg/B,EAAC,GACnBjgC,IAAQ6G,GAAW;AACvB,MAAI5F,GAAK67B,EAAC,EAAE,WAAW98B;AACnB,WAAO;AAMX,SAAOA,MAAU;AACb,QAAI,CAACmlC,GAAgBlF,IAAGnD,IAAG7zB,GAAOpC,GAAW7G,CAAK,CAAC;AAC/C,aAAO;AAGf,SAAO;AACX;AAIA,SAASolC,GAAsBnF,IAAGnD,IAAG7zB,GAAO;AACxC,MAAIpC,KAAa+8B,GAAoB3D,EAAC,GAClCjgC,IAAQ6G,GAAW;AACvB,MAAI+8B,GAAoB9G,EAAC,EAAE,WAAW98B;AAClC,WAAO;AASX,WAPIkC,GACAmjC,GACAC,GAKGtlC,MAAU;AAOb,QANAkC,IAAW2E,GAAW7G,CAAK,GACvB,CAACmlC,GAAgBlF,IAAGnD,IAAG7zB,GAAO/G,CAAQ,MAG1CmjC,IAAcnB,GAAyBjE,IAAG/9B,CAAQ,GAClDojC,IAAcpB,GAAyBpH,IAAG56B,CAAQ,IAC7CmjC,KAAeC,OACf,CAACD,KACE,CAACC,KACDD,EAAY,iBAAiBC,EAAY,gBACzCD,EAAY,eAAeC,EAAY,cACvCD,EAAY,aAAaC,EAAY;AACzC,aAAO;AAGf,SAAO;AACX;AAIA,SAASC,GAA0BtF,IAAGnD,IAAG;AACrC,SAAOgH,GAAmB7D,GAAE,QAAS,GAAEnD,GAAE,QAAO,CAAE;AACtD;AAIA,SAAS0I,GAAgBvF,IAAGnD,IAAG;AAC3B,SAAOmD,GAAE,WAAWnD,GAAE,UAAUmD,GAAE,UAAUnD,GAAE;AAClD;AAIA,SAAS2I,GAAaxF,IAAGnD,IAAG7zB,GAAO;AAC/B,MAAI+lB,KAAOiR,GAAE;AACb,MAAIjR,OAAS8N,GAAE;AACX,WAAO;AAEX,MAAI,CAAC9N;AACD,WAAO;AAMX,WAJIwV,IAAiB,IAAI,MAAMxV,EAAI,GAC/ByV,IAAYxE,GAAE,OAAQ,GACtByE,GACAC,IACID,IAAUD,EAAU,KAAA,MACpB,CAAAC,EAAQ,QADqB;AAOjC,aAHIE,KAAY9H,GAAE,OAAQ,GACtB+H,IAAW,OACXC,IAAa,IACTH,IAAUC,GAAU,KAAA,MACpB,CAAAD,EAAQ,QADqB;AAIjC,UAAI,CAACH,EAAeM,CAAU,KAC1B77B,EAAM,OAAOy7B,EAAQ,OAAOC,EAAQ,OAAOD,EAAQ,OAAOC,EAAQ,OAAO1E,IAAGnD,IAAG7zB,CAAK,GAAG;AACvF47B,YAAWL,EAAeM,CAAU,IAAI;AACxC;MAChB;AACYA;IACZ;AACQ,QAAI,CAACD;AACD,aAAO;EAEnB;AACI,SAAO;AACX;AAIA,SAASa,GAAoBzF,IAAGnD,IAAG;AAC/B,MAAI98B,IAAQigC,GAAE;AACd,MAAInD,GAAE,WAAW98B;AACb,WAAO;AAEX,SAAOA,MAAU;AACb,QAAIigC,GAAEjgC,CAAK,MAAM88B,GAAE98B,CAAK;AACpB,aAAO;AAGf,SAAO;AACX;AAIA,SAAS2lC,GAAa1F,IAAGnD,IAAG;AACxB,SAAQmD,GAAE,aAAanD,GAAE,YACrBmD,GAAE,aAAanD,GAAE,YACjBmD,GAAE,aAAanD,GAAE,YACjBmD,GAAE,SAASnD,GAAE,QACbmD,GAAE,SAASnD,GAAE,QACbmD,GAAE,aAAanD,GAAE,YACjBmD,GAAE,aAAanD,GAAE;AACzB;AACA,SAASqI,GAAgBlF,IAAGnD,IAAG7zB,GAAO/G,IAAU;AAC5C,UAAKA,OAAa+hC,MACd/hC,OAAa8hC,MACb9hC,OAAa6hC,QACZ9D,GAAE,YAAYnD,GAAE,YACV,OAEH+G,GAAO/G,IAAG56B,EAAQ,KACtB+G,EAAM,OAAOg3B,GAAE/9B,EAAQ,GAAG46B,GAAE56B,EAAQ,GAAGA,IAAUA,IAAU+9B,IAAGnD,IAAG7zB,CAAK;AAC9E;AAEA,IAAI28B,KAAgB;AAApB,IACIC,KAAc;AADlB,IAEIC,KAAW;AAFf,IAGIC,KAAY;AAHhB,IAIIC,KAAU;AAJd,IAKIC,KAAa;AALjB,IAMIC,KAAa;AANjB,IAOIC,KAAc;AAPlB,IAQIC,KAAU;AARd,IASIC,KAAa;AATjB,IAUIC,KAAU;AAVd,IAWIC,KAAU,MAAM;AAXpB,IAYIC,KAAe,OAAO,eAAgB,cAAc,YAAY,SAC9D,YAAY,SACZ;AAdN,IAeIC,KAAS,OAAO;AAfpB,IAgBIC,KAAS,OAAO,UAAU,SAAS,KAAK,KAAK,OAAO,UAAU,QAAQ;AAI1E,SAASC,GAAyBl5B,IAAI;AAClC,MAAI02B,KAAiB12B,GAAG,gBAAgB22B,IAAgB32B,GAAG,eAAe42B,KAAiB52B,GAAG,gBAAgB62B,IAAoB72B,GAAG,mBAAmB82B,IAAe92B,GAAG,cAAcw3B,IAAkBx3B,GAAG,iBAAiBy3B,IAAkBz3B,GAAG,iBAAiB83B,KAA4B93B,GAAG,2BAA2B+3B,IAAkB/3B,GAAG,iBAAiBg4B,IAAeh4B,GAAG,cAAci4B,KAAsBj4B,GAAG,qBAAqBk4B,KAAel4B,GAAG;AAIpc,SAAO,SAAoBwyB,GAAGnD,GAAG7zB,IAAO;AAEpC,QAAIg3B,MAAMnD;AACN,aAAO;AAIX,QAAImD,KAAK,QAAQnD,KAAK;AAClB,aAAO;AAEX,QAAI58B,IAAO,OAAO+/B;AAClB,QAAI//B,MAAS,OAAO48B;AAChB,aAAO;AAEX,QAAI58B,MAAS;AACT,aAAIA,MAAS,WACF+kC,EAAgBhF,GAAGnD,GAAG7zB,EAAK,IAElC/I,MAAS,aACFokC,EAAkBrE,GAAGnD,GAAG7zB,EAAK,IAGjC;AAEX,QAAI29B,IAAc3G,EAAE;AAWpB,QAAI2G,MAAgB9J,EAAE;AAClB,aAAO;AAKX,QAAI8J,MAAgB;AAChB,aAAO1B,EAAgBjF,GAAGnD,GAAG7zB,EAAK;AAItC,QAAIs9B,GAAQtG,CAAC;AACT,aAAOkE,GAAelE,GAAGnD,GAAG7zB,EAAK;AAIrC,QAAIu9B,MAAgB,QAAQA,GAAavG,CAAC;AACtC,aAAOyF,GAAoBzF,GAAGnD,GAAG7zB,EAAK;AAO1C,QAAI29B,MAAgB;AAChB,aAAOxC,EAAcnE,GAAGnD,GAAG7zB,EAAK;AAEpC,QAAI29B,MAAgB;AAChB,aAAOpB,EAAgBvF,GAAGnD,GAAG7zB,EAAK;AAEtC,QAAI29B,MAAgB;AAChB,aAAOrC,EAAatE,GAAGnD,GAAG7zB,EAAK;AAEnC,QAAI29B,MAAgB;AAChB,aAAOnB,EAAaxF,GAAGnD,GAAG7zB,EAAK;AAInC,QAAIqf,IAAMoe,GAAOzG,CAAC;AAClB,WAAI3X,MAAQwd,KACD1B,EAAcnE,GAAGnD,GAAG7zB,EAAK,IAIhCqf,MAAQ6d,KACDX,EAAgBvF,GAAGnD,GAAG7zB,EAAK,IAElCqf,MAAQ0d,KACDzB,EAAatE,GAAGnD,GAAG7zB,EAAK,IAE/Bqf,MAAQ8d,KACDX,EAAaxF,GAAGnD,GAAG7zB,EAAK,IAE/Bqf,MAAQ4d,KAIA,OAAOjG,EAAE,QAAS,cACtB,OAAOnD,EAAE,QAAS,cAClBoI,EAAgBjF,GAAGnD,GAAG7zB,EAAK,IAI/Bqf,MAAQge,KACDX,GAAa1F,GAAGnD,GAAG7zB,EAAK,IAI/Bqf,MAAQyd,KACD1B,GAAepE,GAAGnD,GAAG7zB,EAAK,IAGjCqf,MAAQsd,KACDV,EAAgBjF,GAAGnD,GAAG7zB,EAAK,IAKlCqf,MAAQud,MAAevd,MAAQ2d,MAAc3d,MAAQ+d,KAC9Cd,GAA0BtF,GAAGnD,GAAG7zB,EAAK,IAazC;EACV;AACL;AAIA,SAAS49B,GAA+Bp5B,IAAI;AACxC,MAAIq5B,KAAWr5B,GAAG,UAAUs5B,IAAqBt5B,GAAG,oBAAoBlM,KAASkM,GAAG,QAChFu5B,IAAS;IACT,gBAAgBzlC,KACV6jC,KACAjB;IACN,eAAeC;IACf,gBAAgBC;IAChB,mBAAmBC;IACnB,cAAc/iC,KACR6hC,GAAmBmB,IAAca,EAAqB,IACtDb;IACN,iBAAiBU;IACjB,iBAAiB1jC,KACX6jC,KACAF;IACN,2BAA2BK;IAC3B,iBAAiBC;IACjB,cAAcjkC,KACR6hC,GAAmBqC,IAAcL,EAAqB,IACtDK;IACN,qBAAqBlkC,KACf6jC,KACAM;IACN,cAAcC;EACjB;AAID,MAHIoB,MACAC,IAASP,GAAO,CAAE,GAAEO,GAAQD,EAAmBC,CAAM,CAAC,IAEtDF,IAAU;AACV,QAAIG,IAAmB1D,GAAiByD,EAAO,cAAc,GACzDE,IAAiB3D,GAAiByD,EAAO,YAAY,GACrDG,IAAoB5D,GAAiByD,EAAO,eAAe,GAC3DI,KAAiB7D,GAAiByD,EAAO,YAAY;AACzDA,QAASP,GAAO,CAAE,GAAEO,GAAQ;MACxB,gBAAgBC;MAChB,cAAcC;MACd,iBAAiBC;MACjB,cAAcC;IAC1B,CAAS;EACT;AACI,SAAOJ;AACX;AAKA,SAASK,GAAiCC,IAAS;AAC/C,SAAO,SAAUrH,IAAGnD,GAAGyK,IAAcC,GAAcC,GAAUC,GAAUz+B,GAAO;AAC1E,WAAOq+B,GAAQrH,IAAGnD,GAAG7zB,CAAK;EAC7B;AACL;AAIA,SAAS0+B,GAAcl6B,IAAI;AACvB,MAAIq5B,KAAWr5B,GAAG,UAAUm6B,IAAan6B,GAAG,YAAYo6B,KAAcp6B,GAAG,aAAaq6B,IAASr6B,GAAG,QAAQlM,IAASkM,GAAG;AACtH,MAAIo6B;AACA,WAAO,SAAiB5H,IAAGnD,GAAG;AAC1B,UAAIrvB,IAAKo6B,GAAAA,GAAep2B,KAAKhE,EAAG,OAAOg2B,KAAQhyB,OAAO,SAASq1B,KAAW,oBAAI,QAAA,IAAY,SAAYr1B,IAAIs2B,IAAOt6B,EAAG;AACpH,aAAOm6B,EAAW3H,IAAGnD,GAAG;QACpB,OAAO2G;QACP,QAAQqE;QACR,MAAMC;QACN,QAAQxmC;MACxB,CAAa;IACJ;AAEL,MAAIulC;AACA,WAAO,SAAiB7G,IAAGnD,GAAG;AAC1B,aAAO8K,EAAW3H,IAAGnD,GAAG;QACpB,OAAO,oBAAI,QAAS;QACpB,QAAQgL;QACR,MAAM;QACN,QAAQvmC;MACxB,CAAa;IACJ;AAEL,MAAI0H,IAAQ;IACR,OAAO;IACP,QAAQ6+B;IACR,MAAM;IACN,QAAQvmC;EACX;AACD,SAAO,SAAiB0+B,IAAGnD,GAAG;AAC1B,WAAO8K,EAAW3H,IAAGnD,GAAG7zB,CAAK;EAChC;AACL;AAKA,IAAI++B,KAAYC,GAAmB;AAIbA,GAAkB,EAAE,QAAQ,KAAM,CAAA;AAIhCA,GAAkB,EAAE,UAAU,KAAM,CAAA;AAK9BA,GAAkB;EAC5C,UAAU;EACV,QAAQ;AACZ,CAAC;AAIkBA,GAAkB;EACjC,0BAA0B,WAAY;AAAE,WAAOnE;EAAqB;AACxE,CAAC;AAIwBmE,GAAkB;EACvC,QAAQ;EACR,0BAA0B,WAAY;AAAE,WAAOnE;EAAqB;AACxE,CAAC;AAI0BmE,GAAkB;EACzC,UAAU;EACV,0BAA0B,WAAY;AAAE,WAAOnE;EAAqB;AACxE,CAAC;AAKgCmE,GAAkB;EAC/C,UAAU;EACV,0BAA0B,WAAY;AAAE,WAAOnE;EAAqB;EACpE,QAAQ;AACZ,CAAC;AASD,SAASmE,GAAkBjmC,IAAS;AAC5BA,EAAAA,OAAY,WAAUA,KAAU,CAAA;AACpC,MAAIyL,KAAKzL,GAAQ,UAAU8kC,IAAWr5B,OAAO,SAAS,QAAQA,IAAIy6B,KAAiClmC,GAAQ,0BAA0B6lC,IAAc7lC,GAAQ,aAAayP,IAAKzP,GAAQ,QAAQT,IAASkQ,MAAO,SAAS,QAAQA,GAC1Nu1B,IAASH,GAA+B7kC,EAAO,GAC/C4lC,KAAajB,GAAyBK,CAAM,GAC5Cc,IAASI,KACPA,GAA+BN,EAAU,IACzCP,GAAiCO,EAAU;AACjD,SAAOD,GAAc,EAAE,UAAUb,GAAU,YAAYc,IAAY,aAAaC,GAAa,QAAQC,GAAQ,QAAQvmC,EAAM,CAAE;AACjI;AC9kBA,IAAM4mC,KAAuB,CAAC;EAC5B,UAAAC;EACA,gBAAAC;AACF,MAGM;;AACE,QAAAC,IAAiBC,GAAkBH,EAAQ,GAC3C,CAACI,IAAeC,CAAgB,QAAI3G,aAAAA,UAAS,KAAK,GAElD4G,IAAgBN,GAAS,eAAe,MACxCO,IAAcP,GAAS,aAAa,MACpCQ,IAAgB,CAAA,EACpB,CAACF,KAAiB,CAACC,KAAeL,IAE9B,CAACnX,IAAM0X,CAAO,QAAI/G,aAAAA,UAAS8G,CAAa,GACxCE,IAAWC,KAASt7B,IAAA26B,GAAS,SAAT,OAAA,SAAA36B,EAAe,OAAM,EAAE;AAEjD+zB,mBAAAA,WAAU,MAAM;AAGV8G,SACFO,EAAQ,IAAI;EACd,GACC,CAACP,CAAc,CAAC;AAEnB,QAAMU,KAAeN,KACnBhG,GAAA;IAACuG;IAAA;MACC,SAAS,CAACC,OAAM;AACdA,QAAAA,GAAE,eAAe,GACTL,EAAA,CAACM,MAAS,CAACA,CAAI,GACvBV,EAAiB,IAAI;MACvB;MACA,SAAQ;MACR,MAAK;MACL,WAAU;MAEV,UAAA/F,GAAA;QAAC0G;QAAA;UACC,MAAM;UACN,WAAWnG;YACTuF,MAAiB;YACjB;UAAA;QACF;MAAA;IACF;EACF,GAGIa,KAAOjB,GAAS,QACpB1F,GAAA;IAAC0F,GAAS;IAAT;MACC,MAAM;MACN,WAAWnF,GAAG,qBAAqB6F,KAAY,cAAc;IAAA;EAC/D,GAGIQ,IAASC,GAAmB;IAChC,WAAW;MACT;MACAb,KAAiB,OAAON,GAAS,OAAS,MACtC,mBACA;IAAA;EACN,CACD;AAGC,SAAAoB,GAAA;IAAa;IAAZ;MACC,WAAU;MACV,aAAaZ;MACb,MAAAzX;MACA,cAAc,MAAM0X,EAAQ,IAAI;MAEhC,UAAA;QAAAnG,GAAA,IAAa,SAAZ,EAAoB,WAAU,SAAQ,SAAO,MAAC,UAAU,CAACgG,GACvD,YAASj3B,IAAA22B,GAAA,SAAA,OAAA,SAAA32B,EAAM,UAAS,QACvB+3B,GAAA;UAACC;UAAA;YACC,IAAIC,GAAStB,GAAS,KAAK,EAAE;YAC7B,WAAWkB;YACX,SAAS,MAAM;AACbb,gBAAiB,IAAI,GAEjBK,KAAY,CAAC3X,MACf0X,EAAQ,IAAI;YAEhB;YAEC,UAAA;cAAAQ;cACDG,GAAAA,KAAC,OAAI,EAAA,WAAU,8GACb,UAAA;gBAAA9G,GAAA,IAAC,OAAI,EAAA,WAAU,YAAY,UAAA0F,GAAS,MAAA,CAAM;gBACzCY;cAAA,EACH,CAAA;YAAA;UAAA;QAAA,IAAA,GAAA,KAGD,OAAI,EAAA,SAAS,MAAMP,EAAiB,IAAI,GAAG,WAAWa,GACpD,UAAA;UAAAD;UACDG,GAAAA,KAAC,OAAI,EAAA,WAAU,4CACb,UAAA;YAAA9G,GAAA,IAAC,OAAI,EAAA,WAAU,8BAA8B,UAAA0F,GAAS,MAAA,CAAM;YAC3DY;UAAA,EACH,CAAA;QAAA,EAAA,CACF,EAEJ,CAAA;QACAtG,GAAA;UAAa;UAAZ;YACC,WAAWO;;cAETuF,MAAiB;cACjBJ,GAAS,MAAM,WAAW,KAAK;cAC/B;YACF;YAEA,UAAA1F,GAAA,IAAC,MAAA,EAAG,WAAU,4IACX,UAAAwG,GAAS,MAAM,IAAI,CAAC5hC,OACnBo7B,GAAA;cAACiH;cAAA;gBAMC,gBAAAtB;gBACA,MAAA/gC;cAAA;eALG,QAAQA,KAAOA,GAAK,KAAK,OACzB,UAAUA,KAAOA,GAAK,OAAO,MAC9BA,GAAK;YAAA,CAKV,EACH,CAAA;UAAA;QAAA;MACF;IAAA;EACF;AAEJ;AA3HA,IA6HasiC,SAAkBC,aAAAA,MAAK1B,IAAsBH,EAAS;AAEnE4B,GAAgB,cAAc;AChIvB,IAAML,KAAqBO;EAChC;EACA;IACE,UAAU;MACR,UAAU;QACR,MAAM;QACN,OAAO;MACT;MACA,SAAS;QACP,MAAM;QACN,OAAO;MACT;MACA,WAAW;QACT,MAAM;QACN,OAAO;MAAA;IAEX;IACA,iBAAiB;MACf,UAAU;IAAA;EACZ;AAEJ;AArBO,IAuBMC,KAAmB;AAvBzB,IAyBMJ,KAAc,CAAC;EAC1B,MAAAriC;EACA,gBAAA+gC;AACF,MAGM;;AACJ,QAAMrgC,IAAWgiC,EAAY,GACvB,EAAE,cAAApI,GAAa,IAAIX,GAAkB,GACrC,CAACgJ,CAAY,IAAIC,GAAgB;AAEvC,UAAQ5iC,GAAK,MAAM;IACjB,KAAK;AACH,aACGo7B,GAAAA,IAAAkH,IAAA,EAAgB,UAAUtiC,IAAM,gBAAA+gC,GAAgC,CAAA;IAErE,KAAK;AAED,aAAAmB,GAAA;QAACC;QAAA;UACC,WAAW,CAAC,EAAE,UAAAX,GAAU,WAAAqB,EAAA,MACtBZ,GAAmB,EAAE,UAAAT,GAAU,WAAAqB,EAAAA,CAAW;UAE5C,IAAIC,IAAQ9iC,GAAK,EAAE;UACnB,SAAS+gC;UACT,KAAG;UAEF,UAAA;YAAK/gC,GAAA,QAAA,GAAA,IAASA,GAAK,MAAL,EAAU,MAAM,IAAI,WAAU,mBAAA,CAAmB;YAC/DA,GAAK,QAEFkiC,GAAAA,KAAAa,GAAA,UAAA,EAAA,UAAA;cAAA3H,GAAAA,IAAC,QAAA,EAAK,WAAU,mBAAkB,OAAOp7B,GAAK,OAC3C,UAAA4hC,GAAK,MACR,CAAA;cACCxG,GAAAA,IAAAG,IAAA,EAAc,GAAGv7B,GAAK,MAAO,CAAA;YAAA,EAChC,CAAA,IAEAA,GAAK;UAAA;QAAA;MAET;IAEJ,KAAK;AACH,aAAQA,GAAK,KAAK,WAAW,MAAM,IA0BjCkiC,GAAA;QAAC;QAAA;UACC,WAAWD,GAAmB;UAC9B,MAAMjiC,GAAK;UACX,QAAO;UACP,KAAI;UACJ,SAAS+gC;UAET,UAAA;YAAA3F,GAAA,IAAC,QAAK,EAAA,WAAU,qBAAqB,UAAAp7B,GAAK,MAAA,CAAM;YAEhDo7B,GAAAA,IAAC,QAAK,EAAA,WAAU,qBACd,UAAAA,GAAAA,IAAC4H,cAAAA,EAAiB,WAAU,2BAA0B,MAAM,GAAI,CAAA,EAClE,CAAA;UAAA;QAAA;MACF,IArCA5H,GAAA;QAAC6H;QAAA;UACC,IAAI;YACF,UAAUjjC,GAAK,KAAK,MAAM,GAAG,EAAE,CAAC;YAChC,MAAMA,GAAK,KAAK,MAAM,GAAG,EAAE,CAAC;YAC5B,QAAQ2iC,EAAa,SAAS;UAChC;UACM,CAACF,EAAgB,GAAGziC,GAAK,KAAK,MAAM,GAAG,EAAE,CAAC;UAChD,WAAWiiC,GAAmB;YAC5B,UAAUjiC,GAAK,SAAS,CAACU,EAAS,UAAU45B,EAAY,EAAE,KAAK,GAAG;YAClE,aAAWn0B,IAAAnG,GAAK,UAAL,OAAA,SAAAmG,EAAY,eAAc,WAAW;UAAA,CACjD;UACD,SAAS46B;UAER,UAAA/gC,GAAK,QAEFkiC,GAAA,KAAAa,GAAA,UAAA,EAAA,UAAA;YAAA3H,GAAAA,IAAC,QAAA,EAAK,WAAU,YAAW,OAAOp7B,GAAK,OACpC,UAAA4hC,GAAK,MACR,CAAA;YACCxG,GAAAA,IAAAG,IAAA,EAAc,GAAGv7B,GAAK,MAAO,CAAA;UAAA,EAAA,CAChC,IAECo7B,GAAA,IAAA,QAAA,EAAK,WAAU,aAAa,UAAAwG,GAAK,MAAM,CAAA;QAAA;MAAA;EAgB5C;AAGR;AA1GO,ICXMsB,KAAyB,CACpChhC,IACAxH,KAAiC,EAAE,OAAO,SAAA,MACvC;AACH,MAAI,CAACwH,GAAS;AAER,QAAAihC,IAAOjhC,GAAQ,sBAAsB;AAEzCihC,IAAK,OAAO,KACZA,EAAK,QAAQ,KACbA,EAAK,WACF,OAAO,eAAe,SAAS,gBAAgB,iBAClDA,EAAK,UAAU,OAAO,cAAc,SAAS,gBAAgB,gBAI/DjhC,GAAQ,eAAexH,EAAO;AAChC;ADNO,IELM0oC,KAAkB,MAAM;AAC7B,QAAA,EAAE,iBAAA7I,GAAgB,IAAIZ,GAAkB;AA8BvC,aA5BcQ,aAAAA;IACnB,CAACkJ,MAAiB;AAChB,YAAMC,KAAYD,EAAK,QAAQ,MAAM,EAAE,GAIjCE,IAAWD,GAAU,MAAM,GAAG,EAAE,GAAG,CAAC,GACpCphC,IAAU,SAAS,eAAe,mBAAmBohC,EAAS,CAAC,GAE/DtY,IAAO,SAAS;QACpB,IAAIyX,EAAgB,KAAKc,CAAQ;MACnC;AAEA,aAAIrhC,KACFA,EAAQ,eAAe,GACvBghC,GAAuBlY,CAAI,GAGP,oBAAA,MAAMuP,GAAgBgJ,CAAQ,CAAC,GAC5C,QAIF;IACT;IACA,CAAChJ,EAAe;EAClB;AAGF;AF3BO,IE6BMiJ,KAAoB,MAAM;AACrC,QAAM9iC,KAAWgiC,EAAY,GACvBe,KAAeL,GAAgB,GAC/BM,QAAkB3J,aAAAA,QAAO,KAAK;AAEpCG,mBAAAA,WAAU,MAAM;AACV,KAACx5B,GAAS,QAAQ,CAACgjC,EAAgB,WAEvCD,GAAa/iC,GAAS,IAAI;EACzB,GAAA,CAACA,GAAS,MAAM+iC,EAAY,CAAC,OAEhCvJ,aAAAA,WAAU,MAAM;AACV,QAAA,CAACx5B,GAAS,MAAM;AAClBgjC,QAAgB,UAAU;AAC1B;IAAA;AAGF,UAAMC,KAAW,IAAI,iBAAiB,CAACprC,GAAGqrC,MAAQ;AAC3CH,MAAAA,GAAa/iC,GAAS,IAAI,MAC/BgjC,EAAgB,UAAU,MAC1BE,EAAI,WAAW;IAAA,CAChB;AAEQ,WAAAD,GAAA,QAAQ,SAAS,MAAM,EAAE,WAAW,MAAM,SAAS,KAAA,CAAM,GAE3D,MAAMA,GAAS,WAAW;EAChC,GAAA,CAACjjC,GAAS,MAAM+iC,EAAY,CAAC;AAClC;AFxDO,IGJMR,MAAa,CAACpkC,OAAwB;AACjD,QAAM6B,KAAWgiC,EAAY,GACvBe,IAAeL,GAAgB,GAC/BS,KAAOC,GAAQjlC,GAAM,EAAE,GACvB,CAACklC,GAAUV,CAAI,IAAIQ,GAAK,MAAM,GAAG,GAEjCG,IAAc,CAACjO,MAAyC;;AAE5D,KADA5vB,KAAAtH,GAAM,YAAN,QAAAsH,GAAA,KAAAtH,IAAgBk3B,CAAAA,GACZ,EAAAsN,MAAS3iC,GAAS,KAAK,MAAM,CAAC,KAAKqjC,MAAarjC,GAAS,cAG7Dq1B,EAAM,eAAe,GACrB0N,EAAaJ,CAAI;EACnB;AAEA,SAAQjI,GAAAA,IAAA+G,IAAA,EAAS,GAAGtjC,IAAO,SAASmlC,EAAAA,CAAa;AACnD;AHZO,IIND5Z,KAAUoY,EAAI,kBAAkB;EACpC,UAAU;IACR,OAAO;MACL,GAAG;MACH,GAAG;MACH,GAAG;MACH,GAAG;MACH,GAAG;MACH,GAAG;IAAA;EAEP;EACA,iBAAiB;IACf,OAAO;EAAA;AAEX,CAAC;AJRM,IIUDyB,KAAe,CAACC,OAAkB;AACtC,UAAQA,IAAO;IACb,KAAK;AACI,aAAA;IACT,KAAK;AACI,aAAA;IACT,KAAK;AACI,aAAA;IACT,KAAK;AACI,aAAA;IACT,KAAK;AACI,aAAA;IACT,KAAK;AACI,aAAA;IACT;AACS,aAAA;EAAA;AAEb;AJ3BO,IIsCMC,KAAU,CAAC;EACtB,OAAAD;EACA,UAAA1kC;EACA,IAAA2D;EACA,WAAAs4B;EACA,uBAAA2I;AACF,MAAoB;AACZ,QAAAC,IAAYJ,GAAaC,MAAS,CAAC,GACnC,EAAE,KAAAI,EAAI,IAAIzK,GAAyB;AAGvC,SAAAqI,GAAA;IAACmC;IAAA;MACC,WAAWja,GAAQ,EAAE,WAAAqR,IAAW,OAAAyI,GAAAA,CAAO;MACvC,KAAKE,IAAwBE,IAAM;MACnC,IAAAnhC;MAEC,UAAA;QACCA,KAAAi4B,GAAA;UAAC;UAAA;YACC,MAAM,IAAIj4B,CAAE;YACZ,WAAU;YACV,cAAY,WAAWA,CAAE;YAED,UAAA;UAAA;QAE1B;QAED3D;MAAA;IAAA;EACH;AAEJ;AJnEO,IKTM+kC,KAAgB,CAAC;EAC5B,SAAAC;EACA,SAAAC;EACA,SAAAC,IAAU;EACV,GAAG7lC;AACL,MAGkB;AACV,QAAAwlC,IAAYG,KAAUG,OAAO;AAGjC,SAAAvJ,GAAA;IAACiJ;IAAA;MACC,SAAS,CAACzC,MAAM;AACd,YAAI8C,GAAS;AACL,gBAAAzM,IAAQ,SAAS,YAAY;AAC7BA,YAAA,mBAAmB2J,EAAE,aAAa;AAClC,gBAAAgD,IAAY,OAAO,aAAa;AACtCA,eAAA,QAAAA,EAAW,gBAAA,GACXA,KAAA,QAAAA,EAAW,SAAS3M,CAAAA;QAAK;AAE3BwM,QAAAA,MAAA,QAAAA,GAAU7C,CAAAA;MACZ;MACC,GAAG/iC;IAAA;EACN;AAEJ;ALjBO,IMPMgmC,KAAa,CAAC;EACzB,WAAApJ;EACA,UAAAj8B;EACA,eAAAslC;EACA,SAAAL;AACF,MAAA,GAAA,IAMGF,IAAc,EAAA,SAAO,MAAC,SAASO,GAAe,SAAAL,IAC7C,UAAArJ,GAAA;EAAC;EAAA;IACC,WAAWO;MACT;MACAF;IACF;IAEC,UAAAj8B;EAAA;AACH,EACF,CAAA;ANbK,IOAMulC,KAAgB;EAC3B,KAAK,CAAC,EAAE,MAAAtlC,IAAM,GAAGZ,GAAAA,MACX,wBAAwB,KAAKA,GAAM,OAAO,EAAE,IACtCu8B,GAAAA,IAAA,SAAA,EAAM,KAAKv8B,GAAM,KAAK,UAAQ,MAAC,aAAW,MAAC,UAAQ,MAAC,MAAI,KAAC,CAAA,IAE3Du8B,GAAAA,IAAA,OAAA,EAAK,GAAGv8B,IAAO,WAAU,aAAA,CAAa;EAEhD,IAAI,CAAC,EAAE,UAAAW,IAAU,IAAA2D,GACf,MAAAi4B,GAAA,IAAC+I,IAAQ,EAAA,OAAO,GAAG,IAAAhhC,IAChB,UAAA3D,GACH,CAAA;EAEF,IAAI,CAAC,EAAE,UAAAA,IAAU,IAAA2D,GACf,MAAAi4B,GAAA,IAAC+I,IAAQ,EAAA,OAAO,GAAG,IAAAhhC,IAChB,UAAA3D,GACH,CAAA;EAEF,IAAI,CAAC,EAAE,UAAAA,IAAU,IAAA2D,GACf,MAAAi4B,GAAA,IAAC+I,IAAQ,EAAA,OAAO,GAAG,IAAAhhC,IAChB,UAAA3D,GACH,CAAA;EAEF,IAAI,CAAC,EAAE,UAAAA,IAAU,IAAA2D,GACf,MAAAi4B,GAAA,IAAC+I,IAAQ,EAAA,OAAO,GAAG,IAAAhhC,IAChB,UAAA3D,GACH,CAAA;EAEF,IAAI,CAAC,EAAE,UAAAA,IAAU,IAAA2D,GACf,MAAAi4B,GAAA,IAAC+I,IAAQ,EAAA,OAAO,GAAG,IAAAhhC,IAChB,UAAA3D,GACH,CAAA;EAEF,IAAI,CAAC,EAAE,UAAAA,IAAU,IAAA2D,GACf,MAAAi4B,GAAA,IAAC+I,IAAQ,EAAA,OAAO,GAAG,IAAAhhC,IAChB,UAAA3D,GACH,CAAA;EAEF,GAAG,CAAC,EAAE,MAAAqkC,IAAM,MAAApkC,IAAM,GAAGZ,EAAM,MACzBglC,MAAQ,CAACA,GAAK,WAAW,MAAM,IAC7BzI,GAAAA,IAAC6H,KAAW,EAAA,IAAIY,IAAM,UAAS,QAAQ,GAAGhlC,EAAAA,CAAO,IAEjDu8B,GAAA,IAAC,KAAE,EAAA,MAAAyI,IAAY,QAAO,UAAU,GAAGhlC,GAAO,KAAI,aAAa,CAAA;EAAA,QAE/D8iC;EACA,SAAAqD;EACA,SAAAC;EACA,iBAAAC;EACA,KAAK,CAACrmC,OAAUu8B,GAAAA,IAAC4J,GAAAA,EAAQ,MAAK,OAAO,GAAGnmC,GAAAA,CAAO;EAC/C,MAAM,CAACA,OAAUu8B,GAAAA,IAAC4J,GAAAA,EAAQ,MAAK,QAAQ,GAAGnmC,GAAAA,CAAO;EACjD,MAAM,CAACA,OAAUu8B,GAAAA,IAAC4J,GAAAA,EAAQ,MAAK,QAAQ,GAAGnmC,GAAAA,CAAO;EACjD,SAAS,CAACA,OAAUu8B,GAAAA,IAAC4J,GAAAA,EAAQ,MAAK,WAAW,GAAGnmC,GAAAA,CAAO;EACvD,SAAS,CAACA,OAAUu8B,GAAAA,IAAC4J,GAAAA,EAAQ,MAAK,WAAW,GAAGnmC,GAAAA,CAAO;EACvD,QAAQ,CAACA,OAAUu8B,GAAAA,IAAC4J,GAAAA,EAAQ,MAAK,UAAU,GAAGnmC,GAAAA,CAAO;EACrD,KAAK,CAAC,EAAE,UAAAW,GAAS,MAAA,GAAA,IAAA,GAAA,UAAA,EAAS,UAAAA,GAAAA,CAAS;EACnC,MAAM,CAAC,EAAE,WAAAi8B,IAAW,UAAAj8B,IAAU,GAAGX,EAAAA,MAAY;AAGrC,UAAA,EAAE,QAAAsmC,IAAQ,OAAAC,EAAA,IAAUvmC;AAEtB,QAAAsmC,OAAW,QAAQA,OAAW;AACzB,aAAA/J,GAAA,IAACyJ,IAAW,EAAA,WAAApJ,IAAuB,UAAAj8B,GAAS,CAAA;AAG/C,UAAAR,IAAQy8B,MAAA,OAAA,SAAAA,GAAW,MAAM,iBAAA;AAG7B,WAAAL,GAAA;MAAC8J;MAAA;QACC,UAAUlmC,KAAA,OAAA,SAAAA,EAAQ,CAAA;QAClB,WAAU;QACV,uBAAqB;QACrB,MAAM,OAAOQ,EAAQ,EAAE,KAAK;QAC5B,OAAO,OAAO4lC,KAAU,WAAWA,IAAQ;MAAA;IAC7C;EAAA;AAGN;AP3EO,IQDDC,KAAS;ARCR,IQADC,KAAY;ARAX,IQGDliC,KAAe,CAAA;AA0Cd,SAAS/J,GAAKA,IAAMqB,IAAS;AAGlC,UAF4B0I,GACR,MAAMkiC,KAAYD,IAC5B,KAAKhsC,EAAI;AACrB;ACtDA,IAAMksC,KAAK;AAaJ,SAASC,GAAWC,IAAO;AAChC,SAAO,OAAOA,MAAU,WACpBA,GAAM,SAAS,SACb/mB,GAAM+mB,GAAM,KAAK,IACjB,QACF/mB,GAAM+mB,EAAK;AACjB;AAMA,SAAS/mB,GAAM7lB,IAAO;AACpB,SAAOA,GAAM,QAAQ0sC,IAAI,EAAE,MAAM;AACnC;AC5BO,IAAMxqC,KAAN,MAAa;;;;;;;;;;;EAWlB,YAAYH,IAAUC,GAAQC,IAAO;AACnC,SAAK,SAASD,GACd,KAAK,WAAWD,IAEZE,OACF,KAAK,QAAQA;EAEnB;AACA;AAEAC,GAAO,UAAU,SAAS,CAAA;AAC1BA,GAAO,UAAU,WAAW,CAAA;AAC5BA,GAAO,UAAU,QAAQ;ACdlB,SAASC,GAAMC,IAAaH,IAAO;AAExC,QAAMF,IAAW,CAAA,GAEXC,KAAS,CAAA;AAEf,aAAW2B,KAAcvB;AACvB,WAAO,OAAOL,GAAU4B,EAAW,QAAQ,GAC3C,OAAO,OAAO3B,IAAQ2B,EAAW,MAAM;AAGzC,SAAO,IAAIzB,GAAOH,GAAUC,IAAQC,EAAK;AAC3C;ACjBO,SAASI,GAAUrC,IAAO;AAC/B,SAAOA,GAAM,YAAW;AAC1B;ACNO,IAAMwC,KAAN,MAAW;;;;;;;;;EAShB,YAAYT,IAAUQ,GAAW;AAC/B,SAAK,YAAYA,GACjB,KAAK,WAAWR;EACpB;AACA;AAEAS,GAAK,UAAU,YAAY;AAC3BA,GAAK,UAAU,aAAa;AAC5BA,GAAK,UAAU,UAAU;AACzBA,GAAK,UAAU,wBAAwB;AACvCA,GAAK,UAAU,iBAAiB;AAChCA,GAAK,UAAU,UAAU;AACzBA,GAAK,UAAU,kBAAkB;AACjCA,GAAK,UAAU,SAAS;AACxBA,GAAK,UAAU,oBAAoB;AACnCA,GAAK,UAAU,WAAW;AAC1BA,GAAK,UAAU,iBAAiB;AAChCA,GAAK,UAAU,QAAQ;AC/BvB,IAAIC,KAAS;AAEN,IAAMC,IAAUC,GAAS;AAAzB,IACMC,KAAaD,GAAS;AAD5B,IAEME,KAAoBF,GAAS;AAFnC,IAGMG,IAASH,GAAS;AAHxB,IAIMI,KAAiBJ,GAAS;AAJhC,IAKMK,KAAiBL,GAAS;AALhC,IAMMM,KAAwBN,GAAS;AAE9C,SAASA,KAAY;AACnB,SAAO,KAAK,EAAEF;AAChB;;;;;;;;;;;ICLMS;;EACJ,OAAO,KAAKC,EAAK;;AAGZ,IAAMI,KAAN,cAA0Bf,GAAK;;;;;;;;;;;;;;EAcpC,YAAYT,IAAUQ,GAAWa,IAAMnB,GAAO;AAC5C,QAAIpC,IAAQ;AAMZ,QAJA,MAAMkC,IAAUQ,CAAS,GAEzBc,GAAK,MAAM,SAASpB,CAAK,GAErB,OAAOmB,MAAS;AAClB,aAAO,EAAEvD,IAAQqD,GAAO,UAAQ;AAC9B,cAAMI,IAAQJ,GAAOrD,CAAK;AAC1BwD,WAAK,MAAMH,GAAOrD,CAAK,IAAIuD,KAAOD,GAAMG,CAAK,OAAOH,GAAMG,CAAK,CAAC;MACxE;EAEA;AACA;AAEAC,GAAY,UAAU,UAAU;AAchC,SAASF,GAAKG,IAAQrD,IAAKH,GAAO;AAC5BA,QACFwD,GAAOrD,EAAG,IAAIH;AAElB;ACnBO,SAAS0D,GAAOC,IAAY;AAEjC,QAAM+C,KAAa,CAAA,GAEbmmC,IAAU,CAAA;AAEhB,aAAW,CAAC9qC,IAAU/B,CAAK,KAAK,OAAO,QAAQ2D,GAAW,UAAU,GAAG;AACrE,UAAME,IAAO,IAAIN;MACfxB;MACA4B,GAAW,UAAUA,GAAW,cAAc,CAAA,GAAI5B,EAAQ;MAC1D/B;MACA2D,GAAW;IACjB;AAGMA,IAAAA,GAAW,mBACXA,GAAW,gBAAgB,SAAS5B,EAAQ,MAE5C8B,EAAK,kBAAkB,OAGzB6C,GAAW3E,EAAQ,IAAI8B,GAEvBgpC,EAAQxqC,GAAUN,EAAQ,CAAC,IAAIA,IAC/B8qC,EAAQxqC,GAAUwB,EAAK,SAAS,CAAC,IAAI9B;EACzC;AAEE,SAAO,IAAIG,GAAOwE,IAAYmmC,GAASlpC,GAAW,KAAK;AACzD;ACjEO,IAAMS,KAAOV,GAAO;EACzB,YAAY;IACV,sBAAsB;IACtB,YAAYd;IACZ,kBAAkB;IAClB,UAAUA;IACV,aAAaA;IACb,cAAcE;IACd,cAAcA;IACd,aAAaA;IACb,cAAcC;IACd,aAAa;IACb,iBAAiBA;IACjB,aAAa;IACb,cAAcH;IACd,gBAAgBG;IAChB,kBAAkB;IAClB,cAAcH;IACd,YAAYG;IACZ,aAAaH;IACb,cAAc;IACd,YAAYA;IACZ,aAAa;IACb,kBAAkB;IAClB,WAAW;IACX,gBAAgBG;IAChB,WAAWD;IACX,UAAU;IACV,WAAWF;IACX,eAAeA;IACf,qBAAqBA;IACrB,iBAAiB;IACjB,UAAUG;IACV,iBAAiB;IACjB,cAAcD;IACd,aAAaF;IACb,cAAcA;IACd,cAAc;IACd,cAAcA;IACd,qBAAqBG;IACrB,cAAcD;IACd,cAAcA;IACd,aAAaA;IACb,cAAcF;IACd,aAAaE;IACb,UAAU;IACV,cAAcA;IACd,cAAcA;IACd,cAAcA;IACd,eAAe;IACf,MAAM;EACP;EACD,UAAUpD,IAAGqC,IAAU;AACrB,WAAOA,OAAa,SAChBA,KACA,UAAUA,GAAS,MAAM,CAAC,EAAE,YAAW;EAC/C;AACA,CAAC;ACpDM,SAASiC,GAAuBC,IAAY1B,IAAW;AAC5D,SAAOA,MAAa0B,KAAaA,GAAW1B,EAAS,IAAIA;AAC3D;ACAO,SAAS2B,GAAyBD,IAAYlC,IAAU;AAC7D,SAAOiC,GAAuBC,IAAYlC,GAAS,YAAa,CAAA;AAClE;ACDO,IAAMsC,KAAOX,GAAO;EACzB,YAAY;IACV,eAAe;IACf,WAAW;IACX,SAAS;IACT,WAAW;EACZ;EACD,iBAAiB,CAAC,WAAW,YAAY,SAAS,UAAU;EAC5D,YAAY;;IAEV,MAAM;IACN,QAAQV;IACR,eAAeD;IACf,WAAWA;IACX,QAAQ;IACR,OAAO;IACP,iBAAiBL;IACjB,qBAAqBA;IACrB,gBAAgBA;IAChB,KAAK;IACL,IAAI;IACJ,OAAOA;IACP,gBAAgB;IAChB,cAAcK;IACd,WAAWL;IACX,UAAUA;IACV,UAAUK;IACV,SAAS;IACT,SAAS;IACT,SAASL;IACT,MAAM;IACN,WAAWK;IACX,MAAMD;IACN,SAAS;IACT,SAAS;IACT,iBAAiBF;IACjB,UAAUF;IACV,cAAcK;IACd,QAAQD,IAASE;IACjB,aAAa;IACb,MAAM;IACN,UAAU;IACV,UAAU;IACV,SAASN;IACT,OAAOA;IACP,KAAK;IACL,SAAS;IACT,UAAUA;IACV,UAAUG;IACV,WAAWD;IACX,SAAS;IACT,cAAc;IACd,eAAe;IACf,MAAM;IACN,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,gBAAgBF;IAChB,YAAY;IACZ,SAASK;IACT,QAAQD;IACR,QAAQJ;IACR,MAAMI;IACN,MAAM;IACN,UAAU;IACV,SAASC;IACT,WAAWA;IACX,IAAI;IACJ,YAAY;IACZ,aAAa;IACb,OAAOL;IACP,WAAW;IACX,WAAW;IACX,IAAI;IACJ,OAAOA;IACP,QAAQ;IACR,UAAUK;IACV,SAASA;IACT,WAAWL;IACX,UAAUK;IACV,MAAM;IACN,OAAO;IACP,MAAM;IACN,UAAU;IACV,MAAM;IACN,SAAS;IACT,MAAML;IACN,KAAKI;IACL,UAAU;IACV,KAAK;IACL,WAAWA;IACX,OAAO;IACP,QAAQ;IACR,KAAK;IACL,WAAWA;IACX,UAAUJ;IACV,OAAOA;IACP,MAAM;IACN,OAAO;IACP,UAAUA;IACV,YAAYA;IACZ,SAAS;IACT,cAAc;IACd,YAAY;IACZ,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,gBAAgB;IAChB,QAAQ;IACR,UAAU;IACV,WAAW;IACX,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,SAAS;IACT,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,QAAQ;IACR,aAAa;IACb,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,WAAW;IACX,aAAa;IACb,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,aAAa;IACb,QAAQ;IACR,kBAAkB;IAClB,WAAW;IACX,SAAS;IACT,SAAS;IACT,SAAS;IACT,YAAY;IACZ,cAAc;IACd,SAAS;IACT,WAAW;IACX,WAAW;IACX,YAAY;IACZ,SAAS;IACT,kBAAkB;IAClB,QAAQ;IACR,cAAc;IACd,kBAAkB;IAClB,WAAW;IACX,aAAa;IACb,WAAW;IACX,gBAAgB;IAChB,aAAa;IACb,cAAc;IACd,cAAc;IACd,aAAa;IACb,YAAY;IACZ,aAAa;IACb,WAAW;IACX,WAAW;IACX,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,SAAS;IACT,SAAS;IACT,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,cAAc;IACd,oBAAoB;IACpB,SAAS;IACT,UAAU;IACV,UAAU;IACV,aAAa;IACb,2BAA2B;IAC3B,UAAU;IACV,WAAW;IACX,UAAU;IACV,cAAc;IACd,WAAW;IACX,WAAW;IACX,UAAU;IACV,WAAW;IACX,cAAc;IACd,UAAU;IACV,sBAAsB;IACtB,UAAU;IACV,gBAAgB;IAChB,WAAW;IACX,SAAS;IACT,MAAMA;IACN,SAASI;IACT,SAAS;IACT,MAAMC;IACN,aAAa;IACb,aAAaL;IACb,SAAS;IACT,eAAe;IACf,qBAAqB;IACrB,QAAQ;IACR,SAAS;IACT,UAAUA;IACV,gBAAgB;IAChB,KAAKK;IACL,UAAUL;IACV,UAAUA;IACV,MAAMI;IACN,SAASA;IACT,SAASC;IACT,OAAO;IACP,QAAQL;IACR,UAAUA;IACV,UAAUA;IACV,oBAAoBA;IACpB,0BAA0BA;IAC1B,gBAAgB;IAChB,OAAO;IACP,MAAMI;IACN,OAAO;IACP,MAAM;IACN,MAAMA;IACN,YAAYF;IACZ,KAAK;IACL,QAAQ;IACR,SAAS;IACT,QAAQ;IACR,OAAOE;IACP,MAAM;IACN,OAAO;IACP,UAAUA;IACV,QAAQ;IACR,OAAO;IACP,WAAW;IACX,MAAM;IACN,eAAeJ;IACf,QAAQ;IACR,OAAOE;IACP,OAAOE;IACP,MAAM;IACN,oBAAoB;;;IAIpB,OAAO;;IACP,OAAO;;IACP,SAASC;;IACT,MAAM;;IACN,YAAY;;IACZ,SAAS;;IACT,QAAQD;;IACR,aAAa;;IACb,cAAcA;;IACd,aAAa;;IACb,aAAa;;IACb,MAAM;;IACN,SAAS;;IACT,SAAS;;IACT,OAAO;;IACP,MAAM;;IACN,UAAU;;IACV,UAAU;;IACV,OAAO;;IACP,SAASJ;;IACT,SAASA;;IACT,OAAO;;IACP,MAAM;;IACN,OAAO;;IACP,aAAa;;IACb,QAAQI;;IACR,YAAYA;;IACZ,MAAM;;IACN,UAAU;;IACV,QAAQ;;IACR,cAAcA;;IACd,aAAaA;;IACb,UAAUJ;;IACV,QAAQA;;IACR,SAASA;;IACT,QAAQA;;IACR,QAAQ;;IACR,SAAS;;IACT,QAAQ;;IACR,KAAK;;IACL,aAAaI;;IACb,OAAO;;IACP,QAAQ;;IACR,WAAWF;;IACX,SAAS;;IACT,SAAS;;IACT,MAAM;;IACN,WAAWE;;IACX,WAAW;;IACX,SAAS;;IACT,QAAQ;;IACR,OAAO;;IACP,QAAQA;;;IAGR,mBAAmB;IACnB,aAAa;IACb,UAAU;IACV,yBAAyBJ;IACzB,uBAAuBA;IACvB,QAAQ;IACR,UAAU;IACV,SAASI;IACT,UAAU;IACV,cAAc;EACf;EACD,OAAO;EACP,WAAWoB;AACb,CAAC;AAtTM,ICDMI,KAAMZ,GAAO;EACxB,YAAY;IACV,cAAc;IACd,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,WAAW;IACX,WAAW;IACX,UAAU;IACV,UAAU;IACV,oBAAoB;IACpB,2BAA2B;IAC3B,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,UAAU;IACV,kBAAkB;IAClB,kBAAkB;IAClB,aAAa;IACb,UAAU;IACV,YAAY;IACZ,cAAc;IACd,YAAY;IACZ,UAAU;IACV,gBAAgB;IAChB,aAAa;IACb,WAAW;IACX,aAAa;IACb,YAAY;IACZ,WAAW;IACX,4BAA4B;IAC5B,0BAA0B;IAC1B,UAAU;IACV,WAAW;IACX,cAAc;IACd,cAAc;IACd,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,WAAW;IACX,WAAW;IACX,aAAa;IACb,SAAS;IACT,aAAa;IACb,cAAc;IACd,SAAS;IACT,SAAS;IACT,SAAS;IACT,UAAU;IACV,OAAO;IACP,WAAW;IACX,YAAY;IACZ,SAAS;IACT,YAAY;IACZ,cAAc;IACd,eAAe;IACf,SAAS;IACT,UAAU;IACV,WAAW;IACX,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,SAAS;IACT,QAAQ;IACR,aAAa;IACb,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,WAAW;IACX,aAAa;IACb,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,aAAa;IACb,QAAQ;IACR,kBAAkB;IAClB,WAAW;IACX,OAAO;IACP,SAAS;IACT,SAAS;IACT,SAAS;IACT,WAAW;IACX,YAAY;IACZ,cAAc;IACd,SAAS;IACT,WAAW;IACX,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,cAAc;IACd,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,aAAa;IACb,cAAc;IACd,cAAc;IACd,aAAa;IACb,YAAY;IACZ,aAAa;IACb,WAAW;IACX,cAAc;IACd,WAAW;IACX,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,SAAS;IACT,SAAS;IACT,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,cAAc;IACd,UAAU;IACV,SAAS;IACT,UAAU;IACV,UAAU;IACV,UAAU;IACV,WAAW;IACX,UAAU;IACV,QAAQ;IACR,WAAW;IACX,WAAW;IACX,UAAU;IACV,WAAW;IACX,cAAc;IACd,UAAU;IACV,UAAU;IACV,gBAAgB;IAChB,WAAW;IACX,QAAQ;IACR,kBAAkB;IAClB,mBAAmB;IACnB,YAAY;IACZ,SAAS;IACT,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,wBAAwB;IACxB,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,UAAU;IACV,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,iBAAiB;IACjB,QAAQ;IACR,mBAAmB;IACnB,oBAAoB;IACpB,aAAa;IACb,cAAc;IACd,YAAY;IACZ,aAAa;IACb,UAAU;IACV,cAAc;IACd,eAAe;IACf,cAAc;IACd,UAAU;IACV,aAAa;IACb,aAAa;IACb,aAAa;IACb,aAAa;IACb,SAAS;;IAET,eAAe;IACf,eAAe;EAChB;EACD,YAAY;IACV,OAAOT;IACP,cAAcH;IACd,YAAY;IACZ,UAAU;IACV,mBAAmB;IACnB,YAAYA;IACZ,WAAWA;IACX,YAAY;IACZ,QAAQA;IACR,eAAe;IACf,eAAe;IACf,SAASA;IACT,WAAW;IACX,eAAe;IACf,eAAe;IACf,aAAa;IACb,MAAM;IACN,OAAO;IACP,MAAMA;IACN,IAAI;IACJ,UAAU;IACV,WAAWA;IACX,WAAWC;IACX,MAAM;IACN,UAAU;IACV,eAAe;IACf,UAAU;IACV,OAAO;IACP,oBAAoB;IACpB,2BAA2B;IAC3B,cAAc;IACd,gBAAgB;IAChB,SAAS;IACT,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;IACb,QAAQ;IACR,IAAI;IACJ,IAAI;IACJ,GAAG;IACH,UAAU;IACV,eAAe;IACf,SAASD;IACT,iBAAiBA;IACjB,WAAW;IACX,SAAS;IACT,KAAK;IACL,SAASA;IACT,kBAAkB;IAClB,UAAUJ;IACV,IAAI;IACJ,IAAI;IACJ,UAAU;IACV,UAAU;IACV,WAAWI;IACX,kBAAkB;IAClB,KAAK;IACL,OAAO;IACP,UAAUA;IACV,2BAA2B;IAC3B,MAAM;IACN,aAAaA;IACb,UAAU;IACV,QAAQ;IACR,WAAW;IACX,aAAa;IACb,YAAY;IACZ,cAAc;IACd,WAAW;IACX,gBAAgB;IAChB,YAAY;IACZ,UAAU;IACV,gBAAgB;IAChB,aAAa;IACb,WAAW;IACX,aAAa;IACb,YAAY;IACZ,QAAQ;IACR,IAAI;IACJ,MAAM;IACN,IAAI;IACJ,IAAI;IACJ,IAAIE;IACJ,IAAIA;IACJ,WAAWA;IACX,4BAA4B;IAC5B,0BAA0B;IAC1B,UAAU;IACV,mBAAmB;IACnB,eAAe;IACf,SAAS;IACT,SAASF;IACT,mBAAmB;IACnB,YAAY;IACZ,QAAQ;IACR,MAAM;IACN,UAAU;IACV,WAAWA;IACX,cAAcA;IACd,cAAcA;IACd,IAAI;IACJ,aAAaA;IACb,gBAAgB;IAChB,mBAAmB;IACnB,IAAI;IACJ,KAAK;IACL,WAAWA;IACX,GAAGA;IACH,IAAIA;IACJ,IAAIA;IACJ,IAAIA;IACJ,IAAIA;IACJ,cAAcG;IACd,kBAAkB;IAClB,WAAW;;IACX,YAAY;;IACZ,UAAU;;IACV,SAAS;IACT,MAAM;IACN,cAAc;IACd,eAAe;IACf,eAAe;IACf,mBAAmBH;IACnB,OAAO;IACP,WAAW;IACX,WAAW;IACX,aAAa;IACb,cAAc;IACd,aAAa;IACb,aAAa;IACb,MAAM;IACN,kBAAkB;IAClB,WAAW;IACX,cAAc;IACd,KAAK;IACL,OAAO;IACP,wBAAwB;IACxB,uBAAuB;IACvB,WAAWA;IACX,WAAW;IACX,QAAQ;IACR,KAAK;IACL,MAAM;IACN,MAAM;IACN,SAAS;IACT,aAAa;IACb,cAAc;IACd,SAAS;IACT,SAAS;IACT,SAAS;IACT,UAAU;IACV,OAAO;IACP,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,cAAc;IACd,eAAe;IACf,SAAS;IACT,UAAU;IACV,WAAW;IACX,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,SAAS;IACT,QAAQ;IACR,aAAa;IACb,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,WAAW;IACX,aAAa;IACb,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,aAAa;IACb,QAAQ;IACR,kBAAkB;IAClB,WAAW;IACX,OAAO;IACP,SAAS;IACT,SAAS;IACT,SAAS;IACT,WAAW;IACX,YAAY;IACZ,cAAc;IACd,SAAS;IACT,WAAW;IACX,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,cAAc;IACd,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,aAAa;IACb,cAAc;IACd,cAAc;IACd,aAAa;IACb,YAAY;IACZ,aAAa;IACb,WAAW;IACX,cAAc;IACd,WAAW;IACX,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,SAAS;IACT,SAAS;IACT,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,cAAc;IACd,UAAU;IACV,SAAS;IACT,UAAU;IACV,UAAU;IACV,UAAU;IACV,WAAW;IACX,UAAU;IACV,QAAQ;IACR,WAAW;IACX,WAAW;IACX,UAAU;IACV,WAAW;IACX,cAAc;IACd,UAAU;IACV,UAAU;IACV,gBAAgB;IAChB,WAAW;IACX,QAAQ;IACR,SAAS;IACT,UAAU;IACV,OAAO;IACP,QAAQ;IACR,aAAa;IACb,QAAQ;IACR,UAAU;IACV,SAAS;IACT,kBAAkBA;IAClB,mBAAmBA;IACnB,YAAY;IACZ,SAAS;IACT,MAAM;IACN,YAAYA;IACZ,qBAAqB;IACrB,kBAAkB;IAClB,cAAc;IACd,OAAO;IACP,MAAMC;IACN,OAAO;IACP,eAAe;IACf,eAAe;IACf,QAAQ;IACR,WAAWD;IACX,WAAWA;IACX,WAAWA;IACX,eAAe;IACf,qBAAqB;IACrB,gBAAgB;IAChB,WAAW;IACX,UAAUG;IACV,GAAG;IACH,QAAQ;IACR,gBAAgB;IAChB,MAAM;IACN,MAAM;IACN,KAAKA;IACL,KAAKA;IACL,iBAAiB;IACjB,aAAa;IACb,WAAW;IACX,oBAAoBA;IACpB,kBAAkBA;IAClB,eAAeA;IACf,iBAAiBA;IACjB,UAAU;IACV,SAAS;IACT,QAAQ;IACR,QAAQ;IACR,IAAI;IACJ,IAAI;IACJ,OAAO;IACP,MAAM;IACN,gBAAgB;IAChB,MAAM;IACN,OAAO;IACP,cAAc;IACd,kBAAkBH;IAClB,kBAAkBA;IAClB,cAAc;IACd,SAAS;IACT,aAAa;IACb,cAAc;IACd,OAAO;IACP,OAAO;IACP,aAAa;IACb,WAAW;IACX,aAAa;IACb,uBAAuBA;IACvB,wBAAwBA;IACxB,QAAQ;IACR,QAAQ;IACR,iBAAiBG;IACjB,kBAAkB;IAClB,eAAe;IACf,gBAAgB;IAChB,kBAAkBH;IAClB,eAAeA;IACf,aAAa;IACb,OAAO;IACP,cAAcA;IACd,cAAc;IACd,qBAAqB;IACrB,YAAY;IACZ,eAAe;IACf,sBAAsB;IACtB,gBAAgBG;IAChB,UAAUH;IACV,aAAa;IACb,QAAQ;IACR,SAASA;IACT,SAASA;IACT,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,eAAe;IACf,OAAO;IACP,mBAAmB;IACnB,MAAM;IACN,QAAQG;IACR,IAAI;IACJ,WAAW;IACX,iBAAiB;IACjB,IAAI;IACJ,IAAI;IACJ,mBAAmBH;IACnB,oBAAoBA;IACpB,SAAS;IACT,aAAa;IACb,cAAc;IACd,YAAYA;IACZ,QAAQ;IACR,aAAaA;IACb,eAAeA;IACf,cAAc;IACd,UAAUA;IACV,cAAcA;IACd,SAAS;IACT,UAAUA;IACV,aAAaA;IACb,aAAaA;IACb,SAAS;IACT,YAAY;IACZ,YAAY;IACZ,OAAO;IACP,QAAQ;IACR,aAAa;IACb,aAAa;IACb,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,kBAAkB;IAClB,SAASA;IACT,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,kBAAkB;IAClB,GAAG;IACH,YAAY;EACb;EACD,OAAO;EACP,WAAWkB;AACb,CAAC;AD3iBM,IETMF,KAAQJ,GAAO;EAC1B,YAAY;IACV,cAAc;IACd,cAAc;IACd,WAAW;IACX,WAAW;IACX,WAAW;IACX,YAAY;IACZ,WAAW;EACZ;EACD,OAAO;EACP,UAAUhE,IAAGqC,IAAU;AACrB,WAAO,WAAWA,GAAS,MAAM,CAAC,EAAE,YAAW;EACnD;AACA,CAAC;AFLM,IGRMoC,KAAQT,GAAO;EAC1B,YAAY,EAAC,YAAY,cAAa;EACtC,YAAY,EAAC,YAAY,MAAM,OAAO,KAAI;EAC1C,OAAO;EACP,WAAWQ;AACb,CAAC;AHGM,IITMH,KAAML,GAAO;EACxB,YAAY,EAAC,SAAS,MAAM,SAAS,MAAM,UAAU,KAAI;EACzD,OAAO;EACP,UAAUhE,IAAGqC,IAAU;AACrB,WAAO,SAASA,GAAS,MAAM,CAAC,EAAE,YAAW;EACjD;AACA,CAAC;AJGM,IKAM+qC,KAAc;EACzB,SAAS;EACT,UAAU;EACV,QAAQ;EACR,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;EACf,gBAAgB;EAChB,kBAAkB;EAClB,QAAQ;EACR,cAAc;EACd,cAAc;EACd,WAAW;EACX,WAAW;EACX,WAAW;EACX,YAAY;EACZ,WAAW;EACX,YAAY;AACd;ALlBO,IMHDroC,KAAM;ANGL,IMFDD,KAAO;ANEN,IMDDD,KAAQ;AAgCP,SAASG,GAAKC,IAAQ3E,IAAO;AAClC,QAAMgC,IAASK,GAAUrC,EAAK;AAC9B,MAAI+B,KAAW/B,IACX4E,IAAOpC;AAEX,MAAIR,KAAU2C,GAAO;AACnB,WAAOA,GAAO,SAASA,GAAO,OAAO3C,CAAM,CAAC;AAG9C,MAAIA,EAAO,SAAS,KAAKA,EAAO,MAAM,GAAG,CAAC,MAAM,UAAUuC,GAAM,KAAKvE,EAAK,GAAG;AAE3E,QAAIA,GAAM,OAAO,CAAC,MAAM,KAAK;AAE3B,YAAM6E,IAAO7E,GAAM,MAAM,CAAC,EAAE,QAAQwE,IAAMM,EAAS;AACnD/C,MAAAA,KAAW,SAAS8C,EAAK,OAAO,CAAC,EAAE,YAAa,IAAGA,EAAK,MAAM,CAAC;IACrE,OAAW;AAEL,YAAMA,IAAO7E,GAAM,MAAM,CAAC;AAE1B,UAAI,CAACwE,GAAK,KAAKK,CAAI,GAAG;AACpB,YAAIE,IAASF,EAAK,QAAQJ,IAAKO,EAAK;AAEhCD,UAAO,OAAO,CAAC,MAAM,QACvBA,IAAS,MAAMA,IAGjB/E,KAAQ,SAAS+E;MACzB;IACA;AAEIH,QAAOrB;EACX;AAEE,SAAO,IAAIqB,EAAK7C,IAAU/B,EAAK;AACjC;AAQA,SAASgF,GAAMC,IAAI;AACjB,SAAO,MAAMA,GAAG,YAAW;AAC7B;AAQA,SAASH,GAAUG,IAAI;AACrB,SAAOA,GAAG,OAAO,CAAC,EAAE,YAAW;AACjC;ACrFO,IAAMZ,KAAOlC,GAAM,CAACiC,IAAMc,IAAUpB,IAAOK,IAAOJ,EAAG,GAAG,MAAM;AAA9D,IAKMO,KAAMnC,GAAM,CAACiC,IAAMe,IAASrB,IAAOK,IAAOJ,EAAG,GAAG,KAAK;;;;;;;ACdlE,MAAIgpC,KAAgB,mCAEhBC,KAAgB,OAChBC,IAAmB,QAGnBC,KAAiB,0CACjBC,IAAc,SACdC,IAAc,wDACdC,IAAkB,WAGlBC,IAAa,cAGbC,KAAU;GACVC,IAAgB,KAChBC,IAAW,KACXC,KAAe,IAGfC,KAAe,WACfC,IAAmB;AASvBC,OAAiB,SAAUrmC,GAAO3F,IAAS;AACzC,QAAI,OAAO2F,KAAU;AACnB,YAAM,IAAI,UAAU,iCAAiC;AAGvD,QAAI,CAACA,EAAO,QAAO,CAAE;AAErB3F,IAAAA,KAAUA,MAAW,CAAE;AAKvB,QAAIisC,IAAS,GACTC,IAAS;AAOb,aAASC,EAAet/B,GAAK;AAC3B,UAAIugB,IAAQvgB,EAAI,MAAMs+B,EAAa;AAC/B/d,YAAO6e,KAAU7e,EAAM;AAC3B,UAAIniB,KAAI4B,EAAI,YAAY6+B,EAAO;AAC/BQ,UAAS,CAACjhC,KAAI4B,EAAI,SAAS5B,KAAIihC,IAASr/B,EAAI;IAChD;AAOE,aAASjF,IAAW;AAClB,UAAIlE,IAAQ,EAAE,MAAMuoC,GAAQ,QAAQC,EAAQ;AAC5C,aAAO,SAAUnnC,GAAM;AACrB,eAAAA,EAAK,WAAW,IAAIqnC,EAAS1oC,CAAK,GAClConC,EAAY,GACL/lC;MACR;IACL;AAUE,aAASqnC,EAAS1oC,GAAO;AACvB,WAAK,QAAQA,GACb,KAAK,MAAM,EAAE,MAAMuoC,GAAQ,QAAQC,EAAQ,GAC3C,KAAK,SAASlsC,GAAQ;IAC1B;AAKEosC,MAAS,UAAU,UAAUzmC;AAU7B,aAAS6J,EAAM68B,GAAK;AAClB,UAAI70B,IAAM,IAAI;QACZxX,GAAQ,SAAS,MAAMisC,IAAS,MAAMC,IAAS,OAAOG;MACvD;AAOD,UANA70B,EAAI,SAAS60B,GACb70B,EAAI,WAAWxX,GAAQ,QACvBwX,EAAI,OAAOy0B,GACXz0B,EAAI,SAAS00B,GACb10B,EAAI,SAAS7R,GAET,CAAA3F,GAAQ,OAGV,OAAMwX;IAEZ;AAQE,aAASlT,EAAMumC,GAAI;AACjB,UAAIyB,IAAIzB,EAAG,KAAKllC,CAAK;AACrB,UAAK2mC,GACL;AAAA,YAAIz/B,KAAMy/B,EAAE,CAAC;AACb,eAAAH,EAAet/B,EAAG,GAClBlH,IAAQA,EAAM,MAAMkH,GAAI,MAAM,GACvBy/B;MAAA;IACX;AAKE,aAASxB,IAAa;AACpBxmC,QAAM8mC,CAAgB;IAC1B;AAQE,aAASmB,GAASC,GAAO;AACvB,UAAIjhC;AAEJ,WADAihC,IAAQA,KAAS,CAAE,GACXjhC,IAAI1C,EAAAA;AACN0C,cAAM,SACRihC,EAAM,KAAKjhC,CAAC;AAGhB,aAAOihC;IACX;AAQE,aAAS3jC,IAAU;AACjB,UAAInB,IAAME,EAAU;AACpB,UAAI,EAAA+jC,KAAiBhmC,EAAM,OAAO,CAAC,KAAKimC,KAAYjmC,EAAM,OAAO,CAAC,IAGlE;AAAA,iBADIsF,IAAI,GAEN4gC,MAAgBlmC,EAAM,OAAOsF,CAAC,MAC7B2gC,KAAYjmC,EAAM,OAAOsF,CAAC,KAAK0gC,KAAiBhmC,EAAM,OAAOsF,IAAI,CAAC;AAEnE,YAAEA;AAIJ,YAFAA,KAAK,GAED4gC,OAAiBlmC,EAAM,OAAOsF,IAAI,CAAC;AACrC,iBAAOuE,EAAM,wBAAwB;AAGvC,YAAI3C,KAAMlH,EAAM,MAAM,GAAGsF,IAAI,CAAC;AAC9B,eAAAihC,KAAU,GACVC,EAAet/B,EAAG,GAClBlH,IAAQA,EAAM,MAAMsF,CAAC,GACrBihC,KAAU,GAEHxkC,EAAI;UACT,MAAMokC;UACN,SAASj/B;QACf,CAAK;MAAA;IACL;AAQE,aAAS4/B,IAAc;AACrB,UAAI/kC,IAAME,EAAU,GAGhB7F,IAAOuC,EAAM+mC,EAAc;AAC/B,UAAKtpC,GAIL;AAAA,YAHA8G,EAAS,GAGL,CAACvE,EAAMgnC,CAAW,EAAG,QAAO97B,EAAM,sBAAsB;AAG5D,YAAIk9B,KAAMpoC,EAAMinC,CAAW,GAEvB99B,KAAM/F,EAAI;UACZ,MAAMqkC;UACN,UAAUY,EAAK5qC,EAAK,CAAC,EAAE,QAAQmpC,IAAeW,EAAY,CAAC;UAC3D,OAAOa,KACHC,EAAKD,GAAI,CAAC,EAAE,QAAQxB,IAAeW,EAAY,CAAC,IAChDA;QACV,CAAK;AAGD,eAAAvnC,EAAMknC,CAAe,GAEd/9B;MAAA;IACX;AAOE,aAASm/B,IAAe;AACtB,UAAIC,IAAQ,CAAE;AAEdN,SAASM,CAAK;AAId,eADIC,GACIA,IAAOL,EAAAA;AACTK,cAAS,UACXD,EAAM,KAAKC,CAAI,GACfP,GAASM,CAAK;AAIlB,aAAOA;IACX;AAEE,WAAA/B,EAAY,GACL8B,EAAc;EACtB;AAQD,WAASD,EAAK9/B,GAAK;AACjB,WAAOA,IAAMA,EAAI,QAAQ4+B,GAAYI,EAAY,IAAIA;EACvD;;;;;;;ACnQA,MAAIkB,KAAmBC,MAAQA,GAAK,mBAAoB,SAAUC,IAAK;AACnE,WAAQA,MAAOA,GAAI,aAAcA,KAAM,EAAE,SAAWA,GAAK;EAC5D;AACD,SAAO,eAAeC,IAAS,cAAc,EAAE,OAAO,KAAA,CAAM,GAC5DA,GAAA,UAAkBC;AAClB,MAAIC,KAAwBL,GAAgBM,GAAAA,CAA8B;AAe1E,WAASF,EAAcxnC,IAAO2nC,GAAU;AACpC,QAAIC,IAAc;AAClB,QAAI,CAAC5nC,MAAS,OAAOA,MAAU;AAC3B,aAAO4nC;AAEX,QAAIX,KAAAA,GAAmBQ,GAAsB,SAASznC,EAAK,GACvD6nC,IAAc,OAAOF,KAAa;AACtC,WAAAV,EAAa,QAAQ,SAAUH,IAAa;AACxC,UAAIA,GAAY,SAAS,eAGzB;AAAA,YAAIvsC,IAAWusC,GAAY,UAAUtuC,IAAQsuC,GAAY;AACrDe,YACAF,EAASptC,GAAU/B,GAAOsuC,EAAW,IAEhCtuC,MACLovC,IAAcA,KAAe,CAAE,GAC/BA,EAAYrtC,CAAQ,IAAI/B;MAAA;IAEpC,CAAK,GACMovC;EACX;;;;;;;UCzCA,OAAO,eAAeE,IAAS,cAAc,EAAE,OAAO,KAAA,CAAM,GAC3CA,GAAA,YAAG;AACpB,MAAIC,KAAwB,sBACxBC,KAAe,aACfC,IAAkB,WAClBC,KAAsB,8BACtBC,IAAyB,WAIzBC,IAAgB,SAAU7tC,GAAU;AACpC,WAAO,CAACA,KACJ0tC,EAAgB,KAAK1tC,CAAQ,KAC7BwtC,GAAsB,KAAKxtC,CAAQ;EAC1C,GAIG8tC,IAAa,SAAU1pC,GAAOsiB,GAAW;AACzC,WAAOA,EAAU,YAAa;EACjC,GAIGqnB,IAAa,SAAU3pC,GAAO0Q,GAAQ;AAAE,WAAO,GAAG,OAAOA,GAAQ,GAAG;EAAI,GAIxEk5B,KAAY,SAAUhuC,GAAUF,GAAS;AAEzC,WADIA,MAAY,WAAUA,IAAU,CAAA,IAChC+tC,EAAc7tC,CAAQ,IACfA,KAEXA,IAAWA,EAAS,YAAa,GAC7BF,EAAQ,cAERE,IAAWA,EAAS,QAAQ4tC,GAAwBG,CAAU,IAI9D/tC,IAAWA,EAAS,QAAQ2tC,IAAqBI,CAAU,GAExD/tC,EAAS,QAAQytC,IAAcK,CAAU;EACnD;AACD,SAAAP,GAAA,YAAoBS,IAAAA;;;;;;;AC5CpB,MAAInB,KAAmBC,OAAQA,IAAK,mBAAoB,SAAUC,GAAK;AACnE,WAAQA,KAAOA,EAAI,aAAcA,IAAM,EAAE,SAAWA,EAAK;EAC5D,GACGkB,KAAoBpB,GAAgBM,GAAAA,CAA0B,GAC9De,IAAcC,GAAsB;AAIxC,WAASC,GAAU3oC,GAAO3F,GAAS;AAC/B,QAAI6L,IAAS,CAAE;AACf,WAAI,CAAClG,KAAS,OAAOA,KAAU,aAAA,GAG3BwoC,GAAkB,SAASxoC,GAAO,SAAUzF,GAAU/B,IAAO;AAEzD+B,WAAY/B,OACZ0N,GAAAA,GAAWuiC,EAAY,WAAWluC,GAAUF,CAAO,CAAC,IAAI7B;IAEpE,CAAK,GACM0N;EACX;AACA,SAAAyiC,GAAU,UAAUA,IACpBpB,MAAiBoB,IAAAA;;;;ACaV,SAASC,GAAkBpwC,IAAO;AAEvC,SAAI,CAACA,MAAS,OAAOA,MAAU,WACtB,KAIL,cAAcA,MAAS,UAAUA,KAC5ByJ,GAASzJ,GAAM,QAAQ,IAI5B,WAAWA,MAAS,SAASA,KACxByJ,GAASzJ,EAAK,IAInB,UAAUA,MAAS,YAAYA,KAC1BqI,GAAMrI,EAAK,IAIb;AACT;AAMA,SAASqI,GAAMA,IAAO;AACpB,SAAOxI,GAAMwI,MAASA,GAAM,IAAI,IAAI,MAAMxI,GAAMwI,MAASA,GAAM,MAAM;AACvE;AAMA,SAASoB,GAASF,IAAK;AACrB,SAAOlB,GAAMkB,MAAOA,GAAI,KAAK,IAAI,MAAMlB,GAAMkB,MAAOA,GAAI,GAAG;AAC7D;AAMA,SAAS1J,GAAMG,IAAO;AACpB,SAAOA,MAAS,OAAOA,MAAU,WAAWA,KAAQ;AACtD;ACvDO,IAAMqwC,KAAN,cAA2B,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAwDtC,YAAYC,IAAeC,GAAwBC,IAAQ;AACzD,UAAK,GAED,OAAOD,KAA2B,aACpCC,KAASD,GACTA,IAAyB;AAI3B,QAAIE,IAAS,IAET5uC,IAAU,CAAA,GACV6uC,IAAc;AAwClB,QAtCIH,MAGA,UAAUA,KACV,YAAYA,IAEZ1uC,IAAU,EAAC,OAAO0uC,EAAsB,IAIxC,WAAWA,KACX,SAASA,IAET1uC,IAAU,EAAC,OAAO0uC,EAAsB,IAGjC,UAAUA,IACjB1uC,IAAU;MACR,WAAW,CAAC0uC,CAAsB;MAClC,OAAOA,EAAuB;IACxC,IAIQ1uC,IAAU,EAAC,GAAG0uC,EAAsB,IAIpC,OAAOD,MAAkB,WAC3BG,IAASH,KAGF,CAACzuC,EAAQ,SAASyuC,OACzBI,IAAc,MACdD,IAASH,GAAc,SACvBzuC,EAAQ,QAAQyuC,KAGd,CAACzuC,EAAQ,UAAU,CAACA,EAAQ,UAAU,OAAO2uC,MAAW,UAAU;AACpE,YAAM3wC,KAAQ2wC,GAAO,QAAQ,GAAG;AAE5B3wC,MAAAA,OAAU,KACZgC,EAAQ,SAAS2uC,MAEjB3uC,EAAQ,SAAS2uC,GAAO,MAAM,GAAG3wC,EAAK,GACtCgC,EAAQ,SAAS2uC,GAAO,MAAM3wC,KAAQ,CAAC;IAE/C;AAEI,QAAI,CAACgC,EAAQ,SAASA,EAAQ,aAAaA,EAAQ,WAAW;AAC5D,YAAMgY,KAAShY,EAAQ,UAAUA,EAAQ,UAAU,SAAS,CAAC;AAEzDgY,MAAAA,OACFhY,EAAQ,QAAQgY,GAAO;IAE/B;AAEI,UAAMtU,IACJ1D,EAAQ,SAAS,WAAWA,EAAQ,QAChCA,EAAQ,MAAM,QACdA,EAAQ;AAQd,SAAK,YAAYA,EAAQ,aAAa,QAOtC,KAAK,QAAQA,EAAQ,SAAS,QAO9B,KAAK,SAAS0D,IAAQA,EAAM,SAAS,QAWrC,KAAK,QAAQ,QAOb,KAAK,MAQL,KAAK,UAAUkrC,GAOf,KAAK,OAAOlrC,IAAQA,EAAM,OAAO,QASjC,KAAK,OAAO6qC,GAAkBvuC,EAAQ,KAAK,KAAK,OAOhD,KAAK,QAAQA,EAAQ,SAAS,QAO9B,KAAK,SAAS,KAAK,SAOnB,KAAK,SAASA,EAAQ,UAAU,QAOhC,KAAK,SAASA,EAAQ,UAAU,QAWhC,KAAK,QACH6uC,KAAe7uC,EAAQ,SAAS,OAAOA,EAAQ,MAAM,SAAU,WAC3DA,EAAQ,MAAM,QACd,IAYN,KAAK,QAOL,KAAK,UAOL,KAAK,MAUL,KAAK;EAET;AACA;AAEAwuC,GAAa,UAAU,OAAO;AAC9BA,GAAa,UAAU,OAAO;AAC9BA,GAAa,UAAU,SAAS;AAChCA,GAAa,UAAU,UAAU;AACjCA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,SAAS;AAChCA,GAAa,UAAU,OAAO;AAC9BA,GAAa,UAAU,YAAY;AACnCA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,SAAS;AAChCA,GAAa,UAAU,SAAS;ACvShC,IAAM5sC,KAAM,CAAA,EAAG;AAAf,IAGMktC,KAAW,oBAAI,IAAG;AAHxB,IAKMlsC,KAAM;AALZ,IAkBMmsC,KAAgB,oBAAI,IAAI,CAAC,SAAS,SAAS,SAAS,SAAS,IAAI,CAAC;AAlBxE,IAoBMC,KAAmB,oBAAI,IAAI,CAAC,MAAM,IAAI,CAAC;AApB7C,IAsBMC,KAAO;AAcN,SAASC,GAAanoC,IAAM/G,IAAS;AAC1C,MAAI,CAACA,MAAWA,GAAQ,aAAa;AACnC,UAAM,IAAI,UAAU,gCAAgC;AAGtD,QAAMmvC,IAAWnvC,GAAQ,YAAY;AAErC,MAAI6B;AAEJ,MAAI7B,GAAQ,aAAa;AACvB,QAAI,OAAOA,GAAQ,UAAW;AAC5B,YAAM,IAAI;QACR;MACR;AAGI6B,IAAAA,KAASutC,GAAkBD,GAAUnvC,GAAQ,MAAM;EACvD,OAAS;AACL,QAAI,OAAOA,GAAQ,OAAQ;AACzB,YAAM,IAAI,UAAU,sCAAsC;AAG5D,QAAI,OAAOA,GAAQ,QAAS;AAC1B,YAAM,IAAI,UAAU,uCAAuC;AAG7D6B,IAAAA,KAASwtC,GAAiBF,GAAUnvC,GAAQ,KAAKA,GAAQ,IAAI;EACjE;AAGE,QAAMiH,IAAQ;IACZ,UAAUjH,GAAQ;IAClB,WAAW,CAAE;IACb,YAAYA,GAAQ,cAAc,CAAE;IACpC,QAAA6B;IACA,0BAA0B7B,GAAQ,4BAA4B;IAC9D,WAAWA,GAAQ,kBAAkBA,GAAQ,gBAAiB,IAAG;IACjE,UAAAmvC;IACA,oBAAoBnvC,GAAQ,sBAAsB;IAClD,UAAUA,GAAQ,aAAa;IAC/B,UAAUA,GAAQ,YAAY;IAC9B,QAAQA,GAAQ,UAAU,QAAQyC,KAAMD;IACxC,uBAAuBxC,GAAQ,yBAAyB;IACxD,uBAAuBA,GAAQ,0BAA0B;EAC7D,GAEQuF,IAASyB,GAAIC,GAAOF,IAAM,MAAS;AAGzC,SAAIxB,KAAU,OAAOA,KAAW,WACvBA,IAIF0B,EAAM;IACXF;IACAE,EAAM;IACN,EAAC,UAAU1B,KAAU,OAAS;IAC9B;EACJ;AACA;AAcA,SAASyB,GAAIC,IAAOlC,IAAMzG,GAAK;AAC7B,MAAIyG,GAAK,SAAS;AAChB,WAAOyC,GAAQP,IAAOlC,IAAMzG,CAAG;AAGjC,MAAIyG,GAAK,SAAS,uBAAuBA,GAAK,SAAS;AACrD,WAAOuqC,GAAcroC,IAAOlC,EAAI;AAGlC,MAAIA,GAAK,SAAS,uBAAuBA,GAAK,SAAS;AACrD,WAAOwqC,GAActoC,IAAOlC,IAAMzG,CAAG;AAGvC,MAAIyG,GAAK,SAAS;AAChB,WAAOyqC,GAAOvoC,IAAOlC,EAAI;AAG3B,MAAIA,GAAK,SAAS;AAChB,WAAO4D,GAAK1B,IAAOlC,IAAMzG,CAAG;AAG9B,MAAIyG,GAAK,SAAS;AAChB,WAAO6D,GAAK3B,IAAOlC,EAAI;AAE3B;AAcA,SAASyC,GAAQP,IAAOlC,IAAMzG,GAAK;AACjC,QAAM2K,KAAehC,GAAM;AAC3B,MAAInE,IAASmG;AAETlE,EAAAA,GAAK,QAAQ,YAAW,MAAO,SAASkE,GAAa,UAAU,WACjEnG,IAASL,IACTwE,GAAM,SAASnE,IAGjBmE,GAAM,UAAU,KAAKlC,EAAI;AAEzB,QAAM7G,IAAOuxC,GAAsBxoC,IAAOlC,GAAK,SAAS,KAAK,GACvDZ,IAAQurC,GAAmBzoC,IAAOlC,EAAI;AAC5C,MAAID,IAAW6qC,GAAe1oC,IAAOlC,EAAI;AAEzC,SAAIgqC,GAAc,IAAIhqC,GAAK,OAAO,MAChCD,IAAWA,EAAS,OAAO,SAAUE,IAAO;AAC1C,WAAO,OAAOA,MAAU,WAAW,CAAC8lC,GAAW9lC,EAAK,IAAI;EACzD,CAAA,IAGH4qC,GAAQ3oC,IAAO9C,GAAOjG,GAAM6G,EAAI,GAChC8qC,GAAY1rC,GAAOW,CAAQ,GAG3BmC,GAAM,UAAU,IAAG,GACnBA,GAAM,SAASgC,IAERhC,GAAM,OAAOlC,IAAM7G,GAAMiG,GAAO7F,CAAG;AAC5C;AAYA,SAASgxC,GAAcroC,IAAOlC,IAAM;AAClC,MAAIA,GAAK,QAAQA,GAAK,KAAK,UAAUkC,GAAM,WAAW;AAEpD,UAAMmpB,KADUrrB,GAAK,KAAK,OACC,KAAK,CAAC;AACjC+qC,WAAO1f,GAAW;IAIhBnpB,GAAM,UAAU,mBAAmBmpB,GAAW,UAAU;EAE9D;AAEE2f,KAAY9oC,IAAOlC,GAAK,QAAQ;AAClC;AAYA,SAASyqC,GAAOvoC,IAAOlC,IAAM;AAC3B,MAAIA,GAAK,QAAQA,GAAK,KAAK,UAAUkC,GAAM;AAEzC;;MACEA,GAAM,UAAU,gBAAgBlC,GAAK,KAAK,MAAM;;AAIpDgrC,KAAY9oC,IAAOlC,GAAK,QAAQ;AAClC;AAcA,SAASwqC,GAActoC,IAAOlC,IAAMzG,GAAK;AACvC,QAAM2K,KAAehC,GAAM;AAC3B,MAAInE,IAASmG;AAETlE,EAAAA,GAAK,SAAS,SAASkE,GAAa,UAAU,WAChDnG,IAASL,IACTwE,GAAM,SAASnE,IAGjBmE,GAAM,UAAU,KAAKlC,EAAI;AAEzB,QAAM7G,IACJ6G,GAAK,SAAS,OACVkC,GAAM,WACNwoC,GAAsBxoC,IAAOlC,GAAK,MAAM,IAAI,GAC5CZ,IAAQ6rC,GAAsB/oC,IAAOlC,EAAI,GACzCD,IAAW6qC,GAAe1oC,IAAOlC,EAAI;AAE3C,SAAA6qC,GAAQ3oC,IAAO9C,GAAOjG,GAAM6G,EAAI,GAChC8qC,GAAY1rC,GAAOW,CAAQ,GAG3BmC,GAAM,UAAU,IAAG,GACnBA,GAAM,SAASgC,IAERhC,GAAM,OAAOlC,IAAM7G,GAAMiG,GAAO7F,CAAG;AAC5C;AAcA,SAASqK,GAAK1B,IAAOlC,IAAMzG,GAAK;AAE9B,QAAM6F,KAAQ,CAAA;AAEd,SAAA0rC,GAAY1rC,IAAOwrC,GAAe1oC,IAAOlC,EAAI,CAAC,GAEvCkC,GAAM,OAAOlC,IAAMkC,GAAM,UAAU9C,IAAO7F,CAAG;AACtD;AAYA,SAASsK,GAAK/K,IAAGkH,IAAM;AACrB,SAAOA,GAAK;AACd;AAgBA,SAAS6qC,GAAQ3oC,IAAO9C,IAAOjG,GAAM6G,IAAM;AAErC,SAAO7G,KAAS,YAAYA,MAAS+I,GAAM,YAAYA,GAAM,aAC/D9C,GAAM,OAAOY;AAEjB;AAYA,SAAS8qC,GAAY1rC,IAAOW,IAAU;AACpC,MAAIA,GAAS,SAAS,GAAG;AACvB,UAAM3G,IAAQ2G,GAAS,SAAS,IAAIA,KAAWA,GAAS,CAAC;AAErD3G,UACFgG,GAAM,WAAWhG;EAEvB;AACA;AAYA,SAASkxC,GAAiBxxC,IAAG6iC,IAAK8G,GAAM;AACtC,SAAO3lC;AAEP,WAASA,GAAOhE,GAAGK,GAAMiG,GAAO7F,GAAK;AAGnC,UAAMiK,IADmB,MAAM,QAAQpE,EAAM,QAAQ,IACvBqjC,IAAO9G;AACrC,WAAOpiC,IAAMiK,EAAGrK,GAAMiG,GAAO7F,CAAG,IAAIiK,EAAGrK,GAAMiG,CAAK;EACtD;AACA;AAUA,SAASirC,GAAkBD,IAAUc,IAAQ;AAC3C,SAAOpuC;AAEP,WAASA,EAAOkD,IAAM7G,GAAMiG,GAAO7F,GAAK;AAEtC,UAAM4xC,IAAmB,MAAM,QAAQ/rC,EAAM,QAAQ,GAC/CqC,KAAQ2c,GAAWpe,EAAI;AAC7B,WAAOkrC;MACL/xC;MACAiG;MACA7F;MACA4xC;MACA;QACE,cAAc1pC,KAAQA,GAAM,SAAS,IAAI;QACzC,UAAU2oC;QACV,YAAY3oC,KAAQA,GAAM,OAAO;MAClC;MACD;IACN;EACA;AACA;AAYA,SAASkpC,GAAmBzoC,IAAOlC,IAAM;AAEvC,QAAMZ,IAAQ,CAAA;AAEd,MAAIgsC,IAEApuC;AAEJ,OAAKA,KAAQgD,GAAK;AAChB,QAAIhD,MAAS,cAAcH,GAAI,KAAKmD,GAAK,YAAYhD,CAAI,GAAG;AAC1D,YAAMwD,IAAS6D,GAAenC,IAAOlF,GAAMgD,GAAK,WAAWhD,CAAI,CAAC;AAEhE,UAAIwD,GAAQ;AACV,cAAM,CAACjH,GAAKH,CAAK,IAAIoH;AAGnB0B,QAAAA,GAAM,yBACN3I,MAAQ,WACR,OAAOH,KAAU,YACjB6wC,GAAiB,IAAIjqC,GAAK,OAAO,IAEjCorC,KAAahyC,IAEbgG,EAAM7F,CAAG,IAAIH;MAEvB;IACA;AAGE,MAAIgyC,IAAY;AAEd,UAAMxqC;;MAA8BxB,EAAM,UAAUA,EAAM,QAAQ,CAAA;;AAClEwB,MAAMsB,GAAM,0BAA0B,QAAQ,eAAe,WAAW,IACtEkpC;EACN;AAEE,SAAOhsC;AACT;AAYA,SAAS6rC,GAAsB/oC,IAAOlC,IAAM;AAE1C,QAAMZ,IAAQ,CAAA;AAEd,aAAWzD,MAAaqE,GAAK;AAC3B,QAAIrE,GAAU,SAAS;AACrB,UAAIA,GAAU,QAAQA,GAAU,KAAK,UAAUuG,GAAM,WAAW;AAE9D,cAAMmpB,IADU1vB,GAAU,KAAK,OACJ,KAAK,CAAC;AAC1B0vB,UAAW;AAClB,cAAMggB,IAAmBhgB,EAAW;AAC7BggB,UAAiB;AACxB,cAAMlwC,IAAWkwC,EAAiB,WAAW,CAAC;AACvClwC,UAAS,MAEhB,OAAO;UACLiE;UACA8C,GAAM,UAAU,mBAAmB/G,EAAS,QAAQ;QAC9D;MACA;AACQ6vC,WAAY9oC,IAAOlC,GAAK,QAAQ;SAE7B;AAEL,YAAMpG,IAAO+B,GAAU;AAEvB,UAAIvC;AAEJ,UAAIuC,GAAU,SAAS,OAAOA,GAAU,SAAU;AAChD,YACEA,GAAU,MAAM,QAChBA,GAAU,MAAM,KAAK,UACrBuG,GAAM,WACN;AAEA,gBAAMmpB,IADU1vB,GAAU,MAAM,KAAK,OACV,KAAK,CAAC;AAC1B0vB,YAAW,MAClBjyB,IAAQ8I,GAAM,UAAU,mBAAmBmpB,EAAW,UAAU;QAC1E;AACU2f,aAAY9oC,IAAOlC,GAAK,QAAQ;;AAGlC5G,YAAQuC,GAAU,UAAU,OAAO,OAAOA,GAAU;AAItDyD,QAAMxF,CAAI;MAAuCR;IACvD;AAGE,SAAOgG;AACT;AAYA,SAASwrC,GAAe1oC,IAAOlC,IAAM;AAEnC,QAAMD,IAAW,CAAA;AACjB,MAAI9G,KAAQ;AAIZ,QAAMqyC,IAAeppC,GAAM,WAAW,oBAAI,IAAG,IAAK6nC;AAElD,SAAO,EAAE9wC,KAAQ+G,GAAK,SAAS,UAAQ;AACrC,UAAMC,IAAQD,GAAK,SAAS/G,EAAK;AAEjC,QAAIM;AAEJ,QAAI2I,GAAM,UAAU;AAClB,YAAMtI,KACJqG,EAAM,SAAS,YACXA,EAAM,UACNA,EAAM,SAAS,uBACbA,EAAM,SAAS,sBACfA,EAAM,OACN;AAER,UAAIrG,IAAM;AACR,cAAMuM,IAAQmlC,EAAa,IAAI1xC,EAAI,KAAK;AACxCL,YAAMK,KAAO,MAAMuM,GACnBmlC,EAAa,IAAI1xC,IAAMuM,IAAQ,CAAC;MACxC;IACA;AAEI,UAAM3F,IAASyB,GAAIC,IAAOjC,GAAO1G,CAAG;AAChCiH,UAAW,UAAWT,EAAS,KAAKS,CAAM;EAClD;AAEE,SAAOT;AACT;AAcA,SAASsE,GAAenC,IAAOlF,IAAM5D,GAAO;AAC1C,QAAM6D,KAAOa,GAAKoE,GAAM,QAAQlF,EAAI;AAGpC,MACE,EAAA5D,KAAU,QAET,OAAOA,KAAU,YAAY,OAAO,MAAMA,CAAK,IAYlD;AAAA,QAPI,MAAM,QAAQA,CAAK,MAGrBA,IAAQ6D,GAAK,iBAAiByD,GAAOtH,CAAK,IAAIqH,GAAOrH,CAAK,IAIxD6D,GAAK,aAAa,SAAS;AAC7B,UAAIurC,IACF,OAAOpvC,KAAU,WAAWA,IAAQmyC,GAAWrpC,IAAO,OAAO9I,CAAK,CAAC;AAErE,aAAI8I,GAAM,0BAA0B,UAClCsmC,IAAcgD,GAA2BhD,CAAW,IAG/C,CAAC,SAASA,CAAW;IAChC;AAEE,WAAO;MACLtmC,GAAM,6BAA6B,WAAWjF,GAAK,QAC/CipC,GAAYjpC,GAAK,QAAQ,KAAKA,GAAK,WACnCA,GAAK;MACT7D;IACJ;EAAA;AACA;AAcA,SAASmyC,GAAWrpC,IAAO9I,IAAO;AAChC,MAAI;AACF,WAAOqyC,GAAUryC,IAAO,EAAC,aAAa,KAAI,CAAC;EAC5C,SAAQqR,GAAO;AACd,QAAIvI,GAAM;AACR,aAAO,CAAA;AAGT,UAAMwpC;;MAA8BjhC;OAC9B5Q,IAAU,IAAI4vC,GAAa,kCAAkC;MACjE,WAAWvnC,GAAM;MACjB,OAAAwpC;MACA,QAAQ;MACR,QAAQ;IACT,CAAA;AACD,UAAA7xC,EAAQ,OAAOqI,GAAM,YAAY,QACjCrI,EAAQ,MAAMqwC,KAAO,iCAEfrwC;EACV;AACA;AAcA,SAAS6wC,GAAsBxoC,IAAOtI,IAAM+xC,GAAiB;AAE3D,MAAInrC;AAEJ,MAAI,CAACmrC;AACHnrC,IAAAA,KAAS,EAAC,MAAM,WAAW,OAAO5G,GAAI;WAC7BA,GAAK,SAAS,GAAG,GAAG;AAC7B,UAAMgyC,IAAchyC,GAAK,MAAM,GAAG;AAClC,QAAIX,IAAQ,IAER+G;AAEJ,WAAO,EAAE/G,IAAQ2yC,EAAY,UAAQ;AAEnC,YAAM5uC,IAAO6uC,GAAiBD,EAAY3yC,CAAK,CAAC,IAC5C,EAAC,MAAM,cAAc,MAAM2yC,EAAY3yC,CAAK,EAAC,IAC7C,EAAC,MAAM,WAAW,OAAO2yC,EAAY3yC,CAAK,EAAC;AAC/C+G,UAAOA,IACH;QACE,MAAM;QACN,QAAQA;QACR,UAAUhD;QACV,UAAU,CAAA,EAAQ/D,KAAS+D,EAAK,SAAS;QACzC,UAAU;MACtB,IACUA;IACV;AAGIwD,IAAAA,KAASR;EACb;AACIQ,IAAAA,KACEqrC,GAAiBjyC,EAAI,KAAK,CAAC,SAAS,KAAKA,EAAI,IACzC,EAAC,MAAM,cAAA,MAAcA,GAAI,IACzB,EAAC,MAAM,WAAW,OAAOA,GAAI;AAKrC,MAAI4G,GAAO,SAAS,WAAW;AAC7B,UAAM5G;;MAAuC4G,GAAO;;AACpD,WAAO3D,GAAI,KAAKqF,GAAM,YAAYtI,CAAI,IAAIsI,GAAM,WAAWtI,CAAI,IAAIA;EACvE;AAGE,MAAIsI,GAAM;AACR,WAAOA,GAAM,UAAU,mBAAmB1B,EAAM;AAGlDwqC,KAAY9oC,EAAK;AACnB;AAOA,SAAS8oC,GAAY9oC,IAAO4pC,IAAO;AACjC,QAAMjyC,IAAU,IAAI4vC;IAClB;IACA;MACE,WAAWvnC,GAAM;MACjB,OAAA4pC;MACA,QAAQ;MACR,QAAQ;IACd;EACA;AACE,QAAAjyC,EAAQ,OAAOqI,GAAM,YAAY,QACjCrI,EAAQ,MAAMqwC,KAAO,sDAEfrwC;AACR;AAQA,SAAS2xC,GAA2BO,IAAW;AAE7C,QAAMC,KAAY,CAAA;AAElB,MAAItqC;AAEJ,OAAKA,KAAQqqC;AACPlvC,OAAI,KAAKkvC,IAAWrqC,CAAI,MAC1BsqC,GAAUC,GAA0BvqC,CAAI,CAAC,IAAIqqC,GAAUrqC,CAAI;AAI/D,SAAOsqC;AACT;AAQA,SAASC,GAA0BvqC,IAAM;AACvC,MAAIsB,KAAKtB,GAAK,QAAQ7D,IAAKquC,EAAM;AAEjC,SAAIlpC,GAAG,MAAM,GAAG,CAAC,MAAM,UAAOA,KAAK,MAAMA,KAClCA;AACT;AAUA,SAASkpC,GAAO7tC,IAAI;AAClB,SAAO,MAAMA,GAAG,YAAW;AAC7B;AC1wBO,IAAM8tC,KAAgB;EAC3B,QAAQ,CAAC,MAAM;EACf,MAAM,CAAC,cAAc,OAAO,OAAO,GAAG;EACtC,MAAM,CAAC,QAAQ;EACf,YAAY,CAAC,UAAU,OAAO;EAC9B,MAAM,CAAC,KAAK,QAAQ,QAAQ,MAAM;EAClC,MAAM,CAAC,UAAU;EACjB,QAAQ;EACR,UAAU,CAAC,MAAM;EACjB,MAAM,CAAC,KAAK,MAAM;EAClB,QAAQ,CAAC,OAAO;EAChB,KAAK;IACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;AACA;AAtBO,ICJD1pC,KAAU,OAAO,WAAa,OAAe,SAAS,cAAc,GAAG;AAMtE,SAAS2pC,GAA8BhzC,IAAO;AACnD,QAAMizC,KAAqB,MAAMjzC,KAAQ;AACzCqJ,KAAQ,YAAY4pC;AACpB,QAAMnkC,IAAOzF,GAAQ;AAUrB,SAAIyF,EAAK,WAAWA,EAAK,SAAS,CAAC,MAAM,MAAgB9O,OAAU,UAQ5D8O,MAASmkC,KAPP,QAOoCnkC;AAC/C;ACVO,SAAS8mB,GAAO1uB,IAAM3B,IAAOswB,GAAQC,IAAO;AACjD,QAAMtwB,IAAM0B,GAAK;AACjB,MAAI6uB,IAAa,GAEb5rB;AAWJ,MARI5E,KAAQ,IACVA,KAAQ,CAACA,KAAQC,IAAM,IAAIA,IAAMD,KAEjCA,KAAQA,KAAQC,IAAMA,IAAMD,IAE9BswB,IAASA,IAAS,IAAIA,IAAS,GAG3BC,GAAM,SAAS;AACjB3rB,QAAa,MAAM,KAAK2rB,EAAK,GAC7B3rB,EAAW,QAAQ5E,IAAOswB,CAAM,GAEhC3uB,GAAK,OAAO,GAAGiD,CAAU;;AAMzB,SAHI0rB,KAAQ3uB,GAAK,OAAO3B,IAAOswB,CAAM,GAG9BE,IAAaD,GAAM;AACxB3rB,UAAa2rB,GAAM,MAAMC,GAAYA,IAAa,GAAK,GACvD5rB,EAAW,QAAQ5E,IAAO,CAAC,GAE3B2B,GAAK,OAAO,GAAGiD,CAAU,GACzB4rB,KAAc,KACdxwB,MAAS;AAGf;AAkBO,SAAS2tC,GAAKhsC,IAAM4uB,IAAO;AAChC,SAAI5uB,GAAK,SAAS,KAChB0uB,GAAO1uB,IAAMA,GAAK,QAAQ,GAAG4uB,EAAK,GAC3B5uB,MAEF4uB;AACT;ACvEA,IAAME,KAAiB,CAAA,EAAG;AAUnB,SAASC,GAAkBC,IAAY;AAE5C,QAAMhtB,KAAM,CAAA;AACZ,MAAIrJ,IAAQ;AAEZ,SAAO,EAAEA,IAAQq2B,GAAW;AAC1BC,OAAgBjtB,IAAKgtB,GAAWr2B,CAAK,CAAC;AAGxC,SAAOqJ;AACT;AAWA,SAASitB,GAAgBjtB,IAAKktB,IAAW;AAEvC,MAAIC;AAEJ,OAAKA,KAAQD,IAAW;AAGtB,UAAME,KAFQN,GAAe,KAAK9sB,IAAKmtB,CAAI,IAAIntB,GAAImtB,CAAI,IAAI,YAEpCntB,GAAImtB,CAAI,IAAI,CAAE,IAE/BE,IAAQH,GAAUC,CAAI;AAE5B,QAAIjqB;AAEJ,QAAImqB;AACF,WAAKnqB,KAAQmqB,GAAO;AACbP,WAAe,KAAKM,GAAMlqB,CAAI,MAAGkqB,EAAKlqB,CAAI,IAAI,CAAA;AACnD,cAAMpM,IAAQu2B,EAAMnqB,CAAI;AACxBoqB;;UAEEF,EAAKlqB,CAAI;UACT,MAAM,QAAQpM,CAAK,IAAIA,IAAQA,IAAQ,CAACA,CAAK,IAAI,CAAA;QAC3D;MACA;EAEA;AACA;AAUA,SAASw2B,GAAWC,IAAUvvB,IAAM;AAClC,MAAIrH,IAAQ;AAEZ,QAAMkvB,KAAS,CAAA;AAEf,SAAO,EAAElvB,IAAQqH,GAAK;AAEnB,KAACA,GAAKrH,CAAK,EAAE,QAAQ,UAAU42B,KAAW1H,IAAQ,KAAK7nB,GAAKrH,CAAK,CAAC;AAGrE+1B,KAAOa,IAAU,GAAG,GAAG1H,EAAM;AAC/B;ACxEO,SAASokB,GAAgCnzC,IAAO2O,IAAM;AAC3D,QAAMvC,IAAO,OAAO,SAASpM,IAAO2O,EAAI;AACxC;;IAEAvC,IAAO,KAAKA,MAAS,MAAMA,IAAO,MAAMA,IAAO;IAE/CA,IAAO,OAAOA,IAAO;IAErBA,IAAO,SAAUA,IAAO;IAExBA,IAAO,SAAUA,IAAO;KACvBA,IAAO,WAAY,UAAWA,IAAO,WAAY;;IAElDA,IAAO,UACE,MAEF,OAAO,cAAcA,CAAI;;AAClC;ACZO,SAAS8f,GAAoBlsB,IAAO;AACzC,SACEA,GAEG,QAAQ,eAAe,GAAG,EAE1B,QAAQ,UAAU,EAAE,EAOpB,YAAW,EACX,YAAW;AAElB;ACxBO,IAAM2J,KAAU;EACrB,UAAUypC;AACZ;AAMA,SAASA,GAAkBzb,IAAS;AAClC,QAAM0b,KAAe1b,GAAQ;IAC3B,KAAK,OAAO,WAAW;IACvB2b;IACAC;EACJ;AAEE,MAAIttC;AACJ,SAAOotC;AAGP,WAASC,GAA2BlnC,GAAM;AACxC,QAAIA,MAAS,MAAM;AACjBurB,MAAAA,GAAQ,QAAQvrB,CAAI;AACpB;IACN;AACI,WAAAurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClBuC,EAAavC,IAAS0b,IAAc,YAAY;EAC3D;AAGE,WAASE,EAAiBnnC,GAAM;AAC9B,WAAAurB,GAAQ,MAAM,WAAW,GAClB6b,EAAUpnC,CAAI;EACzB;AAGE,WAASonC,EAAUpnC,GAAM;AACvB,UAAM3G,KAAQkyB,GAAQ,MAAM,aAAa;MACvC,aAAa;MACb,UAAA1xB;IACD,CAAA;AACD,WAAIA,MACFA,EAAS,OAAOR,KAElBQ,IAAWR,IACJwE,EAAKmC,CAAI;EACpB;AAGE,WAASnC,EAAKmC,GAAM;AAClB,QAAIA,MAAS,MAAM;AACjBurB,MAAAA,GAAQ,KAAK,WAAW,GACxBA,GAAQ,KAAK,WAAW,GACxBA,GAAQ,QAAQvrB,CAAI;AACpB;IACN;AACI,WAAI8c,EAAmB9c,CAAI,KACzBurB,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,WAAW,GACjB6b,MAIT7b,GAAQ,QAAQvrB,CAAI,GACbnC;EACX;AACA;AC1DO,IAAMd,KAAW;EACtB,UAAUsqC;AACZ;AAFO,IAKDC,KAAqB;EACzB,UAAUC;AACZ;AAMA,SAASF,GAAmB9b,IAAS;AACnC,QAAME,KAAO,MAEPzI,IAAQ,CAAA;AACd,MAAIwkB,KAAY,GAEZC,GAEAC,GAEAC;AACJ,SAAOxuC;AAGP,WAASA,EAAM6G,GAAM;AAWnB,QAAIwnC,KAAYxkB,EAAM,QAAQ;AAC5B,YAAMjoB,IAAOioB,EAAMwkB,EAAS;AAC5B,aAAA/b,GAAK,iBAAiB1wB,EAAK,CAAC,GACrBwwB,GAAQ;QACbxwB,EAAK,CAAC,EAAE;QACR6sC;QACAC;MACR,EAAQ7nC,CAAI;IACZ;AAGI,WAAO6nC,EAAmB7nC,CAAI;EAClC;AAGE,WAAS4nC,GAAiB5nC,GAAM;AAM9B,QALAwnC,MAKI/b,GAAK,eAAe,YAAY;AAClCA,MAAAA,GAAK,eAAe,aAAa,QAC7Bgc,KACFK,EAAS;AAKX,YAAMC,IAAmBtc,GAAK,OAAO;AACrC,UAAIuc,IAAkBD,GAElB9rC;AAGJ,aAAO+rC;AACL,YACEvc,GAAK,OAAOuc,CAAe,EAAE,CAAC,MAAM,UACpCvc,GAAK,OAAOuc,CAAe,EAAE,CAAC,EAAE,SAAS,aACzC;AACA/rC,cAAQwvB,GAAK,OAAOuc,CAAe,EAAE,CAAC,EAAE;AACxC;QACV;AAEMC,QAAeT,EAAS;AAGxB,UAAI/zC,IAAQs0C;AACZ,aAAOt0C,IAAQg4B,GAAK,OAAO;AACzBA,QAAAA,GAAK,OAAOh4B,CAAK,EAAE,CAAC,EAAE,MAAM,OAAO,OAAO,CAAA,GAAIwI,CAAK,GACnDxI;AAIF,aAAA+1B;QACEiC,GAAK;QACLuc,IAAkB;QAClB;QACAvc,GAAK,OAAO,MAAMsc,CAAgB;MAC1C,GAGMtc,GAAK,OAAO,SAASh4B,GACdo0C,EAAmB7nC,CAAI;IACpC;AACI,WAAO7G,EAAM6G,CAAI;EACrB;AAGE,WAAS6nC,EAAmB7nC,GAAM;AAMhC,QAAIwnC,OAAcxkB,EAAM,QAAQ;AAI9B,UAAI,CAACykB;AACH,eAAOS,GAAkBloC,CAAI;AAM/B,UAAIynC,EAAU,oBAAoBA,EAAU,iBAAiB;AAC3D,eAAOU,EAAUnoC,CAAI;AAQvByrB,MAAAA,GAAK,YAAY,CAAA,EACfgc,EAAU,oBAAoB,CAACA,EAAU;IAEjD;AAGI,WAAAhc,GAAK,iBAAiB,CAAA,GACfF,GAAQ;MACb+b;MACAc;MACAC;IACN,EAAMroC,CAAI;EACV;AAGE,WAASooC,EAAqBpoC,GAAM;AAClC,WAAIynC,KAAWK,EAAS,GACxBG,EAAeT,EAAS,GACjBU,GAAkBloC,CAAI;EACjC;AAGE,WAASqoC,GAAsBroC,GAAM;AACnC,WAAAyrB,GAAK,OAAO,KAAKA,GAAK,IAAG,EAAG,IAAI,IAAI+b,OAAcxkB,EAAM,QACxD2kB,IAAkBlc,GAAK,IAAA,EAAM,QACtB0c,EAAUnoC,CAAI;EACzB;AAGE,WAASkoC,GAAkBloC,GAAM;AAE/B,WAAAyrB,GAAK,iBAAiB,CAAA,GACfF,GAAQ;MACb+b;MACAgB;MACAH;IACN,EAAMnoC,CAAI;EACV;AAGE,WAASsoC,EAAkBtoC,GAAM;AAC/B,WAAAwnC,MACAxkB,EAAM,KAAK,CAACyI,GAAK,kBAAkBA,GAAK,cAAc,CAAC,GAEhDyc,GAAkBloC,CAAI;EACjC;AAGE,WAASmoC,EAAUnoC,GAAM;AACvB,QAAIA,MAAS,MAAM;AACbynC,WAAWK,EAAS,GACxBG,EAAe,CAAC,GAChB1c,GAAQ,QAAQvrB,CAAI;AACpB;IACN;AACI,WAAAynC,IAAYA,KAAahc,GAAK,OAAO,KAAKA,GAAK,IAAK,CAAA,GACpDF,GAAQ,MAAM,aAAa;MACzB,aAAa;MACb,UAAUmc;MACV,YAAYD;IACb,CAAA,GACMc,EAAavoC,CAAI;EAC5B;AAGE,WAASuoC,EAAavoC,GAAM;AAC1B,QAAIA,MAAS,MAAM;AACjBwoC,MAAAA,GAAajd,GAAQ,KAAK,WAAW,GAAG,IAAI,GAC5C0c,EAAe,CAAC,GAChB1c,GAAQ,QAAQvrB,CAAI;AACpB;IACN;AACI,WAAI8c,EAAmB9c,CAAI,KACzBurB,GAAQ,QAAQvrB,CAAI,GACpBwoC,GAAajd,GAAQ,KAAK,WAAW,CAAC,GAEtCic,KAAY,GACZ/b,GAAK,YAAY,QACVtyB,MAEToyB,GAAQ,QAAQvrB,CAAI,GACbuoC;EACX;AAOE,WAASC,GAAanvC,GAAOovC,GAAK;AAChC,UAAMC,IAASjd,GAAK,YAAYpyB,CAAK;AAyCrC,QAxCIovC,KAAKC,EAAO,KAAK,IAAI,GACzBrvC,EAAM,WAAWquC,GACbA,MAAYA,EAAW,OAAOruC,IAClCquC,IAAaruC,GACbouC,EAAU,WAAWpuC,EAAM,KAAK,GAChCouC,EAAU,MAAMiB,CAAM,GAmClBjd,GAAK,OAAO,KAAKpyB,EAAM,MAAM,IAAI,GAAG;AACtC,UAAI5F,IAAQg0C,EAAU,OAAO;AAC7B,aAAOh0C;AACL;;UAEEg0C,EAAU,OAAOh0C,CAAK,EAAE,CAAC,EAAE,MAAM,SAASk0C;WAEzC,CAACF,EAAU,OAAOh0C,CAAK,EAAE,CAAC,EAAE;UAE3Bg0C,EAAU,OAAOh0C,CAAK,EAAE,CAAC,EAAE,IAAI,SAASk0C;;AAI1C;AAMJ,YAAMI,IAAmBtc,GAAK,OAAO;AACrC,UAAIuc,IAAkBD,GAElB5b,IAEAlwB;AAGJ,aAAO+rC;AACL,YACEvc,GAAK,OAAOuc,CAAe,EAAE,CAAC,MAAM,UACpCvc,GAAK,OAAOuc,CAAe,EAAE,CAAC,EAAE,SAAS,aACzC;AACA,cAAI7b,IAAM;AACRlwB,gBAAQwvB,GAAK,OAAOuc,CAAe,EAAE,CAAC,EAAE;AACxC;UACZ;AACU7b,eAAO;QACjB;AAMM,WAJA8b,EAAeT,EAAS,GAGxB/zC,IAAQs0C,GACDt0C,IAAQg4B,GAAK,OAAO;AACzBA,QAAAA,GAAK,OAAOh4B,CAAK,EAAE,CAAC,EAAE,MAAM,OAAO,OAAO,CAAA,GAAIwI,CAAK,GACnDxI;AAIF+1B;QACEiC,GAAK;QACLuc,IAAkB;QAClB;QACAvc,GAAK,OAAO,MAAMsc,CAAgB;MAC1C,GAGMtc,GAAK,OAAO,SAASh4B;IAC3B;EACA;AAME,WAASw0C,EAAexlB,GAAM;AAC5B,QAAIhvB,IAAQuvB,EAAM;AAGlB,WAAOvvB,MAAUgvB,KAAM;AACrB,YAAMttB,IAAQ6tB,EAAMvvB,CAAK;AACzBg4B,MAAAA,GAAK,iBAAiBt2B,EAAM,CAAC,GAC7BA,EAAM,CAAC,EAAE,KAAK,KAAKs2B,IAAMF,EAAO;IACtC;AACIvI,MAAM,SAASP;EACnB;AACE,WAASqlB,IAAY;AACnBL,MAAU,MAAM,CAAC,IAAI,CAAC,GACtBC,IAAa,QACbD,IAAY,QACZhc,GAAK,eAAe,aAAa;EACrC;AACA;AAMA,SAAS8b,GAAkBhc,IAASxS,IAAIyS,GAAK;AAG3C,SAAOsC;IACLvC;IACAA,GAAQ,QAAQ,KAAK,OAAO,WAAW,UAAUxS,IAAIyS,CAAG;IACxD;IACA,KAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY;EAC/E;AACA;AC3WO,SAASkC,GAAWtD,IAAYmD,IAAQI,GAAS;AAEtD,QAAMC,KAAS,CAAA;AACf,MAAIn6B,IAAQ;AAEZ,SAAO,EAAEA,IAAQ22B,GAAW,UAAQ;AAClC,UAAMyD,IAAUzD,GAAW32B,CAAK,EAAE;AAE9Bo6B,SAAW,CAACD,GAAO,SAASC,CAAO,MACrCN,KAASM,EAAQN,IAAQI,CAAO,GAChCC,GAAO,KAAKC,CAAO;EAEzB;AAEE,SAAON;AACT;ACjBO,IAAMob,KAAY;EACvB,MAAM;EACN,UAAUC;EACV,YAAYC;AACd;AAQA,SAASA,GAAoBtb,IAAQI,IAAS;AAC5C,MAAIl6B,IAAQ,IAERmxB,IAEAkkB,GAEAzqC,GAEA0qC,GAEAC,GAEAC,IAEAhZ,GAEAn0B;AAMJ,SAAO,EAAErI,IAAQ85B,GAAO;AAEtB,QACEA,GAAO95B,CAAK,EAAE,CAAC,MAAM,WACrB85B,GAAO95B,CAAK,EAAE,CAAC,EAAE,SAAS,uBAC1B85B,GAAO95B,CAAK,EAAE,CAAC,EAAE,QAAA;AAKjB,WAHAmxB,KAAOnxB,GAGAmxB;AAEL,YACE2I,GAAO3I,EAAI,EAAE,CAAC,MAAM,UACpB2I,GAAO3I,EAAI,EAAE,CAAC,EAAE,SAAS,uBACzB2I,GAAO3I,EAAI,EAAE,CAAC,EAAE;QAEhB+I,GAAQ,eAAeJ,GAAO3I,EAAI,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,MAClD+I,GAAQ,eAAeJ,GAAO95B,CAAK,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,GACvD;AAKA,eACG85B,GAAO3I,EAAI,EAAE,CAAC,EAAE,UAAU2I,GAAO95B,CAAK,EAAE,CAAC,EAAE,WAC3C85B,GAAO95B,CAAK,EAAE,CAAC,EAAE,IAAI,SAAS85B,GAAO95B,CAAK,EAAE,CAAC,EAAE,MAAM,UAAU,KAChE,GACG85B,GAAO3I,EAAI,EAAE,CAAC,EAAE,IAAI,SACnB2I,GAAO3I,EAAI,EAAE,CAAC,EAAE,MAAM,SACtB2I,GAAO95B,CAAK,EAAE,CAAC,EAAE,IAAI,SACrB85B,GAAO95B,CAAK,EAAE,CAAC,EAAE,MAAM,UACzB;AAGF;AAIFw1C,UAAAA,KACE1b,GAAO3I,EAAI,EAAE,CAAC,EAAE,IAAI,SAAS2I,GAAO3I,EAAI,EAAE,CAAC,EAAE,MAAM,SAAS,KAC5D2I,GAAO95B,CAAK,EAAE,CAAC,EAAE,IAAI,SAAS85B,GAAO95B,CAAK,EAAE,CAAC,EAAE,MAAM,SAAS,IAC1D,IACA;AACN,gBAAM0F,KAAQ,OAAO,OAAO,CAAA,GAAIo0B,GAAO3I,EAAI,EAAE,CAAC,EAAE,GAAG,GAC7CxrB,KAAM,OAAO,OAAO,CAAA,GAAIm0B,GAAO95B,CAAK,EAAE,CAAC,EAAE,KAAK;AACpDy1C,aAAU/vC,IAAO,CAAC8vC,EAAG,GACrBC,GAAU9vC,IAAK6vC,EAAG,GAClBF,IAAkB;YAChB,MAAME,KAAM,IAAI,mBAAmB;YACnC,OAAA9vC;YACA,KAAK,OAAO,OAAO,CAAE,GAAEo0B,GAAO3I,EAAI,EAAE,CAAC,EAAE,GAAG;UACtD,GACUokB,IAAkB;YAChB,MAAMC,KAAM,IAAI,mBAAmB;YACnC,OAAO,OAAO,OAAO,CAAE,GAAE1b,GAAO95B,CAAK,EAAE,CAAC,EAAE,KAAK;YAC/C,KAAA2F;UACZ,GACUiF,IAAO;YACL,MAAM4qC,KAAM,IAAI,eAAe;YAC/B,OAAO,OAAO,OAAO,CAAE,GAAE1b,GAAO3I,EAAI,EAAE,CAAC,EAAE,GAAG;YAC5C,KAAK,OAAO,OAAO,CAAE,GAAE2I,GAAO95B,CAAK,EAAE,CAAC,EAAE,KAAK;UACzD,GACUq1C,IAAQ;YACN,MAAMG,KAAM,IAAI,WAAW;YAC3B,OAAO,OAAO,OAAO,CAAA,GAAIF,EAAgB,KAAK;YAC9C,KAAK,OAAO,OAAO,CAAE,GAAEC,EAAgB,GAAG;UACtD,GACUzb,GAAO3I,EAAI,EAAE,CAAC,EAAE,MAAM,OAAO,OAAO,CAAA,GAAImkB,EAAgB,KAAK,GAC7Dxb,GAAO95B,CAAK,EAAE,CAAC,EAAE,QAAQ,OAAO,OAAO,CAAA,GAAIu1C,EAAgB,GAAG,GAC9D/Y,IAAa,CAAA,GAGT1C,GAAO3I,EAAI,EAAE,CAAC,EAAE,IAAI,SAAS2I,GAAO3I,EAAI,EAAE,CAAC,EAAE,MAAM,WACrDqL,IAAa6W,GAAK7W,GAAY;YAC5B,CAAC,SAAS1C,GAAO3I,EAAI,EAAE,CAAC,GAAG+I,EAAO;YAClC,CAAC,QAAQJ,GAAO3I,EAAI,EAAE,CAAC,GAAG+I,EAAO;UAClC,CAAA,IAIHsC,IAAa6W,GAAK7W,GAAY;YAC5B,CAAC,SAAS6Y,GAAOnb,EAAO;YACxB,CAAC,SAASob,GAAiBpb,EAAO;YAClC,CAAC,QAAQob,GAAiBpb,EAAO;YACjC,CAAC,SAAStvB,GAAMsvB,EAAO;UACxB,CAAA,GAKDsC,IAAa6W;YACX7W;YACAvC;cACEC,GAAQ,OAAO,WAAW,WAAW;cACrCJ,GAAO,MAAM3I,KAAO,GAAGnxB,CAAK;cAC5Bk6B;YACd;UACA,GAGUsC,IAAa6W,GAAK7W,GAAY;YAC5B,CAAC,QAAQ5xB,GAAMsvB,EAAO;YACtB,CAAC,SAASqb,GAAiBrb,EAAO;YAClC,CAAC,QAAQqb,GAAiBrb,EAAO;YACjC,CAAC,QAAQmb,GAAOnb,EAAO;UACxB,CAAA,GAGGJ,GAAO95B,CAAK,EAAE,CAAC,EAAE,IAAI,SAAS85B,GAAO95B,CAAK,EAAE,CAAC,EAAE,MAAM,UACvDqI,IAAS,GACTm0B,IAAa6W,GAAK7W,GAAY;YAC5B,CAAC,SAAS1C,GAAO95B,CAAK,EAAE,CAAC,GAAGk6B,EAAO;YACnC,CAAC,QAAQJ,GAAO95B,CAAK,EAAE,CAAC,GAAGk6B,EAAO;UACnC,CAAA,KAED7xB,IAAS,GAEX0tB,GAAO+D,IAAQ3I,KAAO,GAAGnxB,IAAQmxB,KAAO,GAAGqL,CAAU,GACrDx8B,IAAQmxB,KAAOqL,EAAW,SAASn0B,IAAS;AAC5C;QACV;IAAA;AAOE,OADArI,IAAQ,IACD,EAAEA,IAAQ85B,GAAO;AAClBA,IAAAA,GAAO95B,CAAK,EAAE,CAAC,EAAE,SAAS,wBAC5B85B,GAAO95B,CAAK,EAAE,CAAC,EAAE,OAAO;AAG5B,SAAO85B;AACT;AAMA,SAASqb,GAAkBrd,IAASxS,IAAI;AACtC,QAAMowB,IAAmB,KAAK,OAAO,WAAW,iBAAiB,MAC3DtvC,KAAW,KAAK,UAChB8oB,IAASuB,IAAkBrqB,EAAQ;AAGzC,MAAI8pB;AACJ,SAAOxqB;AAYP,WAASA,EAAM6G,IAAM;AACnB,WAAA2jB,IAAS3jB,IACTurB,GAAQ,MAAM,mBAAmB,GAC1BlH,EAAOrkB,EAAI;EACtB;AAYE,WAASqkB,EAAOrkB,IAAM;AACpB,QAAIA,OAAS2jB;AACX,aAAA4H,GAAQ,QAAQvrB,EAAI,GACbqkB;AAET,UAAMhrB,IAAQkyB,GAAQ,KAAK,mBAAmB,GAGxC3I,IAAQsB,IAAkBlkB,EAAI,GAI9B4kB,KACJ,CAAChC,KAAUA,MAAU,KAAKD,KAAWwmB,EAAiB,SAASnpC,EAAI,GAC/D8kB,KACJ,CAACnC,KAAWA,MAAW,KAAKC,KAAUumB,EAAiB,SAAStvC,EAAQ;AAC1E,WAAAR,EAAM,QAAQ,CAAA,EAAQsqB,MAAW,KAAKiB,KAAOA,OAASjC,KAAU,CAACmC,MACjEzrB,EAAM,SAAS,CAAA,EAAQsqB,MAAW,KAAKmB,KAAQA,OAAUlC,KAAS,CAACgC,MAC5D7L,GAAG/Y,EAAI;EAClB;AACA;AAYA,SAASkpC,GAAUjtC,IAAOH,IAAQ;AAChCG,EAAAA,GAAM,UAAUH,IAChBG,GAAM,UAAUH,IAChBG,GAAM,gBAAgBH;AACxB;ACxPO,IAAMstC,KAAW;EACtB,MAAM;EACN,UAAUC;AACZ;AAMA,SAASA,GAAiB9d,IAASxS,IAAIyS,GAAK;AAC1C,MAAI/I,KAAO;AACX,SAAOtpB;AAcP,WAASA,EAAM6G,GAAM;AACnB,WAAAurB,GAAQ,MAAM,UAAU,GACxBA,GAAQ,MAAM,gBAAgB,GAC9BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,gBAAgB,GAC7BA,GAAQ,MAAM,kBAAkB,GACzB3G;EACX;AAcE,WAASA,EAAK5kB,GAAM;AAClB,WAAIsc,GAAWtc,CAAI,KACjBurB,GAAQ,QAAQvrB,CAAI,GACbspC,KAEFC,EAAWvpC,CAAI;EAC1B;AAcE,WAASspC,EAAmBtpC,GAAM;AAEhC,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMwc,GAAkBxc,CAAI,KAErEyiB,KAAO,GACA+mB,EAAyBxpC,CAAI,KAE/BupC,EAAWvpC,CAAI;EAC1B;AAcE,WAASwpC,EAAyBxpC,GAAM;AACtC,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACpByiB,KAAO,GACAgnB,OAKNzpC,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMwc,GAAkBxc,CAAI,MACpEyiB,OAAS,MAET8I,GAAQ,QAAQvrB,CAAI,GACbwpC,MAET/mB,KAAO,GACA8mB,EAAWvpC,CAAI;EAC1B;AAYE,WAASypC,GAAUzpC,GAAM;AACvB,WAAIA,MAAS,MACXurB,GAAQ,KAAK,kBAAkB,GAC/BA,GAAQ,MAAM,gBAAgB,GAC9BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,gBAAgB,GAC7BA,GAAQ,KAAK,UAAU,GAChBxS,MAIL/Y,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAM0c,GAAa1c,CAAI,IAC3DwrB,EAAIxrB,CAAI,KAEjBurB,GAAQ,QAAQvrB,CAAI,GACbypC;EACX;AAYE,WAASF,EAAWvpC,GAAM;AACxB,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACb0pC,KAELjtB,GAAWzc,CAAI,KACjBurB,GAAQ,QAAQvrB,CAAI,GACbupC,KAEF/d,EAAIxrB,CAAI;EACnB;AAYE,WAAS0pC,EAAiB1pC,GAAM;AAC9B,WAAOwc,GAAkBxc,CAAI,IAAI2pC,GAAW3pC,CAAI,IAAIwrB,EAAIxrB,CAAI;EAChE;AAYE,WAAS2pC,GAAW3pC,GAAM;AACxB,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACpByiB,KAAO,GACAinB,KAEL1pC,MAAS,MAEXurB,GAAQ,KAAK,kBAAkB,EAAE,OAAO,iBACxCA,GAAQ,MAAM,gBAAgB,GAC9BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,gBAAgB,GAC7BA,GAAQ,KAAK,UAAU,GAChBxS,MAEF6wB,GAAW5pC,CAAI;EAC1B;AAcE,WAAS4pC,GAAW5pC,GAAM;AAExB,SAAKA,MAAS,MAAMwc,GAAkBxc,CAAI,MAAMyiB,OAAS,IAAI;AAC3D,YAAMzmB,IAAOgE,MAAS,KAAK4pC,KAAaD;AACxC,aAAApe,GAAQ,QAAQvrB,CAAI,GACbhE;IACb;AACI,WAAOwvB,EAAIxrB,CAAI;EACnB;AACA;AChOO,IAAMguB,KAAY;EACvB,UAAUC;EACV,SAAS;AACX;AAMA,SAASA,GAAkB1C,IAASxS,IAAIyS,GAAK;AAC3C,SAAOryB;AAgBP,WAASA,GAAM6G,GAAM;AACnB,WAAOgd,EAAchd,CAAI,IACrB8tB,EAAavC,IAAS3I,GAAO,YAAY,EAAE5iB,CAAI,IAC/C4iB,EAAM5iB,CAAI;EAClB;AAgBE,WAAS4iB,EAAM5iB,GAAM;AACnB,WAAOA,MAAS,QAAQ8c,EAAmB9c,CAAI,IAAI+Y,GAAG/Y,CAAI,IAAIwrB,EAAIxrB,CAAI;EAC1E;AACA;AChDO,IAAM6pC,KAAa;EACxB,MAAM;EACN,UAAUC;EACV,cAAc;IACZ,UAAUC;EACX;EACD,MAAArpB;AACF;AAMA,SAASopB,GAAwBve,IAASxS,IAAIyS,GAAK;AACjD,QAAMC,KAAO;AACb,SAAOtyB;AAYP,WAASA,EAAM6G,GAAM;AACnB,QAAIA,MAAS,IAAI;AACf,YAAMtD,IAAQ+uB,GAAK;AACnB,aAAK/uB,EAAM,SACT6uB,GAAQ,MAAM,cAAc;QAC1B,YAAY;MACb,CAAA,GACD7uB,EAAM,OAAO,OAEf6uB,GAAQ,MAAM,kBAAkB,GAChCA,GAAQ,MAAM,kBAAkB,GAChCA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,kBAAkB,GACxB3I;IACb;AACI,WAAO4I,EAAIxrB,CAAI;EACnB;AAYE,WAAS4iB,EAAM5iB,GAAM;AACnB,WAAIgd,EAAchd,CAAI,KACpBurB,GAAQ,MAAM,4BAA4B,GAC1CA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,4BAA4B,GACzCA,GAAQ,KAAK,kBAAkB,GACxBxS,OAETwS,GAAQ,KAAK,kBAAkB,GACxBxS,GAAG/Y,CAAI;EAClB;AACA;AAcA,SAAS+pC,GAA+Bxe,IAASxS,IAAIyS,GAAK;AACxD,QAAMC,KAAO;AACb,SAAOue;AAeP,WAASA,EAAUhqC,GAAM;AACvB,WAAIgd,EAAchd,CAAI,IAGb8tB;MACLvC;MACA0e;MACA;MACAxe,GAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IACvD,SACA;IACZ,EAAQzrB,CAAI,IAEDiqC,EAAWjqC,CAAI;EAC1B;AAeE,WAASiqC,EAAWjqC,GAAM;AACxB,WAAOurB,GAAQ,QAAQse,IAAY9wB,IAAIyS,CAAG,EAAExrB,CAAI;EACpD;AACA;AAGA,SAAS0gB,GAAK6K,IAAS;AACrBA,EAAAA,GAAQ,KAAK,YAAY;AAC3B;ACxIO,IAAM2e,KAAkB;EAC7B,MAAM;EACN,UAAUC;AACZ;AAMA,SAASA,GAAwB5e,IAASxS,IAAIyS,GAAK;AACjD,SAAOryB;AAYP,WAASA,GAAM6G,GAAM;AACnB,WAAAurB,GAAQ,MAAM,iBAAiB,GAC/BA,GAAQ,MAAM,cAAc,GAC5BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,cAAc,GACpBlH;EACX;AAYE,WAASA,EAAOrkB,GAAM;AAEpB,WAAI6c,GAAiB7c,CAAI,KACvBurB,GAAQ,MAAM,sBAAsB,GACpCA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,sBAAsB,GACnCA,GAAQ,KAAK,iBAAiB,GACvBxS,MAEFyS,EAAIxrB,CAAI;EACnB;AACA;AC7CO,IAAM6mC,KAAqB;EAChC,MAAM;EACN,UAAUuD;AACZ;AAMA,SAASA,GAA2B7e,IAASxS,IAAIyS,GAAK;AACpD,QAAMC,KAAO;AACb,MAAIhJ,IAAO,GAEPe,GAEA1K;AACJ,SAAO3f;AAgBP,WAASA,EAAM6G,IAAM;AACnB,WAAAurB,GAAQ,MAAM,oBAAoB,GAClCA,GAAQ,MAAM,0BAA0B,GACxCA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,0BAA0B,GAChC3G;EACX;AAiBE,WAASA,GAAK5kB,IAAM;AAClB,WAAIA,OAAS,MACXurB,GAAQ,MAAM,iCAAiC,GAC/CA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,iCAAiC,GACvC8e,MAET9e,GAAQ,MAAM,yBAAyB,GACvC/H,IAAM,IACN1K,IAAO0D,IACA5oB,EAAMoM,EAAI;EACrB;AAcE,WAASqqC,EAAQrqC,IAAM;AACrB,WAAIA,OAAS,MAAMA,OAAS,OAC1BurB,GAAQ,MAAM,qCAAqC,GACnDA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,qCAAqC,GAClDA,GAAQ,MAAM,yBAAyB,GACvC/H,IAAM,GACN1K,IAAO8D,IACAhpB,MAET23B,GAAQ,MAAM,yBAAyB,GACvC/H,IAAM,GACN1K,IAAO6D,IACA/oB,EAAMoM,EAAI;EACrB;AAmBE,WAASpM,EAAMoM,IAAM;AACnB,QAAIA,OAAS,MAAMyiB,GAAM;AACvB,YAAMppB,KAAQkyB,GAAQ,KAAK,yBAAyB;AACpD,aACEzS,MAAS0D,MACT,CAACoqB,GAA8Bnb,GAAK,eAAepyB,EAAK,CAAC,IAElDmyB,EAAIxrB,EAAI,KAKjBurB,GAAQ,MAAM,0BAA0B,GACxCA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,0BAA0B,GACvCA,GAAQ,KAAK,oBAAoB,GAC1BxS;IACb;AACI,WAAID,EAAK9Y,EAAI,KAAKyiB,MAASe,KACzB+H,GAAQ,QAAQvrB,EAAI,GACbpM,KAEF43B,EAAIxrB,EAAI;EACnB;AACA;AC7IA,IAAMsqC,KAAsB;EAC1B,UAAUC;EACV,SAAS;AACX;AAHA,IAMaC,KAAa;EACxB,MAAM;EACN,UAAUC;EACV,UAAU;AACZ;AAMA,SAASA,GAAmBlf,IAASxS,IAAIyS,GAAK;AAC5C,QAAMC,KAAO,MAEPif,IAAa;IACjB,UAAUC;IACV,SAAS;EACb;AACE,MAAIC,IAAgB,GAChB5d,IAAW,GAEXrJ;AACJ,SAAOxqB;AAcP,WAASA,GAAM6G,GAAM;AAEnB,WAAO6qC,EAAmB7qC,CAAI;EAClC;AAcE,WAAS6qC,EAAmB7qC,GAAM;AAChC,UAAMtC,IAAO+tB,GAAK,OAAOA,GAAK,OAAO,SAAS,CAAC;AAC/C,WAAAmf,IACEltC,KAAQA,EAAK,CAAC,EAAE,SAAS,eACrBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,IAAI,EAAE,SACtC,GACNimB,IAAS3jB,GACTurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,MAAM,iBAAiB,GAC/BA,GAAQ,MAAM,yBAAyB,GAChCuf,EAAa9qC,CAAI;EAC5B;AAcE,WAAS8qC,EAAa9qC,GAAM;AAC1B,WAAIA,MAAS2jB,KACXqJ,KACAzB,GAAQ,QAAQvrB,CAAI,GACb8qC,KAEL9d,IAAW,IACNxB,EAAIxrB,CAAI,KAEjBurB,GAAQ,KAAK,yBAAyB,GAC/BvO,EAAchd,CAAI,IACrB8tB,EAAavC,IAASwf,IAAY,YAAY,EAAE/qC,CAAI,IACpD+qC,GAAW/qC,CAAI;EACvB;AAcE,WAAS+qC,GAAW/qC,GAAM;AACxB,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,KAC1CurB,GAAQ,KAAK,iBAAiB,GACvBE,GAAK,YACR1S,GAAG/Y,CAAI,IACPurB,GAAQ,MAAM+e,IAAqBU,GAAgBpoB,CAAK,EAAE5iB,CAAI,MAEpEurB,GAAQ,MAAM,qBAAqB,GACnCA,GAAQ,MAAM,eAAe;MAC3B,aAAa;IACd,CAAA,GACM9zB,GAAKuI,CAAI;EACpB;AAcE,WAASvI,GAAKuI,GAAM;AAClB,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,KAC1CurB,GAAQ,KAAK,aAAa,GAC1BA,GAAQ,KAAK,qBAAqB,GAC3Bwf,GAAW/qC,CAAI,KAEpBgd,EAAchd,CAAI,KACpBurB,GAAQ,KAAK,aAAa,GAC1BA,GAAQ,KAAK,qBAAqB,GAC3BuC,EAAavC,IAAS0f,GAAY,YAAY,EAAEjrC,CAAI,KAEzDA,MAAS,MAAMA,MAAS2jB,IACnB6H,EAAIxrB,CAAI,KAEjBurB,GAAQ,QAAQvrB,CAAI,GACbvI;EACX;AAcE,WAASwzC,EAAWjrC,GAAM;AACxB,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,IACnC+qC,GAAW/qC,CAAI,KAExBurB,GAAQ,MAAM,qBAAqB,GACnCA,GAAQ,MAAM,eAAe;MAC3B,aAAa;IACd,CAAA,GACMiQ,EAAKx7B,CAAI;EACpB;AAcE,WAASw7B,EAAKx7B,GAAM;AAClB,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,KAC1CurB,GAAQ,KAAK,aAAa,GAC1BA,GAAQ,KAAK,qBAAqB,GAC3Bwf,GAAW/qC,CAAI,KAEpBA,MAAS,MAAMA,MAAS2jB,IACnB6H,EAAIxrB,CAAI,KAEjBurB,GAAQ,QAAQvrB,CAAI,GACbw7B;EACX;AAeE,WAASwP,EAAehrC,GAAM;AAC5B,WAAOurB,GAAQ,QAAQmf,GAAY9nB,GAAOsoB,EAAa,EAAElrC,CAAI;EACjE;AAcE,WAASkrC,GAAclrC,GAAM;AAC3B,WAAAurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClB0b;EACX;AAcE,WAASA,EAAajnC,GAAM;AAC1B,WAAO4qC,IAAgB,KAAK5tB,EAAchd,CAAI,IAC1C8tB;MACEvC;MACA4f;MACA;MACAP,IAAgB;IAC1B,EAAU5qC,CAAI,IACNmrC,EAAmBnrC,CAAI;EAC/B;AAcE,WAASmrC,EAAmBnrC,GAAM;AAChC,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,IACnCurB,GAAQ,MAAM+e,IAAqBU,GAAgBpoB,CAAK,EAAE5iB,CAAI,KAEvEurB,GAAQ,MAAM,eAAe,GACtB6f,EAAaprC,CAAI;EAC5B;AAcE,WAASorC,EAAaprC,GAAM;AAC1B,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,KAC1CurB,GAAQ,KAAK,eAAe,GACrB4f,EAAmBnrC,CAAI,MAEhCurB,GAAQ,QAAQvrB,CAAI,GACborC;EACX;AAcE,WAASxoB,EAAM5iB,GAAM;AACnB,WAAAurB,GAAQ,KAAK,YAAY,GAClBxS,GAAG/Y,CAAI;EAClB;AAME,WAAS2qC,EAAmBpf,GAASxS,GAAIyS,GAAK;AAC5C,QAAI/I,KAAO;AACX,WAAO4oB;AAOP,aAASA,EAAYrrC,IAAM;AACzB,aAAAurB,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQvrB,EAAI,GACpBurB,EAAQ,KAAK,YAAY,GAClBpyB;IACb;AAcI,aAASA,EAAM6G,IAAM;AAInB,aAAAurB,EAAQ,MAAM,iBAAiB,GACxBvO,EAAchd,EAAI,IACrB8tB;QACEvC;QACA+f;QACA;QACA7f,GAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IACvD,SACA;MAChB,EAAYzrB,EAAI,IACNsrC,EAAoBtrC,EAAI;IAClC;AAcI,aAASsrC,EAAoBtrC,IAAM;AACjC,aAAIA,OAAS2jB,KACX4H,EAAQ,MAAM,yBAAyB,GAChCggB,EAAcvrC,EAAI,KAEpBwrB,EAAIxrB,EAAI;IACrB;AAcI,aAASurC,EAAcvrC,IAAM;AAC3B,aAAIA,OAAS2jB,KACXlB,MACA8I,EAAQ,QAAQvrB,EAAI,GACburC,KAEL9oB,MAAQuK,KACVzB,EAAQ,KAAK,yBAAyB,GAC/BvO,EAAchd,EAAI,IACrB8tB,EAAavC,GAASigB,GAAoB,YAAY,EAAExrC,EAAI,IAC5DwrC,EAAmBxrC,EAAI,KAEtBwrB,EAAIxrB,EAAI;IACrB;AAcI,aAASwrC,EAAmBxrC,IAAM;AAChC,aAAIA,OAAS,QAAQ8c,EAAmB9c,EAAI,KAC1CurB,EAAQ,KAAK,iBAAiB,GACvBxS,EAAG/Y,EAAI,KAETwrB,EAAIxrB,EAAI;IACrB;EACA;AACA;AAMA,SAASuqC,GAA4Bhf,IAASxS,IAAIyS,GAAK;AACrD,QAAMC,KAAO;AACb,SAAOtyB;AAOP,WAASA,EAAM6G,GAAM;AACnB,WAAIA,MAAS,OACJwrB,EAAIxrB,CAAI,KAEjBurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClB6b;EACX;AAOE,WAASA,EAAUpnC,GAAM;AACvB,WAAOyrB,GAAK,OAAO,KAAKA,GAAK,IAAG,EAAG,IAAI,IAAID,EAAIxrB,CAAI,IAAI+Y,GAAG/Y,CAAI;EAClE;AACA;ACrdO,IAAMyrC,KAAe;EAC1B,MAAM;EACN,UAAUC;AACZ;AAHO,IAMDC,KAAe;EACnB,UAAUC;EACV,SAAS;AACX;AAMA,SAASF,GAAqBngB,IAASxS,IAAIyS,GAAK;AAC9C,QAAMC,KAAO;AACb,SAAOtyB;AAgBP,WAASA,EAAM6G,GAAM;AAGnB,WAAAurB,GAAQ,MAAM,cAAc,GAGrBuC,EAAavC,IAASmE,GAAa,cAAc,CAAK,EAAE1vB,CAAI;EACvE;AAYE,WAAS0vB,EAAY1vB,GAAM;AACzB,UAAMtC,IAAO+tB,GAAK,OAAOA,GAAK,OAAO,SAAS,CAAC;AAC/C,WAAO/tB,KACLA,EAAK,CAAC,EAAE,SAAS,gBACjBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,IAAI,EAAE,UAAU,IAC9CmuC,EAAQ7rC,CAAI,IACZwrB,EAAIxrB,CAAI;EAChB;AAYE,WAAS6rC,EAAQ7rC,GAAM;AACrB,WAAIA,MAAS,OACJ4iB,GAAM5iB,CAAI,IAEf8c,EAAmB9c,CAAI,IAClBurB,GAAQ,QAAQogB,IAAcE,GAASjpB,EAAK,EAAE5iB,CAAI,KAE3DurB,GAAQ,MAAM,eAAe,GACtBlH,EAAOrkB,CAAI;EACtB;AAYE,WAASqkB,EAAOrkB,GAAM;AACpB,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,KAC1CurB,GAAQ,KAAK,eAAe,GACrBsgB,EAAQ7rC,CAAI,MAErBurB,GAAQ,QAAQvrB,CAAI,GACbqkB;EACX;AAGE,WAASzB,GAAM5iB,GAAM;AACnB,WAAAurB,GAAQ,KAAK,cAAc,GAIpBxS,GAAG/Y,CAAI;EAClB;AACA;AAMA,SAAS4rC,GAAqBrgB,IAASxS,IAAIyS,GAAK;AAC9C,QAAMC,KAAO;AACb,SAAOkgB;AAaP,WAASA,EAAa3rC,GAAM;AAG1B,WAAIyrB,GAAK,OAAO,KAAKA,GAAK,IAAG,EAAG,IAAI,IAC3BD,EAAIxrB,CAAI,IAEb8c,EAAmB9c,CAAI,KACzBurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClBogB,KASF7d,EAAavC,IAASmE,GAAa,cAAc,CAAK,EAAE1vB,CAAI;EACvE;AAYE,WAAS0vB,EAAY1vB,GAAM;AACzB,UAAMtC,IAAO+tB,GAAK,OAAOA,GAAK,OAAO,SAAS,CAAC;AAC/C,WAAO/tB,KACLA,EAAK,CAAC,EAAE,SAAS,gBACjBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,IAAI,EAAE,UAAU,IAC9Cqb,GAAG/Y,CAAI,IACP8c,EAAmB9c,CAAI,IACvB2rC,EAAa3rC,CAAI,IACjBwrB,EAAIxrB,CAAI;EAChB;AACA;AC1KO,IAAM8rC,KAAW;EACtB,MAAM;EACN,UAAUC;EACV,SAASC;EACT,UAAAnyC;AACF;AAIA,SAASmyC,GAAgBze,IAAQ;AAC/B,MAAI0e,KAAgB1e,GAAO,SAAS,GAChC2e,IAAiB,GAEjBz4C,IAEA04C;AAGJ,OACG5e,GAAO2e,CAAc,EAAE,CAAC,EAAE,SAAS,gBAClC3e,GAAO2e,CAAc,EAAE,CAAC,EAAE,SAAS,aACpC3e,GAAO0e,EAAa,EAAE,CAAC,EAAE,SAAS,gBACjC1e,GAAO0e,EAAa,EAAE,CAAC,EAAE,SAAS,UAAA;AAKpC,SAHAx4C,KAAQy4C,GAGD,EAAEz4C,KAAQw4C;AACf,UAAI1e,GAAO95B,EAAK,EAAE,CAAC,EAAE,SAAS,gBAAgB;AAE5C85B,QAAAA,GAAO2e,CAAc,EAAE,CAAC,EAAE,OAAO,mBACjC3e,GAAO0e,EAAa,EAAE,CAAC,EAAE,OAAO,mBAChCC,KAAkB,GAClBD,MAAiB;AACjB;MACR;EAAA;AAOE,OAFAx4C,KAAQy4C,IAAiB,GACzBD,MACO,EAAEx4C,MAASw4C;AACZE,UAAU,SACR14C,OAAUw4C,MAAiB1e,GAAO95B,EAAK,EAAE,CAAC,EAAE,SAAS,iBACvD04C,IAAQ14C,OAGVA,OAAUw4C,MACV1e,GAAO95B,EAAK,EAAE,CAAC,EAAE,SAAS,kBAE1B85B,GAAO4e,CAAK,EAAE,CAAC,EAAE,OAAO,gBACpB14C,OAAU04C,IAAQ,MACpB5e,GAAO4e,CAAK,EAAE,CAAC,EAAE,MAAM5e,GAAO95B,KAAQ,CAAC,EAAE,CAAC,EAAE,KAC5C85B,GAAO,OAAO4e,IAAQ,GAAG14C,KAAQ04C,IAAQ,CAAC,GAC1CF,MAAiBx4C,KAAQ04C,IAAQ,GACjC14C,KAAQ04C,IAAQ,IAElBA,IAAQ;AAGZ,SAAO5e;AACT;AAMA,SAAS1zB,GAASmG,IAAM;AAEtB,SACEA,OAAS,MACT,KAAK,OAAO,KAAK,OAAO,SAAS,CAAC,EAAE,CAAC,EAAE,SAAS;AAEpD;AAMA,SAAS+rC,GAAiBxgB,IAASxS,IAAIyS,GAAK;AAE1C,MAAIwB,KAAW,GAEXvK,GAEAppB;AACJ,SAAOF;AAcP,WAASA,EAAM6G,IAAM;AACnB,WAAAurB,GAAQ,MAAM,UAAU,GACxBA,GAAQ,MAAM,kBAAkB,GACzBuf,EAAa9qC,EAAI;EAC5B;AAYE,WAAS8qC,EAAa9qC,IAAM;AAC1B,WAAIA,OAAS,MACXurB,GAAQ,QAAQvrB,EAAI,GACpBgtB,MACO8d,MAETvf,GAAQ,KAAK,kBAAkB,GACxB7G,GAAQ1kB,EAAI;EACvB;AAYE,WAAS0kB,GAAQ1kB,IAAM;AAErB,WAAIA,OAAS,OACJwrB,EAAIxrB,EAAI,IAMbA,OAAS,MACXurB,GAAQ,MAAM,OAAO,GACrBA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,OAAO,GACb7G,MAIL1kB,OAAS,MACX3G,IAAQkyB,GAAQ,MAAM,kBAAkB,GACxC9I,IAAO,GACA8oB,EAAcvrC,EAAI,KAEvB8c,EAAmB9c,EAAI,KACzBurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClB7G,OAIT6G,GAAQ,MAAM,cAAc,GACrB1tB,EAAKmC,EAAI;EACpB;AAYE,WAASnC,EAAKmC,IAAM;AAClB,WACEA,OAAS,QACTA,OAAS,MACTA,OAAS,MACT8c,EAAmB9c,EAAI,KAEvBurB,GAAQ,KAAK,cAAc,GACpB7G,GAAQ1kB,EAAI,MAErBurB,GAAQ,QAAQvrB,EAAI,GACbnC;EACX;AAYE,WAAS0tC,EAAcvrC,IAAM;AAE3B,WAAIA,OAAS,MACXurB,GAAQ,QAAQvrB,EAAI,GACpByiB,KACO8oB,KAIL9oB,MAASuK,MACXzB,GAAQ,KAAK,kBAAkB,GAC/BA,GAAQ,KAAK,UAAU,GAChBxS,GAAG/Y,EAAI,MAIhB3G,EAAM,OAAO,gBACNwE,EAAKmC,EAAI;EACpB;AACA;AC7NO,SAASosC,GAAY7e,IAAQ;AAElC,QAAM8e,KAAQ,CAAA;AACd,MAAI54C,IAAQ,IAERq9B,IAEAwb,GAEAC,GAEAC,GAEAzuC,GAEA0uC,IAEAtc;AACJ,SAAO,EAAE18B,IAAQ85B,GAAO,UAAQ;AAC9B,WAAO95B,KAAS44C;AACd54C,UAAQ44C,GAAM54C,CAAK;AAMrB,QAJAq9B,KAAQvD,GAAO95B,CAAK,GAKlBA,KACAq9B,GAAM,CAAC,EAAE,SAAS,eAClBvD,GAAO95B,IAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,qBAE9Bg5C,KAAY3b,GAAM,CAAC,EAAE,WAAW,QAChCyb,IAAa,GAEXA,IAAaE,GAAU,UACvBA,GAAUF,CAAU,EAAE,CAAC,EAAE,SAAS,sBAElCA,KAAc,IAGdA,IAAaE,GAAU,UACvBA,GAAUF,CAAU,EAAE,CAAC,EAAE,SAAS;AAElC,aAAO,EAAEA,IAAaE,GAAU,UAC1BA,GAAUF,CAAU,EAAE,CAAC,EAAE,SAAS;AAGlCE,QAAAA,GAAUF,CAAU,EAAE,CAAC,EAAE,SAAS,gBACpCE,GAAUF,CAAU,EAAE,CAAC,EAAE,8BAA8B,MACvDA;AAOR,QAAIzb,GAAM,CAAC,MAAM;AACXA,MAAAA,GAAM,CAAC,EAAE,gBACX,OAAO,OAAOub,IAAOK,GAAWnf,IAAQ95B,CAAK,CAAC,GAC9CA,IAAQ44C,GAAM54C,CAAK,GACnB08B,IAAO;aAIFW,GAAM,CAAC,EAAE,YAAY;AAG5B,WAFAyb,IAAa94C,GACb64C,IAAY,QACLC,QACLC,IAAajf,GAAOgf,CAAU,GAE5BC,EAAW,CAAC,EAAE,SAAS,gBACvBA,EAAW,CAAC,EAAE,SAAS;AAEnBA,UAAW,CAAC,MAAM,YAChBF,MACF/e,GAAO+e,CAAS,EAAE,CAAC,EAAE,OAAO,oBAE9BE,EAAW,CAAC,EAAE,OAAO,cACrBF,IAAYC;AAMdD,YAEFxb,GAAM,CAAC,EAAE,MAAM,OAAO,OAAO,CAAE,GAAEvD,GAAO+e,CAAS,EAAE,CAAC,EAAE,KAAK,GAG3DvuC,IAAawvB,GAAO,MAAM+e,GAAW74C,CAAK,GAC1CsK,EAAW,QAAQ+yB,EAAK,GACxBtH,GAAO+D,IAAQ+e,GAAW74C,IAAQ64C,IAAY,GAAGvuC,CAAU;IAEnE;EACA;AACE,SAAO,CAACoyB;AACV;AASA,SAASuc,GAAWnf,IAAQof,IAAY;AACtC,QAAMtzC,IAAQk0B,GAAOof,EAAU,EAAE,CAAC,GAC5Bhf,KAAUJ,GAAOof,EAAU,EAAE,CAAC;AACpC,MAAIC,IAAgBD,KAAa;AAEjC,QAAME,IAAiB,CAAA,GACjBhd,IACJx2B,EAAM,cAAcs0B,GAAQ,OAAOt0B,EAAM,WAAW,EAAEA,EAAM,KAAK,GAC7DyzC,IAAcjd,EAAU,QAExBwc,KAAQ,CAAA,GAERU,IAAO,CAAA;AAEb,MAAIrE,GAEA7uC,IACApG,KAAQ,IAERoP,IAAUxJ,GACVc,IAAS,GACThB,IAAQ;AACZ,QAAM6zC,KAAS,CAAC7zC,CAAK;AAIrB,SAAO0J,KAAS;AAEd,WAAO0qB,GAAO,EAAEqf,CAAa,EAAE,CAAC,MAAM/pC;AAAS;AAG/CgqC,MAAe,KAAKD,CAAa,GAC5B/pC,EAAQ,eACX6lC,IAAS/a,GAAQ,YAAY9qB,CAAO,GAC/BA,EAAQ,QACX6lC,EAAO,KAAK,IAAI,GAEd7uC,MACFg2B,EAAU,WAAWhtB,EAAQ,KAAK,GAEhCA,EAAQ,gCACVgtB,EAAU,qCAAqC,OAEjDA,EAAU,MAAM6Y,CAAM,GAClB7lC,EAAQ,gCACVgtB,EAAU,qCAAqC,UAKnDh2B,KAAWgJ,GACXA,IAAUA,EAAQ;EACtB;AAKE,OADAA,IAAUxJ,GACH,EAAE5F,KAAQq5C,EAAY;AAGzBA,MAAYr5C,EAAK,EAAE,CAAC,MAAM,UAC1Bq5C,EAAYr5C,KAAQ,CAAC,EAAE,CAAC,MAAM,WAC9Bq5C,EAAYr5C,EAAK,EAAE,CAAC,EAAE,SAASq5C,EAAYr5C,KAAQ,CAAC,EAAE,CAAC,EAAE,QACzDq5C,EAAYr5C,EAAK,EAAE,CAAC,EAAE,MAAM,SAASq5C,EAAYr5C,EAAK,EAAE,CAAC,EAAE,IAAI,SAE/D0F,IAAQ1F,KAAQ,GAChBu5C,GAAO,KAAK7zC,CAAK,GAEjB0J,EAAQ,aAAa,QACrBA,EAAQ,WAAW,QACnBA,IAAUA,EAAQ;AAqBtB,OAhBAgtB,EAAU,SAAS,CAAA,GAKfhtB,KAEFA,EAAQ,aAAa,QACrBA,EAAQ,WAAW,UAEnBmqC,GAAO,IAAG,GAKZv5C,KAAQu5C,GAAO,QACRv5C,QAAS;AACd,UAAMg9B,IAAQqc,EAAY,MAAME,GAAOv5C,EAAK,GAAGu5C,GAAOv5C,KAAQ,CAAC,CAAC,GAC1D0F,IAAQ0zC,EAAe,IAAG;AAChCR,IAAAA,GAAM,QAAQ,CAAClzC,GAAOA,IAAQs3B,EAAM,SAAS,CAAC,CAAC,GAC/CjH,GAAO+D,IAAQp0B,GAAO,GAAGs3B,CAAK;EAClC;AAEE,OADAh9B,KAAQ,IACD,EAAEA,KAAQ44C,GAAM;AACrBU,MAAK5yC,IAASkyC,GAAM54C,EAAK,EAAE,CAAC,CAAC,IAAI0G,IAASkyC,GAAM54C,EAAK,EAAE,CAAC,GACxD0G,KAAUkyC,GAAM54C,EAAK,EAAE,CAAC,IAAI44C,GAAM54C,EAAK,EAAE,CAAC,IAAI;AAEhD,SAAOs5C;AACT;AC/MO,IAAMxvC,KAAU;EACrB,UAAU0vC;EACV,SAASC;AACX;AAHO,IAMDC,KAAwB;EAC5B,UAAUC;EACV,SAAS;AACX;AAQA,SAASF,GAAe3f,IAAQ;AAC9B,SAAA6e,GAAY7e,EAAM,GACXA;AACT;AAMA,SAAS0f,GAAgB1hB,IAASxS,IAAI;AAEpC,MAAIlf;AACJ,SAAO8vB;AAYP,WAASA,GAAW3pB,GAAM;AACxB,WAAAurB,GAAQ,MAAM,SAAS,GACvB1xB,IAAW0xB,GAAQ,MAAM,gBAAgB;MACvC,aAAa;IACd,CAAA,GACM8hB,EAAYrtC,CAAI;EAC3B;AAYE,WAASqtC,EAAYrtC,GAAM;AACzB,WAAIA,MAAS,OACJstC,EAAWttC,CAAI,IAKpB8c,EAAmB9c,CAAI,IAClBurB,GAAQ;MACb4hB;MACAI;MACAD;IACR,EAAQttC,CAAI,KAIRurB,GAAQ,QAAQvrB,CAAI,GACbqtC;EACX;AAOE,WAASC,EAAWttC,GAAM;AACxB,WAAAurB,GAAQ,KAAK,cAAc,GAC3BA,GAAQ,KAAK,SAAS,GACfxS,GAAG/Y,CAAI;EAClB;AAOE,WAASutC,EAAgBvtC,GAAM;AAC7B,WAAAurB,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,cAAc,GAC3B1xB,EAAS,OAAO0xB,GAAQ,MAAM,gBAAgB;MAC5C,aAAa;MACb,UAAA1xB;IACD,CAAA,GACDA,IAAWA,EAAS,MACbwzC;EACX;AACA;AAMA,SAASD,GAAqB7hB,IAASxS,IAAIyS,GAAK;AAC9C,QAAMC,KAAO;AACb,SAAO+hB;AAOP,WAASA,EAAextC,GAAM;AAC5B,WAAAurB,GAAQ,KAAK,cAAc,GAC3BA,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClBuC,EAAavC,IAASkiB,GAAU,YAAY;EACvD;AAOE,WAASA,EAASztC,GAAM;AACtB,QAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI;AAC1C,aAAOwrB,EAAIxrB,CAAI;AAKjB,UAAMtC,IAAO+tB,GAAK,OAAOA,GAAK,OAAO,SAAS,CAAC;AAC/C,WACE,CAACA,GAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,KAC5D/tB,KACAA,EAAK,CAAC,EAAE,SAAS,gBACjBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,IAAI,EAAE,UAAU,IAEzCqb,GAAG/Y,CAAI,IAETurB,GAAQ,UAAUE,GAAK,OAAO,WAAW,MAAMD,GAAKzS,EAAE,EAAE/Y,CAAI;EACvE;AACA;ACvHO,SAAS0tC,GACdniB,IACAxS,IACAyS,GACA73B,IACAg6C,GACAC,GACAC,GACAC,GACAtqB,IACA;AACA,QAAMuK,IAAQvK,MAAO,OAAO;AAC5B,MAAIuqB,IAAU;AACd,SAAO50C;AAcP,WAASA,GAAM6G,GAAM;AACnB,WAAIA,MAAS,MACXurB,GAAQ,MAAM53B,EAAI,GAClB43B,GAAQ,MAAMoiB,CAAW,GACzBpiB,GAAQ,MAAMqiB,CAAiB,GAC/BriB,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAKqiB,CAAiB,GACvBI,MAILhuC,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAM0c,GAAa1c,CAAI,IAC3DwrB,EAAIxrB,CAAI,KAEjBurB,GAAQ,MAAM53B,EAAI,GAClB43B,GAAQ,MAAMsiB,CAAO,GACrBtiB,GAAQ,MAAMuiB,CAAU,GACxBviB,GAAQ,MAAM,eAAe;MAC3B,aAAa;IACd,CAAA,GACMvQ,EAAIhb,CAAI;EACnB;AAYE,WAASguC,GAAehuC,GAAM;AAC5B,WAAIA,MAAS,MACXurB,GAAQ,MAAMqiB,CAAiB,GAC/BriB,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAKqiB,CAAiB,GAC9BriB,GAAQ,KAAKoiB,CAAW,GACxBpiB,GAAQ,KAAK53B,EAAI,GACVolB,OAETwS,GAAQ,MAAMuiB,CAAU,GACxBviB,GAAQ,MAAM,eAAe;MAC3B,aAAa;IACd,CAAA,GACM0iB,EAASjuC,CAAI;EACxB;AAYE,WAASiuC,EAASjuC,GAAM;AACtB,WAAIA,MAAS,MACXurB,GAAQ,KAAK,aAAa,GAC1BA,GAAQ,KAAKuiB,CAAU,GAChBE,GAAehuC,CAAI,KAExBA,MAAS,QAAQA,MAAS,MAAM8c,EAAmB9c,CAAI,IAClDwrB,EAAIxrB,CAAI,KAEjBurB,GAAQ,QAAQvrB,CAAI,GACbA,MAAS,KAAKkuC,IAAiBD;EAC1C;AAYE,WAASC,EAAeluC,GAAM;AAC5B,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCurB,GAAQ,QAAQvrB,CAAI,GACbiuC,KAEFA,EAASjuC,CAAI;EACxB;AAYE,WAASgb,EAAIhb,GAAM;AACjB,WACE,CAAC+tC,MACA/tC,MAAS,QAAQA,MAAS,MAAM+c,GAA0B/c,CAAI,MAE/DurB,GAAQ,KAAK,aAAa,GAC1BA,GAAQ,KAAKuiB,CAAU,GACvBviB,GAAQ,KAAKsiB,CAAO,GACpBtiB,GAAQ,KAAK53B,EAAI,GACVolB,GAAG/Y,CAAI,KAEZ+tC,IAAUhgB,KAAS/tB,MAAS,MAC9BurB,GAAQ,QAAQvrB,CAAI,GACpB+tC,KACO/yB,KAELhb,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACpB+tC,KACO/yB,KAMLhb,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAM0c,GAAa1c,CAAI,IAC3DwrB,EAAIxrB,CAAI,KAEjBurB,GAAQ,QAAQvrB,CAAI,GACbA,MAAS,KAAKmuC,KAAYnzB;EACrC;AAYE,WAASmzB,GAAUnuC,GAAM;AACvB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCurB,GAAQ,QAAQvrB,CAAI,GACbgb,KAEFA,EAAIhb,CAAI;EACnB;AACA;ACzLO,SAASouC,GAAa7iB,IAASxS,IAAIyS,GAAK73B,IAAM06C,GAAYP,GAAY;AAC3E,QAAMriB,IAAO;AACb,MAAIhJ,IAAO,GAEP0J;AACJ,SAAOhzB;AAYP,WAASA,EAAM6G,GAAM;AACnB,WAAAurB,GAAQ,MAAM53B,EAAI,GAClB43B,GAAQ,MAAM8iB,CAAU,GACxB9iB,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK8iB,CAAU,GACvB9iB,GAAQ,MAAMuiB,CAAU,GACjBjC;EACX;AAYE,WAASA,EAAQ7rC,GAAM;AACrB,WACEyiB,IAAO,OACPziB,MAAS,QACTA,MAAS,MACRA,MAAS,MAAM,CAACmsB;;;;;IAMhBnsB,MAAS,MACR,CAACyiB,KACD,4BAA4BgJ,EAAK,OAAO,aAEnCD,EAAIxrB,CAAI,IAEbA,MAAS,MACXurB,GAAQ,KAAKuiB,CAAU,GACvBviB,GAAQ,MAAM8iB,CAAU,GACxB9iB,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK8iB,CAAU,GACvB9iB,GAAQ,KAAK53B,EAAI,GACVolB,MAIL+D,EAAmB9c,CAAI,KACzBurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClBsgB,MAETtgB,GAAQ,MAAM,eAAe;MAC3B,aAAa;IACd,CAAA,GACM+D,GAAYtvB,CAAI;EAC3B;AAYE,WAASsvB,GAAYtvB,GAAM;AACzB,WACEA,MAAS,QACTA,MAAS,MACTA,MAAS,MACT8c,EAAmB9c,CAAI,KACvByiB,MAAS,OAET8I,GAAQ,KAAK,aAAa,GACnBsgB,EAAQ7rC,CAAI,MAErBurB,GAAQ,QAAQvrB,CAAI,GACfmsB,OAAMA,KAAO,CAACnP,EAAchd,CAAI,IAC9BA,MAAS,KAAKwvB,KAAcF;EACvC;AAYE,WAASE,GAAYxvB,GAAM;AACzB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCurB,GAAQ,QAAQvrB,CAAI,GACpByiB,KACO6M,MAEFA,GAAYtvB,CAAI;EAC3B;AACA;ACtHO,SAASsuC,GAAa/iB,IAASxS,IAAIyS,GAAK73B,IAAM06C,GAAYP,GAAY;AAE3E,MAAInqB;AACJ,SAAOxqB;AAYP,WAASA,EAAM6G,IAAM;AACnB,WAAIA,OAAS,MAAMA,OAAS,MAAMA,OAAS,MACzCurB,GAAQ,MAAM53B,EAAI,GAClB43B,GAAQ,MAAM8iB,CAAU,GACxB9iB,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK8iB,CAAU,GACvB1qB,IAAS3jB,OAAS,KAAK,KAAKA,IACrBuuC,MAEF/iB,EAAIxrB,EAAI;EACnB;AAcE,WAASuuC,GAAMvuC,IAAM;AACnB,WAAIA,OAAS2jB,KACX4H,GAAQ,MAAM8iB,CAAU,GACxB9iB,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK8iB,CAAU,GACvB9iB,GAAQ,KAAK53B,EAAI,GACVolB,OAETwS,GAAQ,MAAMuiB,CAAU,GACjBjC,EAAQ7rC,EAAI;EACvB;AAYE,WAAS6rC,EAAQ7rC,IAAM;AACrB,WAAIA,OAAS2jB,KACX4H,GAAQ,KAAKuiB,CAAU,GAChBS,GAAM5qB,CAAM,KAEjB3jB,OAAS,OACJwrB,EAAIxrB,EAAI,IAIb8c,EAAmB9c,EAAI,KAEzBurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClBuC,EAAavC,IAASsgB,GAAS,YAAY,MAEpDtgB,GAAQ,MAAM,eAAe;MAC3B,aAAa;IACd,CAAA,GACMlH,EAAOrkB,EAAI;EACtB;AAOE,WAASqkB,EAAOrkB,IAAM;AACpB,WAAIA,OAAS2jB,KAAU3jB,OAAS,QAAQ8c,EAAmB9c,EAAI,KAC7DurB,GAAQ,KAAK,aAAa,GACnBsgB,EAAQ7rC,EAAI,MAErBurB,GAAQ,QAAQvrB,EAAI,GACbA,OAAS,KAAKie,KAASoG;EAClC;AAYE,WAASpG,GAAOje,IAAM;AACpB,WAAIA,OAAS2jB,KAAU3jB,OAAS,MAC9BurB,GAAQ,QAAQvrB,EAAI,GACbqkB,KAEFA,EAAOrkB,EAAI;EACtB;AACA;ACxIO,IAAMzI,KAAa;EACxB,MAAM;EACN,UAAUi3C;AACZ;AAHO,IAMDC,KAAc;EAClB,UAAUC;EACV,SAAS;AACX;AAMA,SAASF,GAAmBjjB,IAASxS,IAAIyS,GAAK;AAC5C,QAAMC,KAAO;AAEb,MAAI2D;AACJ,SAAOj2B;AAYP,WAASA,EAAM6G,GAAM;AAInB,WAAAurB,GAAQ,MAAM,YAAY,GACnB5I,EAAO3iB,CAAI;EACtB;AAYE,WAAS2iB,EAAO3iB,GAAM;AAGpB,WAAOouC,GAAa;MAClB3iB;MACAF;MACAgE;;MAEA/D;MACA;MACA;MACA;IACN,EAAMxrB,CAAI;EACV;AAYE,WAASuvB,EAAWvvB,GAAM;AAIxB,WAHAovB,IAAatP;MACX2L,GAAK,eAAeA,GAAK,OAAOA,GAAK,OAAO,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE;IAC7E,GACQzrB,MAAS,MACXurB,GAAQ,MAAM,kBAAkB,GAChCA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,kBAAkB,GACxBojB,MAEFnjB,EAAIxrB,CAAI;EACnB;AAYE,WAAS2uC,GAAY3uC,GAAM;AAEzB,WAAO+c,GAA0B/c,CAAI,IACjCkuB,GAAkB3C,IAASqjB,CAAiB,EAAE5uC,CAAI,IAClD4uC,EAAkB5uC,CAAI;EAC9B;AAYE,WAAS4uC,EAAkB5uC,GAAM;AAC/B,WAAO0tC;MACLniB;MACAsjB;;MAEArjB;MACA;MACA;MACA;MACA;MACA;IACN,EAAMxrB,CAAI;EACV;AAYE,WAAS6uC,EAAiB7uC,GAAM;AAC9B,WAAOurB,GAAQ,QAAQkjB,IAAa7rB,IAAOA,EAAK,EAAE5iB,CAAI;EAC1D;AAcE,WAAS4iB,GAAM5iB,GAAM;AACnB,WAAOgd,EAAchd,CAAI,IACrB8tB,EAAavC,IAASujB,IAAiB,YAAY,EAAE9uC,CAAI,IACzD8uC,GAAgB9uC,CAAI;EAC5B;AAcE,WAAS8uC,GAAgB9uC,GAAM;AAC7B,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,KAC1CurB,GAAQ,KAAK,YAAY,GAKzBE,GAAK,OAAO,QAAQ,KAAK2D,CAAU,GAK5BrW,GAAG/Y,CAAI,KAETwrB,EAAIxrB,CAAI;EACnB;AACA;AAMA,SAAS0uC,GAAoBnjB,IAASxS,IAAIyS,GAAK;AAC7C,SAAOijB;AAcP,WAASA,GAAYzuC,GAAM;AACzB,WAAO+c,GAA0B/c,CAAI,IACjCkuB,GAAkB3C,IAASwjB,CAAY,EAAE/uC,CAAI,IAC7CwrB,EAAIxrB,CAAI;EAChB;AAaE,WAAS+uC,EAAa/uC,GAAM;AAC1B,WAAOsuC;MACL/iB;MACAyjB;MACAxjB;MACA;MACA;MACA;IACN,EAAMxrB,CAAI;EACV;AAYE,WAASgvC,EAAWhvC,GAAM;AACxB,WAAOgd,EAAchd,CAAI,IACrB8tB,EAAavC,IAAS0jB,GAA8B,YAAY,EAAEjvC,CAAI,IACtEivC,EAA6BjvC,CAAI;EACzC;AAYE,WAASivC,EAA6BjvC,GAAM;AAC1C,WAAOA,MAAS,QAAQ8c,EAAmB9c,CAAI,IAAI+Y,GAAG/Y,CAAI,IAAIwrB,EAAIxrB,CAAI;EAC1E;AACA;ACpRO,IAAMkvC,KAAkB;EAC7B,MAAM;EACN,UAAUC;AACZ;AAMA,SAASA,GAAwB5jB,IAASxS,IAAIyS,GAAK;AACjD,SAAOryB;AAaP,WAASA,GAAM6G,GAAM;AACnB,WAAAurB,GAAQ,MAAM,iBAAiB,GAC/BA,GAAQ,QAAQvrB,CAAI,GACb4iB;EACX;AAaE,WAASA,EAAM5iB,GAAM;AACnB,WAAI8c,EAAmB9c,CAAI,KACzBurB,GAAQ,KAAK,iBAAiB,GACvBxS,GAAG/Y,CAAI,KAETwrB,EAAIxrB,CAAI;EACnB;AACA;ACvCO,IAAMovC,KAAa;EACxB,MAAM;EACN,UAAUC;EACV,SAASC;AACX;AAGA,SAASA,GAAkB/hB,IAAQI,IAAS;AAC1C,MAAI2f,IAAa/f,GAAO,SAAS,GAC7B0Z,KAAe,GAEf1pC,GAEAc;AAGJ,SAAIkvB,GAAO0Z,EAAY,EAAE,CAAC,EAAE,SAAS,iBACnCA,MAAgB,IAKhBqG,IAAa,IAAIrG,MACjB1Z,GAAO+f,CAAU,EAAE,CAAC,EAAE,SAAS,iBAE/BA,KAAc,IAGd/f,GAAO+f,CAAU,EAAE,CAAC,EAAE,SAAS,yBAC9BrG,OAAiBqG,IAAa,KAC5BA,IAAa,IAAIrG,MAChB1Z,GAAO+f,IAAa,CAAC,EAAE,CAAC,EAAE,SAAS,kBAEvCA,KAAcrG,KAAe,MAAMqG,IAAa,IAAI,IAElDA,IAAarG,OACf1pC,IAAU;IACR,MAAM;IACN,OAAOgwB,GAAO0Z,EAAY,EAAE,CAAC,EAAE;IAC/B,KAAK1Z,GAAO+f,CAAU,EAAE,CAAC,EAAE;EACjC,GACIjvC,IAAO;IACL,MAAM;IACN,OAAOkvB,GAAO0Z,EAAY,EAAE,CAAC,EAAE;IAC/B,KAAK1Z,GAAO+f,CAAU,EAAE,CAAC,EAAE;IAC3B,aAAa;EACnB,GACI9jB,GAAO+D,IAAQ0Z,IAAcqG,IAAarG,KAAe,GAAG;IAC1D,CAAC,SAAS1pC,GAASowB,EAAO;IAC1B,CAAC,SAAStvB,GAAMsvB,EAAO;IACvB,CAAC,QAAQtvB,GAAMsvB,EAAO;IACtB,CAAC,QAAQpwB,GAASowB,EAAO;EAC1B,CAAA,IAEIJ;AACT;AAMA,SAAS8hB,GAAmB9jB,IAASxS,IAAIyS,GAAK;AAC5C,MAAI/I,KAAO;AACX,SAAOtpB;AAYP,WAASA,EAAM6G,GAAM;AAEnB,WAAAurB,GAAQ,MAAM,YAAY,GACnB5I,EAAO3iB,CAAI;EACtB;AAYE,WAAS2iB,EAAO3iB,GAAM;AACpB,WAAAurB,GAAQ,MAAM,oBAAoB,GAC3Buf,EAAa9qC,CAAI;EAC5B;AAYE,WAAS8qC,EAAa9qC,GAAM;AAC1B,WAAIA,MAAS,MAAMyiB,OAAS,KAC1B8I,GAAQ,QAAQvrB,CAAI,GACb8qC,KAIL9qC,MAAS,QAAQ+c,GAA0B/c,CAAI,KACjDurB,GAAQ,KAAK,oBAAoB,GAC1BsgB,EAAQ7rC,CAAI,KAEdwrB,EAAIxrB,CAAI;EACnB;AAYE,WAAS6rC,EAAQ7rC,GAAM;AACrB,WAAIA,MAAS,MACXurB,GAAQ,MAAM,oBAAoB,GAC3BgkB,GAAgBvvC,CAAI,KAEzBA,MAAS,QAAQ8c,EAAmB9c,CAAI,KAC1CurB,GAAQ,KAAK,YAAY,GAIlBxS,GAAG/Y,CAAI,KAEZgd,EAAchd,CAAI,IACb8tB,EAAavC,IAASsgB,GAAS,YAAY,EAAE7rC,CAAI,KAK1DurB,GAAQ,MAAM,gBAAgB,GACvB1tB,EAAKmC,CAAI;EACpB;AAcE,WAASuvC,GAAgBvvC,GAAM;AAC7B,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbuvC,OAEThkB,GAAQ,KAAK,oBAAoB,GAC1BsgB,EAAQ7rC,CAAI;EACvB;AAYE,WAASnC,EAAKmC,GAAM;AAClB,WAAIA,MAAS,QAAQA,MAAS,MAAM+c,GAA0B/c,CAAI,KAChEurB,GAAQ,KAAK,gBAAgB,GACtBsgB,EAAQ7rC,CAAI,MAErBurB,GAAQ,QAAQvrB,CAAI,GACbnC;EACX;AACA;ACjMO,IAAM2xC,KAAiB;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AA/DO,IA6EMC,KAAe,CAAC,OAAO,UAAU,SAAS,UAAU;AA7E1D,ICKMC,KAAW;EACtB,MAAM;EACN,UAAUC;EACV,WAAWC;EACX,UAAU;AACZ;ADVO,ICaDC,KAAkB;EACtB,UAAUC;EACV,SAAS;AACX;ADhBO,ICiBDC,KAA2B;EAC/B,UAAUC;EACV,SAAS;AACX;AAGA,SAASJ,GAAkBriB,IAAQ;AACjC,MAAI95B,KAAQ85B,GAAO;AACnB,SAAO95B,QACD,EAAA85B,GAAO95B,EAAK,EAAE,CAAC,MAAM,WAAW85B,GAAO95B,EAAK,EAAE,CAAC,EAAE,SAAS;AAA9D;AAIF,SAAIA,KAAQ,KAAK85B,GAAO95B,KAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,iBAE7C85B,GAAO95B,EAAK,EAAE,CAAC,EAAE,QAAQ85B,GAAO95B,KAAQ,CAAC,EAAE,CAAC,EAAE,OAE9C85B,GAAO95B,KAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ85B,GAAO95B,KAAQ,CAAC,EAAE,CAAC,EAAE,OAElD85B,GAAO,OAAO95B,KAAQ,GAAG,CAAC,IAErB85B;AACT;AAMA,SAASoiB,GAAiBpkB,IAASxS,IAAIyS,GAAK;AAC1C,QAAMC,KAAO;AAEb,MAAI9H,GAEAssB,GAEA/jB,GAEAz4B,GAEAy8C;AACJ,SAAO/2C;AAYP,WAASA,EAAM6G,GAAM;AAEnB,WAAO2iB,EAAO3iB,CAAI;EACtB;AAYE,WAAS2iB,EAAO3iB,GAAM;AACpB,WAAAurB,GAAQ,MAAM,UAAU,GACxBA,GAAQ,MAAM,cAAc,GAC5BA,GAAQ,QAAQvrB,CAAI,GACb4kB;EACX;AAgBE,WAASA,GAAK5kB,GAAM;AAClB,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbmwC,MAELnwC,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACpBiwC,IAAa,MACNG,KAELpwC,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACpB2jB,IAAS,GAMF8H,GAAK,YAAY1S,KAAKs3B,KAI3B/zB,GAAWtc,CAAI,KACjBurB,GAAQ,QAAQvrB,CAAI,GAEpBksB,IAAS,OAAO,aAAalsB,CAAI,GAC1BlG,MAEF0xB,EAAIxrB,CAAI;EACnB;AAgBE,WAASmwC,GAAgBnwC,GAAM;AAC7B,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACpB2jB,IAAS,GACF2sB,KAELtwC,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACpB2jB,IAAS,GACTlwB,IAAQ,GACD88C,KAILj0B,GAAWtc,CAAI,KACjBurB,GAAQ,QAAQvrB,CAAI,GACpB2jB,IAAS,GAGF8H,GAAK,YAAY1S,KAAKs3B,KAExB7kB,EAAIxrB,CAAI;EACnB;AAYE,WAASswC,EAAkBtwC,GAAM;AAC/B,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GAGbyrB,GAAK,YAAY1S,KAAKs3B,KAExB7kB,EAAIxrB,CAAI;EACnB;AAYE,WAASuwC,EAAgBvwC,GAAM;AAC7B,UAAMpM,KAAQ;AACd,WAAIoM,MAASpM,GAAM,WAAWH,GAAO,KACnC83B,GAAQ,QAAQvrB,CAAI,GAChBvM,MAAUG,GAAM,SAGX63B,GAAK,YAAY1S,KAAKy3B,IAExBD,KAEF/kB,EAAIxrB,CAAI;EACnB;AAYE,WAASowC,EAAcpwC,GAAM;AAC3B,WAAIsc,GAAWtc,CAAI,KACjBurB,GAAQ,QAAQvrB,CAAI,GAEpBksB,IAAS,OAAO,aAAalsB,CAAI,GAC1BlG,MAEF0xB,EAAIxrB,CAAI;EACnB;AAcE,WAASlG,GAAQkG,GAAM;AACrB,QACEA,MAAS,QACTA,MAAS,MACTA,MAAS,MACT+c,GAA0B/c,CAAI,GAC9B;AACA,YAAMywC,KAAQzwC,MAAS,IACjB5L,KAAO83B,EAAO,YAAW;AAC/B,aAAI,CAACukB,MAAS,CAACR,KAAcR,GAAa,SAASr7C,EAAI,KACrDuvB,IAAS,GAGF8H,GAAK,YAAY1S,GAAG/Y,CAAI,IAAIwwC,EAAaxwC,CAAI,KAElDwvC,GAAe,SAAStjB,EAAO,YAAa,CAAA,KAC9CvI,IAAS,GACL8sB,MACFllB,GAAQ,QAAQvrB,CAAI,GACb0wC,KAKFjlB,GAAK,YAAY1S,GAAG/Y,CAAI,IAAIwwC,EAAaxwC,CAAI,MAEtD2jB,IAAS,GAEF8H,GAAK,aAAa,CAACA,GAAK,OAAO,KAAKA,GAAK,IAAG,EAAG,IAAI,IACtDD,EAAIxrB,CAAI,IACRiwC,IACAU,EAAwB3wC,CAAI,IAC5B4wC,EAA4B5wC,CAAI;IAC1C;AAGI,WAAIA,MAAS,MAAMwc,GAAkBxc,CAAI,KACvCurB,GAAQ,QAAQvrB,CAAI,GACpBksB,KAAU,OAAO,aAAalsB,CAAI,GAC3BlG,MAEF0xB,EAAIxrB,CAAI;EACnB;AAYE,WAAS0wC,EAAiB1wC,GAAM;AAC9B,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GAGbyrB,GAAK,YAAY1S,KAAKy3B,KAExBhlB,EAAIxrB,CAAI;EACnB;AAYE,WAAS2wC,EAAwB3wC,GAAM;AACrC,WAAIgd,EAAchd,CAAI,KACpBurB,GAAQ,QAAQvrB,CAAI,GACb2wC,KAEFE,EAAY7wC,CAAI;EAC3B;AAyBE,WAAS4wC,EAA4B5wC,GAAM;AACzC,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACb6wC,KAIL7wC,MAAS,MAAMA,MAAS,MAAMsc,GAAWtc,CAAI,KAC/CurB,GAAQ,QAAQvrB,CAAI,GACb8wC,KAEL9zB,EAAchd,CAAI,KACpBurB,GAAQ,QAAQvrB,CAAI,GACb4wC,KAEFC,EAAY7wC,CAAI;EAC3B;AAgBE,WAAS8wC,EAAsB9wC,GAAM;AAEnC,WACEA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTwc,GAAkBxc,CAAI,KAEtBurB,GAAQ,QAAQvrB,CAAI,GACb8wC,KAEFC,EAA2B/wC,CAAI;EAC1C;AAeE,WAAS+wC,EAA2B/wC,GAAM;AACxC,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbgxC,KAELh0B,EAAchd,CAAI,KACpBurB,GAAQ,QAAQvrB,CAAI,GACb+wC,KAEFH,EAA4B5wC,CAAI;EAC3C;AAeE,WAASgxC,EAA6BhxC,GAAM;AAC1C,WACEA,MAAS,QACTA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTA,MAAS,KAEFwrB,EAAIxrB,CAAI,IAEbA,MAAS,MAAMA,MAAS,MAC1BurB,GAAQ,QAAQvrB,CAAI,GACpBkwC,KAAUlwC,GACHixC,KAELj0B,EAAchd,CAAI,KACpBurB,GAAQ,QAAQvrB,CAAI,GACbgxC,KAEFE,EAA+BlxC,CAAI;EAC9C;AAcE,WAASixC,EAA6BjxC,GAAM;AAC1C,WAAIA,MAASkwC,MACX3kB,GAAQ,QAAQvrB,CAAI,GACpBkwC,KAAU,MACHiB,MAELnxC,MAAS,QAAQ8c,EAAmB9c,CAAI,IACnCwrB,EAAIxrB,CAAI,KAEjBurB,GAAQ,QAAQvrB,CAAI,GACbixC;EACX;AAYE,WAASC,EAA+BlxC,GAAM;AAC5C,WACEA,MAAS,QACTA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTA,MAAS,MACT+c,GAA0B/c,CAAI,IAEvB+wC,EAA2B/wC,CAAI,KAExCurB,GAAQ,QAAQvrB,CAAI,GACbkxC;EACX;AAaE,WAASC,GAAkCnxC,GAAM;AAC/C,WAAIA,MAAS,MAAMA,MAAS,MAAMgd,EAAchd,CAAI,IAC3C4wC,EAA4B5wC,CAAI,IAElCwrB,EAAIxrB,CAAI;EACnB;AAYE,WAAS6wC,EAAY7wC,GAAM;AACzB,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACboxC,KAEF5lB,EAAIxrB,CAAI;EACnB;AAYE,WAASoxC,EAAcpxC,GAAM;AAC3B,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,IAGnCwwC,EAAaxwC,CAAI,IAEtBgd,EAAchd,CAAI,KACpBurB,GAAQ,QAAQvrB,CAAI,GACboxC,KAEF5lB,EAAIxrB,CAAI;EACnB;AAYE,WAASwwC,EAAaxwC,GAAM;AAC1B,WAAIA,MAAS,MAAM2jB,MAAW,KAC5B4H,GAAQ,QAAQvrB,CAAI,GACbqxC,MAELrxC,MAAS,MAAM2jB,MAAW,KAC5B4H,GAAQ,QAAQvrB,CAAI,GACbsxC,MAELtxC,MAAS,MAAM2jB,MAAW,KAC5B4H,GAAQ,QAAQvrB,CAAI,GACbuxC,MAELvxC,MAAS,MAAM2jB,MAAW,KAC5B4H,GAAQ,QAAQvrB,CAAI,GACbqwC,KAELrwC,MAAS,MAAM2jB,MAAW,KAC5B4H,GAAQ,QAAQvrB,CAAI,GACbwxC,MAEL10B,EAAmB9c,CAAI,MAAM2jB,MAAW,KAAKA,MAAW,MAC1D4H,GAAQ,KAAK,cAAc,GACpBA,GAAQ;MACbskB;MACA4B;MACAC;IACR,EAAQ1xC,CAAI,KAEJA,MAAS,QAAQ8c,EAAmB9c,CAAI,KAC1CurB,GAAQ,KAAK,cAAc,GACpBmmB,EAAkB1xC,CAAI,MAE/BurB,GAAQ,QAAQvrB,CAAI,GACbwwC;EACX;AAaE,WAASkB,EAAkB1xC,GAAM;AAC/B,WAAOurB,GAAQ;MACbwkB;MACA4B;MACAF;IACN,EAAMzxC,CAAI;EACV;AAaE,WAAS2xC,EAAyB3xC,GAAM;AACtC,WAAAurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClBqmB;EACX;AAaE,WAASA,GAAmB5xC,GAAM;AAChC,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,IACnC0xC,EAAkB1xC,CAAI,KAE/BurB,GAAQ,MAAM,cAAc,GACrBilB,EAAaxwC,CAAI;EAC5B;AAYE,WAASqxC,GAA0BrxC,GAAM;AACvC,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbqwC,KAEFG,EAAaxwC,CAAI;EAC5B;AAYE,WAASsxC,GAAuBtxC,GAAM;AACpC,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACpBksB,IAAS,IACF2lB,MAEFrB,EAAaxwC,CAAI;EAC5B;AAYE,WAAS6xC,GAAsB7xC,GAAM;AACnC,QAAIA,MAAS,IAAI;AACf,YAAM5L,KAAO83B,EAAO,YAAW;AAC/B,aAAIujB,GAAa,SAASr7C,EAAI,KAC5Bm3B,GAAQ,QAAQvrB,CAAI,GACbuxC,MAEFf,EAAaxwC,CAAI;IAC9B;AACI,WAAIsc,GAAWtc,CAAI,KAAKksB,EAAO,SAAS,KACtCX,GAAQ,QAAQvrB,CAAI,GAEpBksB,KAAU,OAAO,aAAalsB,CAAI,GAC3B6xC,MAEFrB,EAAaxwC,CAAI;EAC5B;AAYE,WAASwxC,GAAwBxxC,GAAM;AACrC,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbqwC,KAEFG,EAAaxwC,CAAI;EAC5B;AAoBE,WAASqwC,EAA8BrwC,GAAM;AAC3C,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbuxC,MAILvxC,MAAS,MAAM2jB,MAAW,KAC5B4H,GAAQ,QAAQvrB,CAAI,GACbqwC,KAEFG,EAAaxwC,CAAI;EAC5B;AAYE,WAASuxC,GAAkBvxC,GAAM;AAC/B,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,KAC1CurB,GAAQ,KAAK,cAAc,GACpBkmB,GAAkBzxC,CAAI,MAE/BurB,GAAQ,QAAQvrB,CAAI,GACbuxC;EACX;AAYE,WAASE,GAAkBzxC,GAAM;AAC/B,WAAAurB,GAAQ,KAAK,UAAU,GAKhBxS,GAAG/Y,CAAI;EAClB;AACA;AAMA,SAASgwC,GAAiCzkB,IAASxS,IAAIyS,GAAK;AAC1D,QAAMC,KAAO;AACb,SAAOtyB;AAaP,WAASA,EAAM6G,GAAM;AACnB,WAAI8c,EAAmB9c,CAAI,KACzBurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClB3I,KAEF4I,EAAIxrB,CAAI;EACnB;AAaE,WAAS4iB,EAAM5iB,GAAM;AACnB,WAAOyrB,GAAK,OAAO,KAAKA,GAAK,IAAG,EAAG,IAAI,IAAID,EAAIxrB,CAAI,IAAI+Y,GAAG/Y,CAAI;EAClE;AACA;AAMA,SAAS8vC,GAAwBvkB,IAASxS,IAAIyS,GAAK;AACjD,SAAOryB;AAaP,WAASA,GAAM6G,GAAM;AACnB,WAAAurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClBA,GAAQ,QAAQyC,IAAWjV,IAAIyS,CAAG;EAC7C;AACA;ACl4BO,IAAMsmB,KAAW;EACtB,MAAM;EACN,UAAUC;AACZ;AAMA,SAASA,GAAiBxmB,IAASxS,IAAIyS,GAAK;AAC1C,QAAMC,KAAO;AAEb,MAAI9H,GAEAlwB,GAEAu+C;AACJ,SAAO74C;AAYP,WAASA,EAAM6G,GAAM;AACnB,WAAAurB,GAAQ,MAAM,UAAU,GACxBA,GAAQ,MAAM,cAAc,GAC5BA,GAAQ,QAAQvrB,CAAI,GACb4kB;EACX;AAgBE,WAASA,GAAK5kB,GAAM;AAClB,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbmwC,KAELnwC,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbowC,KAELpwC,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbiyC,KAIL31B,GAAWtc,CAAI,KACjBurB,GAAQ,QAAQvrB,CAAI,GACbkyC,KAEF1mB,EAAIxrB,CAAI;EACnB;AAgBE,WAASmwC,EAAgBnwC,GAAM;AAC7B,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbswC,KAELtwC,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACpBvM,IAAQ,GACD88C,KAELj0B,GAAWtc,CAAI,KACjBurB,GAAQ,QAAQvrB,CAAI,GACbkiC,KAEF1W,EAAIxrB,CAAI;EACnB;AAYE,WAASswC,EAAkBtwC,GAAM;AAC/B,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbmyC,KAEF3mB,EAAIxrB,CAAI;EACnB;AAYE,WAAS1B,GAAQ0B,GAAM;AACrB,WAAIA,MAAS,OACJwrB,EAAIxrB,CAAI,IAEbA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACboyC,MAELt1B,EAAmB9c,CAAI,KACzBgyC,IAAc1zC,IACP+zC,GAAiBryC,CAAI,MAE9BurB,GAAQ,QAAQvrB,CAAI,GACb1B;EACX;AAYE,WAAS8zC,GAAapyC,GAAM;AAC1B,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbmyC,KAEF7zC,GAAQ0B,CAAI;EACvB;AAYE,WAASmyC,EAAWnyC,GAAM;AACxB,WAAOA,MAAS,KACZ5G,GAAI4G,CAAI,IACRA,MAAS,KACToyC,GAAapyC,CAAI,IACjB1B,GAAQ0B,CAAI;EACpB;AAYE,WAASuwC,EAAgBvwC,GAAM;AAC7B,UAAMpM,KAAQ;AACd,WAAIoM,MAASpM,GAAM,WAAWH,GAAO,KACnC83B,GAAQ,QAAQvrB,CAAI,GACbvM,MAAUG,GAAM,SAAS0+C,IAAQ/B,KAEnC/kB,EAAIxrB,CAAI;EACnB;AAYE,WAASsyC,EAAMtyC,GAAM;AACnB,WAAIA,MAAS,OACJwrB,EAAIxrB,CAAI,IAEbA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbuyC,MAELz1B,EAAmB9c,CAAI,KACzBgyC,IAAcM,GACPD,GAAiBryC,CAAI,MAE9BurB,GAAQ,QAAQvrB,CAAI,GACbsyC;EACX;AAYE,WAASC,GAAWvyC,GAAM;AACxB,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbwyC,KAEFF,EAAMtyC,CAAI;EACrB;AAYE,WAASwyC,EAASxyC,GAAM;AACtB,WAAIA,MAAS,KACJ5G,GAAI4G,CAAI,IAEbA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbwyC,KAEFF,EAAMtyC,CAAI;EACrB;AAYE,WAASkiC,EAAYliC,GAAM;AACzB,WAAIA,MAAS,QAAQA,MAAS,KACrB5G,GAAI4G,CAAI,IAEb8c,EAAmB9c,CAAI,KACzBgyC,IAAc9P,GACPmQ,GAAiBryC,CAAI,MAE9BurB,GAAQ,QAAQvrB,CAAI,GACbkiC;EACX;AAYE,WAAS+P,EAAYjyC,GAAM;AACzB,WAAIA,MAAS,OACJwrB,EAAIxrB,CAAI,IAEbA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACbyyC,KAEL31B,EAAmB9c,CAAI,KACzBgyC,IAAcC,GACPI,GAAiBryC,CAAI,MAE9BurB,GAAQ,QAAQvrB,CAAI,GACbiyC;EACX;AAYE,WAASQ,EAAiBzyC,GAAM;AAC9B,WAAOA,MAAS,KAAK5G,GAAI4G,CAAI,IAAIiyC,EAAYjyC,CAAI;EACrD;AAYE,WAASowC,EAAcpwC,GAAM;AAE3B,WAAIsc,GAAWtc,CAAI,KACjBurB,GAAQ,QAAQvrB,CAAI,GACb0yC,KAEFlnB,EAAIxrB,CAAI;EACnB;AAYE,WAAS0yC,EAAS1yC,GAAM;AAEtB,WAAIA,MAAS,MAAMwc,GAAkBxc,CAAI,KACvCurB,GAAQ,QAAQvrB,CAAI,GACb0yC,KAEFC,EAAgB3yC,CAAI;EAC/B;AAYE,WAAS2yC,EAAgB3yC,GAAM;AAC7B,WAAI8c,EAAmB9c,CAAI,KACzBgyC,IAAcW,GACPN,GAAiBryC,CAAI,KAE1Bgd,EAAchd,CAAI,KACpBurB,GAAQ,QAAQvrB,CAAI,GACb2yC,KAEFv5C,GAAI4G,CAAI;EACnB;AAYE,WAASkyC,EAAQlyC,GAAM;AAErB,WAAIA,MAAS,MAAMwc,GAAkBxc,CAAI,KACvCurB,GAAQ,QAAQvrB,CAAI,GACbkyC,KAELlyC,MAAS,MAAMA,MAAS,MAAM+c,GAA0B/c,CAAI,IACvD4yC,GAAe5yC,CAAI,IAErBwrB,EAAIxrB,CAAI;EACnB;AAYE,WAAS4yC,GAAe5yC,GAAM;AAC5B,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACb5G,MAIL4G,MAAS,MAAMA,MAAS,MAAMsc,GAAWtc,CAAI,KAC/CurB,GAAQ,QAAQvrB,CAAI,GACb6yC,KAEL/1B,EAAmB9c,CAAI,KACzBgyC,IAAcY,IACPP,GAAiBryC,CAAI,KAE1Bgd,EAAchd,CAAI,KACpBurB,GAAQ,QAAQvrB,CAAI,GACb4yC,MAEFx5C,GAAI4G,CAAI;EACnB;AAYE,WAAS6yC,EAAqB7yC,GAAM;AAElC,WACEA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTwc,GAAkBxc,CAAI,KAEtBurB,GAAQ,QAAQvrB,CAAI,GACb6yC,KAEFC,EAA0B9yC,CAAI;EACzC;AAaE,WAAS8yC,EAA0B9yC,GAAM;AACvC,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACb+yC,KAELj2B,EAAmB9c,CAAI,KACzBgyC,IAAcc,GACPT,GAAiBryC,CAAI,KAE1Bgd,EAAchd,CAAI,KACpBurB,GAAQ,QAAQvrB,CAAI,GACb8yC,KAEFF,GAAe5yC,CAAI;EAC9B;AAaE,WAAS+yC,EAA4B/yC,GAAM;AACzC,WACEA,MAAS,QACTA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTA,MAAS,KAEFwrB,EAAIxrB,CAAI,IAEbA,MAAS,MAAMA,MAAS,MAC1BurB,GAAQ,QAAQvrB,CAAI,GACpB2jB,IAAS3jB,GACFgzC,KAELl2B,EAAmB9c,CAAI,KACzBgyC,IAAce,GACPV,GAAiBryC,CAAI,KAE1Bgd,EAAchd,CAAI,KACpBurB,GAAQ,QAAQvrB,CAAI,GACb+yC,MAETxnB,GAAQ,QAAQvrB,CAAI,GACbizC;EACX;AAYE,WAASD,EAA4BhzC,GAAM;AACzC,WAAIA,MAAS2jB,KACX4H,GAAQ,QAAQvrB,CAAI,GACpB2jB,IAAS,QACFuvB,MAELlzC,MAAS,OACJwrB,EAAIxrB,CAAI,IAEb8c,EAAmB9c,CAAI,KACzBgyC,IAAcgB,GACPX,GAAiBryC,CAAI,MAE9BurB,GAAQ,QAAQvrB,CAAI,GACbgzC;EACX;AAYE,WAASC,EAA8BjzC,GAAM;AAC3C,WACEA,MAAS,QACTA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTA,MAAS,MACTA,MAAS,KAEFwrB,EAAIxrB,CAAI,IAEbA,MAAS,MAAMA,MAAS,MAAM+c,GAA0B/c,CAAI,IACvD4yC,GAAe5yC,CAAI,KAE5BurB,GAAQ,QAAQvrB,CAAI,GACbizC;EACX;AAaE,WAASC,GAAiClzC,GAAM;AAC9C,WAAIA,MAAS,MAAMA,MAAS,MAAM+c,GAA0B/c,CAAI,IACvD4yC,GAAe5yC,CAAI,IAErBwrB,EAAIxrB,CAAI;EACnB;AAYE,WAAS5G,GAAI4G,GAAM;AACjB,WAAIA,MAAS,MACXurB,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,cAAc,GAC3BA,GAAQ,KAAK,UAAU,GAChBxS,MAEFyS,EAAIxrB,CAAI;EACnB;AAgBE,WAASqyC,GAAiBryC,GAAM;AAC9B,WAAAurB,GAAQ,KAAK,cAAc,GAC3BA,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClB4nB;EACX;AAgBE,WAASA,GAAgBnzC,GAAM;AAG7B,WAAOgd,EAAchd,CAAI,IACrB8tB;MACEvC;MACA6nB;MACA;MACA3nB,GAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IACvD,SACA;IACd,EAAUzrB,CAAI,IACNozC,GAAsBpzC,CAAI;EAClC;AAgBE,WAASozC,GAAsBpzC,GAAM;AACnC,WAAAurB,GAAQ,MAAM,cAAc,GACrBymB,EAAYhyC,CAAI;EAC3B;AACA;ACrrBO,IAAMqzC,KAAW;EACtB,MAAM;EACN,UAAUC;EACV,WAAWC;EACX,YAAYC;AACd;AALO,IAQDC,KAAoB;EACxB,UAAUC;AACZ;AAVO,IAYDC,KAAyB;EAC7B,UAAUC;AACZ;AAdO,IAgBDC,KAA8B;EAClC,UAAUC;AACZ;AAGA,SAASN,GAAmBjmB,IAAQ;AAClC,MAAI95B,KAAQ;AACZ,SAAO,EAAEA,KAAQ85B,GAAO,UAAQ;AAC9B,UAAMl0B,IAAQk0B,GAAO95B,EAAK,EAAE,CAAC;AAC7B,KACE4F,EAAM,SAAS,gBACfA,EAAM,SAAS,eACfA,EAAM,SAAS,gBAGfk0B,GAAO,OAAO95B,KAAQ,GAAG4F,EAAM,SAAS,eAAe,IAAI,CAAC,GAC5DA,EAAM,OAAO,QACb5F;EAEN;AACE,SAAO85B;AACT;AAGA,SAASgmB,GAAkBhmB,IAAQI,IAAS;AAC1C,MAAIl6B,IAAQ85B,GAAO,QACfzxB,KAAS,GAETzC,GAEAurB,GAEAE,GAEAivB;AAGJ,SAAOtgD;AAEL,QADA4F,IAAQk0B,GAAO95B,CAAK,EAAE,CAAC,GACnBmxB,GAAM;AAER,UACEvrB,EAAM,SAAS,UACdA,EAAM,SAAS,eAAeA,EAAM;AAErC;AAKEk0B,MAAAA,GAAO95B,CAAK,EAAE,CAAC,MAAM,WAAW4F,EAAM,SAAS,gBACjDA,EAAM,YAAY;IAErB,WAAUyrB,GAAAA;AACT,UACEyI,GAAO95B,CAAK,EAAE,CAAC,MAAM,YACpB4F,EAAM,SAAS,gBAAgBA,EAAM,SAAS,gBAC/C,CAACA,EAAM,cAEPurB,IAAOnxB,GACH4F,EAAM,SAAS,cAAa;AAC9ByC,QAAAA,KAAS;AACT;MACV;IAAA,MAEezC,GAAM,SAAS,eACxByrB,IAAQrxB;AAGZ,QAAMq1C,KAAQ;IACZ,MAAMvb,GAAO3I,CAAI,EAAE,CAAC,EAAE,SAAS,cAAc,SAAS;IACtD,OAAO,OAAO,OAAO,CAAE,GAAE2I,GAAO3I,CAAI,EAAE,CAAC,EAAE,KAAK;IAC9C,KAAK,OAAO,OAAO,CAAA,GAAI2I,GAAOA,GAAO,SAAS,CAAC,EAAE,CAAC,EAAE,GAAG;EAC3D,GACQjO,IAAQ;IACZ,MAAM;IACN,OAAO,OAAO,OAAO,CAAE,GAAEiO,GAAO3I,CAAI,EAAE,CAAC,EAAE,KAAK;IAC9C,KAAK,OAAO,OAAO,CAAE,GAAE2I,GAAOzI,CAAK,EAAE,CAAC,EAAE,GAAG;EAC/C,GACQzmB,IAAO;IACX,MAAM;IACN,OAAO,OAAO,OAAO,CAAA,GAAIkvB,GAAO3I,IAAO9oB,KAAS,CAAC,EAAE,CAAC,EAAE,GAAG;IACzD,KAAK,OAAO,OAAO,CAAA,GAAIyxB,GAAOzI,IAAQ,CAAC,EAAE,CAAC,EAAE,KAAK;EACrD;AACE,SAAAivB,IAAQ;IACN,CAAC,SAASjL,IAAOnb,EAAO;IACxB,CAAC,SAASrO,GAAOqO,EAAO;EAC5B,GAGEomB,IAAQjN,GAAKiN,GAAOxmB,GAAO,MAAM3I,IAAO,GAAGA,IAAO9oB,KAAS,CAAC,CAAC,GAG7Di4C,IAAQjN,GAAKiN,GAAO,CAAC,CAAC,SAAS11C,GAAMsvB,EAAO,CAAC,CAAC,GAK9ComB,IAAQjN;IACNiN;IACArmB;MACEC,GAAQ,OAAO,WAAW,WAAW;MACrCJ,GAAO,MAAM3I,IAAO9oB,KAAS,GAAGgpB,IAAQ,CAAC;MACzC6I;IACN;EACA,GAGEomB,IAAQjN,GAAKiN,GAAO;IAClB,CAAC,QAAQ11C,GAAMsvB,EAAO;IACtBJ,GAAOzI,IAAQ,CAAC;IAChByI,GAAOzI,IAAQ,CAAC;IAChB,CAAC,QAAQxF,GAAOqO,EAAO;EACxB,CAAA,GAGDomB,IAAQjN,GAAKiN,GAAOxmB,GAAO,MAAMzI,IAAQ,CAAC,CAAC,GAG3CivB,IAAQjN,GAAKiN,GAAO,CAAC,CAAC,QAAQjL,IAAOnb,EAAO,CAAC,CAAC,GAC9CnE,GAAO+D,IAAQ3I,GAAM2I,GAAO,QAAQwmB,CAAK,GAClCxmB;AACT;AAMA,SAAS+lB,GAAiB/nB,IAASxS,IAAIyS,GAAK;AAC1C,QAAMC,KAAO;AACb,MAAIh4B,IAAQg4B,GAAK,OAAO,QAEpBoD,GAEAD;AAGJ,SAAOn7B;AACL,SACGg4B,GAAK,OAAOh4B,CAAK,EAAE,CAAC,EAAE,SAAS,gBAC9Bg4B,GAAK,OAAOh4B,CAAK,EAAE,CAAC,EAAE,SAAS,gBACjC,CAACg4B,GAAK,OAAOh4B,CAAK,EAAE,CAAC,EAAE,WACvB;AACAo7B,UAAapD,GAAK,OAAOh4B,CAAK,EAAE,CAAC;AACjC;IACN;AAEE,SAAO0F;AAiBP,WAASA,EAAM6G,IAAM;AAEnB,WAAK6uB,IAaDA,EAAW,YACNmlB,GAAYh0C,EAAI,KAEzB4uB,IAAUnD,GAAK,OAAO,QAAQ;MAC5B3L;QACE2L,GAAK,eAAe;UAClB,OAAOoD,EAAW;UAClB,KAAKpD,GAAK,IAAG;QACd,CAAA;MACT;IACA,GACIF,GAAQ,MAAM,UAAU,GACxBA,GAAQ,MAAM,aAAa,GAC3BA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,aAAa,GAC1BA,GAAQ,KAAK,UAAU,GAChB3I,MA5BE4I,EAAIxrB,EAAI;EA6BrB;AAkBE,WAAS4iB,GAAM5iB,IAAM;AAKnB,WAAIA,OAAS,KACJurB,GAAQ;MACbkoB;MACAQ;MACArlB,IAAUqlB,IAAaD;IAC/B,EAAQh0C,EAAI,IAIJA,OAAS,KACJurB,GAAQ;MACbooB;MACAM;MACArlB,IAAUslB,IAAmBF;IACrC,EAAQh0C,EAAI,IAID4uB,IAAUqlB,EAAWj0C,EAAI,IAAIg0C,GAAYh0C,EAAI;EACxD;AAgBE,WAASk0C,EAAiBl0C,IAAM;AAC9B,WAAOurB,GAAQ;MACbsoB;MACAI;MACAD;IACN,EAAMh0C,EAAI;EACV;AAkBE,WAASi0C,EAAWj0C,IAAM;AAExB,WAAO+Y,GAAG/Y,EAAI;EAClB;AAkBE,WAASg0C,GAAYh0C,IAAM;AACzB,WAAA6uB,EAAW,YAAY,MAChBrD,EAAIxrB,EAAI;EACnB;AACA;AAMA,SAAS0zC,GAAiBnoB,IAASxS,IAAIyS,GAAK;AAC1C,SAAO2oB;AAYP,WAASA,GAAcn0C,IAAM;AAC3B,WAAAurB,GAAQ,MAAM,UAAU,GACxBA,GAAQ,MAAM,gBAAgB,GAC9BA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,gBAAgB,GACtB6oB;EACX;AAYE,WAASA,EAAep0C,IAAM;AAC5B,WAAO+c,GAA0B/c,EAAI,IACjCkuB,GAAkB3C,IAAS8oB,CAAY,EAAEr0C,EAAI,IAC7Cq0C,EAAar0C,EAAI;EACzB;AAYE,WAASq0C,EAAar0C,IAAM;AAC1B,WAAIA,OAAS,KACJs0C,EAAYt0C,EAAI,IAElB0tC;MACLniB;MACAgpB;MACAC;MACA;MACA;MACA;MACA;MACA;MACA;IACN,EAAMx0C,EAAI;EACV;AAYE,WAASu0C,EAAyBv0C,IAAM;AACtC,WAAO+c,GAA0B/c,EAAI,IACjCkuB,GAAkB3C,IAASkpB,EAAe,EAAEz0C,EAAI,IAChDs0C,EAAYt0C,EAAI;EACxB;AAYE,WAASw0C,EAA2Bx0C,IAAM;AACxC,WAAOwrB,EAAIxrB,EAAI;EACnB;AAYE,WAASy0C,GAAgBz0C,IAAM;AAC7B,WAAIA,OAAS,MAAMA,OAAS,MAAMA,OAAS,KAClCsuC;MACL/iB;MACAmpB;MACAlpB;MACA;MACA;MACA;IACR,EAAQxrB,EAAI,IAEDs0C,EAAYt0C,EAAI;EAC3B;AAYE,WAAS00C,EAAmB10C,IAAM;AAChC,WAAO+c,GAA0B/c,EAAI,IACjCkuB,GAAkB3C,IAAS+oB,CAAW,EAAEt0C,EAAI,IAC5Cs0C,EAAYt0C,EAAI;EACxB;AAYE,WAASs0C,EAAYt0C,IAAM;AACzB,WAAIA,OAAS,MACXurB,GAAQ,MAAM,gBAAgB,GAC9BA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,gBAAgB,GAC7BA,GAAQ,KAAK,UAAU,GAChBxS,MAEFyS,EAAIxrB,EAAI;EACnB;AACA;AAMA,SAAS4zC,GAAsBroB,IAASxS,IAAIyS,GAAK;AAC/C,QAAMC,KAAO;AACb,SAAOkpB;AAYP,WAASA,EAAc30C,GAAM;AAC3B,WAAOouC,GAAa;MAClB3iB;MACAF;MACAqpB;MACAC;MACA;MACA;MACA;IACN,EAAM70C,CAAI;EACV;AAYE,WAAS40C,EAAmB50C,GAAM;AAChC,WAAOyrB,GAAK,OAAO,QAAQ;MACzB3L;QACE2L,GAAK,eAAeA,GAAK,OAAOA,GAAK,OAAO,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE;MAC/E;IACA,IACQ1S,GAAG/Y,CAAI,IACPwrB,EAAIxrB,CAAI;EAChB;AAYE,WAAS60C,EAAqB70C,GAAM;AAClC,WAAOwrB,EAAIxrB,CAAI;EACnB;AACA;AAMA,SAAS8zC,GAA2BvoB,IAASxS,IAAIyS,GAAK;AACpD,SAAOspB;AAcP,WAASA,GAAwB90C,GAAM;AAGrC,WAAAurB,GAAQ,MAAM,WAAW,GACzBA,GAAQ,MAAM,iBAAiB,GAC/BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,iBAAiB,GACvBwpB;EACX;AAcE,WAASA,EAAuB/0C,GAAM;AACpC,WAAIA,MAAS,MACXurB,GAAQ,MAAM,iBAAiB,GAC/BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,iBAAiB,GAC9BA,GAAQ,KAAK,WAAW,GACjBxS,MAEFyS,EAAIxrB,CAAI;EACnB;AACA;AC9lBO,IAAMg1C,KAAkB;EAC7B,MAAM;EACN,UAAUC;EACV,YAAY5B,GAAS;AACvB;AAMA,SAAS4B,GAAwB1pB,IAASxS,IAAIyS,GAAK;AACjD,QAAMC,KAAO;AACb,SAAOtyB;AAYP,WAASA,EAAM6G,GAAM;AACnB,WAAAurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,MAAM,kBAAkB,GAChCA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,kBAAkB,GACxB3G;EACX;AAYE,WAASA,EAAK5kB,GAAM;AAClB,WAAIA,MAAS,MACXurB,GAAQ,MAAM,aAAa,GAC3BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,aAAa,GAC1BA,GAAQ,KAAK,YAAY,GAClB3I,KAEF4I,EAAIxrB,CAAI;EACnB;AA6BE,WAAS4iB,EAAM5iB,GAAM;AAMnB,WAAOA,MAAS,MAAM,4BAA4ByrB,GAAK,OAAO,aAC1DD,EAAIxrB,CAAI,IACR+Y,GAAG/Y,CAAI;EACf;AACA;AC1FO,IAAMk1C,KAAiB;EAC5B,MAAM;EACN,UAAUC;EACV,YAAY9B,GAAS;AACvB;AAMA,SAAS8B,GAAuB5pB,IAASxS,IAAIyS,GAAK;AAChD,QAAMC,KAAO;AACb,SAAOtyB;AAYP,WAASA,EAAM6G,GAAM;AACnB,WAAAurB,GAAQ,MAAM,WAAW,GACzBA,GAAQ,MAAM,aAAa,GAC3BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,aAAa,GAC1BA,GAAQ,KAAK,WAAW,GACjB3I;EACX;AAGE,WAASA,EAAM5iB,GAAM;AAKnB,WAAOA,MAAS,MAAM,4BAA4ByrB,GAAK,OAAO,aAC1DD,EAAIxrB,CAAI,IACR+Y,GAAG/Y,CAAI;EACf;AACA;AC3CO,IAAMo1C,KAAa;EACxB,MAAM;EACN,UAAUC;AACZ;AAMA,SAASA,GAAmB9pB,IAASxS,IAAI;AACvC,SAAO5f;AAGP,WAASA,EAAM6G,IAAM;AACnB,WAAAurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,EAAI,GACpBurB,GAAQ,KAAK,YAAY,GAClBuC,EAAavC,IAASxS,IAAI,YAAY;EACjD;AACA;AClBO,IAAMwO,KAAgB;EAC3B,MAAM;EACN,UAAU+tB;AACZ;AAMA,SAASA,GAAsB/pB,IAASxS,IAAIyS,GAAK;AAC/C,MAAI/I,KAAO,GAEPkB;AACJ,SAAOxqB;AAYP,WAASA,EAAM6G,GAAM;AACnB,WAAAurB,GAAQ,MAAM,eAAe,GAEtB5I,EAAO3iB,CAAI;EACtB;AAYE,WAAS2iB,EAAO3iB,GAAM;AACpB,WAAA2jB,IAAS3jB,GACF6rC,EAAQ7rC,CAAI;EACvB;AAYE,WAAS6rC,EAAQ7rC,GAAM;AACrB,WAAIA,MAAS2jB,KACX4H,GAAQ,MAAM,uBAAuB,GAC9B1H,GAAS7jB,CAAI,KAElByiB,MAAQ,MAAMziB,MAAS,QAAQ8c,EAAmB9c,CAAI,MACxDurB,GAAQ,KAAK,eAAe,GACrBxS,GAAG/Y,CAAI,KAETwrB,EAAIxrB,CAAI;EACnB;AAYE,WAAS6jB,GAAS7jB,GAAM;AACtB,WAAIA,MAAS2jB,KACX4H,GAAQ,QAAQvrB,CAAI,GACpByiB,MACOoB,OAET0H,GAAQ,KAAK,uBAAuB,GAC7BvO,EAAchd,CAAI,IACrB8tB,EAAavC,IAASsgB,GAAS,YAAY,EAAE7rC,CAAI,IACjD6rC,EAAQ7rC,CAAI;EACpB;AACA;ACpFO,IAAMlF,KAAO;EAClB,MAAM;EACN,UAAUy6C;EACV,cAAc;IACZ,UAAUC;EACX;EACD,MAAMC;AACR;AAPO,IAUDC,KAAoC;EACxC,UAAUC;EACV,SAAS;AACX;AAbO,IAgBDC,KAAkB;EACtB,UAAUxnB;EACV,SAAS;AACX;AASA,SAASmnB,GAAkBhqB,IAASxS,IAAIyS,GAAK;AAC3C,QAAMC,KAAO,MACP/tB,IAAO+tB,GAAK,OAAOA,GAAK,OAAO,SAAS,CAAC;AAC/C,MAAIoqB,IACFn4C,KAAQA,EAAK,CAAC,EAAE,SAAS,eACrBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,IAAI,EAAE,SACtC,GACF+kB,IAAO;AACX,SAAOtpB;AAGP,WAASA,EAAM6G,GAAM;AACnB,UAAM81C,IACJrqB,GAAK,eAAe,SACnBzrB,MAAS,MAAMA,MAAS,MAAMA,MAAS,KACpC,kBACA;AACN,QACE81C,MAAS,kBACL,CAACrqB,GAAK,eAAe,UAAUzrB,MAASyrB,GAAK,eAAe,SAC5D9O,GAAW3c,CAAI,GACnB;AAOA,UANKyrB,GAAK,eAAe,SACvBA,GAAK,eAAe,OAAOqqB,GAC3BvqB,GAAQ,MAAMuqB,GAAM;QAClB,YAAY;MACb,CAAA,IAECA,MAAS;AACX,eAAAvqB,GAAQ,MAAM,gBAAgB,GACvBvrB,MAAS,MAAMA,MAAS,KAC3BurB,GAAQ,MAAMhE,IAAeiE,GAAKuqB,CAAQ,EAAE/1C,CAAI,IAChD+1C,EAAS/1C,CAAI;AAEnB,UAAI,CAACyrB,GAAK,aAAazrB,MAAS;AAC9B,eAAAurB,GAAQ,MAAM,gBAAgB,GAC9BA,GAAQ,MAAM,eAAe,GACtBlH,GAAOrkB,CAAI;IAE1B;AACI,WAAOwrB,EAAIxrB,CAAI;EACnB;AAGE,WAASqkB,GAAOrkB,GAAM;AACpB,WAAI2c,GAAW3c,CAAI,KAAK,EAAEyiB,IAAO,MAC/B8I,GAAQ,QAAQvrB,CAAI,GACbqkB,OAGN,CAACoH,GAAK,aAAahJ,IAAO,OAC1BgJ,GAAK,eAAe,SACjBzrB,MAASyrB,GAAK,eAAe,SAC7BzrB,MAAS,MAAMA,MAAS,OAE5BurB,GAAQ,KAAK,eAAe,GACrBwqB,EAAS/1C,CAAI,KAEfwrB,EAAIxrB,CAAI;EACnB;AAKE,WAAS+1C,EAAS/1C,GAAM;AACtB,WAAAurB,GAAQ,MAAM,gBAAgB,GAC9BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,gBAAgB,GAC7BE,GAAK,eAAe,SAASA,GAAK,eAAe,UAAUzrB,GACpDurB,GAAQ;MACbyC;;MAEAvC,GAAK,YAAYD,IAAMwqB;MACvBzqB,GAAQ;QACNmqB;QACAO;QACAC;MACR;IACA;EACA;AAGE,WAASF,EAAQh2C,GAAM;AACrB,WAAAyrB,GAAK,eAAe,mBAAmB,MACvCoqB,KACOI,GAAYj2C,CAAI;EAC3B;AAGE,WAASk2C,GAAYl2C,GAAM;AACzB,WAAIgd,EAAchd,CAAI,KACpBurB,GAAQ,MAAM,0BAA0B,GACxCA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,0BAA0B,GAChC0qB,MAEFzqB,EAAIxrB,CAAI;EACnB;AAGE,WAASi2C,GAAYj2C,GAAM;AACzB,WAAAyrB,GAAK,eAAe,OAClBoqB,IACApqB,GAAK,eAAeF,GAAQ,KAAK,gBAAgB,GAAG,IAAI,EAAE,QACrDxS,GAAG/Y,CAAI;EAClB;AACA;AAMA,SAASw1C,GAAyBjqB,IAASxS,IAAIyS,GAAK;AAClD,QAAMC,KAAO;AACb,SAAAA,GAAK,eAAe,aAAa,QAC1BF,GAAQ,MAAMyC,IAAWgoB,GAASG,CAAQ;AAGjD,WAASH,EAAQh2C,GAAM;AACrB,WAAAyrB,GAAK,eAAe,oBAClBA,GAAK,eAAe,qBACpBA,GAAK,eAAe,kBAIfqC;MACLvC;MACAxS;MACA;MACA0S,GAAK,eAAe,OAAO;IACjC,EAAMzrB,CAAI;EACV;AAGE,WAASm2C,EAASn2C,GAAM;AACtB,WAAIyrB,GAAK,eAAe,qBAAqB,CAACzO,EAAchd,CAAI,KAC9DyrB,GAAK,eAAe,oBAAoB,QACxCA,GAAK,eAAe,mBAAmB,QAChC2qB,EAAiBp2C,CAAI,MAE9ByrB,GAAK,eAAe,oBAAoB,QACxCA,GAAK,eAAe,mBAAmB,QAChCF,GAAQ,QAAQqqB,IAAiB78B,IAAIq9B,CAAgB,EAAEp2C,CAAI;EACtE;AAGE,WAASo2C,EAAiBp2C,GAAM;AAE9B,WAAAyrB,GAAK,eAAe,aAAa,MAEjCA,GAAK,YAAY,QAGVqC;MACLvC;MACAA,GAAQ,QAAQzwB,IAAMie,IAAIyS,CAAG;MAC7B;MACAC,GAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IACvD,SACA;IACV,EAAMzrB,CAAI;EACV;AACA;AAMA,SAASouB,GAAe7C,IAASxS,IAAIyS,GAAK;AACxC,QAAMC,KAAO;AACb,SAAOqC;IACLvC;IACAmE;IACA;IACAjE,GAAK,eAAe,OAAO;EAC/B;AAGE,WAASiE,EAAY1vB,GAAM;AACzB,UAAMtC,IAAO+tB,GAAK,OAAOA,GAAK,OAAO,SAAS,CAAC;AAC/C,WAAO/tB,KACLA,EAAK,CAAC,EAAE,SAAS,oBACjBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,IAAI,EAAE,WAAW+tB,GAAK,eAAe,OACnE1S,GAAG/Y,CAAI,IACPwrB,EAAIxrB,CAAI;EAChB;AACA;AAMA,SAASy1C,GAAgBlqB,IAAS;AAChCA,EAAAA,GAAQ,KAAK,KAAK,eAAe,IAAI;AACvC;AAMA,SAASoqB,GAAiCpqB,IAASxS,IAAIyS,GAAK;AAC1D,QAAMC,KAAO;AAIb,SAAOqC;IACLvC;IACAmE;IACA;IACAjE,GAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IACvD,SACA;EACR;AAGE,WAASiE,EAAY1vB,GAAM;AACzB,UAAMtC,IAAO+tB,GAAK,OAAOA,GAAK,OAAO,SAAS,CAAC;AAC/C,WAAO,CAACzO,EAAchd,CAAI,KACxBtC,KACAA,EAAK,CAAC,EAAE,SAAS,6BACfqb,GAAG/Y,CAAI,IACPwrB,EAAIxrB,CAAI;EAChB;AACA;AC/PO,IAAMq2C,KAAkB;EAC7B,MAAM;EACN,UAAUC;EACV,WAAWC;AACb;AAGA,SAASA,GAAyBhpB,IAAQI,IAAS;AAEjD,MAAIl6B,IAAQ85B,GAAO,QAEfhwB,IAEAc,GAEA9G;AAIJ,SAAO9D;AACL,QAAI85B,GAAO95B,CAAK,EAAE,CAAC,MAAM,SAAS;AAChC,UAAI85B,GAAO95B,CAAK,EAAE,CAAC,EAAE,SAAS,WAAW;AACvC8J,QAAAA,KAAU9J;AACV;MACR;AACU85B,MAAAA,GAAO95B,CAAK,EAAE,CAAC,EAAE,SAAS,gBAC5B4K,IAAO5K;IAEf;AAGU85B,MAAAA,GAAO95B,CAAK,EAAE,CAAC,EAAE,SAAS,aAE5B85B,GAAO,OAAO95B,GAAO,CAAC,GAEpB,CAAC8D,KAAcg2B,GAAO95B,CAAK,EAAE,CAAC,EAAE,SAAS,iBAC3C8D,IAAa9D;AAInB,QAAM0xB,IAAU;IACd,MAAM;IACN,OAAO,OAAO,OAAO,CAAE,GAAEoI,GAAOlvB,CAAI,EAAE,CAAC,EAAE,KAAK;IAC9C,KAAK,OAAO,OAAO,CAAA,GAAIkvB,GAAOA,GAAO,SAAS,CAAC,EAAE,CAAC,EAAE,GAAG;EAC3D;AAGE,SAAAA,GAAOlvB,CAAI,EAAE,CAAC,EAAE,OAAO,qBAInB9G,KACFg2B,GAAO,OAAOlvB,GAAM,GAAG,CAAC,SAAS8mB,GAASwI,EAAO,CAAC,GAClDJ,GAAO,OAAOh2B,IAAa,GAAG,GAAG,CAAC,QAAQg2B,GAAOhwB,EAAO,EAAE,CAAC,GAAGowB,EAAO,CAAC,GACtEJ,GAAOhwB,EAAO,EAAE,CAAC,EAAE,MAAM,OAAO,OAAO,CAAA,GAAIgwB,GAAOh2B,CAAU,EAAE,CAAC,EAAE,GAAG,KAEpEg2B,GAAOhwB,EAAO,EAAE,CAAC,IAAI4nB,GAIvBoI,GAAO,KAAK,CAAC,QAAQpI,GAASwI,EAAO,CAAC,GAC/BJ;AACT;AAMA,SAAS+oB,GAAwB/qB,IAASxS,IAAIyS,GAAK;AACjD,QAAMC,KAAO;AAEb,MAAI9H;AACJ,SAAOxqB;AAaP,WAASA,EAAM6G,GAAM;AACnB,QAAIvM,IAAQg4B,GAAK,OAAO,QAEpB1E;AAEJ,WAAOtzB;AAGL,UACEg4B,GAAK,OAAOh4B,CAAK,EAAE,CAAC,EAAE,SAAS,gBAC/Bg4B,GAAK,OAAOh4B,CAAK,EAAE,CAAC,EAAE,SAAS,gBAC/Bg4B,GAAK,OAAOh4B,CAAK,EAAE,CAAC,EAAE,SAAS,WAC/B;AACAszB,QAAAA,KAAY0E,GAAK,OAAOh4B,CAAK,EAAE,CAAC,EAAE,SAAS;AAC3C;MACR;AAKI,WAAI,CAACg4B,GAAK,OAAO,KAAKA,GAAK,IAAA,EAAM,IAAI,MAAMA,GAAK,aAAa1E,OAC3DwE,GAAQ,MAAM,mBAAmB,GACjC5H,IAAS3jB,GACF2iB,EAAO3iB,CAAI,KAEbwrB,EAAIxrB,CAAI;EACnB;AAaE,WAAS2iB,EAAO3iB,GAAM;AACpB,WAAAurB,GAAQ,MAAM,2BAA2B,GAClClH,EAAOrkB,CAAI;EACtB;AAaE,WAASqkB,EAAOrkB,GAAM;AACpB,WAAIA,MAAS2jB,KACX4H,GAAQ,QAAQvrB,CAAI,GACbqkB,MAETkH,GAAQ,KAAK,2BAA2B,GACjCvO,EAAchd,CAAI,IACrB8tB,EAAavC,IAAS3I,IAAO,YAAY,EAAE5iB,CAAI,IAC/C4iB,GAAM5iB,CAAI;EAClB;AAaE,WAAS4iB,GAAM5iB,GAAM;AACnB,WAAIA,MAAS,QAAQ8c,EAAmB9c,CAAI,KAC1CurB,GAAQ,KAAK,mBAAmB,GACzBxS,GAAG/Y,CAAI,KAETwrB,EAAIxrB,CAAI;EACnB;AACA;AC1KO,IAAMw2C,KAAO;EAClB,UAAUC;AACZ;AAMA,SAASA,GAAelrB,IAAS;AAC/B,QAAME,KAAO,MACPirB,IAAUnrB,GAAQ;;IAEtByC;IACA2oB;;IAEAprB,GAAQ;MACN,KAAK,OAAO,WAAW;MACvBqrB;MACA9oB;QACEvC;QACAA,GAAQ;UACN,KAAK,OAAO,WAAW;UACvBqrB;UACArrB,GAAQ,QAAQhuB,IAASq5C,CAAc;QACxC;QACD;MACR;IACA;EACA;AACE,SAAOF;AAGP,WAASC,GAAc32C,GAAM;AAC3B,QAAIA,MAAS,MAAM;AACjBurB,MAAAA,GAAQ,QAAQvrB,CAAI;AACpB;IACN;AACI,WAAAurB,GAAQ,MAAM,iBAAiB,GAC/BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,iBAAiB,GAC9BE,GAAK,mBAAmB,QACjBirB;EACX;AAGE,WAASE,EAAe52C,GAAM;AAC5B,QAAIA,MAAS,MAAM;AACjBurB,MAAAA,GAAQ,QAAQvrB,CAAI;AACpB;IACN;AACI,WAAAurB,GAAQ,MAAM,YAAY,GAC1BA,GAAQ,QAAQvrB,CAAI,GACpBurB,GAAQ,KAAK,YAAY,GACzBE,GAAK,mBAAmB,QACjBirB;EACX;AACA;AC1DO,IAAMG,KAAW;EACtB,YAAYC,GAAc;AAC5B;AAFO,IAGM/nB,KAASgoB,GAAkB,QAAQ;AAHzC,IAIM14C,KAAO04C,GAAkB,MAAM;AAM5C,SAASA,GAAkBC,IAAO;AAChC,SAAO;IACL,UAAUC;IACV,YAAYH;MACVE,OAAU,SAASE,KAAyB;IAClD;EACA;AAME,WAASD,GAAe1rB,GAAS;AAC/B,UAAME,KAAO,MACPrB,IAAa,KAAK,OAAO,WAAW4sB,EAAK,GACzC34C,IAAOktB,EAAQ,QAAQnB,GAAYjxB,GAAOg+C,CAAO;AACvD,WAAOh+C;AAGP,aAASA,EAAM6G,GAAM;AACnB,aAAO6rC,EAAQ7rC,CAAI,IAAI3B,EAAK2B,CAAI,IAAIm3C,EAAQn3C,CAAI;IACtD;AAGI,aAASm3C,EAAQn3C,GAAM;AACrB,UAAIA,MAAS,MAAM;AACjBurB,UAAQ,QAAQvrB,CAAI;AACpB;MACR;AACM,aAAAurB,EAAQ,MAAM,MAAM,GACpBA,EAAQ,QAAQvrB,CAAI,GACbnC;IACb;AAGI,aAASA,GAAKmC,GAAM;AAClB,aAAI6rC,EAAQ7rC,CAAI,KACdurB,EAAQ,KAAK,MAAM,GACZltB,EAAK2B,CAAI,MAIlBurB,EAAQ,QAAQvrB,CAAI,GACbnC;IACb;AAMI,aAASguC,EAAQ7rC,GAAM;AACrB,UAAIA,MAAS;AACX,eAAO;AAET,YAAMlF,KAAOsvB,EAAWpqB,CAAI;AAC5B,UAAIvM,KAAQ;AACZ,UAAIqH;AAGF,eAAO,EAAErH,KAAQqH,GAAK,UAAQ;AAC5B,gBAAMC,IAAOD,GAAKrH,EAAK;AACvB,cAAI,CAACsH,EAAK,YAAYA,EAAK,SAAS,KAAK0wB,IAAMA,GAAK,QAAQ;AAC1D,mBAAO;QAEnB;AAEM,aAAO;IACb;EACA;AACA;AAMA,SAASqrB,GAAeM,IAAe;AACrC,SAAOC;AAGP,WAASA,GAAe9pB,GAAQI,IAAS;AACvC,QAAIl6B,IAAQ,IAER04C;AAIJ,WAAO,EAAE14C,KAAS85B,EAAO;AACnB4e,YAAU,SACR5e,EAAO95B,CAAK,KAAK85B,EAAO95B,CAAK,EAAE,CAAC,EAAE,SAAS,WAC7C04C,IAAQ14C,GACRA,QAEO,CAAC85B,EAAO95B,CAAK,KAAK85B,EAAO95B,CAAK,EAAE,CAAC,EAAE,SAAS,YAEjDA,MAAU04C,IAAQ,MACpB5e,EAAO4e,CAAK,EAAE,CAAC,EAAE,MAAM5e,EAAO95B,IAAQ,CAAC,EAAE,CAAC,EAAE,KAC5C85B,EAAO,OAAO4e,IAAQ,GAAG14C,IAAQ04C,IAAQ,CAAC,GAC1C14C,IAAQ04C,IAAQ,IAElBA,IAAQ;AAGZ,WAAOiL,KAAgBA,GAAc7pB,GAAQI,EAAO,IAAIJ;EAC5D;AACA;AAaA,SAAS2pB,GAAuB3pB,IAAQI,IAAS;AAC/C,MAAIgf,IAAa;AAEjB,SAAO,EAAEA,KAAcpf,GAAO;AAC5B,SACGof,MAAepf,GAAO,UACrBA,GAAOof,CAAU,EAAE,CAAC,EAAE,SAAS,iBACjCpf,GAAOof,IAAa,CAAC,EAAE,CAAC,EAAE,SAAS,QACnC;AACA,YAAM9uC,KAAO0vB,GAAOof,IAAa,CAAC,EAAE,CAAC,GAC/B2K,IAAS3pB,GAAQ,YAAY9vB,EAAI;AACvC,UAAIpK,IAAQ6jD,EAAO,QACfC,IAAc,IACd90B,IAAO,GAEP+0B;AACJ,aAAO/jD,OAAS;AACd,cAAM8M,IAAQ+2C,EAAO7jD,CAAK;AAC1B,YAAI,OAAO8M,KAAU,UAAU;AAE7B,eADAg3C,IAAch3C,EAAM,QACbA,EAAM,WAAWg3C,IAAc,CAAC,MAAM;AAC3C90B,iBACA80B;AAEF,cAAIA,EAAa;AACjBA,cAAc;QACxB,WAEiBh3C,MAAU;AACjBi3C,UAAAA,KAAO,MACP/0B;iBACSliB,MAAU,IAEd;AAEL9M;AACA;QACV;MACA;AACM,UAAIgvB,GAAM;AACR,cAAMppB,IAAQ;UACZ,MACEszC,MAAepf,GAAO,UAAUiqB,MAAQ/0B,IAAO,IAC3C,eACA;UACN,OAAO;YACL,MAAM5kB,GAAK,IAAI;YACf,QAAQA,GAAK,IAAI,SAAS4kB;YAC1B,QAAQ5kB,GAAK,IAAI,SAAS4kB;YAC1B,QAAQ5kB,GAAK,MAAM,SAASpK;YAC5B,cAAcA,IACV8jD,IACA15C,GAAK,MAAM,eAAe05C;UAC/B;UACD,KAAK,OAAO,OAAO,CAAE,GAAE15C,GAAK,GAAG;QACzC;AACQA,QAAAA,GAAK,MAAM,OAAO,OAAO,CAAE,GAAExE,EAAM,KAAK,GACpCwE,GAAK,MAAM,WAAWA,GAAK,IAAI,SACjC,OAAO,OAAOA,IAAMxE,CAAK,KAEzBk0B,GAAO;UACLof;UACA;UACA,CAAC,SAAStzC,GAAOs0B,EAAO;UACxB,CAAC,QAAQt0B,GAAOs0B,EAAO;QACnC,GACUgf,KAAc;MAExB;AACMA;IACN;AAEE,SAAOpf;AACT;AClKO,SAASkqB,GAAgB9qC,IAAQ+qC,IAAYx7C,GAAM;AAExD,MAAID,KAAQ,OAAO;IACjBC,IACI,OAAO,OAAO,CAAA,GAAIA,CAAI,IACtB;MACE,MAAM;MACN,QAAQ;MACR,QAAQ;IACT;IACL;MACE,QAAQ;MACR,cAAc;IACpB;EACA;AAEE,QAAMy7C,IAAc,CAAA,GAEdC,IAAuB,CAAA;AAE7B,MAAIN,IAAS,CAAA,GAETt0B,IAAQ,CAAA;AASZ,QAAMuI,KAAU;IACd,SAAAssB;IACA,OAAA1L;IACA,MAAAzrB;IACA,SAASo3B,EAAiBC,CAAqB;IAC/C,OAAOD,EAAiBE,CAAiB;IACzC,WAAWF,EAAiBE,GAAmB;MAC7C,WAAW;IACZ,CAAA;EACL,GAOQrqB,IAAU;IACd,UAAU;IACV,MAAM;IACN,gBAAgB,CAAE;IAClB,QAAQ,CAAE;IACV,QAAAhhB;IACA,aAAAsrC;IACA,gBAAAC;IACA,KAAA5kB;IACA,YAAA6kB;IACA,OAAAC;EACJ;AAOE,MAAI17C,IAAQg7C,GAAW,SAAS,KAAK/pB,GAASpC,EAAO;AAQrD,SAAImsB,GAAW,cACbE,EAAqB,KAAKF,EAAU,GAE/B/pB;AAGP,WAASyqB,GAAM3nB,GAAO;AAKpB,WAJA6mB,IAASxQ,GAAKwQ,GAAQ7mB,CAAK,GAC3B4nB,GAAI,GAGAf,EAAOA,EAAO,SAAS,CAAC,MAAM,OACzB,CAAA,KAETgB,EAAUZ,IAAY,CAAC,GAGvB/pB,EAAQ,SAASD,GAAWkqB,GAAsBjqB,EAAQ,QAAQA,CAAO,GAClEA,EAAQ;EACnB;AAOE,WAASuqB,GAAe7+C,GAAOk/C,GAAY;AACzC,WAAOC,GAAgBP,EAAY5+C,CAAK,GAAGk/C,CAAU;EACzD;AAGE,WAASN,EAAY5+C,GAAO;AAC1B,WAAOo/C,GAAYnB,GAAQj+C,CAAK;EACpC;AAGE,WAASi6B,IAAM;AAEb,UAAM,EAAC,MAAApzB,GAAM,QAAAyhC,GAAQ,QAAA7lC,GAAQ,QAAA48C,GAAQ,cAAAC,GAAY,IAAI18C;AACrD,WAAO;MACL,MAAAiE;MACA,QAAAyhC;MACA,QAAA7lC;MACA,QAAA48C;MACA,cAAAC;IACN;EACA;AAGE,WAASR,EAAWvkD,GAAO;AACzB+jD,MAAY/jD,EAAM,IAAI,IAAIA,EAAM,QAChCglD,EAAuB;EAC3B;AAgBE,WAASP,KAAO;AAEd,QAAIQ;AACJ,WAAO58C,GAAM,SAASq7C,EAAO,UAAQ;AACnC,YAAM/2C,IAAQ+2C,EAAOr7C,GAAM,MAAM;AAGjC,UAAI,OAAOsE,KAAU;AAKnB,aAJAs4C,IAAa58C,GAAM,QACfA,GAAM,eAAe,MACvBA,GAAM,eAAe,IAGrBA,GAAM,WAAW48C,KACjB58C,GAAM,eAAesE,EAAM;AAE3Bu4C,YAAGv4C,EAAM,WAAWtE,GAAM,YAAY,CAAC;;AAGzC68C,UAAGv4C,CAAK;IAEhB;EACA;AAQE,WAASu4C,EAAG94C,GAAM;AAGhBtD,QAAQA,EAAMsD,CAAI;EACtB;AAGE,WAAS63C,EAAQ73C,GAAM;AACjB8c,MAAmB9c,CAAI,KACzB/D,GAAM,QACNA,GAAM,SAAS,GACfA,GAAM,UAAU+D,MAAS,KAAK,IAAI,GAClC44C,EAAuB,KACd54C,MAAS,OAClB/D,GAAM,UACNA,GAAM,WAIJA,GAAM,eAAe,IACvBA,GAAM,YAENA,GAAM,gBAKFA,GAAM,iBAAiBq7C,EAAOr7C,GAAM,MAAM,EAAE,WAC9CA,GAAM,eAAe,IACrBA,GAAM,YAKV0xB,EAAQ,WAAW3tB;EAIvB;AAGE,WAASmsC,EAAMx4C,GAAMolD,GAAQ;AAG3B,UAAM1/C,IAAQ0/C,KAAU,CAAA;AACxB,WAAA1/C,EAAM,OAAO1F,GACb0F,EAAM,QAAQi6B,EAAG,GACjB3F,EAAQ,OAAO,KAAK,CAAC,SAASt0B,GAAOs0B,CAAO,CAAC,GAC7C3K,EAAM,KAAK3pB,CAAK,GACTA;EACX;AAGE,WAASqnB,EAAK/sB,GAAM;AAClB,UAAM0F,IAAQ2pB,EAAM,IAAG;AACvB,WAAA3pB,EAAM,MAAMi6B,EAAG,GACf3F,EAAQ,OAAO,KAAK,CAAC,QAAQt0B,GAAOs0B,CAAO,CAAC,GACrCt0B;EACX;AAOE,WAAS0+C,EAAsBiB,GAAWvhD,GAAM;AAC9C6gD,MAAUU,GAAWvhD,EAAK,IAAI;EAClC;AAOE,WAASugD,EAAkB1kD,GAAGmE,GAAM;AAClCA,MAAK,QAAO;EAChB;AAQE,WAASqgD,EAAiBmB,GAAUF,GAAQ;AAC1C,WAAO9uB;AAWP,aAASA,EAAKG,GAAY4nB,IAAakH,IAAY;AAEjD,UAAIC,IAEAC,IAEAC,IAEA5hD;AACJ,aAAO,MAAM,QAAQ2yB,CAAU,IAC3BkvB,GAAuBlvB,CAAU,IACjC,cAAcA;;QAEdkvB,GAAuB,CAAClvB,CAAU,CAAC;UACnCmvB,GAAsBnvB,CAAU;AAQpC,eAASmvB,GAAsBrlD,IAAK;AAClC,eAAOiF;AAGP,iBAASA,GAAM6G,IAAM;AACnB,gBAAMw5C,KAAMx5C,OAAS,QAAQ9L,GAAI8L,EAAI,GAC/BlD,KAAMkD,OAAS,QAAQ9L,GAAI,MAC3B4G,KAAO;;;YAGX,GAAI,MAAM,QAAQ0+C,EAAG,IAAIA,KAAMA,KAAM,CAACA,EAAG,IAAI,CAAA;YAC7C,GAAI,MAAM,QAAQ18C,EAAG,IAAIA,KAAMA,KAAM,CAACA,EAAG,IAAI,CAAE;UAC3D;AACU,iBAAOw8C,GAAuBx+C,EAAI,EAAEkF,EAAI;QAClD;MACA;AAQM,eAASs5C,GAAuBx+C,IAAM;AAGpC,eAFAq+C,KAAmBr+C,IACnBs+C,KAAiB,GACbt+C,GAAK,WAAW,IACXo+C,KAEFO,EAAgB3+C,GAAKs+C,EAAc,CAAC;MACnD;AAQM,eAASK,EAAgBT,IAAW;AAClC,eAAO7/C;AAGP,iBAASA,GAAM6G,IAAM;AAanB,iBARAvI,IAAOiiD,GAAK,GACZL,KAAmBL,IACdA,GAAU,YACbrrB,EAAQ,mBAAmBqrB,KAM3BA,GAAU,QACVrrB,EAAQ,OAAO,WAAW,QAAQ,KAAK,SAASqrB,GAAU,IAAI,IAEvDxtB,GAAQ,IAEVwtB,GAAU,SAAS;;;;YAIxBD,IAAS,OAAO,OAAO,OAAO,OAAOprB,CAAO,GAAGorB,CAAM,IAAIprB;YACzDpC;YACAxS;YACAyS;UACZ,EAAYxrB,EAAI;QAChB;MACA;AAGM,eAAS+Y,GAAG/Y,IAAM;AAEhB,eAAAi5C,EAASI,IAAkB5hD,CAAI,GACxBu6C;MACf;AAGM,eAASxmB,GAAIxrB,IAAM;AAGjB,eADAvI,EAAK,QAAO,GACR,EAAE2hD,KAAiBD,GAAiB,SAC/BM,EAAgBN,GAAiBC,EAAc,CAAC,IAElDF;MACf;IACA;EACA;AAOE,WAASZ,EAAUU,GAAW98C,GAAM;AAC9B88C,MAAU,cAAc,CAACpB,EAAqB,SAASoB,CAAS,KAClEpB,EAAqB,KAAKoB,CAAS,GAEjCA,EAAU,WACZxvB;MACEmE,EAAQ;MACRzxB;MACAyxB,EAAQ,OAAO,SAASzxB;MACxB88C,EAAU,QAAQrrB,EAAQ,OAAO,MAAMzxB,CAAI,GAAGyxB,CAAO;IAC7D,GAEQqrB,EAAU,cACZrrB,EAAQ,SAASqrB,EAAU,UAAUrrB,EAAQ,QAAQA,CAAO;EAElE;AAOE,WAAS+rB,KAAQ;AACf,UAAMC,IAAarmB,EAAG,GAChBsmB,IAAgBjsB,EAAQ,UACxBksB,IAAwBlsB,EAAQ,kBAChCmsB,IAAmBnsB,EAAQ,OAAO,QAClCosB,KAAa,MAAM,KAAK/2B,CAAK;AACnC,WAAO;MACL,SAAAg3B;MACA,MAAMF;IACZ;AAOI,aAASE,KAAU;AACjB/9C,MAAAA,KAAQ09C,GACRhsB,EAAQ,WAAWisB,GACnBjsB,EAAQ,mBAAmBksB,GAC3BlsB,EAAQ,OAAO,SAASmsB,GACxB92B,IAAQ+2B,IACRnB,EAAuB;IAC7B;EACA;AAQE,WAASA,IAA0B;AAC7B38C,IAAAA,GAAM,QAAQ07C,KAAe17C,GAAM,SAAS,MAC9CA,GAAM,SAAS07C,EAAY17C,GAAM,IAAI,GACrCA,GAAM,UAAU07C,EAAY17C,GAAM,IAAI,IAAI;EAEhD;AACA;AASA,SAASw8C,GAAYnB,IAAQj+C,IAAO;AAClC,QAAM4gD,IAAa5gD,GAAM,MAAM,QACzB6gD,KAAmB7gD,GAAM,MAAM,cAC/BkV,IAAWlV,GAAM,IAAI,QACrB8gD,IAAiB9gD,GAAM,IAAI;AAEjC,MAAI+gD;AACJ,MAAIH,MAAe1rC;AAEjB6rC,QAAO,CAAC9C,GAAO2C,CAAU,EAAE,MAAMC,IAAkBC,CAAc,CAAC;OAC7D;AAEL,QADAC,IAAO9C,GAAO,MAAM2C,GAAY1rC,CAAQ,GACpC2rC,KAAmB,IAAI;AACzB,YAAMj+B,IAAOm+B,EAAK,CAAC;AACf,aAAOn+B,KAAS,WAClBm+B,EAAK,CAAC,IAAIn+B,EAAK,MAAMi+B,EAAgB,IAErCE,EAAK,MAAK;IAElB;AACQD,QAAiB,KAEnBC,EAAK,KAAK9C,GAAO/oC,CAAQ,EAAE,MAAM,GAAG4rC,CAAc,CAAC;EAEzD;AACE,SAAOC;AACT;AASA,SAAS5B,GAAgBlB,IAAQiB,IAAY;AAC3C,MAAI9kD,IAAQ;AAEZ,QAAMuH,KAAS,CAAA;AAEf,MAAIq/C;AACJ,SAAO,EAAE5mD,IAAQ6jD,GAAO,UAAQ;AAC9B,UAAM/2C,IAAQ+2C,GAAO7jD,CAAK;AAE1B,QAAIG;AACJ,QAAI,OAAO2M,KAAU;AACnB3M,UAAQ2M;;AAER,cAAQA,GAAK;QACX,KAAK,IAAI;AACP3M,cAAQ;AACR;QACV;QACQ,KAAK,IAAI;AACPA,cAAQ;;AACR;QACV;QACQ,KAAK,IAAI;AACPA,cAAQ;;AACR;QACV;QACQ,KAAK,IAAI;AACPA,cAAQ2kD,KAAa,MAAM;AAC3B;QACV;QACQ,KAAK,IAAI;AACP,cAAI,CAACA,MAAc8B,EAAO;AAC1BzmD,cAAQ;AACR;QACV;QACQ;AAEEA,cAAQ,OAAO,aAAa2M,CAAK;MAE3C;AACI85C,QAAQ95C,MAAU,IAClBvF,GAAO,KAAKpH,CAAK;EACrB;AACE,SAAOoH,GAAO,KAAK,EAAE;AACvB;ACxiBO,IAAM+B,KAAW;EACrB,IAAKjC;EACL,IAAKA;EACL,IAAKA;EACL,IAAKA;EACL,IAAKA;EACL,IAAKA;EACL,IAAKA;EACL,IAAKA;EACL,IAAKA;EACL,IAAKA;EACL,IAAKA;EACL,IAAKA;EACL,IAAKA;EACL,IAAK+uC;AACR;AAfO,IAkBMyQ,KAAiB;EAC3B,IAAK/iD;AACR;AApBO,IAuBMgjD,KAAc;EACzB,CAAC,EAAE,GAAG9O;EACN,CAAC,EAAE,GAAGA;EACL,IAAKA;AACR;AA3BO,IA8BM+K,KAAO;EACjB,IAAKpH;EACL,IAAK7nB;EACL,IAAK,CAAC8uB,IAAiB9uB,EAAa;EACpC,IAAKmoB;EACL,IAAK2G;EACL,IAAK9uB;EACL,IAAKijB;EACL,KAAMA;AACT;AAvCO,IA0CMzb,KAAS;EACnB,IAAK8X;EACL,IAAKqD;AACR;AA7CO,IAgDM7rC,KAAO;EAClB,CAAC,EAAE,GAAG+2C;EACN,CAAC,EAAE,GAAGA;EACN,CAAC,EAAE,GAAGA;EACL,IAAKJ;EACL,IAAKnO;EACL,IAAK8B;EACL,IAAK,CAACS,IAAU0I,EAAQ;EACxB,IAAKoD;EACL,IAAK,CAAChG,IAAiBhF,EAAe;EACtC,IAAKmJ;EACL,IAAK1K;EACL,IAAKmD;AACR;AA7DO,IAgEM5b,KAAa;EACxB,MAAM,CAACyY,IAAW6R,EAAW;AAC/B;AAlEO,IAqEMrR,KAAmB;EAC9B,MAAM,CAAC,IAAI,EAAE;AACf;AAvEO,IA0EMsR,KAAU;EACrB,MAAM,CAAA;AACR;AA5EO,IA4EP,KAAA,OAAA,OAAA,OAAA,eAAA;;;;;;;;;;;;ACrFO,SAASzhD,GAAMvD,IAAS;AAE7B,QAAM20B;;IAEJP,GAAkB,CAAC6wB,IAAmB,IAHvBjlD,MAAW,CAAA,GAGyB,cAAc,CAAE,CAAC,CAAC;KAGjEkX,KAAS;IACb,SAAS,CAAE;IACX,MAAM,CAAE;IACR,YAAAyd;IACA,SAAS9yB,EAAOiG,EAAO;IACvB,UAAUjG,EAAOyF,EAAQ;IACzB,MAAMzF,EAAOk/C,EAAI;IACjB,QAAQl/C,EAAOy3B,EAAM;IACrB,MAAMz3B,EAAO+G,EAAI;EACrB;AACE,SAAOsO;AAKP,WAASrV,EAAOo/C,GAAS;AACvB,WAAOiE;AAEP,aAASA,EAAQz+C,GAAM;AACrB,aAAOu7C,GAAgB9qC,IAAQ+pC,GAASx6C,CAAI;IAClD;EACA;AACA;ACvCO,SAAS0+C,GAAYrtB,IAAQ;AAClC,SAAO,CAAC6e,GAAY7e,EAAM;AAAG;AAG7B,SAAOA;AACT;ACAA,IAAM/zB,KAAS;AAKR,SAASqhD,KAAa;AAC3B,MAAIlZ,KAAS,GACTzV,KAAS,IAET/yB,IAAQ,MAER2hD;AACJ,SAAOC;AAIP,WAASA,EAAannD,GAAOonD,GAAU5hD,GAAK;AAE1C,UAAMk+C,KAAS,CAAA;AAEf,QAAIv9C,GAEAiC,GAEA4wC,IAEAqO,IAEAj7C;AAeJ,SAdApM,IACEs4B,MACC,OAAOt4B,KAAU,WACdA,EAAM,SAAQ,IACd,IAAI,YAAYonD,KAAY,MAAS,EAAE,OAAOpnD,CAAK,IACzDg5C,KAAgB,GAChB1gB,KAAS,IACL/yB,MAEEvF,EAAM,WAAW,CAAC,MAAM,SAC1Bg5C,MAEFzzC,IAAQ,SAEHyzC,KAAgBh5C,EAAM,UAAQ;AAMnC,UALA4F,GAAO,YAAYozC,IACnB7yC,IAAQP,GAAO,KAAK5F,CAAK,GACzBqnD,KACElhD,KAASA,EAAM,UAAU,SAAYA,EAAM,QAAQnG,EAAM,QAC3DoM,IAAOpM,EAAM,WAAWqnD,EAAW,GAC/B,CAAClhD,GAAO;AACVmyB,QAAAA,KAASt4B,EAAM,MAAMg5C,EAAa;AAClC;MACR;AACM,UAAI5sC,MAAS,MAAM4sC,OAAkBqO,MAAeH;AAClDxD,QAAAA,GAAO,KAAK,EAAE,GACdwD,KAAmB;;AAUnB,gBARIA,OACFxD,GAAO,KAAK,EAAE,GACdwD,KAAmB,SAEjBlO,KAAgBqO,OAClB3D,GAAO,KAAK1jD,EAAM,MAAMg5C,IAAeqO,EAAW,CAAC,GACnDtZ,MAAUsZ,KAAcrO,KAElB5sC,GAAI;UACV,KAAK,GAAG;AACNs3C,YAAAA,GAAO,KAAK,KAAK,GACjB3V;AACA;UACZ;UACU,KAAK,GAAG;AAGN,iBAFA3lC,IAAO,KAAK,KAAK2lC,KAAS,CAAC,IAAI,GAC/B2V,GAAO,KAAK,EAAE,GACP3V,OAAW3lC,IAAMs7C,CAAAA,GAAO,KAAK,EAAE;AACtC;UACZ;UACU,KAAK,IAAI;AACPA,YAAAA,GAAO,KAAK,EAAE,GACd3V,KAAS;AACT;UACZ;UACU;AACEmZ,YAAAA,KAAmB,MACnBnZ,KAAS;QAErB;AAEMiL,MAAAA,KAAgBqO,KAAc;IACpC;AACI,WAAI7hD,MACE0hD,MAAkBxD,GAAO,KAAK,EAAE,GAChCprB,MAAQorB,GAAO,KAAKprB,EAAM,GAC9BorB,GAAO,KAAK,IAAI,IAEXA;EACX;AACA;AC9GA,IAAM4D,KACJ;AAcK,SAASC,GAAavnD,IAAO;AAClC,SAAOA,GAAM,QAAQsnD,IAA4BE,EAAM;AACzD;AAQA,SAASA,GAAOviD,IAAIkvB,IAAIszB,GAAI;AAC1B,MAAItzB;AAEF,WAAOA;AAKT,MADaszB,EAAG,WAAW,CAAC,MACf,IAAI;AACf,UAAMp/B,IAAOo/B,EAAG,WAAW,CAAC,GACtBC,IAAMr/B,MAAS,OAAOA,MAAS;AACrC,WAAO8qB,GAAgCsU,EAAG,MAAMC,IAAM,IAAI,CAAC,GAAGA,IAAM,KAAK,EAAE;EAC/E;AACE,SAAO1U,GAA8ByU,CAAE,KAAKxiD;AAC9C;ACqGA,IAAMxB,KAAM,CAAA,EAAG;AAyBR,SAASkkD,GAAa3nD,IAAOonD,IAAUvlD,GAAS;AACrD,SAAI,OAAOulD,MAAa,aACtBvlD,IAAUulD,IACVA,KAAW,SAENQ,GAAS/lD,CAAO;IACrBmlD;MACE5hD,GAAMvD,CAAO,EAAE,SAAA,EAAW,MAAMolD,GAAAA,EAAajnD,IAAOonD,IAAU,IAAI,CAAC;IACzE;EACA;AACA;AAOA,SAASQ,GAAS/lD,IAAS;AAEzB,QAAMglC,KAAS;IACb,YAAY,CAAE;IACd,gBAAgB,CAAC,YAAY,YAAY,WAAW,aAAa,QAAQ;IACzE,OAAO;MACL,UAAUghB,EAAO11B,EAAI;MACrB,kBAAkB21B;MAClB,eAAeA;MACf,YAAYD,EAAOt2B,EAAO;MAC1B,YAAYs2B,EAAO5R,EAAU;MAC7B,iBAAiB6R;MACjB,oBAAoBA;MACpB,YAAYD,EAAOE,EAAQ;MAC3B,qBAAqBzvB;MACrB,qBAAqBA;MACrB,cAAcuvB,EAAOE,IAAUzvB,CAAM;MACrC,UAAUuvB,EAAO3P,IAAU5f,CAAM;MACjC,cAAcwvB;MACd,MAAMA;MACN,eAAeA;MACf,YAAYD,EAAOlkD,EAAU;MAC7B,6BAA6B20B;MAC7B,uBAAuBA;MACvB,uBAAuBA;MACvB,UAAUuvB,EAAOj3B,EAAQ;MACzB,iBAAiBi3B,EAAOt4B,EAAS;MACjC,mBAAmBs4B,EAAOt4B,EAAS;MACnC,UAAUs4B,EAAOxjD,IAAMi0B,CAAM;MAC7B,cAAcwvB;MACd,UAAUD,EAAOxjD,IAAMi0B,CAAM;MAC7B,cAAcwvB;MACd,OAAOD,EAAOn2B,EAAK;MACnB,OAAO4G;MACP,MAAMuvB,EAAO11B,EAAI;MACjB,UAAU01B,EAAO50B,EAAQ;MACzB,eAAe+0B;MACf,aAAaH,EAAO3gD,IAAM+gD,EAAkB;MAC5C,eAAeJ,EAAO3gD,EAAI;MAC1B,WAAW2gD,EAAO10B,EAAS;MAC3B,WAAW+0B;MACX,iBAAiB5vB;MACjB,2BAA2BA;MAC3B,qBAAqBA;MACrB,eAAeuvB,EAAOt2B,EAAO;MAC7B,QAAQs2B,EAAOt0B,EAAM;MACrB,eAAes0B,EAAOl0B,EAAa;IACpC;IACD,MAAM;MACJ,YAAYw0B,GAAQ;MACpB,oBAAoBC;MACpB,UAAUD,GAAQ;MAClB,eAAeE;MACf,kBAAkBC;MAClB,YAAYH,GAAQ;MACpB,sBAAsBI;MACtB,qCAAqCC;MACrC,iCAAiCA;MACjC,yBAAyBC;MACzB,YAAYN,GAAOO,EAAgB;MACnC,iBAAiBC;MACjB,qBAAqBC;MACrB,qBAAqBC;MACrB,eAAeN;MACf,cAAcJ,GAAOW,CAAkB;MACvC,UAAUX,GAAOY,EAAc;MAC/B,cAAcR;MACd,MAAMA;MACN,YAAYJ,GAAQ;MACpB,6BAA6Ba;MAC7B,uBAAuBC;MACvB,uBAAuBC;MACvB,UAAUf,GAAQ;MAClB,iBAAiBA,GAAOgB,CAAe;MACvC,mBAAmBhB,GAAOgB,CAAe;MACzC,UAAUhB,GAAOiB,CAAc;MAC/B,cAAcb;MACd,UAAUJ,GAAOkB,CAAc;MAC/B,cAAcd;MACd,OAAOJ,GAAOmB,EAAW;MACzB,OAAOC;MACP,WAAWC;MACX,YAAYC;MACZ,MAAMtB,GAAOuB,EAAU;MACvB,UAAUvB,GAAQ;MAClB,aAAaA,GAAQ;MACrB,eAAeA,GAAQ;MACvB,WAAWA,GAAQ;MACnB,iBAAiBwB;MACjB,2BAA2BC;MAC3B,qBAAqBC;MACrB,UAAUC;MACV,eAAe3B,GAAO4B,CAAmB;MACzC,2BAA2BC;MAC3B,mBAAmBC;MACnB,QAAQ9B,GAAQ;MAChB,eAAeA,GAAM;IAC3B;EACA;AACE+B,KAAUrjB,KAAShlC,MAAW,CAAE,GAAE,mBAAmB,CAAE,CAAA;AAGvD,QAAMoI,IAAO,CAAA;AACb,SAAOkgD;AAUP,WAASA,GAAQxwB,IAAQ;AAEvB,QAAI/wB,IAAO;MACT,MAAM;MACN,UAAU,CAAA;IAChB;AAEI,UAAMmxB,IAAU;MACd,OAAO,CAACnxB,CAAI;MACZ,YAAY,CAAE;MACd,QAAAi+B;MACA,OAAA0R;MACA,MAAAzrB;MACA,QAAAwL;MACA,QAAA8xB;MACA,MAAAngD;IACN,GAEUogD,IAAY,CAAA;AAClB,QAAIxqD,KAAQ;AACZ,WAAO,EAAEA,KAAQ85B,GAAO;AAGtB,UACEA,GAAO95B,EAAK,EAAE,CAAC,EAAE,SAAS,iBAC1B85B,GAAO95B,EAAK,EAAE,CAAC,EAAE,SAAS;AAE1B,YAAI85B,GAAO95B,EAAK,EAAE,CAAC,MAAM;AACvBwqD,YAAU,KAAKxqD,EAAK;aACf;AACL,gBAAMiK,KAAOugD,EAAU,IAAG;AAC1BxqD,eAAQyqD,EAAY3wB,IAAQ7vB,IAAMjK,EAAK;QACjD;AAII,SADAA,KAAQ,IACD,EAAEA,KAAQ85B,GAAO,UAAQ;AAC9B,YAAMxtB,KAAU06B,GAAOlN,GAAO95B,EAAK,EAAE,CAAC,CAAC;AACnC4D,SAAI,KAAK0I,IAASwtB,GAAO95B,EAAK,EAAE,CAAC,EAAE,IAAI,KACzCsM,GAAQwtB,GAAO95B,EAAK,EAAE,CAAC,EAAE,IAAI,EAAE;QAC7B,OAAO;UACL;YACE,gBAAgB85B,GAAO95B,EAAK,EAAE,CAAC,EAAE;UAClC;UACDk6B;QACD;QACDJ,GAAO95B,EAAK,EAAE,CAAC;MACzB;IAEA;AAGI,QAAIk6B,EAAQ,WAAW,SAAS,GAAG;AACjC,YAAMjwB,KAAOiwB,EAAQ,WAAWA,EAAQ,WAAW,SAAS,CAAC;AAE7D,OADgBjwB,GAAK,CAAC,KAAKygD,IACnB,KAAKxwB,GAAS,QAAWjwB,GAAK,CAAC,CAAC;IAC9C;AA0BI,SAvBAlB,EAAK,WAAW;MACd,OAAOP;QACLsxB,GAAO,SAAS,IACZA,GAAO,CAAC,EAAE,CAAC,EAAE,QACb;UACE,MAAM;UACN,QAAQ;UACR,QAAQ;QACtB;MACO;MACD,KAAKtxB;QACHsxB,GAAO,SAAS,IACZA,GAAOA,GAAO,SAAS,CAAC,EAAE,CAAC,EAAE,MAC7B;UACE,MAAM;UACN,QAAQ;UACR,QAAQ;QACtB;MACA;IACA,GAGI95B,KAAQ,IACD,EAAEA,KAAQgnC,GAAO,WAAW;AACjCj+B,UAAOi+B,GAAO,WAAWhnC,EAAK,EAAE+I,CAAI,KAAKA;AAE3C,WAAOA;EACX;AAQE,WAAS0hD,EAAY3wB,IAAQp0B,GAAO0M,GAAQ;AAC1C,QAAIpS,IAAQ0F,IAAQ,GAChBilD,KAAmB,IACnBC,KAAa,OAEbx3B,IAEAylB,IAEAgS,IAEAvI;AACJ,WAAO,EAAEtiD,KAASoS,KAAQ;AACxB,YAAMirB,KAAQvD,GAAO95B,CAAK;AAC1B,cAAQq9B,GAAM,CAAC,EAAE,MAAI;QACnB,KAAK;QACL,KAAK;QACL,KAAK,cAAc;AACbA,aAAM,CAAC,MAAM,UACfstB,OAEAA,MAEFrI,KAAW;AACX;QACV;QACQ,KAAK,mBAAmB;AAClBjlB,aAAM,CAAC,MAAM,YAEbjK,MACA,CAACkvB,MACD,CAACqI,MACD,CAACE,OAEDA,KAAsB7qD,IAExBsiD,KAAW;AAEb;QACV;QACQ,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;AAGH;QAEF;AACEA,eAAW;MAErB;AACM,UACG,CAACqI,MACAttB,GAAM,CAAC,MAAM,WACbA,GAAM,CAAC,EAAE,SAAS,oBACnBstB,OAAqB,MACpBttB,GAAM,CAAC,MAAM,WACZA,GAAM,CAAC,EAAE,SAAS,mBACjBA,GAAM,CAAC,EAAE,SAAS,gBACtB;AACA,YAAIjK,IAAU;AACZ,cAAI03B,KAAY9qD;AAEhB,eADA64C,KAAY,QACLiS,QAAa;AAClB,kBAAMC,KAAYjxB,GAAOgxB,EAAS;AAClC,gBACEC,GAAU,CAAC,EAAE,SAAS,gBACtBA,GAAU,CAAC,EAAE,SAAS,mBACtB;AACA,kBAAIA,GAAU,CAAC,MAAM,OAAQ;AACzBlS,qBACF/e,GAAO+e,EAAS,EAAE,CAAC,EAAE,OAAO,mBAC5B+R,KAAa,OAEfG,GAAU,CAAC,EAAE,OAAO,cACpBlS,KAAYiS;YAC1B,WACc,EAAAC,GAAU,CAAC,EAAE,SAAS,gBACtBA,GAAU,CAAC,EAAE,SAAS,sBACtBA,GAAU,CAAC,EAAE,SAAS,gCACtBA,GAAU,CAAC,EAAE,SAAS,sBACtBA,GAAU,CAAC,EAAE,SAAS,kBAItB;UAEd;AAEYF,iBACC,CAAChS,MAAagS,KAAsBhS,QAErCzlB,GAAS,UAAU,OAIrBA,GAAS,MAAM,OAAO;YACpB,CAAE;YACFylB,KAAY/e,GAAO+e,EAAS,EAAE,CAAC,EAAE,QAAQxb,GAAM,CAAC,EAAE;UAC9D,GACUvD,GAAO,OAAO+e,MAAa74C,GAAO,GAAG,CAAC,QAAQozB,IAAUiK,GAAM,CAAC,CAAC,CAAC,GACjEr9B,KACAoS;QACV;AAGQ,YAAIirB,GAAM,CAAC,EAAE,SAAS,kBAAkB;AAEtC,gBAAM/1B,KAAO;YACX,MAAM;YACN,SAAS;YACT,OAAO,OAAO,OAAO,CAAA,GAAI+1B,GAAM,CAAC,EAAE,KAAK;;YAEvC,KAAK;UACjB;AACUjK,eAAW9rB,IACXwyB,GAAO,OAAO95B,GAAO,GAAG,CAAC,SAASsH,IAAM+1B,GAAM,CAAC,CAAC,CAAC,GACjDr9B,KACAoS,KACAy4C,KAAsB,QACtBvI,KAAW;QACrB;MACA;IACA;AACI,WAAAxoB,GAAOp0B,CAAK,EAAE,CAAC,EAAE,UAAUklD,IACpBx4C;EACX;AAYE,WAAS41C,EAAOnkD,IAAQmnD,GAAK;AAC3B,WAAO75B;AAOP,aAASA,EAAKvrB,GAAO;AACnB8yC,QAAM,KAAK,MAAM70C,GAAO+B,CAAK,GAAGA,CAAK,GACjColD,KAAKA,EAAI,KAAK,MAAMplD,CAAK;IACnC;EACA;AAME,WAAS6yB,IAAS;AAChB,SAAK,MAAM,KAAK;MACd,MAAM;MACN,UAAU,CAAA;IACX,CAAA;EACL;AAcE,WAASigB,EAAM3xC,IAAMnB,GAAOqlD,GAAc;AACzB,SAAK,MAAM,KAAK,MAAM,SAAS,CAAC,EAEvB,SACf,KAAKlkD,EAAI,GAClB,KAAK,MAAM,KAAKA,EAAI,GACpB,KAAK,WAAW,KAAK,CAACnB,GAAOqlD,CAAY,CAAC,GAC1ClkD,GAAK,WAAW;MACd,OAAOyB,GAAM5C,EAAM,KAAK;;MAExB,KAAK;IACX;EACA;AAUE,WAAS0iD,GAAO0C,IAAK;AACnB,WAAO35B;AAOP,aAASA,EAAMzrB,GAAO;AAChBolD,MAAAA,MAAKA,GAAI,KAAK,MAAMplD,CAAK,GAC7BqnB,EAAK,KAAK,MAAMrnB,CAAK;IAC3B;EACA;AAYE,WAASqnB,EAAKrnB,IAAOslD,GAAa;AAChC,UAAMnkD,IAAO,KAAK,MAAM,IAAG,GACrBoqB,IAAO,KAAK,WAAW,IAAG;AAChC,QAAKA;AAWMA,QAAK,CAAC,EAAE,SAASvrB,GAAM,SAC5BslD,IACFA,EAAY,KAAK,MAAMtlD,IAAOurB,EAAK,CAAC,CAAC,KAErBA,EAAK,CAAC,KAAKu5B,IACnB,KAAK,MAAM9kD,IAAOurB,EAAK,CAAC,CAAC;QAfnC,OAAM,IAAI;MACR,mBACEvrB,GAAM,OACN,QACA2qC,GAAkB;QAChB,OAAO3qC,GAAM;QACb,KAAKA,GAAM;MACvB,CAAW,IACD;IACV;AASImB,MAAK,SAAS,MAAMyB,GAAM5C,GAAM,GAAG;EACvC;AAME,WAAS2kD,IAAS;AAChB,WAAOvpD,GAAS,KAAK,MAAM,IAAK,CAAA;EACpC;AAUE,WAASonD,KAAqB;AAC5B,SAAK,KAAK,8BAA8B;EAC5C;AAME,WAASD,GAAqBviD,IAAO;AACnC,QAAI,KAAK,KAAK,6BAA6B;AACzC,YAAMulD,IAAW,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AACjDA,QAAS,QAAQ,OAAO,SAAS,KAAK,eAAevlD,EAAK,GAAG,EAAE,GAC/D,KAAK,KAAK,8BAA8B;IAC9C;EACA;AAME,WAASmjD,IAA4B;AACnC,UAAM3+C,KAAO,KAAK,OAAM,GAClBrD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,OAAOqD;EAChB;AAME,WAAS4+C,IAA4B;AACnC,UAAM5+C,KAAO,KAAK,OAAM,GAClBrD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,OAAOqD;EAChB;AAME,WAAS0+C,IAAwB;AAE3B,SAAK,KAAK,mBACd,KAAK,OAAM,GACX,KAAK,KAAK,iBAAiB;EAC/B;AAME,WAASD,KAAmB;AAC1B,UAAMz+C,KAAO,KAAK,OAAM,GAClBrD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,QAAQqD,GAAK,QAAQ,4BAA4B,EAAE,GACxD,KAAK,KAAK,iBAAiB;EAC/B;AAME,WAAS6+C,IAAqB;AAC5B,UAAM7+C,KAAO,KAAK,OAAM,GAClBrD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,QAAQqD,GAAK,QAAQ,gBAAgB,EAAE;EAChD;AAME,WAASg/C,EAA4BxjD,IAAO;AAC1C,UAAMimB,IAAQ,KAAK,OAAM,GACnB9kB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,QAAQ8kB,GACb9kB,EAAK,aAAaslB;MAChB,KAAK,eAAezmB,EAAK;IAC/B,EAAM,YAAW;EACjB;AAME,WAASyjD,IAA8B;AACrC,UAAMj/C,KAAO,KAAK,OAAM,GAClBrD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,QAAQqD;EACjB;AAME,WAAS++C,IAAoC;AAC3C,UAAM/+C,KAAO,KAAK,OAAM,GAClBrD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,MAAMqD;EACf;AAME,WAASm+C,EAAyB3iD,IAAO;AACvC,UAAMmB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,QAAI,CAACA,EAAK,OAAO;AACf,YAAMqkD,IAAQ,KAAK,eAAexlD,EAAK,EAAE;AACzCmB,QAAK,QAAQqkD;IACnB;EACA;AAME,WAAShB,IAA0B;AACjC,SAAK,KAAK,+BAA+B;EAC7C;AAME,WAASD,EAAgCvkD,IAAO;AAC9C,UAAMmB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,QAAQ,KAAK,eAAenB,EAAK,EAAE,YAAY,CAAC,MAAM,KAAK,IAAI;EACxE;AAME,WAASskD,IAAsB;AAC7B,SAAK,KAAK,+BAA+B;EAC7C;AAOE,WAASjC,GAAYriD,IAAO;AAG1B,UAAMuU,IAFO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,EAEvB;AACtB,QAAIlQ,IAAOkQ,EAASA,EAAS,SAAS,CAAC;AACvC,KAAI,CAAClQ,KAAQA,EAAK,SAAS,YAEzBA,IAAOW,GAAI,GACXX,EAAK,WAAW;MACd,OAAOzB,GAAM5C,GAAM,KAAK;;MAExB,KAAK;IACb,GACMuU,EAAS,KAAKlQ,CAAI,IAEpB,KAAK,MAAM,KAAKA,CAAI;EACxB;AAOE,WAASy+C,EAAW9iD,IAAO;AACzB,UAAMqE,IAAO,KAAK,MAAM,IAAG;AAC3BA,MAAK,SAAS,KAAK,eAAerE,EAAK,GACvCqE,EAAK,SAAS,MAAMzB,GAAM5C,GAAM,GAAG;EACvC;AAOE,WAASgkD,EAAiBhkD,IAAO;AAC/B,UAAMs0B,IAAU,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAEhD,QAAI,KAAK,KAAK,aAAa;AACzB,YAAMjwB,IAAOiwB,EAAQ,SAASA,EAAQ,SAAS,SAAS,CAAC;AACzDjwB,QAAK,SAAS,MAAMzB,GAAM5C,GAAM,GAAG,GACnC,KAAK,KAAK,cAAc;AACxB;IACN;AAEM,KAAC,KAAK,KAAK,gCACXohC,GAAO,eAAe,SAAS9M,EAAQ,IAAI,MAE3C+tB,GAAY,KAAK,MAAMriD,EAAK,GAC5B8iD,EAAW,KAAK,MAAM9iD,EAAK;EAEjC;AAOE,WAAS0jD,IAAkB;AACzB,SAAK,KAAK,cAAc;EAC5B;AAOE,WAASC,IAAiB;AACxB,UAAMn/C,KAAO,KAAK,OAAM,GAClBrD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,QAAQqD;EACjB;AAOE,WAASo/C,IAAiB;AACxB,UAAMp/C,KAAO,KAAK,OAAM,GAClBrD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,QAAQqD;EACjB;AAOE,WAAS8+C,KAAiB;AACxB,UAAM9+C,KAAO,KAAK,OAAM,GAClBrD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,QAAQqD;EACjB;AAOE,WAASy/C,KAAa;AACpB,UAAM9iD,KAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAI7C,QAAI,KAAK,KAAK,aAAa;AAEzB,YAAMskD,IAAgB,KAAK,KAAK,iBAAiB;AACjDtkD,MAAAA,GAAK,QAAQ,aAEbA,GAAK,gBAAgBskD,GAErB,OAAOtkD,GAAK,KACZ,OAAOA,GAAK;IAClB;AAEM,aAAOA,GAAK,YAEZ,OAAOA,GAAK;AAEd,SAAK,KAAK,gBAAgB;EAC9B;AAOE,WAAS0iD,KAAc;AACrB,UAAM1iD,KAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAI7C,QAAI,KAAK,KAAK,aAAa;AAEzB,YAAMskD,IAAgB,KAAK,KAAK,iBAAiB;AACjDtkD,MAAAA,GAAK,QAAQ,aAEbA,GAAK,gBAAgBskD,GAErB,OAAOtkD,GAAK,KACZ,OAAOA,GAAK;IAClB;AAEM,aAAOA,GAAK,YAEZ,OAAOA,GAAK;AAEd,SAAK,KAAK,gBAAgB;EAC9B;AAOE,WAAS4iD,GAAgB/jD,IAAO;AAC9B,UAAM01B,IAAS,KAAK,eAAe11B,EAAK,GAClCulD,IAAW,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAGjDA,MAAS,QAAQzD,GAAapsB,CAAM,GAEpC6vB,EAAS,aAAa9+B,GAAoBiP,CAAM,EAAE,YAAW;EACjE;AAOE,WAASouB,KAAc;AACrB,UAAM1+C,KAAW,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,GAC3C7K,IAAQ,KAAK,OAAM,GACnB4G,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAG7C,QADA,KAAK,KAAK,cAAc,MACpBA,EAAK,SAAS,QAAQ;AAExB,YAAMD,IAAWkE,GAAS;AAC1BjE,QAAK,WAAWD;IACtB;AACMC,QAAK,MAAM5G;EAEjB;AAOE,WAAS4pD,IAAkC;AACzC,UAAM3/C,KAAO,KAAK,OAAM,GAClBrD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,MAAMqD;EACf;AAOE,WAAS4/C,KAA4B;AACnC,UAAM5/C,KAAO,KAAK,OAAM,GAClBrD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,QAAQqD;EACjB;AAOE,WAAS6/C,KAAiB;AACxB,SAAK,KAAK,cAAc;EAC5B;AAOE,WAAS5B,IAAmB;AAC1B,SAAK,KAAK,gBAAgB;EAC9B;AAOE,WAASyB,GAAsBlkD,IAAO;AACpC,UAAMimB,IAAQ,KAAK,OAAM,GACnB9kB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAG7CA,MAAK,QAAQ8kB,GAEb9kB,EAAK,aAAaslB;MAChB,KAAK,eAAezmB,EAAK;IAC/B,EAAM,YAAW,GACb,KAAK,KAAK,gBAAgB;EAC9B;AAOE,WAAS+iD,GAA+B/iD,IAAO;AAC7C,SAAK,KAAK,yBAAyBA,GAAM;EAC7C;AAME,WAASgjD,GAA8BhjD,IAAO;AAC5C,UAAMwE,IAAO,KAAK,eAAexE,EAAK,GAChC1F,IAAO,KAAK,KAAK;AAEvB,QAAIC;AACAD,SACFC,IAAQmzC;MACNlpC;MACAlK,MAAS,oCAAoC,KAAK;IAC1D,GACM,KAAK,KAAK,yBAAyB,UAGnCC,IADegzC,GAA8B/oC,CAAI;AAGnD,UAAMH,KAAO,KAAK,MAAM,IAAG;AAC3BA,OAAK,SAAS9J,GACd8J,GAAK,SAAS,MAAMzB,GAAM5C,GAAM,GAAG;EACvC;AAME,WAAS6iD,GAAuB7iD,IAAO;AACrC8iD,MAAW,KAAK,MAAM9iD,EAAK;AAC3B,UAAMmB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,MAAM,KAAK,eAAenB,EAAK;EACxC;AAME,WAAS4iD,GAAoB5iD,IAAO;AAClC8iD,MAAW,KAAK,MAAM9iD,EAAK;AAC3B,UAAMmB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CA,MAAK,MAAM,YAAY,KAAK,eAAenB,EAAK;EACpD;AAOE,WAASwwC,KAAa;AACpB,WAAO;MACL,MAAM;MACN,UAAU,CAAA;IAChB;EACA;AAGE,WAAS8R,KAAW;AAClB,WAAO;MACL,MAAM;MACN,MAAM;MACN,MAAM;MACN,OAAO;IACb;EACA;AAGE,WAAS7P,KAAW;AAClB,WAAO;MACL,MAAM;MACN,OAAO;IACb;EACA;AAGE,WAASv0C,KAAa;AACpB,WAAO;MACL,MAAM;MACN,YAAY;MACZ,OAAO;MACP,OAAO;MACP,KAAK;IACX;EACA;AAGE,WAASitB,KAAW;AAClB,WAAO;MACL,MAAM;MACN,UAAU,CAAA;IAChB;EACA;AAGE,WAASW,KAAU;AACjB,WAAO;MACL,MAAM;;MAEN,OAAO;MACP,UAAU,CAAA;IAChB;EACA;AAGE,WAAShC,KAAY;AACnB,WAAO;MACL,MAAM;IACZ;EACA;AAGE,WAASlrB,KAAO;AACd,WAAO;MACL,MAAM;MACN,OAAO;IACb;EACA;AAGE,WAASqtB,KAAQ;AACf,WAAO;MACL,MAAM;MACN,OAAO;MACP,KAAK;MACL,KAAK;IACX;EACA;AAGE,WAASS,KAAO;AACd,WAAO;MACL,MAAM;MACN,OAAO;MACP,KAAK;MACL,UAAU,CAAA;IAChB;EACA;AAME,WAASjrB,GAAKzB,IAAO;AACnB,WAAO;MACL,MAAM;MACN,SAASA,GAAM,SAAS;MACxB,OAAO;MACP,QAAQA,GAAM;MACd,UAAU,CAAA;IAChB;EACA;AAME,WAASwtB,GAASxtB,IAAO;AACvB,WAAO;MACL,MAAM;MACN,QAAQA,GAAM;MACd,SAAS;MACT,UAAU,CAAA;IAChB;EACA;AAGE,WAAS0tB,KAAY;AACnB,WAAO;MACL,MAAM;MACN,UAAU,CAAA;IAChB;EACA;AAGE,WAASI,KAAS;AAChB,WAAO;MACL,MAAM;MACN,UAAU,CAAA;IAChB;EACA;AAGE,WAAS9oB,KAAO;AACd,WAAO;MACL,MAAM;MACN,OAAO;IACb;EACA;AAGE,WAASkpB,KAAgB;AACvB,WAAO;MACL,MAAM;IACZ;EACA;AACA;AAUA,SAAStrB,GAAMgrB,IAAG;AAChB,SAAO;IACL,MAAMA,GAAE;IACR,QAAQA,GAAE;IACV,QAAQA,GAAE;EACd;AACA;AAOA,SAAS62B,GAAUiB,IAAUj1B,IAAY;AACvC,MAAIr2B,IAAQ;AACZ,SAAO,EAAEA,IAAQq2B,GAAW,UAAQ;AAClC,UAAMl2B,KAAQk2B,GAAWr2B,CAAK;AAC1B,UAAM,QAAQG,EAAK,IACrBkqD,GAAUiB,IAAUnrD,EAAK,IAEzBo2B,GAAU+0B,IAAUnrD,EAAK;EAE/B;AACA;AAOA,SAASo2B,GAAU+0B,IAAU/0B,IAAW;AAEtC,MAAIj2B;AACJ,OAAKA,KAAOi2B;AACV,QAAI3yB,GAAI,KAAK2yB,IAAWj2B,CAAG;AACzB,cAAQA,GAAG;QACT,KAAK,kBAAkB;AACrB,gBAAMo2B,KAAQH,GAAUj2B,CAAG;AACvBo2B,UAAAA,MACF40B,GAAShrD,CAAG,EAAE,KAAK,GAAGo2B,EAAK;AAE7B;QACV;QACQ,KAAK,cAAc;AACjB,gBAAMA,KAAQH,GAAUj2B,CAAG;AACvBo2B,UAAAA,MACF40B,GAAShrD,CAAG,EAAE,KAAK,GAAGo2B,EAAK;AAE7B;QACV;QACQ,KAAK;QACL,KAAK,QAAQ;AACX,gBAAMA,KAAQH,GAAUj2B,CAAG;AACvBo2B,UAAAA,MACF,OAAO,OAAO40B,GAAShrD,CAAG,GAAGo2B,EAAK;AAEpC;QACV;MAEA;AAGA;AAGA,SAASg0B,GAAej0B,IAAMC,IAAO;AACnC,QAAID,KACI,IAAI;IACR,mBACEA,GAAK,OACL,QACA8Z,GAAkB;MAChB,OAAO9Z,GAAK;MACZ,KAAKA,GAAK;IACpB,CAAS,IACD,4BACAC,GAAM,OACN,QACA6Z,GAAkB;MAChB,OAAO7Z,GAAM;MACb,KAAKA,GAAM;IACrB,CAAS,IACD;EACR,IAEU,IAAI;IACR,sCACEA,GAAM,OACN,QACA6Z,GAAkB;MAChB,OAAO7Z,GAAM;MACb,KAAKA,GAAM;IACrB,CAAS,IACD;EACR;AAEA;AClzCe,SAAS60B,GAAYvpD,IAAS;AAG3C,QAAMg2B,KAAO;AAEbA,EAAAA,GAAK,SAAS9e;AAKd,WAASA,EAAOsyC,IAAK;AACnB,WAAO1D,GAAa0D,IAAK;MACvB,GAAGxzB,GAAK,KAAK,UAAU;MACvB,GAAGh2B;;;;MAIH,YAAYg2B,GAAK,KAAK,qBAAqB,KAAK,CAAE;MAClD,iBAAiBA,GAAK,KAAK,wBAAwB,KAAK,CAAA;IACzD,CAAA;EACL;AACA;ACvBO,SAAS3I,GAAWpmB,IAAOlC,IAAM;AAEtC,QAAMQ,IAAS;IACb,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAU0B,GAAM,KAAKA,GAAM,IAAIlC,EAAI,GAAG,IAAI;EAC9C;AACE,SAAAkC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACTO,SAASmoB,GAAUzmB,IAAOlC,IAAM;AAErC,QAAMQ,IAAS,EAAC,MAAM,WAAW,SAAS,MAAM,YAAY,CAAA,GAAI,UAAU,CAAE,EAAA;AAC5E,SAAA0B,GAAM,MAAMlC,IAAMQ,CAAM,GACjB,CAAC0B,GAAM,UAAUlC,IAAMQ,CAAM,GAAG,EAAC,MAAM,QAAQ,OAAO;EAAI,CAAC;AACpE;ACLO,SAASgF,GAAKtD,IAAOlC,IAAM;AAChC,QAAM5G,IAAQ4G,GAAK,QAAQA,GAAK,QAAQ;IAAO,IAEzCF,KAAa,CAAA;AAEfE,EAAAA,GAAK,SACPF,GAAW,YAAY,CAAC,cAAcE,GAAK,IAAI;AAKjD,MAAIQ,IAAS;IACX,MAAM;IACN,SAAS;IACT,YAAAV;IACA,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAA1G,EAAK,CAAC;EACpC;AAEE,SAAI4G,GAAK,SACPQ,EAAO,OAAO,EAAC,MAAMR,GAAK,KAAI,IAGhCkC,GAAM,MAAMlC,IAAMQ,CAAM,GACxBA,IAAS0B,GAAM,UAAUlC,IAAMQ,CAAM,GAGrCA,IAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAY,CAAE,GAAE,UAAU,CAACA,CAAM,EAAC,GAC7E0B,GAAM,MAAMlC,IAAMQ,CAAM,GACjBA;AACT;AC9BO,SAASg1B,GAActzB,IAAOlC,IAAM;AAEzC,QAAMQ,IAAS;IACb,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAU0B,GAAM,IAAIlC,EAAI;EAC5B;AACE,SAAAkC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACVO,SAASwpB,GAAS9nB,IAAOlC,IAAM;AAEpC,QAAMQ,IAAS;IACb,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAU0B,GAAM,IAAIlC,EAAI;EAC5B;AACE,SAAAkC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACXO,SAAS+kB,GAAkBrjB,IAAOlC,IAAM;AAC7C,QAAM0kD,IACJ,OAAOxiD,GAAM,QAAQ,iBAAkB,WACnCA,GAAM,QAAQ,gBACd,iBACAwB,KAAK,OAAO1D,GAAK,UAAU,EAAE,YAAW,GACxC2kD,IAAS3xB,GAAatvB,GAAG,YAAa,CAAA,GACtCzK,IAAQiJ,GAAM,cAAc,QAAQwB,EAAE;AAE5C,MAAIkhD,GAEAC,IAAe3iD,GAAM,eAAe,IAAIwB,EAAE;AAE1CmhD,QAAiB,UACnBA,IAAe,GACf3iD,GAAM,cAAc,KAAKwB,EAAE,GAC3BkhD,IAAU1iD,GAAM,cAAc,UAE9B0iD,IAAU3rD,IAAQ,GAGpB4rD,KAAgB,GAChB3iD,GAAM,eAAe,IAAIwB,IAAImhD,CAAY;AAGzC,QAAMt5B,KAAO;IACX,MAAM;IACN,SAAS;IACT,YAAY;MACV,MAAM,MAAMm5B,IAAgB,QAAQC;MACpC,IACED,IACA,WACAC,KACCE,IAAe,IAAI,MAAMA,IAAe;MAC3C,iBAAiB;MACjB,iBAAiB,CAAC,gBAAgB;IACnC;IACD,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO,OAAOD,CAAO,EAAC,CAAC;EACrD;AACE1iD,EAAAA,GAAM,MAAMlC,IAAMurB,EAAI;AAGtB,QAAMu5B,IAAM;IACV,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAU,CAACv5B,EAAI;EACnB;AACE,SAAArpB,GAAM,MAAMlC,IAAM8kD,CAAG,GACd5iD,GAAM,UAAUlC,IAAM8kD,CAAG;AAClC;AClDO,SAASn6B,GAAQzoB,IAAOlC,IAAM;AAEnC,QAAMQ,IAAS;IACb,MAAM;IACN,SAAS,MAAMR,GAAK;IACpB,YAAY,CAAE;IACd,UAAUkC,GAAM,IAAIlC,EAAI;EAC5B;AACE,SAAAkC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACRO,SAAS/C,GAAKyE,IAAOlC,IAAM;AAChC,MAAIkC,GAAM,QAAQ,oBAAoB;AAEpC,UAAM1B,IAAS,EAAC,MAAM,OAAO,OAAOR,GAAK,MAAK;AAC9C,WAAAkC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;EACvC;AAGA;ACRO,SAASukD,GAAO7iD,IAAOlC,IAAM;AAClC,QAAMglD,IAAUhlD,GAAK;AACrB,MAAIopB,KAAS;AAQb,MANI47B,MAAY,cACd57B,MAAU,OACD47B,MAAY,WACrB57B,MAAU,OAAOppB,GAAK,SAASA,GAAK,cAAc,MAGhDA,GAAK,SAAS;AAChB,WAAO,CAAC,EAAC,MAAM,QAAQ,OAAO,OAAOA,GAAK,MAAMopB,GAAM,CAAC;AAGzD,QAAM67B,IAAW/iD,GAAM,IAAIlC,EAAI,GACzByhB,IAAOwjC,EAAS,CAAC;AAEnBxjC,OAAQA,EAAK,SAAS,SACxBA,EAAK,QAAQ,MAAMA,EAAK,QAExBwjC,EAAS,QAAQ,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAG7C,QAAM/hD,IAAO+hD,EAASA,EAAS,SAAS,CAAC;AAEzC,SAAI/hD,KAAQA,EAAK,SAAS,SACxBA,EAAK,SAASkmB,KAEd67B,EAAS,KAAK,EAAC,MAAM,QAAQ,OAAO77B,GAAM,CAAC,GAGtC67B;AACT;ACjCO,SAASj6B,GAAe9oB,IAAOlC,IAAM;AAC1C,QAAM0D,IAAK,OAAO1D,GAAK,UAAU,EAAE,YAAW,GACxCjD,KAAamF,GAAM,eAAe,IAAIwB,CAAE;AAE9C,MAAI,CAAC3G;AACH,WAAOgoD,GAAO7iD,IAAOlC,EAAI;AAI3B,QAAMF,IAAa,EAAC,KAAKkzB,GAAaj2B,GAAW,OAAO,EAAE,GAAG,KAAKiD,GAAK,IAAG;AAEtEjD,EAAAA,GAAW,UAAU,QAAQA,GAAW,UAAU,WACpD+C,EAAW,QAAQ/C,GAAW;AAIhC,QAAMyD,IAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAAV,GAAY,UAAU,CAAE,EAAA;AACzE,SAAAoC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACrBO,SAASsqB,GAAM5oB,IAAOlC,IAAM;AAEjC,QAAMF,IAAa,EAAC,KAAKkzB,GAAahzB,GAAK,GAAG,EAAC;AAE3CA,EAAAA,GAAK,QAAQ,QAAQA,GAAK,QAAQ,WACpCF,EAAW,MAAME,GAAK,MAGpBA,GAAK,UAAU,QAAQA,GAAK,UAAU,WACxCF,EAAW,QAAQE,GAAK;AAI1B,QAAMQ,KAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAAV,GAAY,UAAU,CAAE,EAAA;AACzE,SAAAoC,GAAM,MAAMlC,IAAMQ,EAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,EAAM;AACrC;ACfO,SAAS2qB,GAAWjpB,IAAOlC,IAAM;AAEtC,QAAM6D,IAAO,EAAC,MAAM,QAAQ,OAAO7D,GAAK,MAAM,QAAQ,aAAa,GAAG,EAAC;AACvEkC,EAAAA,GAAM,MAAMlC,IAAM6D,CAAI;AAGtB,QAAMrD,KAAS;IACb,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAU,CAACqD,CAAI;EACnB;AACE,SAAA3B,GAAM,MAAMlC,IAAMQ,EAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,EAAM;AACrC;ACbO,SAASirB,GAAcvpB,IAAOlC,IAAM;AACzC,QAAM0D,IAAK,OAAO1D,GAAK,UAAU,EAAE,YAAW,GACxCjD,KAAamF,GAAM,eAAe,IAAIwB,CAAE;AAE9C,MAAI,CAAC3G;AACH,WAAOgoD,GAAO7iD,IAAOlC,EAAI;AAI3B,QAAMF,IAAa,EAAC,MAAMkzB,GAAaj2B,GAAW,OAAO,EAAE,EAAC;AAExDA,EAAAA,GAAW,UAAU,QAAQA,GAAW,UAAU,WACpD+C,EAAW,QAAQ/C,GAAW;AAIhC,QAAMyD,IAAS;IACb,MAAM;IACN,SAAS;IACT,YAAAV;IACA,UAAUoC,GAAM,IAAIlC,EAAI;EAC5B;AACE,SAAAkC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;AC1BO,SAAS+qB,GAAKrpB,IAAOlC,IAAM;AAEhC,QAAMF,IAAa,EAAC,MAAMkzB,GAAahzB,GAAK,GAAG,EAAC;AAE5CA,EAAAA,GAAK,UAAU,QAAQA,GAAK,UAAU,WACxCF,EAAW,QAAQE,GAAK;AAI1B,QAAMQ,KAAS;IACb,MAAM;IACN,SAAS;IACT,YAAAV;IACA,UAAUoC,GAAM,IAAIlC,EAAI;EAC5B;AACE,SAAAkC,GAAM,MAAMlC,IAAMQ,EAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,EAAM;AACrC;ACZO,SAAS6rB,GAASnqB,IAAOlC,IAAMiT,GAAQ;AAC5C,QAAMvQ,KAAUR,GAAM,IAAIlC,EAAI,GACxBklD,IAAQjyC,IAASkyC,GAAUlyC,CAAM,IAAImyC,GAAcplD,EAAI,GAEvDF,IAAa,CAAA,GAEbC,IAAW,CAAA;AAEjB,MAAI,OAAOC,GAAK,WAAY,WAAW;AACrC,UAAMyhB,IAAO/e,GAAQ,CAAC;AAEtB,QAAI6pB;AAEA9K,SAAQA,EAAK,SAAS,aAAaA,EAAK,YAAY,MACtD8K,KAAY9K,KAEZ8K,KAAY,EAAC,MAAM,WAAW,SAAS,KAAK,YAAY,CAAA,GAAI,UAAU,CAAE,EAAA,GACxE7pB,GAAQ,QAAQ6pB,EAAS,IAGvBA,GAAU,SAAS,SAAS,KAC9BA,GAAU,SAAS,QAAQ,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC,GAGvDA,GAAU,SAAS,QAAQ;MACzB,MAAM;MACN,SAAS;MACT,YAAY,EAAC,MAAM,YAAY,SAASvsB,GAAK,SAAS,UAAU,KAAI;MACpE,UAAU,CAAA;IACX,CAAA,GAIDF,EAAW,YAAY,CAAC,gBAAgB;EAC5C;AAEE,MAAI7G,IAAQ;AAEZ,SAAO,EAAEA,IAAQyJ,GAAQ,UAAQ;AAC/B,UAAMzC,IAAQyC,GAAQzJ,CAAK;AAG3B,KACEisD,KACAjsD,MAAU,KACVgH,EAAM,SAAS,aACfA,EAAM,YAAY,QAElBF,EAAS,KAAK,EAAC,MAAM,QAAQ,OAAO;EAAI,CAAC,GAGvCE,EAAM,SAAS,aAAaA,EAAM,YAAY,OAAO,CAACilD,IACxDnlD,EAAS,KAAK,GAAGE,EAAM,QAAQ,IAE/BF,EAAS,KAAKE,CAAK;EAEzB;AAEE,QAAMiD,KAAOR,GAAQA,GAAQ,SAAS,CAAC;AAGnCQ,EAAAA,OAASgiD,KAAShiD,GAAK,SAAS,aAAaA,GAAK,YAAY,QAChEnD,EAAS,KAAK,EAAC,MAAM,QAAQ,OAAO;EAAI,CAAC;AAI3C,QAAMS,IAAS,EAAC,MAAM,WAAW,SAAS,MAAM,YAAAV,GAAY,UAAAC,EAAQ;AACpE,SAAAmC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;AAMA,SAAS2kD,GAAUnlD,IAAM;AACvB,MAAIklD,KAAQ;AACZ,MAAIllD,GAAK,SAAS,QAAQ;AACxBklD,IAAAA,KAAQllD,GAAK,UAAU;AACvB,UAAMD,IAAWC,GAAK;AACtB,QAAI/G,KAAQ;AAEZ,WAAO,CAACisD,MAAS,EAAEjsD,KAAQ8G,EAAS;AAClCmlD,MAAAA,KAAQE,GAAcrlD,EAAS9G,EAAK,CAAC;EAE3C;AAEE,SAAOisD;AACT;AAMA,SAASE,GAAcplD,IAAM;AAC3B,QAAMqlD,KAASrlD,GAAK;AAEpB,SAAOqlD,MACHrlD,GAAK,SAAS,SAAS;AAE7B;ACxGO,SAASM,GAAK4B,IAAOlC,IAAM;AAEhC,QAAMF,IAAa,CAAA,GACb4C,KAAUR,GAAM,IAAIlC,EAAI;AAC9B,MAAI/G,IAAQ;AAOZ,OALI,OAAO+G,GAAK,SAAU,YAAYA,GAAK,UAAU,MACnDF,EAAW,QAAQE,GAAK,QAInB,EAAE/G,IAAQyJ,GAAQ,UAAQ;AAC/B,UAAMzC,IAAQyC,GAAQzJ,CAAK;AAE3B,QACEgH,EAAM,SAAS,aACfA,EAAM,YAAY,QAClBA,EAAM,cACN,MAAM,QAAQA,EAAM,WAAW,SAAS,KACxCA,EAAM,WAAW,UAAU,SAAS,gBAAgB,GACpD;AACAH,QAAW,YAAY,CAAC,oBAAoB;AAC5C;IACN;EACA;AAGE,QAAMU,IAAS;IACb,MAAM;IACN,SAASR,GAAK,UAAU,OAAO;IAC/B,YAAAF;IACA,UAAUoC,GAAM,KAAKQ,IAAS,IAAI;EACtC;AACE,SAAAR,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACpCO,SAAS+rB,GAAUrqB,IAAOlC,IAAM;AAErC,QAAMQ,IAAS;IACb,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAU0B,GAAM,IAAIlC,EAAI;EAC5B;AACE,SAAAkC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACTO,SAASoD,GAAK1B,IAAOlC,IAAM;AAEhC,QAAMQ,IAAS,EAAC,MAAM,QAAQ,UAAU0B,GAAM,KAAKA,GAAM,IAAIlC,EAAI,CAAC,EAAC;AACnE,SAAAkC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACNO,SAASmsB,GAAOzqB,IAAOlC,IAAM;AAElC,QAAMQ,IAAS;IACb,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAU0B,GAAM,IAAIlC,EAAI;EAC5B;AACE,SAAAkC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACXO,SAAS4mB,GAAMllB,IAAOlC,IAAM;AACjC,QAAMslD,IAAOpjD,GAAM,IAAIlC,EAAI,GACrBulD,KAAWD,EAAK,MAAK,GAErBE,IAAe,CAAA;AAErB,MAAID,IAAU;AAEZ,UAAM9jC,IAAO;MACX,MAAM;MACN,SAAS;MACT,YAAY,CAAE;MACd,UAAUvf,GAAM,KAAK,CAACqjD,EAAQ,GAAG,IAAI;IAC3C;AACIrjD,IAAAA,GAAM,MAAMlC,GAAK,SAAS,CAAC,GAAGyhB,CAAI,GAClC+jC,EAAa,KAAK/jC,CAAI;EAC1B;AAEE,MAAI6jC,EAAK,SAAS,GAAG;AAEnB,UAAMG,IAAO;MACX,MAAM;MACN,SAAS;MACT,YAAY,CAAE;MACd,UAAUvjD,GAAM,KAAKojD,GAAM,IAAI;IACrC,GAEU3mD,IAAQyf,GAAWpe,GAAK,SAAS,CAAC,CAAC,GACnCpB,KAAMuf,GAASne,GAAK,SAASA,GAAK,SAAS,SAAS,CAAC,CAAC;AACxDrB,SAASC,OAAK6mD,EAAK,WAAW,EAAC,OAAA9mD,GAAO,KAAAC,GAAG,IAC7C4mD,EAAa,KAAKC,CAAI;EAC1B;AAGE,QAAMjlD,IAAS;IACb,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAU0B,GAAM,KAAKsjD,GAAc,IAAI;EAC3C;AACE,SAAAtjD,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACpCO,SAASklD,GAASxjD,IAAOlC,IAAMiT,GAAQ;AAC5C,QAAMG,KAAWH,IAASA,EAAO,WAAW,QAGtC3T,KADW8T,KAAWA,GAAS,QAAQpT,EAAI,IAAI,OACxB,IAAI,OAAO,MAElCqnB,IAAQpU,KAAUA,EAAO,SAAS,UAAUA,EAAO,QAAQ,QAC3D5H,IAASgc,IAAQA,EAAM,SAASrnB,GAAK,SAAS;AACpD,MAAI2lD,KAAY;AAEhB,QAAMC,IAAQ,CAAA;AAEd,SAAO,EAAED,KAAYt6C,KAAQ;AAE3B,UAAM2c,KAAOhoB,GAAK,SAAS2lD,EAAS,GAE9B7lD,KAAa,CAAA,GACbsrC,IAAa/jB,IAAQA,EAAMs+B,EAAS,IAAI;AAE1Cva,UACFtrC,GAAW,QAAQsrC;AAIrB,QAAI5qC,IAAS,EAAC,MAAM,WAAW,SAAAlB,GAAS,YAAAQ,IAAY,UAAU,CAAE,EAAA;AAE5DkoB,IAAAA,OACFxnB,EAAO,WAAW0B,GAAM,IAAI8lB,EAAI,GAChC9lB,GAAM,MAAM8lB,IAAMxnB,CAAM,GACxBA,IAAS0B,GAAM,UAAU8lB,IAAMxnB,CAAM,IAGvColD,EAAM,KAAKplD,CAAM;EACrB;AAGE,QAAMA,IAAS;IACb,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAU0B,GAAM,KAAK0jD,GAAO,IAAI;EACpC;AACE,SAAA1jD,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACjDO,SAASqlD,GAAU3jD,IAAOlC,IAAM;AAIrC,QAAMQ,IAAS;IACb,MAAM;IACN,SAAS;;IACT,YAAY,CAAE;IACd,UAAU0B,GAAM,IAAIlC,EAAI;EAC5B;AACE,SAAAkC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;AC/BA,IAAMslD,KAAM;AAAZ,IACMzqD,KAAQ;AAWP,SAAS0qD,GAAU3sD,IAAO;AAC/B,QAAMI,KAAS,OAAOJ,EAAK,GACrB4F,IAAS;AACf,MAAIO,KAAQP,EAAO,KAAKxF,EAAM,GAC1BwsD,IAAO;AAEX,QAAM39B,IAAQ,CAAA;AAEd,SAAO9oB;AACL8oB,MAAM;MACJ49B,GAASzsD,GAAO,MAAMwsD,GAAMzmD,GAAM,KAAK,GAAGymD,IAAO,GAAG,IAAI;MACxDzmD,GAAM,CAAC;IACb,GAEIymD,IAAOzmD,GAAM,QAAQA,GAAM,CAAC,EAAE,QAC9BA,KAAQP,EAAO,KAAKxF,EAAM;AAG5B,SAAA6uB,EAAM,KAAK49B,GAASzsD,GAAO,MAAMwsD,CAAI,GAAGA,IAAO,GAAG,KAAK,CAAC,GAEjD39B,EAAM,KAAK,EAAE;AACtB;AAYA,SAAS49B,GAAS7sD,IAAOuF,IAAOC,GAAK;AACnC,MAAI6gD,KAAa,GACb1rC,IAAW3a,GAAM;AAErB,MAAIuF,IAAO;AACT,QAAI6G,IAAOpM,GAAM,YAAYqmD,EAAU;AAEvC,WAAOj6C,MAASsgD,MAAOtgD,MAASnK;AAC9BokD,MAAAA,MACAj6C,IAAOpM,GAAM,YAAYqmD,EAAU;EAEzC;AAEE,MAAI7gD,GAAK;AACP,QAAI4G,IAAOpM,GAAM,YAAY2a,IAAW,CAAC;AAEzC,WAAOvO,MAASsgD,MAAOtgD,MAASnK;AAC9B0Y,WACAvO,IAAOpM,GAAM,YAAY2a,IAAW,CAAC;EAE3C;AAEE,SAAOA,IAAW0rC,KAAarmD,GAAM,MAAMqmD,IAAY1rC,CAAQ,IAAI;AACrE;ACjDO,SAASlQ,GAAK3B,IAAOlC,IAAM;AAEhC,QAAMQ,IAAS,EAAC,MAAM,QAAQ,OAAOulD,GAAU,OAAO/lD,GAAK,KAAK,CAAC,EAAC;AAClE,SAAAkC,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACLO,SAASusB,GAAc7qB,IAAOlC,IAAM;AAEzC,QAAMQ,IAAS;IACb,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAU,CAAA;EACd;AACE,SAAA0B,GAAM,MAAMlC,IAAMQ,CAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,CAAM;AACrC;ACAO,IAAMiD,KAAW;EACtB,YAAA6kB;EACA,OAAOK;EACP,MAAAnjB;EACA,QAAQgwB;EACR,UAAAxL;EACA,mBAAAzE;EACA,SAAAoF;EACA,MAAAltB;EACA,gBAAAutB;EACA,OAAAF;EACA,YAAAK;EACA,eAAAM;EACA,MAAAF;EACA,UAAAc;EACA,MAAA/rB;EACA,WAAAisB;;EAEA,MAAA3oB;EACA,QAAA+oB;EACA,OAAAvF;EACA,WAAAy+B;EACA,UAAAH;EACA,MAAA7hD;EACA,eAAAkpB;EACA,MAAMm5B;EACN,MAAMA;EACN,YAAYA;EACZ,oBAAoBA;AACtB;AAGA,SAASA,KAAS;AAElB;AC/DO,IAAMjuD,KAAa;AAAnB,IACMC,KAAa;AADnB,IAEMC,KAAa;AAFnB,IAGMC,KAAa;AAHnB,IAIMC,KAAa;AAJnB,IAKMC,KAAa;AALnB,IAMMC,KAAa;AANnB,IAOMC,KAAa;AAPnB,IAQMC,KAAa;AARnB,IASMC,KAAa;AATnB,ICODC,KAAM,OAAO,QAAS,WAAW,OAAO;ADPvC,ICSDC,KAAe,CAACC,IAAGC,OAAM;AAC7B,QAAMC,IAAK,CAACC,GAAKC,OACfJ,GAAE,IAAII,GAAOD,CAAG,GACTA,IAGHE,KAAS,CAAAD,MAAS;AACtB,QAAIJ,GAAE,IAAII,CAAK;AACb,aAAOJ,GAAE,IAAII,CAAK;AAEpB,UAAM,CAACE,GAAMC,CAAK,IAAIN,GAAEG,CAAK;AAC7B,YAAQE,GAAI;MACV,KAAKjB;MACL,KAAKD;AACH,eAAOc,EAAGK,GAAOH,CAAK;MACxB,KAAKd,IAAO;AACV,cAAMkB,IAAMN,EAAG,CAAE,GAAEE,CAAK;AACxB,mBAAWA,MAASG;AAClBC,YAAI,KAAKH,GAAOD,EAAK,CAAC;AACxB,eAAOI;MACf;MACM,KAAKjB,IAAQ;AACX,cAAMkB,IAASP,EAAG,CAAE,GAAEE,CAAK;AAC3B,mBAAW,CAACM,IAAKN,CAAK,KAAKG;AACzBE,YAAOJ,GAAOK,EAAG,CAAC,IAAIL,GAAOD,CAAK;AACpC,eAAOK;MACf;MACM,KAAKjB;AACH,eAAOU,EAAG,IAAI,KAAKK,CAAK,GAAGH,CAAK;MAClC,KAAKX,IAAQ;AACX,cAAM,EAAC,QAAAkB,GAAQ,OAAAC,GAAK,IAAIL;AACxB,eAAOL,EAAG,IAAI,OAAOS,GAAQC,EAAK,GAAGR,CAAK;MAClD;MACM,KAAKV,IAAK;AACR,cAAMmB,IAAMX,EAAG,oBAAI,IAAA,GAAKE,CAAK;AAC7B,mBAAW,CAACM,IAAKN,CAAK,KAAKG;AACzBM,YAAI,IAAIR,GAAOK,EAAG,GAAGL,GAAOD,CAAK,CAAC;AACpC,eAAOS;MACf;MACM,KAAKlB,IAAK;AACR,cAAMmB,IAAMZ,EAAG,oBAAI,IAAA,GAAKE,CAAK;AAC7B,mBAAWA,MAASG;AAClBO,YAAI,IAAIT,GAAOD,EAAK,CAAC;AACvB,eAAOU;MACf;MACM,KAAKlB,IAAO;AACV,cAAM,EAAC,MAAAmB,GAAM,SAAAC,GAAO,IAAIT;AACxB,eAAOL,EAAG,IAAIJ,GAAIiB,CAAI,EAAEC,EAAO,GAAGZ,CAAK;MAC/C;MACM,KAAKP;AACH,eAAOK,EAAG,OAAOK,CAAK,GAAGH,CAAK;MAChC,KAAK;AACH,eAAOF,EAAG,OAAO,OAAOK,CAAK,CAAC,GAAGH,CAAK;MACxC,KAAK;AACH,eAAOF,EAAG,IAAI,WAAWK,CAAK,EAAE,QAAQA,CAAK;MAC/C,KAAK,YAAY;AACf,cAAM,EAAE,QAAAs4B,EAAM,IAAK,IAAI,WAAWt4B,CAAK;AACvC,eAAOL,EAAG,IAAI,SAAS24B,CAAM,GAAGt4B,CAAK;MAC7C;IACA;AACI,WAAOL,EAAG,IAAIJ,GAAIQ,CAAI,EAAEC,CAAK,GAAGH,CAAK;EACtC;AAED,SAAOC;AACT;ADzEO,ICoFMY,KAAc,CAAAC,OAAcnB,GAAa,oBAAI,IAAA,GAAKmB,EAAU,EAAE,CAAC;ADpFrE,IEODC,KAAQ;AFPP,IESD,EAAC,UAAAC,GAAQ,IAAI,CAAE;AFTd,IEUD,EAAC,MAAAC,GAAI,IAAI;AFVR,IEYDC,KAAS,CAAAf,OAAS;AACtB,QAAMD,KAAO,OAAOC;AACpB,MAAID,OAAS,YAAY,CAACC;AACxB,WAAO,CAAClB,IAAWiB,EAAI;AAEzB,QAAMiB,IAAWH,GAAS,KAAKb,EAAK,EAAE,MAAM,GAAG,EAAE;AACjD,UAAQgB,GAAQ;IACd,KAAK;AACH,aAAO,CAACjC,IAAO6B,EAAK;IACtB,KAAK;AACH,aAAO,CAAC5B,IAAQ4B,EAAK;IACvB,KAAK;AACH,aAAO,CAAC3B,IAAM2B,EAAK;IACrB,KAAK;AACH,aAAO,CAAC1B,IAAQ0B,EAAK;IACvB,KAAK;AACH,aAAO,CAACzB,IAAKyB,EAAK;IACpB,KAAK;AACH,aAAO,CAACxB,IAAKwB,EAAK;IACpB,KAAK;AACH,aAAO,CAAC7B,IAAOiC,CAAQ;EAC7B;AAEE,SAAIA,EAAS,SAAS,OAAO,IACpB,CAACjC,IAAOiC,CAAQ,IAErBA,EAAS,SAAS,OAAO,IACpB,CAAC3B,IAAO2B,CAAQ,IAElB,CAAChC,IAAQgC,CAAQ;AAC1B;AF1CO,IE4CDC,MAAa,CAAC,CAACC,IAAMnB,EAAI,MAC7BmB,OAASpC,OACRiB,OAAS,cAAcA,OAAS;AF9C5B,IEiDDoB,KAAa,CAACC,IAAQC,IAAM5B,GAAGC,OAAM;AAEzC,QAAMC,IAAK,CAACC,GAAKI,MAAU;AACzB,UAAMH,KAAQH,GAAE,KAAKE,CAAG,IAAI;AAC5B,WAAAH,EAAE,IAAIO,GAAOH,EAAK,GACXA;EACR,GAEKyB,IAAO,CAAAtB,MAAS;AACpB,QAAIP,EAAE,IAAIO,CAAK;AACb,aAAOP,EAAE,IAAIO,CAAK;AAEpB,QAAI,CAACkB,GAAMnB,EAAI,IAAIgB,GAAOf,CAAK;AAC/B,YAAQkB,GAAI;MACV,KAAKpC,IAAW;AACd,YAAIyC,IAAQvB;AACZ,gBAAQD,IAAI;UACV,KAAK;AACHmB,gBAAO5B,IACPiC,IAAQvB,EAAM,SAAU;AACxB;UACF,KAAK;UACL,KAAK;AACH,gBAAIoB;AACF,oBAAM,IAAI,UAAU,yBAAyBrB,EAAI;AACnDwB,gBAAQ;AACR;UACF,KAAK;AACH,mBAAO5B,EAAG,CAACd,EAAI,GAAGmB,CAAK;QACnC;AACQ,eAAOL,EAAG,CAACuB,GAAMK,CAAK,GAAGvB,CAAK;MACtC;MACM,KAAKjB,IAAO;AACV,YAAIgB,IAAM;AACR,cAAIksD,KAASjsD;AACb,iBAAID,OAAS,aACXksD,KAAS,IAAI,WAAWjsD,EAAM,MAAM,IAE7BD,OAAS,kBAChBksD,KAAS,IAAI,WAAWjsD,CAAK,IAExBL,EAAG,CAACI,IAAM,CAAC,GAAGksD,EAAM,CAAC,GAAGjsD,CAAK;QAC9C;AAEQ,cAAMC,IAAM,CAAE,GACRJ,KAAQF,EAAG,CAACuB,GAAMjB,CAAG,GAAGD,CAAK;AACnC,mBAAWuB,MAASvB;AAClBC,YAAI,KAAKqB,EAAKC,EAAK,CAAC;AACtB,eAAO1B;MACf;MACM,KAAKb,IAAQ;AACX,YAAIe;AACF,kBAAQA,IAAI;YACV,KAAK;AACH,qBAAOJ,EAAG,CAACI,IAAMC,EAAM,SAAQ,CAAE,GAAGA,CAAK;YAC3C,KAAK;YACL,KAAK;YACL,KAAK;AACH,qBAAOL,EAAG,CAACI,IAAMC,EAAM,QAAO,CAAE,GAAGA,CAAK;UACtD;AAGQ,YAAIqB,MAAS,YAAYrB;AACvB,iBAAOsB,EAAKtB,EAAM,OAAA,CAAQ;AAE5B,cAAMwB,IAAU,CAAE,GACZ3B,KAAQF,EAAG,CAACuB,GAAMM,CAAO,GAAGxB,CAAK;AACvC,mBAAWG,MAAOW,GAAKd,CAAK;AAC1B,WAAIoB,MAAU,CAACH,IAAWF,GAAOf,EAAMG,EAAG,CAAC,CAAC,MAC1CqB,EAAQ,KAAK,CAACF,EAAKnB,EAAG,GAAGmB,EAAKtB,EAAMG,EAAG,CAAC,CAAC,CAAC;AAE9C,eAAON;MACf;MACM,KAAKZ;AACH,eAAOU,EAAG,CAACuB,GAAMlB,EAAM,YAAW,CAAE,GAAGA,CAAK;MAC9C,KAAKd,IAAQ;AACX,cAAM,EAAC,QAAAkB,GAAQ,OAAAC,GAAK,IAAIL;AACxB,eAAOL,EAAG,CAACuB,GAAM,EAAC,QAAAd,GAAQ,OAAAC,GAAK,CAAC,GAAGL,CAAK;MAChD;MACM,KAAKb,IAAK;AACR,cAAMqC,IAAU,CAAE,GACZ3B,KAAQF,EAAG,CAACuB,GAAMM,CAAO,GAAGxB,CAAK;AACvC,mBAAW,CAACG,IAAKoB,CAAK,KAAKvB;AACzB,WAAIoB,MAAU,EAAEH,IAAWF,GAAOZ,EAAG,CAAC,KAAKc,IAAWF,GAAOQ,CAAK,CAAC,OACjEC,EAAQ,KAAK,CAACF,EAAKnB,EAAG,GAAGmB,EAAKC,CAAK,CAAC,CAAC;AAEzC,eAAO1B;MACf;MACM,KAAKT,IAAK;AACR,cAAMoC,IAAU,CAAE,GACZ3B,KAAQF,EAAG,CAACuB,GAAMM,CAAO,GAAGxB,CAAK;AACvC,mBAAWuB,MAASvB;AAClB,WAAIoB,MAAU,CAACH,IAAWF,GAAOQ,EAAK,CAAC,MACrCC,EAAQ,KAAKF,EAAKC,EAAK,CAAC;AAE5B,eAAO1B;MACf;IACA;AAEI,UAAM,EAAC,SAAAY,EAAO,IAAIT;AAClB,WAAOL,EAAG,CAACuB,GAAM,EAAC,MAAMnB,IAAM,SAAAU,EAAO,CAAC,GAAGT,CAAK;EAC/C;AAED,SAAOsB;AACT;AFzJO,IEuKOG,KAAY,CAACzB,IAAO,EAAC,MAAAqB,IAAM,OAAAK,EAAK,IAAI,CAAA,MAAO;AACvD,QAAMhC,KAAI,CAAE;AACZ,SAAOyB,GAAW,EAAEE,MAAQK,IAAQ,CAAC,CAACL,IAAM,oBAAI,IAAA,GAAK3B,EAAC,EAAEM,EAAK,GAAGN;AAClE;AF1KO,IGeQqtD,KAAA,OAAO,mBAAoB;;EAExC,CAACnrD,IAAKC,OACJA,OAAY,UAAUA,MAAW,WAAWA,MAC1CnB,GAAYe,GAAUG,IAAKC,EAAO,CAAC,IAAI,gBAAgBD,EAAG;IAE9D,CAACA,IAAKC,OAAYnB,GAAYe,GAAUG,IAAKC,EAAO,CAAC;AC2DhD,SAASmrD,GAA2BttD,IAAGutD,IAAkB;AAE9D,QAAM7lD,IAAS,CAAC,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAE1C,SAAI6lD,KAAmB,KACrB7lD,EAAO,KAAK;IACV,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO,OAAO6lD,EAAgB,EAAC,CAAC;EAC3D,CAAA,GAGI7lD;AACT;AAaO,SAAS8lD,GAAyBC,IAAgBF,IAAkB;AACzE,SACE,wBACCE,KAAiB,MACjBF,KAAmB,IAAI,MAAMA,KAAmB;AAErD;AAWO,SAASG,GAAOtkD,IAAO;AAC5B,QAAMwiD,KACJ,OAAOxiD,GAAM,QAAQ,iBAAkB,WACnCA,GAAM,QAAQ,gBACd,iBACAukD,IACJvkD,GAAM,QAAQ,uBAAuBkkD,IACjCM,KACJxkD,GAAM,QAAQ,qBAAqBokD,IAC/BK,IAAgBzkD,GAAM,QAAQ,iBAAiB,aAC/C0kD,IAAuB1kD,GAAM,QAAQ,wBAAwB,MAC7D2kD,IAA0B3kD,GAAM,QAAQ,2BAA2B;IACvE,WAAW,CAAC,SAAS;EACzB,GAEQ4kD,IAAY,CAAA;AAClB,MAAIP,KAAiB;AAErB,SAAO,EAAEA,KAAiBrkD,GAAM,cAAc,UAAQ;AACpD,UAAMnF,IAAamF,GAAM,aAAa;MACpCA,GAAM,cAAcqkD,EAAc;IACxC;AAEI,QAAI,CAACxpD;AACH;AAGF,UAAMgG,IAAUb,GAAM,IAAInF,CAAU,GAC9B2G,KAAK,OAAO3G,EAAW,UAAU,EAAE,YAAW,GAC9C4nD,KAAS3xB,GAAatvB,GAAG,YAAa,CAAA;AAC5C,QAAI2iD,IAAmB;AAEvB,UAAMU,IAAiB,CAAA,GACjBC,IAAS9kD,GAAM,eAAe,IAAIwB,EAAE;AAG1C,WAAOsjD,MAAW,UAAa,EAAEX,KAAoBW,KAAQ;AACvDD,QAAe,SAAS,KAC1BA,EAAe,KAAK,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAGhD,UAAIhnD,IACF,OAAO0mD,KAAwB,WAC3BA,IACAA,EAAoBF,IAAgBF,CAAgB;AAEtD,aAAOtmD,KAAa,aACtBA,IAAW,EAAC,MAAM,QAAQ,OAAOA,EAAQ,IAG3CgnD,EAAe,KAAK;QAClB,MAAM;QACN,SAAS;QACT,YAAY;UACV,MACE,MACArC,KACA,WACAC,MACC0B,IAAmB,IAAI,MAAMA,IAAmB;UACnD,qBAAqB;UACrB,WACE,OAAOK,MAAsB,WACzBA,KACAA,GAAkBH,IAAgBF,CAAgB;UACxD,WAAW,CAAC,uBAAuB;QACpC;QACD,UAAU,MAAM,QAAQtmD,CAAQ,IAAIA,IAAW,CAACA,CAAQ;MACzD,CAAA;IACP;AAEI,UAAMmD,KAAOH,EAAQA,EAAQ,SAAS,CAAC;AAEvC,QAAIG,MAAQA,GAAK,SAAS,aAAaA,GAAK,YAAY,KAAK;AAC3D,YAAM+jD,IAAW/jD,GAAK,SAASA,GAAK,SAAS,SAAS,CAAC;AACnD+jD,WAAYA,EAAS,SAAS,SAChCA,EAAS,SAAS,MAElB/jD,GAAK,SAAS,KAAK,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC,GAG/CA,GAAK,SAAS,KAAK,GAAG6jD,CAAc;IAC1C;AACMhkD,QAAQ,KAAK,GAAGgkD,CAAc;AAIhC,UAAM16B,IAAW;MACf,MAAM;MACN,SAAS;MACT,YAAY,EAAC,IAAIq4B,KAAgB,QAAQC,GAAM;MAC/C,UAAUziD,GAAM,KAAKa,GAAS,IAAI;IACxC;AAEIb,IAAAA,GAAM,MAAMnF,GAAYsvB,CAAQ,GAEhCy6B,EAAU,KAAKz6B,CAAQ;EAC3B;AAEE,MAAIy6B,EAAU,WAAW;AAIzB,WAAO;MACL,MAAM;MACN,SAAS;MACT,YAAY,EAAC,eAAe,MAAM,WAAW,CAAC,WAAW,EAAC;MAC1D,UAAU;QACR;UACE,MAAM;UACN,SAASF;UACT,YAAY;YACV,GAAGllC,GAAgBmlC,CAAuB;YAC1C,IAAI;UACL;UACD,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAOF,EAAa,CAAC;QAChD;QACD,EAAC,MAAM,QAAQ,OAAO;EAAI;QAC1B;UACE,MAAM;UACN,SAAS;UACT,YAAY,CAAE;UACd,UAAUzkD,GAAM,KAAK4kD,GAAW,IAAI;QACrC;QACD,EAAC,MAAM,QAAQ,OAAO;EAAI;MAChC;IACA;AACA;ACxEA,IAAMjqD,KAAM,CAAA,EAAG;AAAf,IAGM8G,KAAe,CAAA;AAYd,SAASm9B,GAAY9+B,IAAM/G,IAAS;AACzC,QAAM8D,IAAW9D,MAAW0I,IAEtBujD,KAAiB,oBAAI,IAAG,GAExBC,IAAe,oBAAI,IAAG,GAEtBC,IAAiB,oBAAI,IAAG,GAIxB3jD,IAAW,EAAC,GAAG2qB,IAAiB,GAAGrvB,EAAS,SAAQ,GAGpDmD,IAAQ;IACZ,KAAAI;IACA,WAAA+kD;IACA,gBAAAH;IACA,cAAAC;IACA,gBAAAC;IACA,eAAe,CAAE;IACrB,UAAI3jD;IACA,KAAAxB;IACA,SAASlD;IACT,OAAAqD;IACAklD,MAAAA;EACJ;AAEE,SAAA1nC,GAAM5d,IAAM,SAAUhC,GAAM;AAC1B,QAAIA,EAAK,SAAS,gBAAgBA,EAAK,SAAS,sBAAsB;AACpE,YAAMtG,KAAMsG,EAAK,SAAS,eAAeknD,KAAiBC,GACpDzjD,KAAK,OAAO1D,EAAK,UAAU,EAAE,YAAW;AAIzCtG,MAAAA,GAAI,IAAIgK,EAAE,KAEbhK,GAAI,IAAIgK,IAAI1D,CAAI;IAExB;EACG,CAAA,GAEMkC;AAYP,WAASD,GAAIjC,GAAMiT,IAAQ;AACzB,UAAM9Z,KAAO6G,EAAK,MACZgtB,IAAS9qB,EAAM,SAAS/I,EAAI;AAElC,QAAI0D,GAAI,KAAKqF,EAAM,UAAU/I,EAAI,KAAK6zB;AACpC,aAAOA,EAAO9qB,GAAOlC,GAAMiT,EAAM;AAGnC,QAAI/Q,EAAM,QAAQ,eAAeA,EAAM,QAAQ,YAAY,SAAS/I,EAAI,GAAG;AACzE,UAAI,cAAc6G,GAAM;AACtB,cAAM,EAAC,UAAAD,GAAU,GAAGwnD,GAAO,IAAIvnD,GACzBQ,IAASkhB,GAAgB6lC,EAAO;AAEtC,eAAA/mD,EAAO,WAAW0B,EAAM,IAAIlC,CAAI,GAEzBQ;MACf;AAGM,aAAOkhB,GAAgB1hB,CAAI;IACjC;AAII,YAFgBkC,EAAM,QAAQ,kBAAkBslD,IAEjCtlD,GAAOlC,GAAMiT,EAAM;EACtC;AAUE,WAAS3Q,EAAI2Q,GAAQ;AAEnB,UAAMrW,KAAS,CAAA;AAEf,QAAI,cAAcqW,GAAQ;AACxB,YAAMnS,KAAQmS,EAAO;AACrB,UAAIha,IAAQ;AACZ,aAAO,EAAEA,IAAQ6H,GAAM,UAAQ;AAC7B,cAAMN,IAAS0B,EAAM,IAAIpB,GAAM7H,CAAK,GAAGga,CAAM;AAG7C,YAAIzS,GAAQ;AACV,cAAIvH,KAAS6H,GAAM7H,IAAQ,CAAC,EAAE,SAAS,YACjC,CAAC,MAAM,QAAQuH,CAAM,KAAKA,EAAO,SAAS,WAC5CA,EAAO,QAAQinD,GAAuBjnD,EAAO,KAAK,IAGhD,CAAC,MAAM,QAAQA,CAAM,KAAKA,EAAO,SAAS,YAAW;AACvD,kBAAMihB,IAAOjhB,EAAO,SAAS,CAAC;AAE1BihB,iBAAQA,EAAK,SAAS,WACxBA,EAAK,QAAQgmC,GAAuBhmC,EAAK,KAAK;UAE9D;AAGc,gBAAM,QAAQjhB,CAAM,IACtB5D,GAAO,KAAK,GAAG4D,CAAM,IAErB5D,GAAO,KAAK4D,CAAM;QAE9B;MACA;IACA;AAEI,WAAO5D;EACX;AACA;AAYA,SAASwF,GAAMV,IAAMsB,IAAI;AACnBtB,EAAAA,GAAK,aAAUsB,GAAG,WAAWH,GAASnB,EAAI;AAChD;AAcA,SAAS2lD,GAAU3lD,IAAMsB,IAAI;AAE3B,MAAIxC,IAASwC;AAGb,MAAItB,MAAQA,GAAK,MAAM;AACrB,UAAMgmD,KAAQhmD,GAAK,KAAK,OAClBimD,IAAYjmD,GAAK,KAAK,WACtBkmD,IAAclmD,GAAK,KAAK;AAE9B,QAAI,OAAOgmD,MAAU;AAGnB,UAAIlnD,EAAO,SAAS;AAClBA,UAAO,UAAUknD;WAMd;AAGH,cAAM3nD,IAAW,cAAcS,IAASA,EAAO,WAAW,CAACA,CAAM;AACjEA,YAAS,EAAC,MAAM,WAAW,SAASknD,IAAO,YAAY,CAAA,GAAI,UAAA3nD,EAAQ;MAC3E;AAGQS,MAAO,SAAS,aAAaonD,KAC/B,OAAO,OAAOpnD,EAAO,YAAYkhB,GAAgBkmC,CAAW,CAAC,GAI7D,cAAcpnD,KACdA,EAAO,YACPmnD,MAAc,QACdA,MAAc,WAEdnnD,EAAO,WAAWmnD;EAExB;AAEE,SAAOnnD;AACT;AAYA,SAASgnD,GAAsBtlD,IAAOlC,IAAM;AAC1C,QAAMqD,IAAOrD,GAAK,QAAQ,CAAA,GAEpBQ,KACJ,WAAWR,MACX,EAAEnD,GAAI,KAAKwG,GAAM,aAAa,KAAKxG,GAAI,KAAKwG,GAAM,WAAW,KACzD,EAAC,MAAM,QAAQ,OAAOrD,GAAK,MAAK,IAChC;IACE,MAAM;IACN,SAAS;IACT,YAAY,CAAE;IACd,UAAUkC,GAAM,IAAIlC,EAAI;EAClC;AAEE,SAAAkC,GAAM,MAAMlC,IAAMQ,EAAM,GACjB0B,GAAM,UAAUlC,IAAMQ,EAAM;AACrC;AAcO,SAAS8mD,GAAKxmD,IAAOokD,IAAO;AAEjC,QAAM1kD,IAAS,CAAA;AACf,MAAIvH,KAAQ;AAMZ,OAJIisD,MACF1kD,EAAO,KAAK,EAAC,MAAM,QAAQ,OAAO;EAAI,CAAC,GAGlC,EAAEvH,KAAQ6H,GAAM;AACjB7H,IAAAA,MAAOuH,EAAO,KAAK,EAAC,MAAM,QAAQ,OAAO;EAAI,CAAC,GAClDA,EAAO,KAAKM,GAAM7H,EAAK,CAAC;AAG1B,SAAIisD,MAASpkD,GAAM,SAAS,KAC1BN,EAAO,KAAK,EAAC,MAAM,QAAQ,OAAO;EAAI,CAAC,GAGlCA;AACT;AAUA,SAASinD,GAAuBruD,IAAO;AACrC,MAAIH,KAAQ,GACRuM,IAAOpM,GAAM,WAAWH,EAAK;AAEjC,SAAOuM,MAAS,KAAKA,MAAS;AAC5BvM,IAAAA,MACAuM,IAAOpM,GAAM,WAAWH,EAAK;AAG/B,SAAOG,GAAM,MAAMH,EAAK;AAC1B;ACjYO,SAAS4uD,GAAO7lD,IAAM/G,IAAS;AACpC,QAAMiH,IAAQ4+B,GAAY9+B,IAAM/G,EAAO,GACjC+E,KAAOkC,EAAM,IAAIF,IAAM,MAAS,GAChC8lD,IAAOtB,GAAOtkD,CAAK,GAEnB1B,IAAS,MAAM,QAAQR,EAAI,IAC7B,EAAC,MAAM,QAAQ,UAAUA,GAAI,IAC7BA,MAAQ,EAAC,MAAM,QAAQ,UAAU,CAAE,EAAA;AAEvC,SAAI8nD,KAKFtnD,EAAO,SAAS,KAAK,EAAC,MAAM,QAAQ,OAAO;EAAI,GAAGsnD,CAAI,GAGjDtnD;AACT;AC0Ce,SAASunD,GAAaC,IAAa/sD,IAAS;AACzD,SAAI+sD,MAAe,SAASA,KAInB,eAAgBhmD,GAAMd,IAAM;AAEjC,UAAM+mD;;MACJJ,GAAO7lD,GAAM,EAAC,MAAAd,IAAM,GAAGjG,GAAO,CAAC;;AAEjC,UAAM+sD,GAAY,IAAIC,GAAU/mD,EAAI;EAC1C,IAMS,SAAUc,GAAMd,IAAM;AAM3B;;MACE2mD,GAAO7lD,GAAM,EAAC,MAAAd,IAAM,GAAI8mD,MAAe/sD,GAAQ,CAAC;;EAEtD;AACA;ACvKO,SAASitD,GAAKz9C,IAAO;AAC1B,MAAIA;AACF,UAAMA;AAEV;;;;;;ACTA,MAAIqyB,KAAS,OAAO,UAAU,gBAC1BqrB,KAAQ,OAAO,UAAU,UACzBC,IAAiB,OAAO,gBACxBC,KAAO,OAAO,0BAEd7oB,IAAU,SAAiBnmC,GAAK;AACnC,WAAI,OAAO,MAAM,WAAY,aACrB,MAAM,QAAQA,CAAG,IAGlB8uD,GAAM,KAAK9uD,CAAG,MAAM;EAC3B,GAEGivD,IAAgB,SAAuBC,GAAK;AAC/C,QAAI,CAACA,KAAOJ,GAAM,KAAKI,CAAG,MAAM;AAC/B,aAAO;AAGR,QAAIC,IAAoB1rB,GAAO,KAAKyrB,GAAK,aAAa,GAClDE,KAAmBF,EAAI,eAAeA,EAAI,YAAY,aAAazrB,GAAO,KAAKyrB,EAAI,YAAY,WAAW,eAAe;AAE7H,QAAIA,EAAI,eAAe,CAACC,KAAqB,CAACC;AAC7C,aAAO;AAKR,QAAIlvD;AACJ,SAAKA,MAAOgvD;AAAK;AAEjB,WAAO,OAAOhvD,KAAQ,OAAeujC,GAAO,KAAKyrB,GAAKhvD,EAAG;EACzD,GAGGmvD,IAAc,SAAqBnvC,GAAQte,GAAS;AACnDmtD,SAAkBntD,EAAQ,SAAS,cACtCmtD,EAAe7uC,GAAQte,EAAQ,MAAM;MACpC,YAAY;MACZ,cAAc;MACd,OAAOA,EAAQ;MACf,UAAU;IACb,CAAG,IAEDse,EAAOte,EAAQ,IAAI,IAAIA,EAAQ;EAEhC,GAGG0tD,IAAc,SAAqBJ,GAAK3uD,GAAM;AACjD,QAAIA,MAAS;AACZ,UAAKkjC,GAAO,KAAKyrB,GAAK3uD,CAAI,GAAA;AAEnB,YAAIyuD;AAGV,iBAAOA,GAAKE,GAAK3uD,CAAI,EAAE;MAAA,MAJvB;AAQF,WAAO2uD,EAAI3uD,CAAI;EACf;AAEagvD,SAAAA,KAAG,SAASA,KAAS;AAClC,QAAI3tD,GAASrB,GAAMivD,IAAKC,IAAMC,GAAa9nC,GACvC1H,IAAS,UAAU,CAAC,GACpBrT,KAAI,GACJmF,IAAS,UAAU,QACnB29C,IAAO;AAaX,SAVI,OAAOzvC,KAAW,cACrByvC,IAAOzvC,GACPA,IAAS,UAAU,CAAC,KAAK,CAAE,GAE3BrT,KAAI,KAEDqT,KAAU,QAAS,OAAOA,KAAW,YAAY,OAAOA,KAAW,gBACtEA,IAAS,CAAE,IAGLrT,KAAImF,GAAQ,EAAEnF;AAGpB,UAFAjL,IAAU,UAAUiL,EAAC,GAEjBjL,KAAW;AAEd,aAAKrB,KAAQqB;AACZ4tD,UAAAA,KAAMF,EAAYpvC,GAAQ3f,CAAI,GAC9BkvD,KAAOH,EAAY1tD,GAASrB,CAAI,GAG5B2f,MAAWuvC,OAEVE,KAAQF,OAASR,EAAcQ,EAAI,MAAMC,IAAcvpB,EAAQspB,EAAI,OAClEC,KACHA,IAAc,OACd9nC,IAAQ4nC,MAAOrpB,EAAQqpB,EAAG,IAAIA,KAAM,CAAE,KAEtC5nC,IAAQ4nC,MAAOP,EAAcO,EAAG,IAAIA,KAAM,CAAE,GAI7CH,EAAYnvC,GAAQ,EAAE,MAAM3f,GAAM,UAAUgvD,GAAOI,GAAM/nC,GAAO6nC,EAAI,EAAA,CAAG,KAG7D,OAAOA,KAAS,OAC1BJ,EAAYnvC,GAAQ,EAAE,MAAM3f,GAAM,UAAUkvD,GAAAA,CAAM;AAQvD,WAAOvvC;EACP,GAAA;;;;ACpHc,SAAS+uC,GAAclvD,IAAO;AAC5C,MAAI,OAAOA,MAAU,YAAYA,OAAU;AAC1C,WAAO;AAGR,QAAM6vD,KAAY,OAAO,eAAe7vD,EAAK;AAC7C,UAAQ6vD,OAAc,QAAQA,OAAc,OAAO,aAAa,OAAO,eAAeA,EAAS,MAAM,SAAS,EAAE,OAAO,eAAe7vD,OAAU,EAAE,OAAO,YAAYA;AACtK;AC+BO,SAAS8vD,KAAS;AAEvB,QAAMC,KAAM,CAAA,GAENC,KAAW,EAAC,KAAAC,GAAK,KAAA5a,GAAG;AAE1B,SAAO2a;AAGP,WAASC,KAAOzsD,GAAQ;AACtB,QAAI0sD,IAAkB;AAEtB,UAAMC,IAAW3sD,EAAO,IAAG;AAE3B,QAAI,OAAO2sD,KAAa;AACtB,YAAM,IAAI,UAAU,6CAA6CA,CAAQ;AAG3E/nD,MAAK,MAAM,GAAG5E,CAAM;AAQpB,aAAS4E,EAAKiJ,OAAU3D,GAAQ;AAC9B,YAAMtD,IAAK2lD,GAAI,EAAEG,CAAe;AAChC,UAAIrwD,KAAQ;AAEZ,UAAIwR,IAAO;AACT8+C,UAAS9+C,EAAK;AACd;MACR;AAGM,aAAO,EAAExR,KAAQ2D,EAAO;AACtB,SAAIkK,EAAO7N,EAAK,MAAM,QAAQ6N,EAAO7N,EAAK,MAAM,YAC9C6N,EAAO7N,EAAK,IAAI2D,EAAO3D,EAAK;AAKhC2D,UAASkK,GAGLtD,IACF8jD,GAAK9jD,GAAIhC,CAAI,EAAE,GAAGsF,CAAM,IAExByiD,EAAS,MAAM,GAAGziD,CAAM;IAEhC;EACA;AAGE,WAAS2nC,GAAI+a,GAAY;AACvB,QAAI,OAAOA,KAAe;AACxB,YAAM,IAAI;QACR,iDAAiDA;MACzD;AAGI,WAAAL,GAAI,KAAKK,CAAU,GACZJ;EACX;AACA;AAkCO,SAAS9B,GAAKmC,IAAYF,IAAU;AAEzC,MAAIn2B;AAEJ,SAAOs2B;AAQP,WAASA,MAAWnmD,GAAY;AAC9B,UAAMomD,IAAoBF,GAAW,SAASlmD,EAAW;AAEzD,QAAI/C;AAEAmpD,SACFpmD,EAAW,KAAKqmD,CAAI;AAGtB,QAAI;AACFppD,MAAAA,KAASipD,GAAW,MAAM,MAAMlmD,CAAU;IAC3C,SAAQkH,GAAO;AACd,YAAMo/C;;QAAkCp/C;;AAMxC,UAAIk/C,KAAqBv2B;AACvB,cAAMy2B;AAGR,aAAOD,EAAKC,CAAS;IAC3B;AAESF,UACCnpD,MAAUA,GAAO,QAAQ,OAAOA,GAAO,QAAS,aAClDA,GAAO,KAAKspD,GAAMF,CAAI,IACbppD,cAAkB,QAC3BopD,EAAKppD,EAAM,IAEXspD,EAAKtpD,EAAM;EAGnB;AAOE,WAASopD,EAAKn/C,MAAU3D,GAAQ;AACzBssB,UACHA,IAAS,MACTm2B,GAAS9+C,GAAO,GAAG3D,CAAM;EAE/B;AAOE,WAASgjD,EAAK1wD,GAAO;AACnBwwD,MAAK,MAAMxwD,CAAK;EACpB;AACA;AC1JO,IAAM2wD,KAAU,EAAC,UAAAC,IAAU,SAAAC,IAAS,SAAAC,IAAS,MAAAC,IAAM,KAAK,IAAG;AAclE,SAASH,GAASvlC,IAAMylC,IAAS;AAC/B,MAAIA,OAAY,UAAa,OAAOA,MAAY;AAC9C,UAAM,IAAI,UAAU,iCAAiC;AAGvDE,KAAW3lC,EAAI;AACf,MAAI9lB,IAAQ,GACRC,KAAM,IACN3F,IAAQwrB,GAAK,QAEb4lC;AAEJ,MACEH,OAAY,UACZA,GAAQ,WAAW,KACnBA,GAAQ,SAASzlC,GAAK,QACtB;AACA,WAAOxrB;AACL,UAAIwrB,GAAK,YAAYxrB,CAAK,MAAM,IAAA;AAG9B,YAAIoxD,GAAc;AAChB1rD,cAAQ1F,IAAQ;AAChB;QACV;MAAA,MACiB2F,CAAAA,KAAM,MAGfyrD,IAAe,MACfzrD,KAAM3F,IAAQ;AAIlB,WAAO2F,KAAM,IAAI,KAAK6lB,GAAK,MAAM9lB,GAAOC,EAAG;EAC/C;AAEE,MAAIsrD,OAAYzlC;AACd,WAAO;AAGT,MAAI6lC,IAAmB,IACnBC,IAAeL,GAAQ,SAAS;AAEpC,SAAOjxD;AACL,QAAIwrB,GAAK,YAAYxrB,CAAK,MAAM,IAAA;AAG9B,UAAIoxD,GAAc;AAChB1rD,YAAQ1F,IAAQ;AAChB;MACR;IAAA;AAEUqxD,UAAmB,MAGrBD,IAAe,MACfC,IAAmBrxD,IAAQ,IAGzBsxD,IAAe,OAEb9lC,GAAK,YAAYxrB,CAAK,MAAMixD,GAAQ,YAAYK,GAAc,IAC5DA,IAAe,MAGjB3rD,KAAM3F,MAKRsxD,IAAe,IACf3rD,KAAM0rD;AAMd,SAAI3rD,MAAUC,KACZA,KAAM0rD,IACG1rD,KAAM,MACfA,KAAM6lB,GAAK,SAGNA,GAAK,MAAM9lB,GAAOC,EAAG;AAC9B;AAUA,SAASqrD,GAAQxlC,IAAM;AAGrB,MAFA2lC,GAAW3lC,EAAI,GAEXA,GAAK,WAAW;AAClB,WAAO;AAGT,MAAI7lB,KAAM,IACN3F,IAAQwrB,GAAK,QAEb+lC;AAGJ,SAAO,EAAEvxD;AACP,QAAIwrB,GAAK,YAAYxrB,CAAK,MAAM,IAAA;AAC9B,UAAIuxD,IAAgB;AAClB5rD,QAAAA,KAAM3F;AACN;MACR;IAAA,MACgBuxD,CAAAA,OAEVA,KAAiB;AAIrB,SAAO5rD,KAAM,IACT6lB,GAAK,YAAY,CAAC,MAAM,KACtB,MACA,MACF7lB,OAAQ,KAAK6lB,GAAK,YAAY,CAAC,MAAM,KACnC,OACAA,GAAK,MAAM,GAAG7lB,EAAG;AACzB;AAUA,SAASsrD,GAAQzlC,IAAM;AACrB2lC,KAAW3lC,EAAI;AAEf,MAAIxrB,KAAQwrB,GAAK,QAEb7lB,IAAM,IACN6rD,KAAY,GACZC,IAAW,IAGXC,IAAc,GAEdH;AAEJ,SAAOvxD,QAAS;AACd,UAAMuM,IAAOif,GAAK,YAAYxrB,EAAK;AAEnC,QAAIuM,MAAS,IAAc;AAGzB,UAAIglD,GAAgB;AAClBC,QAAAA,KAAYxxD,KAAQ;AACpB;MACR;AAEM;IACN;AAEQ2F,QAAM,MAGR4rD,IAAiB,MACjB5rD,IAAM3F,KAAQ,IAGZuM,MAAS,KAEPklD,IAAW,IACbA,IAAWzxD,KACF0xD,MAAgB,MACzBA,IAAc,KAEPD,IAAW,OAGpBC,IAAc;EAEpB;AAEE,SACED,IAAW,KACX9rD,IAAM;EAEN+rD,MAAgB;EAEfA,MAAgB,KAAKD,MAAa9rD,IAAM,KAAK8rD,MAAaD,KAAY,IAEhE,KAGFhmC,GAAK,MAAMimC,GAAU9rD,CAAG;AACjC;AAUA,SAASurD,MAAQS,IAAU;AACzB,MAAI3xD,KAAQ,IAER4xD;AAEJ,SAAO,EAAE5xD,KAAQ2xD,GAAS;AACxBR,OAAWQ,GAAS3xD,EAAK,CAAC,GAEtB2xD,GAAS3xD,EAAK,MAChB4xD,IACEA,MAAW,SAAYD,GAAS3xD,EAAK,IAAI4xD,IAAS,MAAMD,GAAS3xD,EAAK;AAI5E,SAAO4xD,MAAW,SAAY,MAAMpvD,GAAUovD,CAAM;AACtD;AAYA,SAASpvD,GAAUgpB,IAAM;AACvB2lC,KAAW3lC,EAAI;AAEf,QAAMqmC,KAAWrmC,GAAK,YAAY,CAAC,MAAM;AAGzC,MAAIrrB,IAAQ2xD,GAAgBtmC,IAAM,CAACqmC,EAAQ;AAE3C,SAAI1xD,EAAM,WAAW,KAAK,CAAC0xD,OACzB1xD,IAAQ,MAGNA,EAAM,SAAS,KAAKqrB,GAAK,YAAYA,GAAK,SAAS,CAAC,MAAM,OAC5DrrB,KAAS,MAGJ0xD,KAAW,MAAM1xD,IAAQA;AAClC;AAYA,SAAS2xD,GAAgBtmC,IAAMumC,IAAgB;AAC7C,MAAIxqD,IAAS,IACTyqD,KAAoB,GACpBC,IAAY,IACZC,IAAO,GACPlyD,IAAQ,IAERuM,GAEA4lD;AAEJ,SAAO,EAAEnyD,KAASwrB,GAAK,UAAQ;AAC7B,QAAIxrB,IAAQwrB,GAAK;AACfjf,UAAOif,GAAK,YAAYxrB,CAAK;SACxB;AAAA,UAAIuM,MAAS;AAClB;AAEAA,UAAO;IAAA;AAGT,QAAIA,MAAS,IAAc;AACzB,UAAI,EAAA0lD,MAAcjyD,IAAQ,KAAKkyD,MAAS,GAEjC,KAAID,MAAcjyD,IAAQ,KAAKkyD,MAAS,GAAG;AAChD,YACE3qD,EAAO,SAAS,KAChByqD,OAAsB,KACtBzqD,EAAO,YAAYA,EAAO,SAAS,CAAC,MAAM,MAC1CA,EAAO,YAAYA,EAAO,SAAS,CAAC,MAAM,IAAA;AAE1C,cAAIA,EAAO,SAAS,GAAA;AAGlB,gBAFA4qD,KAAiB5qD,EAAO,YAAY,GAAG,GAEnC4qD,OAAmB5qD,EAAO,SAAS,GAAG;AACpC4qD,cAAAA,KAAiB,KACnB5qD,IAAS,IACTyqD,KAAoB,MAEpBzqD,IAASA,EAAO,MAAM,GAAG4qD,EAAc,GACvCH,KAAoBzqD,EAAO,SAAS,IAAIA,EAAO,YAAY,GAAG,IAGhE0qD,IAAYjyD,GACZkyD,IAAO;AACP;YACd;UAAA,WACqB3qD,EAAO,SAAS,GAAG;AAC5BA,gBAAS,IACTyqD,KAAoB,GACpBC,IAAYjyD,GACZkyD,IAAO;AACP;UACZ;QAAA;AAGYH,QAAAA,OACFxqD,IAASA,EAAO,SAAS,IAAIA,IAAS,QAAQ,MAC9CyqD,KAAoB;MAE9B;AACYzqD,UAAO,SAAS,IAClBA,KAAU,MAAMikB,GAAK,MAAMymC,IAAY,GAAGjyD,CAAK,IAE/CuH,IAASikB,GAAK,MAAMymC,IAAY,GAAGjyD,CAAK,GAG1CgyD,KAAoBhyD,IAAQiyD,IAAY;AAG1CA,UAAYjyD,GACZkyD,IAAO;IACR,MAAU3lD,OAAS,MAAgB2lD,IAAO,KACzCA,MAEAA,IAAO;EAEb;AAEE,SAAO3qD;AACT;AAUA,SAAS4pD,GAAW3lC,IAAM;AACxB,MAAI,OAAOA,MAAS;AAClB,UAAM,IAAI;MACR,qCAAqC,KAAK,UAAUA,EAAI;IAC9D;AAEA;ACpaO,IAAM4mC,KAAU,EAAC,KAAAC,GAAG;AAE3B,SAASA,KAAM;AACb,SAAO;AACT;ACYO,SAASC,GAAMC,IAAe;AACnC,SAAO,CAAA,EACLA,OAAkB,QAChB,OAAOA,MAAkB,YACzB,UAAUA,MACVA,GAAc,QACd,cAAcA,MACdA,GAAc;EAEdA,GAAc,SAAS;AAE7B;AClBO,SAASC,GAAUhnC,IAAM;AAC9B,MAAI,OAAOA,MAAS;AAClBA,IAAAA,KAAO,IAAI,IAAIA,EAAI;WACV,CAAC8mC,GAAM9mC,EAAI,GAAG;AAEvB,UAAMha,KAAQ,IAAI;MAChB,iFACEga,KACA;IACR;AACI,UAAAha,GAAM,OAAO,wBACPA;EACV;AAEE,MAAIga,GAAK,aAAa,SAAS;AAE7B,UAAMha,KAAQ,IAAI,UAAU,gCAAgC;AAC5D,UAAAA,GAAM,OAAO,0BACPA;EACV;AAEE,SAAOihD,GAAoBjnC,EAAI;AACjC;AAUA,SAASinC,GAAoB3mC,IAAK;AAChC,MAAIA,GAAI,aAAa,IAAI;AAEvB,UAAMta,KAAQ,IAAI;MAChB;IACN;AACI,UAAAA,GAAM,OAAO,6BACPA;EACV;AAEE,QAAM65B,KAAWvf,GAAI;AACrB,MAAI9rB,IAAQ;AAEZ,SAAO,EAAEA,IAAQqrC,GAAS;AACxB,QACEA,GAAS,YAAYrrC,CAAK,MAAM,MAChCqrC,GAAS,YAAYrrC,IAAQ,CAAC,MAAM,IACpC;AACA,YAAM0yD,KAAQrnB,GAAS,YAAYrrC,IAAQ,CAAC;AAC5C,UAAI0yD,OAAU,MAAgBA,OAAU,KAAe;AAErD,cAAMlhD,IAAQ,IAAI;UAChB;QACV;AACQ,cAAAA,EAAM,OAAO,6BACPA;MACd;IACA;AAGE,SAAO,mBAAmB65B,EAAQ;AACpC;ACvDA,IAAMsnB;;EAA8B;IAClC;IACA;IACA;IACA;IACA;IACA;EACF;;AAEO,IAAMC,KAAN,MAAY;;;;;;;;;;;;;;;;;;;;;;;EAuBjB,YAAYzyD,IAAO;AAEjB,QAAI6B;AAEC7B,IAAAA,KAEMmyD,GAAMnyD,EAAK,IACpB6B,IAAU,EAAC,MAAM7B,GAAK,IACb,OAAOA,MAAU,YAAY0yD,GAAa1yD,EAAK,IACxD6B,IAAU,EAAC,OAAA7B,GAAK,IAEhB6B,IAAU7B,KANV6B,IAAU,CAAA,GAkBZ,KAAK,MAAM,SAASA,IAAU,KAAKowD,GAAQ,IAAG,GAU9C,KAAK,OAAO,CAAA,GASZ,KAAK,UAAU,CAAA,GAOf,KAAK,WAAW,CAAA,GAOhB,KAAK,OAYL,KAAK,KAUL,KAAK,QASL,KAAK;AAIL,QAAIpyD,KAAQ;AAEZ,WAAO,EAAEA,KAAQ2yD,GAAM,UAAQ;AAC7B,YAAMpP,IAAQoP,GAAM3yD,EAAK;AAKvBujD,WAASvhD,KACTA,EAAQuhD,CAAK,MAAM,UACnBvhD,EAAQuhD,CAAK,MAAM,SAGnB,KAAKA,CAAK,IAAIA,MAAU,YAAY,CAAC,GAAGvhD,EAAQuhD,CAAK,CAAC,IAAIvhD,EAAQuhD,CAAK;IAE/E;AAGI,QAAIA;AAGJ,SAAKA,KAASvhD;AAEP2wD,SAAM,SAASpP,CAAK,MAEvB,KAAKA,CAAK,IAAIvhD,EAAQuhD,CAAK;EAGnC;;;;;;;EAQE,IAAI,WAAW;AACb,WAAO,OAAO,KAAK,QAAS,WACxBuN,GAAQ,SAAS,KAAK,IAAI,IAC1B;EACR;;;;;;;;;;;;;EAcE,IAAI,SAASC,IAAU;AACrB+B,OAAe/B,IAAU,UAAU,GACnCgC,GAAWhC,IAAU,UAAU,GAC/B,KAAK,OAAOD,GAAQ,KAAK,KAAK,WAAW,IAAIC,EAAQ;EACzD;;;;;;;EAQE,IAAI,UAAU;AACZ,WAAO,OAAO,KAAK,QAAS,WACxBD,GAAQ,QAAQ,KAAK,IAAI,IACzB;EACR;;;;;;;;;;;EAYE,IAAI,QAAQE,IAAS;AACnBG,OAAW,KAAK,UAAU,SAAS,GACnC,KAAK,OAAOL,GAAQ,KAAKE,MAAW,IAAI,KAAK,QAAQ;EACzD;;;;;;;EAQE,IAAI,UAAU;AACZ,WAAO,OAAO,KAAK,QAAS,WACxBF,GAAQ,QAAQ,KAAK,IAAI,IACzB;EACR;;;;;;;;;;;;;EAcE,IAAI,QAAQG,IAAS;AAInB,QAHA8B,GAAW9B,IAAS,SAAS,GAC7BE,GAAW,KAAK,SAAS,SAAS,GAE9BF,IAAS;AACX,UAAIA,GAAQ,YAAY,CAAC,MAAM;AAC7B,cAAM,IAAI,MAAM,+BAA+B;AAGjD,UAAIA,GAAQ,SAAS,KAAK,CAAC;AACzB,cAAM,IAAI,MAAM,wCAAwC;IAEhE;AAEI,SAAK,OAAOH,GAAQ,KAAK,KAAK,SAAS,KAAK,QAAQG,MAAW,GAAG;EACtE;;;;;;;EAQE,IAAI,OAAO;AACT,WAAO,KAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC;EAC/C;;;;;;;;;;;;;EAcE,IAAI,KAAKzlC,IAAM;AACT8mC,OAAM9mC,EAAI,MACZA,KAAOgnC,GAAUhnC,EAAI,IAGvBsnC,GAAetnC,IAAM,MAAM,GAEvB,KAAK,SAASA,MAChB,KAAK,QAAQ,KAAKA,EAAI;EAE5B;;;;;;;EAQE,IAAI,OAAO;AACT,WAAO,OAAO,KAAK,QAAS,WACxBslC,GAAQ,SAAS,KAAK,MAAM,KAAK,OAAO,IACxC;EACR;;;;;;;;;;;;;EAcE,IAAI,KAAKkC,IAAM;AACbF,OAAeE,IAAM,MAAM,GAC3BD,GAAWC,IAAM,MAAM,GACvB,KAAK,OAAOlC,GAAQ,KAAK,KAAK,WAAW,IAAIkC,MAAQ,KAAK,WAAW,GAAG;EAC5E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+DE,KAAKviB,IAAeC,GAAwBC,IAAQ;AAElD,UAAM/vC,IAAU,KAAK,QAAQ6vC,IAAeC,GAAwBC,EAAM;AAE1E,UAAA/vC,EAAQ,QAAQ,MAEVA;EACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4DE,KAAK6vC,IAAeC,GAAwBC,IAAQ;AAElD,UAAM/vC,IAAU,KAAK,QAAQ6vC,IAAeC,GAAwBC,EAAM;AAE1E,WAAA/vC,EAAQ,QAAQ,QAETA;EACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4DE,QAAQ6vC,IAAeC,GAAwBC,IAAQ;AACrD,UAAM/vC,IAAU,IAAI4vC;;MAElBC;MACAC;MACAC;IACN;AAEI,WAAI,KAAK,SACP/vC,EAAQ,OAAO,KAAK,OAAO,MAAMA,EAAQ,MACzCA,EAAQ,OAAO,KAAK,OAGtBA,EAAQ,QAAQ,OAEhB,KAAK,SAAS,KAAKA,CAAO,GAEnBA;EACX;;;;;;;;;;;;;;EAeE,SAAS2mD,IAAU;AACjB,WAAI,KAAK,UAAU,SACV,KAGL,OAAO,KAAK,SAAU,WACjB,KAAK,QAGE,IAAI,YAAYA,MAAY,MAAS,EACtC,OAAO,KAAK,KAAK;EACpC;AACA;AAYA,SAASwL,GAAWE,IAAMtyD,IAAM;AAC9B,MAAIsyD,MAAQA,GAAK,SAASnC,GAAQ,GAAG;AACnC,UAAM,IAAI;MACR,MAAMnwD,KAAO,yCAAyCmwD,GAAQ,MAAM;IAC1E;AAEA;AAYA,SAASgC,GAAeG,IAAMtyD,IAAM;AAClC,MAAI,CAACsyD;AACH,UAAM,IAAI,MAAM,MAAMtyD,KAAO,mBAAmB;AAEpD;AAYA,SAASwwD,GAAW3lC,IAAM7qB,IAAM;AAC9B,MAAI,CAAC6qB;AACH,UAAM,IAAI,MAAM,cAAc7qB,KAAO,iCAAiC;AAE1E;AAUA,SAASkyD,GAAa1yD,IAAO;AAC3B,SAAO,CAAA,EACLA,MACE,OAAOA,MAAU,YACjB,gBAAgBA,MAChB,gBAAgBA;AAEtB;ACloBO,IAAM+yD;;;;;;;;;;EAYP,SAAUhxD,IAAU;AAGlB,UAAM2G;;;;MAFO,KACO,YAIX;OAEH1I,IAAQ0I,GAAM3G,EAAQ,GAEtBixD,IAAQ,WAAY;AACxB,aAAOhzD,EAAM,MAAMgzD,GAAO,SAAS;IAC7C;AAEQ,WAAA,OAAO,eAAeA,GAAOtqD,EAAK,GAc3BsqD;EACf;;AAzCO,IC0WDvvD,KAAM,CAAA,EAAG;AAeR,IAAMwvD,KAAN,MAAMA,YAAkBF,GAAiB;;;;EAI9C,cAAc;AAEZ,UAAM,MAAM,GAeZ,KAAK,WAAW,QAYhB,KAAK,SAAS,QAad,KAAK,YAAY,CAAA,GAajB,KAAK,WAAW,QAShB,KAAK,cAAc,IASnB,KAAK,SAAS,QASd,KAAK,YAAY,CAAA,GAUjB,KAAK,SAAS,QASd,KAAK,eAAejD,GAAM;EAC9B;;;;;;;;;;;;EAaE,OAAO;AAEL,UAAMlB;;MAEF,IAAIqE,IAAS;;AAEjB,QAAIpzD,IAAQ;AAEZ,WAAO,EAAEA,IAAQ,KAAK,UAAU,UAAQ;AACtC,YAAMqzD,KAAW,KAAK,UAAUrzD,CAAK;AACrC+uD,MAAAA,GAAY,IAAI,GAAGsE,EAAQ;IACjC;AAEI,WAAAtE,GAAY,KAAKY,GAAO,MAAM,CAAE,GAAE,KAAK,SAAS,CAAC,GAE1CZ;EACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6DE,KAAKzuD,IAAKH,GAAO;AACf,WAAI,OAAOG,MAAQ,WAEb,UAAU,WAAW,KACvBgzD,GAAe,QAAQ,KAAK,MAAM,GAClC,KAAK,UAAUhzD,EAAG,IAAIH,GACf,QAIDyD,GAAI,KAAK,KAAK,WAAWtD,EAAG,KAAK,KAAK,UAAUA,EAAG,KAAM,SAI/DA,MACFgzD,GAAe,QAAQ,KAAK,MAAM,GAClC,KAAK,YAAYhzD,IACV,QAIF,KAAK;EAChB;;;;;;;;;;;;;;;;;;EAmBE,SAAS;AACP,QAAI,KAAK;AACP,aAAO;AAMT,UAAM03B;;;MAAyD;;AAE/D,WAAO,EAAE,KAAK,cAAc,KAAK,UAAU,UAAQ;AACjD,YAAM,CAACq7B,GAAU,GAAGrxD,EAAO,IAAI,KAAK,UAAU,KAAK,WAAW;AAE9D,UAAIA,GAAQ,CAAC,MAAM;AACjB;AAGEA,MAAAA,GAAQ,CAAC,MAAM,SACjBA,GAAQ,CAAC,IAAI;AAGf,YAAMuxD,IAAcF,EAAS,KAAKr7B,IAAM,GAAGh2B,EAAO;AAE9C,aAAOuxD,KAAgB,cACzB,KAAK,aAAa,IAAIA,CAAW;IAEzC;AAEI,WAAA,KAAK,SAAS,MACd,KAAK,cAAc,OAAO,mBAEnB;EACX;;;;;;;;;;;;;;;EAgBE,MAAMtrD,IAAM;AACV,SAAK,OAAM;AACX,UAAMurD,IAAWC,GAAMxrD,EAAI,GACrBiR,KAAS,KAAK,UAAU,KAAK;AACnC,WAAAw6C,GAAa,SAASx6C,EAAM,GACrBA,GAAO,OAAOs6C,CAAQ,GAAGA,CAAQ;EAC5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4CE,QAAQvrD,IAAM0oD,GAAM;AAClB,UAAM34B,KAAO;AAEb,WAAA,KAAK,OAAM,GACX07B,GAAa,WAAW,KAAK,UAAU,KAAK,MAAM,GAClDC,GAAe,WAAW,KAAK,YAAY,KAAK,QAAQ,GAEjDhD,IAAOiD,EAAS,QAAWjD,CAAI,IAAI,IAAI,QAAQiD,CAAQ;AAQ9D,aAASA,EAASx5B,GAASy5B,GAAQ;AACjC,YAAML,IAAWC,GAAMxrD,EAAI,GAGrB6rD;;;QAEsB97B,GAAK,MAAMw7B,CAAQ;;AAG/Cx7B,MAAAA,GAAK,IAAI87B,IAAWN,GAAU,SAAUhiD,GAAOzI,IAAMd,IAAM;AACzD,YAAIuJ,KAAS,CAACzI,MAAQ,CAACd;AACrB,iBAAO8rD,EAASviD,CAAK;AAKvB,cAAMwiD;;;UAEsBjrD;WAGtBkrD,IAAgBj8B,GAAK,UAAUg8B,GAAa/rD,EAAI;AAElDisD,WAAgBD,CAAa,IAC/BhsD,GAAK,QAAQgsD,IAEbhsD,GAAK,SAASgsD,GAGhBF;UAASviD;;UAAsDvJ;QAAI;MACpE,CAAA;AAOD,eAAS8rD,EAASviD,GAAOvJ,IAAM;AACzBuJ,aAAS,CAACvJ,KACZ4rD,EAAOriD,CAAK,IACH4oB,IACTA,EAAQnyB,EAAI,IAGZ0oD,EAAK,QAAW1oD,EAAI;MAE9B;IACA;EACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiCE,YAAYA,IAAM;AAEhB,QAAIksD,IAAW,OAEX5sD;AAEJ,WAAA,KAAK,OAAM,GACXmsD,GAAa,eAAe,KAAK,UAAU,KAAK,MAAM,GACtDC,GAAe,eAAe,KAAK,YAAY,KAAK,QAAQ,GAE5D,KAAK,QAAQ1rD,IAAM8rD,CAAQ,GAC3BK,GAAW,eAAe,WAAWD,CAAQ,GAGtC5sD;AAKP,aAASwsD,EAASviD,GAAOvJ,GAAM;AAC7BksD,UAAW,MACXlF,GAAKz9C,CAAK,GACVjK,KAASU;IACf;EACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAwCE,IAAIc,IAAMd,GAAM0oD,IAAM;AACpB0D,OAAWtrD,EAAI,GACf,KAAK,OAAM;AAEX,UAAMurD,IAAe,KAAK;AAE1B,WAAI,CAAC3D,MAAQ,OAAO1oD,KAAS,eAC3B0oD,KAAO1oD,GACPA,IAAO,SAGF0oD,KAAOiD,EAAS,QAAWjD,EAAI,IAAI,IAAI,QAAQiD,CAAQ;AAW9D,aAASA,EAASx5B,GAASy5B,GAAQ;AAKjC,YAAML,KAAWC,GAAMxrD,CAAI;AAC3BqsD,QAAa,IAAIvrD,IAAMyqD,IAAUO,CAAQ;AAQzC,eAASA,EAASviD,GAAO+iD,IAAYtsD,IAAM;AACzC,cAAMusD;;UAEFD,MAAcxrD;;AAGdyI,YACFqiD,EAAOriD,CAAK,IACH4oB,IACTA,EAAQo6B,CAAa,IAGrB7D,GAAK,QAAW6D,GAAevsD,EAAI;MAE7C;IACA;EACA;;;;;;;;;;;;;;;;;;EAmBE,QAAQc,IAAMd,GAAM;AAElB,QAAIksD,KAAW,OAEX5sD;AAEJ,WAAA,KAAK,IAAIwB,IAAMd,GAAM8rD,CAAQ,GAE7BK,GAAW,WAAW,OAAOD,EAAQ,GAE9B5sD;AAKP,aAASwsD,EAASviD,GAAOzI,GAAM;AAC7BkmD,SAAKz9C,CAAK,GACVjK,IAASwB,GACTorD,KAAW;IACjB;EACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BE,UAAUprD,IAAMd,GAAM;AACpB,SAAK,OAAM;AACX,UAAMurD,KAAWC,GAAMxrD,CAAI,GACrB8/C,IAAW,KAAK,YAAY,KAAK;AACvC,WAAA4L,GAAe,aAAa5L,CAAQ,GACpCsM,GAAWtrD,EAAI,GAERg/C,EAASh/C,IAAMyqD,EAAQ;EAClC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2DE,IAAIrzD,OAAUmK,GAAY;AACxB,UAAMmqD,KAAY,KAAK,WACjB5gD,IAAY,KAAK;AAIvB,QAFAy/C,GAAe,OAAO,KAAK,MAAM,GAE7BnzD,MAAU,KAEP,KAAI,OAAOA,MAAU;AAC1Bu0D,MAAAA,GAAUv0D,IAAOmK,CAAU;aAClB,OAAOnK,MAAU;AACtB,YAAM,QAAQA,EAAK,IACrBw0D,EAAQx0D,EAAK,IAEby0D,EAAUz0D,EAAK;;AAGjB,YAAM,IAAI,UAAU,iCAAiCA,KAAQ,GAAG;AAGlE,WAAO;AAMP,aAASy8B,EAAIz8B,GAAO;AAClB,UAAI,OAAOA,KAAU;AACnBu0D,QAAAA,GAAUv0D,GAAO,CAAE,CAAA;eACV,OAAOA,KAAU;AAC1B,YAAI,MAAM,QAAQA,CAAK,GAAG;AACxB,gBAAM,CAAC00D,GAAQ,GAAGvqD,EAAU;;YACkBnK;;AAC9Cu0D,UAAAA,GAAUG,GAAQvqD,EAAU;QACtC;AACUsqD,YAAUz0D,CAAK;;AAGjB,cAAM,IAAI,UAAU,iCAAiCA,IAAQ,GAAG;IAExE;AAMI,aAASy0D,EAAUrtD,GAAQ;AACzB,UAAI,EAAE,aAAaA,MAAW,EAAE,cAAcA;AAC5C,cAAM,IAAI;UACR;QACV;AAGMotD,QAAQptD,EAAO,OAAO,GAElBA,EAAO,aACTsM,EAAU,WAAW87C,GAAO,MAAM97C,EAAU,UAAUtM,EAAO,QAAQ;IAE7E;AAMI,aAASotD,EAAQG,GAAS;AACxB,UAAI90D,IAAQ;AAEZ,UAAI80D,KAAY,KAET,KAAI,MAAM,QAAQA,CAAO;AAC9B,eAAO,EAAE90D,IAAQ80D,EAAQ,UAAQ;AAC/B,gBAAM/nB,KAAQ+nB,EAAQ90D,CAAK;AAC3B48B,YAAImQ,EAAK;QACnB;;AAEQ,cAAM,IAAI,UAAU,sCAAsC+nB,IAAU,GAAG;IAE/E;AAOI,aAASJ,GAAUG,GAAQvqD,GAAY;AACrC,UAAItK,KAAQ,IACRkV,KAAa;AAEjB,aAAO,EAAElV,KAAQy0D,GAAU;AACzB,YAAIA,GAAUz0D,EAAK,EAAE,CAAC,MAAM60D,GAAQ;AAClC3/C,UAAAA,KAAalV;AACb;QACV;AAGM,UAAIkV,OAAe;AACjBu/C,QAAAA,GAAU,KAAK,CAACI,GAAQ,GAAGvqD,CAAU,CAAC;eAI/BA,EAAW,SAAS,GAAG;AAC9B,YAAI,CAACyqD,GAAS,GAAG/vD,CAAI,IAAIsF;AACzB,cAAM0qD,IAAiBP,GAAUv/C,EAAU,EAAE,CAAC;AAC1C+/C,WAAWD,CAAc,KAAKC,GAAWF,CAAO,MAClDA,IAAUpF,GAAO,MAAMqF,GAAgBD,CAAO,IAGhDN,GAAUv/C,EAAU,IAAI,CAAC2/C,GAAQE,GAAS,GAAG/vD,CAAI;MACzD;IACA;EACA;AACA;AA8BO,IAAMkwD,KAAU,IAAI9B,GAAS,EAAG,OAAM;AAS7C,SAASM,GAAa/yD,IAAMR,IAAO;AACjC,MAAI,OAAOA,MAAU;AACnB,UAAM,IAAI,UAAU,aAAaQ,KAAO,oBAAoB;AAEhE;AASA,SAASgzD,GAAehzD,IAAMR,IAAO;AACnC,MAAI,OAAOA,MAAU;AACnB,UAAM,IAAI,UAAU,aAAaQ,KAAO,sBAAsB;AAElE;AASA,SAAS2yD,GAAe3yD,IAAMw0D,IAAQ;AACpC,MAAIA;AACF,UAAM,IAAI;MACR,kBACEx0D,KACA;IACR;AAEA;AAQA,SAAS0zD,GAAWttD,IAAM;AAGxB,MAAI,CAACkuD,GAAWluD,EAAI,KAAK,OAAOA,GAAK,QAAS;AAC5C,UAAM,IAAI,UAAU,yBAAyBA,KAAO,GAAG;AAG3D;AAUA,SAASqtD,GAAWzzD,IAAMy0D,IAAWjB,GAAU;AAC7C,MAAI,CAACA;AACH,UAAM,IAAI;MACR,MAAMxzD,KAAO,4BAA4By0D,KAAY;IAC3D;AAEA;AAMA,SAAS3B,GAAMtzD,IAAO;AACpB,SAAOk1D,GAAgBl1D,EAAK,IAAIA,KAAQ,IAAIyyD,GAAMzyD,EAAK;AACzD;AAMA,SAASk1D,GAAgBl1D,IAAO;AAC9B,SAAO,CAAA,EACLA,MACE,OAAOA,MAAU,YACjB,aAAaA,MACb,cAAcA;AAEpB;AAMA,SAAS+zD,GAAgB/zD,IAAO;AAC9B,SAAO,OAAOA,MAAU,YAAY0yD,GAAa1yD,EAAK;AACxD;AAUA,SAAS0yD,GAAa1yD,IAAO;AAC3B,SAAO,CAAA,EACLA,MACE,OAAOA,MAAU,YACjB,gBAAgBA,MAChB,gBAAgBA;AAEtB;AC/wCA,IAAMm1D,KACJ;AADF,IAGMC,KAA8B,CAAC;AAHrC,IAIMC,KAA0D;EAC9D,oBAAoB;AACtB;AANA,IAOMC,KAAe;AAPrB,IAiDMC,KAAqD;EACzD,EAAE,MAAM,cAAc,IAAI,uCAAuC;EACjE,EAAE,MAAM,sBAAsB,IAAI,uCAAuC;EACzE;IACE,MAAM;IACN,IAAI;IACJ,IAAI;EACN;EACA;IACE,MAAM;IACN,IAAI;IACJ,IAAI;EACN;EACA;IACE,MAAM;IACN,IAAI;IACJ,IAAI;EACN;EACA,EAAE,MAAM,cAAc,IAAI,uCAAuC;EACjE,EAAE,MAAM,uBAAuB,IAAI,8BAA8B;EACjE;IACE,MAAM;IACN,IAAI;EACN;EACA,EAAE,MAAM,cAAc,IAAI,oBAAoB;EAC9C;IACE,MAAM;IACN,IAAI;IACJ,IAAI;EACN;EACA,EAAE,MAAM,gBAAgB,IAAI,uBAAuB;EACnD,EAAE,MAAM,aAAa,IAAI,kCAAkC,IAAI,aAAa;EAC5E,EAAE,MAAM,UAAU,IAAI,6BAA6B,IAAI,WAAW;EAClE,EAAE,MAAM,aAAa,IAAI,oBAAoB;EAC7C,EAAE,MAAM,qBAAqB,IAAI,qBAAqB,IAAI,eAAe;EACzE,EAAE,MAAM,oBAAoB,IAAI,qBAAqB,IAAI,eAAe;AAC1E;AAEO,SAASC,GAAc3zD,IAA0C;AACtE,QAAM4zD,KAAkB5zD,GAAQ,iBAC1B6zD,IAAe7zD,GAAQ,cACvB8E,KAAW9E,GAAQ,YAAY,IAC/B+gC,IAAY/gC,GAAQ,WACpB8zD,IAAa9zD,GAAQ,YACrB+zD,IAAqB/zD,GAAQ,oBAC7Bg0D,IAAgBh0D,GAAQ,iBAAiBuzD,IACzCU,KAAgBj0D,GAAQ,iBAAiBuzD,IACzCW,IAAsBl0D,GAAQ,sBAChC,EAAE,GAAGA,GAAQ,qBAAqB,GAAGwzD,GAAA,IACrCA,IACEW,IAAWn0D,GAAQ,UACnBo0D,KAAmBp0D,GAAQ,kBAC3Bq0D,KAAer0D,GAAQ,gBAAgBs0D,IAEvCC,IAAYrB,GAAA,EACf,IAAI3J,EAAW,EACf,IAAI0K,EAAa,EACjB,IAAInH,IAAcoH,CAAmB,EACrC,IAAIF,CAAa,GAEd/tD,IAAO,IAAI2qD,GAAM;AAEnB,SAAO9rD,MAAa,aACtBmB,EAAK,QAAQnB;AAaf,aAAW0vD,KAAed;AACpB,WAAO,UAAU,eAAe,KAAK1zD,IAASw0D,EAAY,IAAI,MAE9D,eAAeA,EAAY,IAAI,cAC5BA,EAAY,KAAK,QAAQA,EAAY,EAAE,cAAc,eACtD,UAAUlB,EAAS,IAAIkB,EAAY,EAAE,oBAHzC;AAQE,QAAAC,IAAYF,EAAU,MAAMtuD,CAAI;AACtC,MAAI+mD,KAAkBuH,EAAU,QAAQE,GAAWxuD,CAAI;AAEvD,SAAI86B,MACSisB,KAAA;IACT,MAAM;IACN,SAAS;IACT,YAAY,EAAE,WAAAjsB,EAAU;IACxB,UACEisB,GAAS,SAAS,SACbA,GAAS,WACV,CAACA,EAAQ;EACjB,IAMFroC,GAAMqoC,IAAU0H,CAAS,GAElBxlB,GAAa8d,IAAU;IAAA,UAC5B3kB,GAAA;IACA,YAAAyrB;IACA,oBAAoB;IAAA,KACpBpzB,GAAA;IAAA,MACA8G,GAAA;IACA,UAAU;IACV,UAAU;EAAA,CACX;AAEQ,WAAAktB,EACP3vD,GACA/G,GACAga,GACe;AACf,QAAIjT,EAAK,SAAS,SAASiT,KAAU,OAAOha,KAAU;AACpD,aAAIm2D,IACKn8C,EAAA,SAAS,OAAOha,GAAO,CAAC,IAExBga,EAAA,SAASha,CAAK,IAAI,EAAE,MAAM,QAAQ,OAAO+G,EAAK,MAAM,GAEtD/G;AAGL,QAAA+G,EAAK,SAAS,WAAW;AAC3B,iBAAWzG,KAAO4yC;AAChB,YACE,OAAO,UAAU,eAAe,KAAKA,IAAe5yC,CAAG,KACvD,OAAO,UAAU,eAAe,KAAKyG,EAAK,YAAYzG,CAAG,GACzD;AACM,gBAAAH,IAAQ4G,EAAK,WAAWzG,CAAG,GAC3B+kB,IAAO6tB,GAAc5yC,CAAG;AAE5B,WAAA+kB,KAAS,QAETA,EAAK,SAASte,EAAK,OAAO,OAErBA,EAAA,WAAWzG,CAAG,IAAI+1D,GAAa,OAAOl2D,KAAS,EAAE,GAAGG,GAAKyG,CAAI;QACpE;AAIJ,UAAIivB,IAAS4/B,KACT,CAACA,GAAgB,SAAS7uD,EAAK,OAAO,IACtCgvD,IACEA,EAAmB,SAAShvD,EAAK,OAAO,IACxC;AAMN,UAJI,CAACivB,KAAU6/B,KAAgB,OAAO71D,KAAU,aAC9Cg2B,IAAS,CAAC6/B,EAAa9uD,GAAM/G,GAAOga,CAAM,IAGxCgc,KAAUhc,KAAU,OAAOha,KAAU;AACnC,eAAAo2D,MAAoBrvD,EAAK,WAC3BiT,EAAO,SAAS,OAAOha,GAAO,GAAG,GAAG+G,EAAK,QAAQ,IAE1CiT,EAAA,SAAS,OAAOha,GAAO,CAAC,GAE1BA;IACT;EACF;AAEJ;AAEA,SAASs2D,GAAoBn2D,IAAuB;AAC5C,QAAAw2D,KAAQx2D,GAAM,QAAQ,GAAG,GACzBy2D,IAAez2D,GAAM,QAAQ,GAAG,GAChC02D,KAAa12D,GAAM,QAAQ,GAAG,GAC9B68C,IAAQ78C,GAAM,QAAQ,GAAG;AAG7B,SAAAw2D,KAAQ,KACP3Z,IAAQ,MAAM2Z,KAAQ3Z,KACtB4Z,IAAe,MAAMD,KAAQC,KAC7BC,KAAa,MAAMF,KAAQE,MAC5BpB,GAAa,KAAKt1D,GAAM,MAAM,GAAGw2D,EAAK,CAAC,IAEhCx2D,KAGF;AACT;AC9PA,IAAM22D,KAAwB,MAAM,CAAC/tD,OAAc;AACjD4d,KAAM5d,IAAM,WAAW,CAAChC,IAAMk+C,GAAQjrC,OAAW;AAC3CjT,IAAAA,GAAK,YAAY,WACnBA,GAAK,WAAW,SAAS,QAAOiT,MAAA,OAAA,SAAAA,GAAQ,aAAY,KAAK;EAC3D,CACD;AACH;AANA,IAQMi8C,KAAgB,CAACt1B,EAAS;AARhC,IASMq1B,KAAgB,CAACc,IAAuBpuC,EAAS;AATvD,IAYaquC,KAAe;AAZ5B,IAcaC,SAAWntB,aAAAA;EACtB,CAAC,EAAE,SAAA//B,IAAS,WAAAi5B,GAAA,MACVL,GAAA;IAACizB;IAAA;MACC,eAAAM;MACA,eAAAD;MACA,YAAY3pB;MACZ,WAAAtJ;MAEC,UAAAj5B;IAAA;EAAA;AAGP;AAEAktD,GAAS,cAAc;",
  "names": ["CategoryHeading", "children", "className", "cx", "Stepper", "children", "jsx", "VOID", "PRIMITIVE", "ARRAY", "OBJECT", "DATE", "REGEXP", "MAP", "SET", "ERROR", "BIGINT", "env", "deserializer", "$", "_", "as", "out", "index", "unpair", "type", "value", "arr", "object", "key", "source", "flags", "map", "set", "name", "message", "deserialize", "serialized", "EMPTY", "toString", "keys", "typeOf", "asString", "shouldSkip", "TYPE", "serializer", "strict", "json", "pair", "entry", "entries", "serialize", "lossy", "structuredClone$2", "any", "options", "Schema$1", "property", "normal", "space", "Schema", "merge", "definitions", "normalize", "Info$1", "attribute", "Info", "powers", "boolean", "increment", "booleanish", "overloadedBoolean", "number", "spaceSeparated", "commaSeparated", "commaOrSpaceSeparated", "checks", "types", "mask", "mark", "check", "DefinedInfo", "values", "own", "create", "definition", "prop", "info", "xlink", "xml", "caseSensitiveTransform", "attributes", "caseInsensitiveTransform", "xmlns", "aria", "html", "svg", "valid", "dash", "cap", "find", "schema", "Type", "rest", "camelcase", "dashes", "kebab", "$0", "htmlBase", "svgBase", "parse", "tokens", "input", "start", "end", "token", "stringify", "settings", "search", "parseSelector", "selector", "defaultTagName", "props", "previous", "tagName", "match", "subvalue", "createH", "caseSensitive", "adjust", "createAdjustMap", "h", "properties", "children", "node", "child", "isChild", "addProperty", "addChild", "record", "list", "item", "result", "spaces", "commas", "parsePrimitive", "style", "finalResult", "nodes", "svgCaseSensitiveTagNames", "s", "location", "file", "indices", "toOffset", "toPoint", "offset", "eol", "next", "point", "from", "cr", "lf", "webNamespaces", "proto", "fromParse5", "tree", "one", "state", "reference", "patch", "quirksMode", "all", "document", "loc", "element", "results", "pos", "startTag", "position", "endTag", "content", "to", "createLocation", "tail", "opening", "closing", "data", "zwitch", "parameters", "fn", "handlers", "id", "emptyOptions", "root", "text", "comment", "doctype", "toParse5", "fragment", "parentSchema", "currentSchema", "attrs", "createProperty", "parentNode", "htmlVoidElements", "UNDEFINED_CODE_POINTS", "REPLACEMENT_CHARACTER", "CODE_POINTS", "SEQUENCES", "isSurrogate", "cp", "isSurrogatePair", "getSurrogatePairCodePoint", "cp1", "cp2", "isControlCodePoint", "isUndefinedCodePoint", "ERR", "DEFAULT_BUFFER_WATERLINE", "Preprocessor", "handler", "code", "cpOffset", "line", "col", "startCol", "startOffset", "nextCp", "chunk", "isLastChunk", "pattern", "i", "count", "TokenType", "getTokenAttr", "attrName", "htmlDecodeTree", "c", "xmlDecodeTree", "_a", "decodeMap", "fromCodePoint", "codePoint", "output", "replaceCodePoint", "CharCodes", "TO_LOWER_BIT", "BinTrieFlags", "isNumber", "isHexadecimalCharacter", "isAsciiAlphaNumeric", "isEntityInAttributeInvalidEnd", "EntityDecoderState", "DecodingMode", "EntityDecoder", "decodeTree", "emitCodePoint", "errors", "decodeMode", "str", "base", "digitCount", "startIdx", "char", "lastCp", "expectedLength", "current", "valueLength", "determineBranch", "consumed", "getDecoder", "ret", "decoder", "lastIndex", "len", "nodeIdx", "branchCount", "jumpOffset", "lo", "hi", "mid", "midVal", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "TAG_NAME_TO_ID", "getTagID", "SPECIAL_ELEMENTS", "NUMBERED_HEADERS", "State", "TokenizerMode", "isAsciiDigit", "isAsciiUpper", "isAsciiLower", "isAsciiLetter", "toAsciiLower", "isWhitespace", "isScriptDataDoubleEscapeSequenceEnd", "getErrorForNumericCharacterReference", "Tokenizer", "error", "_b", "writeCallback", "initialName", "chars", "attrNameFirstCh", "attrLocations", "ct", "nextLocation", "ch", "_cp", "$$", "length", "IMPLICIT_END_TAG_REQUIRED", "IMPLICIT_END_TAG_REQUIRED_THOROUGHLY", "SCOPING_ELEMENTS_HTML", "SCOPING_ELEMENTS_HTML_LIST", "SCOPING_ELEMENTS_HTML_BUTTON", "SCOPING_ELEMENTS_MATHML", "SCOPING_ELEMENTS_SVG", "TABLE_ROW_CONTEXT", "TABLE_BODY_CONTEXT", "TABLE_CONTEXT", "TABLE_CELLS", "OpenElementStack", "treeAdapter", "tagID", "popped", "oldElement", "newElement", "idx", "referenceElement", "newElementID", "insertionIdx", "targetIdx", "tagNames", "targetNS", "namespace", "elementIdx", "htmlScope", "tn", "exclusionId", "NOAH_ARK_CAPACITY", "EntryType", "MARKER", "FormattingElementList", "neAttrs", "candidates", "neAttrsLength", "neTagName", "neNamespaceURI", "elementAttrs", "neAttrsMap", "neAttr", "validCandidates", "candidate", "cAttr", "bookmarkIdx", "entryIndex", "markerIdx", "defaultTreeAdapter", "namespaceURI", "newNode", "referenceNode", "templateElement", "contentElement", "publicId", "systemId", "doctypeNode", "mode", "prevNode", "recipient", "recipientAttrsMap", "attr", "j", "textNode", "commentNode", "endLocation", "VALID_DOCTYPE_NAME", "VALID_SYSTEM_ID", "QUIRKS_MODE_SYSTEM_ID", "QUIRKS_MODE_PUBLIC_ID_PREFIXES", "QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES", "QUIRKS_MODE_PUBLIC_IDS", "LIMITED_QUIRKS_PUBLIC_ID_PREFIXES", "LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES", "hasPrefix", "prefixes", "prefix", "isConforming", "getDocumentMode", "MIME_TYPES", "DEFINITION_URL_ATTR", "ADJUSTED_DEFINITION_URL_ATTR", "SVG_ATTRS_ADJUSTMENT_MAP", "XML_ATTRS_ADJUSTMENT_MAP", "SVG_TAG_NAMES_ADJUSTMENT_MAP", "EXITS_FOREIGN_CONTENT", "causesExit", "startTagToken", "adjustTokenMathMLAttrs", "adjustTokenSVGAttrs", "adjustedAttrName", "adjustTokenXMLAttrs", "adjustedAttrEntry", "adjustTokenSVGTagName", "adjustedTagName", "isMathMLTextIntegrationPoint", "ns", "isHtmlIntegrationPoint", "isIntegrationPoint", "foreignNS", "HIDDEN_INPUT_TYPE", "AA_OUTER_LOOP_ITER", "AA_INNER_LOOP_ITER", "InsertionMode", "BASE_LOC", "TABLE_STRUCTURE_TAGS", "defaultParserOptions", "Parser", "fragmentContext", "scriptHandler", "parser", "opts", "TN", "documentMock", "rootElement", "beforeToken", "err", "tid", "isTop", "currentTagId", "isHTML", "currentToken", "nextTokenizerState", "docTypeNode", "parent", "tmpl", "beforeElement", "siblings", "textNodeIdx", "endLine", "endCol", "endOffset", "donor", "closingToken", "ctLoc", "endLoc", "foreignContent.isIntegrationPoint", "listLength", "endIndex", "unopenIdx", "selectIdx", "openElement", "characterInForeignContent", "tokenInInitialMode", "tokenBeforeHtml", "tokenBeforeHead", "tokenInHead", "tokenInHeadNoScript", "tokenAfterHead", "characterInBody", "characterInTable", "characterInTableText", "tokenInColumnGroup", "tokenAfterBody", "tokenAfterAfterBody", "nullCharacterInForeignContent", "appendComment", "tokenInTableText", "appendCommentToRootHtmlElement", "appendCommentToDocument", "doctypeInInitialMode", "startTagInForeignContent", "startTagBeforeHtml", "startTagBeforeHead", "startTagInHead", "startTagInHeadNoScript", "startTagAfterHead", "startTagInBody", "startTagInTable", "startTagInCaption", "startTagInColumnGroup", "startTagInTableBody", "startTagInRow", "startTagInCell", "startTagInSelect", "startTagInSelectInTable", "startTagInTemplate", "startTagAfterBody", "startTagInFrameset", "startTagAfterFrameset", "startTagAfterAfterBody", "startTagAfterAfterFrameset", "endTagInForeignContent", "endTagBeforeHtml", "endTagBeforeHead", "endTagInHead", "endTagInHeadNoScript", "endTagAfterHead", "endTagInBody", "endTagInText", "endTagInTable", "endTagInCaption", "endTagInColumnGroup", "endTagInTableBody", "endTagInRow", "endTagInCell", "endTagInSelect", "endTagInSelectInTable", "endTagInTemplate", "endTagAfterBody", "endTagInFrameset", "endTagAfterFrameset", "eofInBody", "eofInText", "eofInTemplate", "stopParsing", "unicode.CODE_POINTS", "whitespaceCharacterInBody", "whitespaceCharacterInTableText", "aaObtainFormattingElementEntry", "p", "formattingElementEntry", "genericEndTagInBody", "aaObtainFurthestBlock", "furthestBlock", "aaInnerLoop", "formattingElement", "lastElement", "nextElement", "elementEntry", "counterOverflow", "aaRecreateElementFromEntry", "aaInsertLastNodeInCommonAncestor", "commonAncestor", "aaReplaceFormattingElement", "callAdoptionAgency", "target", "htmlElement", "htmlLocation", "bodyElement", "bodyLocation", "doctype.getDocumentMode", "doctype.isConforming", "templateEndTagInHead", "errCode", "modeInBody", "htmlStartTagInBody", "bodyStartTagInBody", "framesetStartTagInBody", "addressStartTagInBody", "numberedHeaderStartTagInBody", "preStartTagInBody", "formStartTagInBody", "inTemplate", "listItemStartTagInBody", "elementId", "plaintextStartTagInBody", "buttonStartTagInBody", "aStartTagInBody", "activeElementEntry", "bStartTagInBody", "nobrStartTagInBody", "appletStartTagInBody", "tableStartTagInBody", "areaStartTagInBody", "isHiddenInput", "inputType", "inputStartTagInBody", "paramStartTagInBody", "hrStartTagInBody", "imageStartTagInBody", "textareaStartTagInBody", "xmpStartTagInBody", "iframeStartTagInBody", "rawTextStartTagInBody", "selectStartTagInBody", "optgroupStartTagInBody", "rbStartTagInBody", "rtStartTagInBody", "mathStartTagInBody", "foreignContent.adjustTokenMathMLAttrs", "foreignContent.adjustTokenXMLAttrs", "svgStartTagInBody", "foreignContent.adjustTokenSVGAttrs", "genericStartTagInBody", "bodyEndTagInBody", "htmlEndTagInBody", "addressEndTagInBody", "formEndTagInBody", "formElement", "pEndTagInBody", "liEndTagInBody", "ddEndTagInBody", "numberedHeaderEndTagInBody", "appletEndTagInBody", "brEndTagInBody", "tokenInTable", "captionStartTagInTable", "colgroupStartTagInTable", "colStartTagInTable", "tbodyStartTagInTable", "tdStartTagInTable", "tableStartTagInTable", "inputStartTagInTable", "formStartTagInTable", "savedFosterParentingState", "TABLE_VOID_ELEMENTS", "unicode.REPLACEMENT_CHARACTER", "popUntilHtmlOrIntegrationPoint", "foreignContent.causesExit", "currentNs", "foreignContent.adjustTokenSVGTagName", "pointEnd", "pointStart", "convert", "test", "ok", "castFactory", "anyFactory", "propsFactory", "typeFactory", "tests", "checkAsRecord", "nodeAsRecord", "testFunction", "looksLikeANode", "empty", "CONTINUE", "EXIT", "SKIP", "visitParents", "visitor", "reverse", "is", "step", "factory", "parents", "visit", "subresult", "grandparents", "toResult", "nodeAsParent", "testOrVisitor", "visitorOrReverse", "maybeReverse", "overload", "gfmTagfilterExpression", "knownMdxNames", "parseOptions", "raw", "documentMode", "handleRaw", "unknown", "resetTokenizer", "p5", "stitch", "Token.TokenType", "createParse5Location", "clone", "cloneWithoutChildren", "fakeRoot", "setPoint", "node_", "extra", "tag", "html.getTagID", "head", "structuredClone", "rehypeRaw", "ccount", "character", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiControl", "asciiDigit", "asciiHexDigit", "asciiPunctuation", "markdownLineEnding", "markdownLineEndingOrSpace", "markdownSpace", "unicodePunctuation", "unicodeWhitespace", "regex", "findAndReplace", "ignored", "pairs", "toPairs", "pairIndex", "grandparent", "replace", "change", "matchObject", "tupleOrList", "tuple", "toExpression", "toFunction", "escape", "inConstruct", "notInConstruct", "gfmAutolinkLiteralFromMarkdown", "transformGfmAutolinkLiterals", "enterLiteralAutolink", "enterLiteralAutolinkValue", "exitLiteralAutolink", "exitLiteralAutolinkEmail", "exitLiteralAutolinkHttp", "exitLiteralAutolinkWww", "gfmAutolinkLiteralToMarkdown", "findUrl", "findEmail", "protocol", "domain", "path", "isCorrectDomain", "parts", "splitUrl", "atext", "label", "url", "trailExec", "trail", "closingParenIndex", "openingParens", "closingParens", "email", "normalizeIdentifier", "footnoteReference", "footnoteReferencePeek", "enterFootnoteCallString", "enterFootnoteCall", "enterFootnoteDefinitionLabelString", "enterFootnoteDefinition", "exitFootnoteCallString", "exitFootnoteCall", "exitFootnoteDefinitionLabelString", "exitFootnoteDefinition", "tracker", "exit", "subexit", "gfmFootnoteFromMarkdown", "gfmFootnoteToMarkdown", "firstLineBlank", "footnoteDefinition", "mapAll", "mapExceptFirst", "blank", "constructsWithoutStrikethrough", "handleDelete", "peekDelete", "gfmStrikethroughFromMarkdown", "enterStrikethrough", "exitStrikethrough", "gfmStrikethroughToMarkdown", "defaultStringLength", "markdownTable", "table", "align", "stringLength", "alignments", "cellMatrix", "sizeMatrix", "longestCellByColumn", "mostCellsPerRow", "rowIndex", "row", "sizes", "columnIndex", "cell", "size", "toAlignment", "before", "after", "lines", "blockquote", "patternInScope", "stack", "listInScope", "none", "hardBreak", "_1", "longestStreak", "substring", "expected", "max", "formatCodeAsIndented", "checkFence", "marker", "suffix", "sequence", "checkQuote", "quote", "checkEmphasis", "encodeCharacterReference", "classifyCharacter", "encodeInfo", "outside", "inside", "outsideKind", "insideKind", "emphasis", "emphasisPeek", "between", "betweenHead", "open", "betweenTail", "close", "includeImageAlt", "includeHtml", "formatHeadingAsSetext", "literalWithBreak", "heading", "rank", "htmlPeek", "image", "imagePeek", "imageReference", "imageReferencePeek", "alt", "inlineCode", "inlineCodePeek", "expression", "formatLinkAsAutolink", "link", "linkPeek", "linkReference", "linkReferencePeek", "checkBullet", "checkBulletOther", "bullet", "bulletOther", "checkBulletOrdered", "checkRule", "bulletCurrent", "useDifferentMarker", "firstListItem", "checkListItemIndent", "listItem", "listItemIndent", "paragraph", "phrasing", "d", "checkStrong", "strong", "strongPeek", "checkRuleRepetition", "repetition", "thematicBreak", "handle", "gfmTableFromMarkdown", "enterTable", "enterCell", "enterRow", "exitCodeText", "exitTable", "$1", "gfmTableToMarkdown", "padding", "alignDelimiters", "around", "inlineCodeWithTable", "handleTable", "handleTableCell", "handleTableRow", "serializeData", "handleTableAsData", "handleTableRowAsData", "matrix", "defaultHandlers", "gfmTaskListItemFromMarkdown", "exitCheck", "exitParagraphWithTaskListItem", "gfmTaskListItemToMarkdown", "listItemWithTaskListItem", "firstParaghraph", "sibling", "checkable", "checkbox", "gfmFromMarkdown", "gfmToMarkdown", "splice", "remove", "items", "chunkStart", "hasOwnProperty", "combineExtensions", "extensions", "syntaxExtension", "extension", "hook", "left", "right", "constructs", "existing", "wwwPrefix", "tokenizeWwwPrefix", "tokenizeDomain", "tokenizePath", "tokenizeTrail", "emailDomainDotTrail", "tokenizeEmailDomainDotTrail", "wwwAutolink", "tokenizeWwwAutolink", "previousWww", "protocolAutolink", "tokenizeProtocolAutolink", "previousProtocol", "emailAutolink", "tokenizeEmailAutolink", "previousEmail", "gfmAutolinkLiteral", "effects", "nok", "self", "dot", "gfmAtext", "previousUnbalanced", "emailDomain", "emailDomainAfter", "emailDomainDot", "wwwStart", "wwwAfter", "buffer", "seen", "protocolStart", "protocolPrefixInside", "protocolSlashesInside", "afterProtocol", "protocolAfter", "wwwPrefixInside", "wwwPrefixAfter", "underscoreInLastSegment", "underscoreInLastLastSegment", "domainInside", "domainAfter", "domainAtPunctuation", "sizeOpen", "sizeClose", "pathInside", "pathAtPunctuation", "trailCharacterReferenceStart", "trailBracketAfter", "trailCharacterReferenceInside", "events", "normalizeUri", "skip", "resolveAll", "context", "called", "resolve", "factorySpace", "limit", "blankLine", "tokenizeBlankLine", "factoryWhitespace", "indent", "tokenizeIndent", "gfmFootnote", "tokenizeDefinitionStart", "tokenizeDefinitionContinuation", "gfmFootnoteDefinitionEnd", "tokenizeGfmFootnoteCall", "tokenizePotentialGfmFootnoteCall", "resolveToPotentialGfmFootnoteCall", "defined", "labelStart", "call", "string", "replacement", "callStart", "callData", "callEscape", "identifier", "labelAtMarker", "labelInside", "labelAfter", "labelEscape", "whitespaceAfter", "afterPrefix", "gfmStrikethrough", "single", "tokenizer", "tokenizeStrikethrough", "resolveAllStrikethrough", "strikethrough", "nextEvents", "insideSpan", "more", "EditMap", "add", "addImplementation", "b", "vecs", "slice", "editMap", "at", "gfmTableAlign", "inDelimiterRow", "event", "alignIndex", "gfmTable", "tokenizeTable", "resolveTable", "sizeB", "bodyRowStart", "headRowBefore", "headRowStart", "headRowBreak", "headDelimiterStart", "headRowData", "headRowEscape", "headDelimiterBefore", "headDelimiterValueBefore", "headDelimiterCellBefore", "headDelimiterNok", "headDelimiterLeftAlignmentAfter", "headDelimiterCellAfter", "headDelimiterFiller", "headDelimiterRightAlignmentAfter", "bodyRowBreak", "bodyRowData", "bodyRowEscape", "inFirstCellAwaitingPipe", "rowKind", "lastCell", "afterHeadAwaitingFirstBodyRow", "lastTableEnd", "currentTable", "currentBody", "currentCell", "flushTableEnd", "flushCell", "range", "rowEnd", "previousCell", "groupName", "valueName", "getPoint", "now", "relatedStart", "relatedEnd", "valueToken", "a", "tableBody", "exits", "related", "side", "tasklistCheck", "tokenizeTasklistCheck", "gfmTaskListItem", "spaceThenNonSpace", "gfm", "remarkGfm", "micromarkExtensions", "fromMarkdownExtensions", "toMarkdownExtensions", "ViewportAnchorContext", "createContext", "useViewportAnchor", "useContext", "useRegisterAnchorElement", "elementRef", "useRef", "observe", "unobserve", "useEffect", "useCallback", "el", "ViewportAnchorProvider", "activeAnchor", "setActiveAnchor", "useState", "observerRef", "registeredElements", "pendingElements", "elements", "handleScroll", "hasReachedTop", "hasReachedBottom", "lastItem", "lastId", "observeFns", "useMemo", "jsx", "ColorMap", "ColorMapInvert", "SidebarBadge", "color", "className", "invert", "cn", "getOwnPropertyNames", "getOwnPropertySymbols", "combineComparators", "comparatorA", "comparatorB", "createIsCircular", "areItemsEqual", "cache", "cachedA", "cachedB", "getStrictProperties", "hasOwn", "sameValueZeroEqual", "PREACT_VNODE", "PREACT_OWNER", "REACT_OWNER", "getOwnPropertyDescriptor", "areArraysEqual", "areDatesEqual", "areErrorsEqual", "areFunctionsEqual", "areMapsEqual", "matchedIndices", "aIterable", "aResult", "bResult", "bIterable", "hasMatch", "matchIndex", "aEntry", "bEntry", "areNumbersEqual", "areObjectsEqual", "isPropertyEqual", "areObjectsEqualStrict", "descriptorA", "descriptorB", "arePrimitiveWrappersEqual", "areRegExpsEqual", "areSetsEqual", "areTypedArraysEqual", "areUrlsEqual", "ARGUMENTS_TAG", "BOOLEAN_TAG", "DATE_TAG", "ERROR_TAG", "MAP_TAG", "NUMBER_TAG", "OBJECT_TAG", "REG_EXP_TAG", "SET_TAG", "STRING_TAG", "URL_TAG", "isArray", "isTypedArray", "assign", "getTag", "createEqualityComparator", "constructor", "createEqualityComparatorConfig", "circular", "createCustomConfig", "config", "areArraysEqual$1", "areMapsEqual$1", "areObjectsEqual$1", "areSetsEqual$1", "createInternalEqualityComparator", "compare", "_indexOrKeyA", "_indexOrKeyB", "_parentA", "_parentB", "createIsEqual", "comparator", "createState", "equals", "meta", "deepEqual", "createCustomEqual", "createCustomInternalComparator", "SidebarCategoryInner", "category", "onRequestClose", "isCategoryOpen", "useIsCategoryOpen", "hasInteracted", "setHasInteracted", "isCollapsible", "isCollapsed", "isDefaultOpen", "setOpen", "isActive", "useMatch", "ToggleButton", "Button", "e", "prev", "ChevronRightIcon", "icon", "styles", "navigationListItem", "jsxs", "NavLink", "joinPath", "SidebarItem", "SidebarCategory", "memo", "cva", "DATA_ANCHOR_ATTR", "useLocation", "searchParams", "useSearchParams", "isPending", "joinUrl", "Fragment", "ExternalLinkIcon", "AnchorLink", "scrollIntoViewIfNeeded", "rect", "useScrollToHash", "hash", "cleanHash", "linkHash", "useScrollToAnchor", "scrollToHash", "initialScrolled", "observer", "obs", "href", "useHref", "pathname", "handleClick", "getComponent", "level", "Heading", "registerSidebarAnchor", "Component", "ref", "SelectOnClick", "asChild", "onClick", "enabled", "Slot", "selection", "InlineCode", "selectOnClick", "MdxComponents", "Callout", "Stepper", "SyntaxHighlight", "inline", "title", "nameRe", "nameReJsx", "re", "whitespace", "thing", "normals", "hastToReact", "COMMENT_REGEX", "NEWLINE_REGEX", "WHITESPACE_REGEX", "PROPERTY_REGEX", "COLON_REGEX", "VALUE_REGEX", "SEMICOLON_REGEX", "TRIM_REGEX", "NEWLINE", "FORWARD_SLASH", "ASTERISK", "EMPTY_STRING", "TYPE_COMMENT", "TYPE_DECLARATION", "inlineStyleParser", "lineno", "column", "updatePosition", "Position", "msg", "m", "comments", "rules", "declaration", "val", "trim", "declarations", "decls", "decl", "__importDefault", "this", "mod", "cjs", "StyleToObject", "inline_style_parser_1", "require$$0", "iterator", "styleObject", "hasIterator", "utilities", "CUSTOM_PROPERTY_REGEX", "HYPHEN_REGEX", "NO_HYPHEN_REGEX", "VENDOR_PREFIX_REGEX", "MS_VENDOR_PREFIX_REGEX", "skipCamelCase", "capitalize", "trimHyphen", "camelCase", "style_to_object_1", "utilities_1", "require$$1", "StyleToJS", "stringifyPosition", "VFileMessage", "causeOrReason", "optionsOrParentOrPlace", "origin", "reason", "legacyCause", "emptyMap", "tableElements", "tableCellElement", "docs", "toJsxRuntime", "filePath", "developmentCreate", "productionCreate", "mdxExpression", "mdxJsxElement", "mdxEsm", "findComponentFromName", "createElementProps", "createChildren", "addNode", "addChildren", "assert", "crashEstree", "createJsxElementProps", "jsxDEV", "isStaticChildren", "alignValue", "objectExpression", "countsByName", "parseStyle", "transformStylesToCssCasing", "styleToJs", "cause", "allowExpression", "identifiers", "isIdentifierName", "place", "domCasing", "cssCasing", "transformStyleToCssCasing", "toDash", "urlAttributes", "decodeNamedCharacterReference", "characterReference", "push", "decodeNumericCharacterReference", "initializeContent", "contentStart", "afterContentStartConstruct", "paragraphInitial", "lineStart", "initializeDocument", "containerConstruct", "tokenizeContainer", "continued", "childFlow", "childToken", "lineStartOffset", "documentContinue", "checkNewContainers", "closeFlow", "indexBeforeExits", "indexBeforeFlow", "exitContainers", "documentContinued", "flowStart", "thereIsANewContainer", "thereIsNoNewContainer", "containerContinue", "flowContinue", "writeToChild", "eof", "stream", "attention", "tokenizeAttention", "resolveAllAttention", "group", "openingSequence", "closingSequence", "use", "movePoint", "attentionMarkers", "autolink", "tokenizeAutolink", "schemeOrEmailAtext", "emailAtext", "schemeInsideOrEmailAtext", "urlInside", "emailAtSignOrDot", "emailLabel", "emailValue", "blockQuote", "tokenizeBlockQuoteStart", "tokenizeBlockQuoteContinuation", "contStart", "contBefore", "characterEscape", "tokenizeCharacterEscape", "tokenizeCharacterReference", "numeric", "nonLazyContinuation", "tokenizeNonLazyContinuation", "codeFenced", "tokenizeCodeFenced", "closeStart", "tokenizeCloseStart", "initialPrefix", "beforeSequenceOpen", "sequenceOpen", "infoBefore", "atNonLazyBreak", "metaBefore", "contentBefore", "beforeContentChunk", "contentChunk", "startBefore", "beforeSequenceClose", "sequenceClose", "sequenceCloseAfter", "codeIndented", "tokenizeCodeIndented", "furtherStart", "tokenizeFurtherStart", "atBreak", "codeText", "tokenizeCodeText", "resolveCodeText", "tailExitIndex", "headEnterIndex", "enter", "subtokenize", "jumps", "lineIndex", "otherIndex", "otherEvent", "subevents", "subcontent", "eventIndex", "startPosition", "startPositions", "childEvents", "gaps", "breaks", "tokenizeContent", "resolveContent", "continuationConstruct", "tokenizeContinuation", "chunkInside", "contentEnd", "contentContinue", "startLookahead", "prefixed", "factoryDestination", "literalType", "literalMarkerType", "rawType", "stringType", "balance", "enclosedBefore", "enclosed", "enclosedEscape", "rawEscape", "factoryLabel", "markerType", "factoryTitle", "begin", "tokenizeDefinition", "titleBefore", "tokenizeTitleBefore", "markerAfter", "destinationBefore", "destinationAfter", "afterWhitespace", "beforeMarker", "titleAfter", "titleAfterOptionalWhitespace", "hardBreakEscape", "tokenizeHardBreakEscape", "headingAtx", "tokenizeHeadingAtx", "resolveHeadingAtx", "sequenceFurther", "htmlBlockNames", "htmlRawNames", "htmlFlow", "tokenizeHtmlFlow", "resolveToHtmlFlow", "blankLineBefore", "tokenizeBlankLineBefore", "nonLazyContinuationStart", "tokenizeNonLazyContinuationStart", "closingTag", "markerB", "declarationOpen", "tagCloseStart", "continuationDeclarationInside", "commentOpenInside", "cdataOpenInside", "continuation", "slash", "basicSelfClosing", "completeClosingTagAfter", "completeAttributeNameBefore", "completeEnd", "completeAttributeName", "completeAttributeNameAfter", "completeAttributeValueBefore", "completeAttributeValueQuoted", "completeAttributeValueUnquoted", "completeAttributeValueQuotedAfter", "completeAfter", "continuationCommentInside", "continuationRawTagOpen", "continuationClose", "continuationCdataInside", "continuationAfter", "continuationStart", "continuationStartNonLazy", "continuationBefore", "continuationRawEndTag", "htmlText", "tokenizeHtmlText", "returnState", "instruction", "tagOpen", "commentEnd", "commentClose", "lineEndingBefore", "cdata", "cdataClose", "cdataEnd", "instructionClose", "tagClose", "tagCloseBetween", "tagOpenBetween", "tagOpenAttributeName", "tagOpenAttributeNameAfter", "tagOpenAttributeValueBefore", "tagOpenAttributeValueQuoted", "tagOpenAttributeValueUnquoted", "tagOpenAttributeValueQuotedAfter", "lineEndingAfter", "lineEndingAfterPrefix", "labelEnd", "tokenizeLabelEnd", "resolveToLabelEnd", "resolveAllLabelEnd", "resourceConstruct", "tokenizeResource", "referenceFullConstruct", "tokenizeReferenceFull", "referenceCollapsedConstruct", "tokenizeReferenceCollapsed", "media", "labelEndNok", "labelEndOk", "referenceNotFull", "resourceStart", "resourceBefore", "resourceOpen", "resourceEnd", "resourceDestinationAfter", "resourceDestinationMissing", "resourceBetween", "resourceTitleAfter", "referenceFull", "referenceFullAfter", "referenceFullMissing", "referenceCollapsedStart", "referenceCollapsedOpen", "labelStartImage", "tokenizeLabelStartImage", "labelStartLink", "tokenizeLabelStartLink", "lineEnding", "tokenizeLineEnding", "tokenizeThematicBreak", "tokenizeListStart", "tokenizeListContinuation", "tokenizeListEnd", "listItemPrefixWhitespaceConstruct", "tokenizeListItemPrefixWhitespace", "indentConstruct", "initialSize", "kind", "atMarker", "onBlank", "endOfPrefix", "otherPrefix", "notBlank", "notInCurrentItem", "setextUnderline", "tokenizeSetextUnderline", "resolveToSetextUnderline", "flow", "initializeFlow", "initial", "atBlankEnding", "afterConstruct", "resolver", "createResolver", "initializeFactory", "field", "initializeText", "resolveAllLineSuffixes", "notText", "extraResolver", "resolveAllText", "chunks", "bufferIndex", "tabs", "createTokenizer", "initialize", "columnStart", "resolveAllConstructs", "consume", "constructFactory", "onsuccessfulconstruct", "onsuccessfulcheck", "sliceStream", "sliceSerialize", "defineSkip", "write", "main", "addResult", "expandTabs", "serializeChunks", "sliceChunks", "_index", "_bufferIndex", "accountForPotentialSkip", "chunkIndex", "go", "fields", "construct", "onreturn", "bogusState", "listOfConstructs", "constructIndex", "currentConstruct", "handleListOfConstructs", "handleMapOfConstructs", "def", "handleConstruct", "store", "startPoint", "startPrevious", "startCurrentConstruct", "startEventsIndex", "startStack", "restore", "startIndex", "startBufferIndex", "endBufferIndex", "view", "atTab", "contentInitial", "flowInitial", "resolveText", "disable", "defaultConstructs", "creator", "postprocess", "preprocess", "atCarriageReturn", "preprocessor", "encoding", "endPosition", "characterEscapeOrReference", "decodeString", "decode", "$2", "hex", "fromMarkdown", "compiler", "opener", "onenterdata", "codeFlow", "onenterlistitemvalue", "onenterlistordered", "onenterreference", "closer", "onexitatxheadingsequence", "onexitautolinkemail", "onexitautolinkprotocol", "onexitdata", "onexitcharacterreferencemarker", "onexitcharacterreferencevalue", "onexitcodefenced", "onexitcodefencedfence", "onexitcodefencedfenceinfo", "onexitcodefencedfencemeta", "onexitcodeindented", "onexitcodetext", "onexitdefinitiondestinationstring", "onexitdefinitionlabelstring", "onexitdefinitiontitlestring", "onexithardbreak", "onexithtmlflow", "onexithtmltext", "onexitimage", "onexitlabel", "onexitlabeltext", "onexitlineending", "onexitlink", "onexitreferencestring", "onexitresourcedestinationstring", "onexitresourcetitlestring", "onexitresource", "onexitsetextheading", "onexitsetextheadinglinesequence", "onexitsetextheadingtext", "configure", "compile", "resume", "listStack", "prepareList", "defaultOnError", "containerBalance", "listSpread", "firstBlankLineIndex", "tailIndex", "tailEvent", "and", "errorHandler", "onExitError", "ancestor", "depth", "referenceType", "combined", "remarkParse", "doc", "clobberPrefix", "safeId", "counter", "reuseCounter", "sup", "revert", "subtype", "contents", "loose", "listLoose", "listItemLoose", "spread", "rows", "firstRow", "tableContent", "body", "tableRow", "cellIndex", "cells", "tableCell", "tab", "trimLines", "last", "trimLine", "ignore", "structuredClone$1", "defaultFootnoteBackContent", "rereferenceIndex", "defaultFootnoteBackLabel", "referenceIndex", "footer", "footnoteBackContent", "footnoteBackLabel", "footnoteLabel", "footnoteLabelTagName", "footnoteLabelProperties", "listItems", "backReferences", "counts", "tailTail", "definitionById", "footnoteById", "footnoteCounts", "applyData", "wrap", "shallow", "defaultUnknownHandler", "trimMarkdownSpaceStart", "hName", "hChildren", "hProperties", "toHast", "foot", "remarkRehype", "destination", "hastTree", "bail", "toStr", "defineProperty", "gOPD", "isPlainObject", "obj", "hasOwnConstructor", "hasIsPrototypeOf", "setProperty", "getProperty", "extend", "src", "copy", "copyIsArray", "deep", "prototype", "trough", "fns", "pipeline", "run", "middlewareIndex", "callback", "middelware", "middleware", "wrapped", "fnExpectsCallback", "done", "exception", "then", "minpath", "basename", "dirname", "extname", "join", "assertPath", "seenNonSlash", "firstNonSlashEnd", "extnameIndex", "unmatchedSlash", "startPart", "startDot", "preDotState", "segments", "joined", "absolute", "normalizeString", "allowAboveRoot", "lastSegmentLength", "lastSlash", "dots", "lastSlashIndex", "minproc", "cwd", "isUrl", "fileUrlOrPath", "urlToPath", "getPathFromURLPosix", "third", "order", "VFile", "isUint8Array", "assertNonEmpty", "assertPart", "stem", "part", "CallableInstance", "apply", "Processor", "attacher", "assertUnfrozen", "transformer", "realFile", "vfile", "assertParser", "assertCompiler", "executor", "reject", "parseTree", "realDone", "compileTree", "compileResult", "looksLikeAValue", "complete", "assertDone", "assertNode", "transformers", "outputTree", "resultingTree", "attachers", "addPlugin", "addList", "addPreset", "plugin", "plugins", "primary", "currentPrimary", "isPlainObj", "unified", "frozen", "asyncName", "looksLikeAVFile", "changelog", "emptyPlugins", "emptyRemarkRehypeOptions", "safeProtocol", "deprecations", "ReactMarkdown", "allowedElements", "allowElement", "components", "disallowedElements", "rehypePlugins", "remarkPlugins", "remarkRehypeOptions", "skipHtml", "unwrapDisallowed", "urlTransform", "defaultUrlTransform", "processor", "deprecation", "mdastTree", "transform", "colon", "questionMark", "numberSign", "rehypeCodeBlockPlugin", "ProseClasses", "Markdown"]
}
