import {
  H,
  N
} from "./chunk-DCQBGROG.js";
import {
  Anchor2 as Anchor,
  Arrow,
  Check,
  Content,
  Copy,
  DismissableLayer,
  Info,
  Lightbulb,
  LoaderCircle,
  Portal,
  Presence,
  Primitive,
  Root2,
  ShieldAlert,
  Slot,
  TriangleAlert,
  We,
  X,
  composeEventHandlers,
  composeRefs,
  createContext2,
  createContextScope,
  createPopperScope,
  createSlot,
  dispatchDiscreteCustomEvent,
  ne,
  useCallbackRef,
  useComposedRefs,
  useControllableState,
  useId,
  useLayoutEffect2
} from "./chunk-VSGZQHBI.js";
import {
  require_jsx_runtime
} from "./chunk-LYJUZW3I.js";
import {
  ae
} from "./chunk-T7IJB7TU.js";
import {
  require_react
} from "./chunk-TJE776R7.js";
import {
  __toESM
} from "./chunk-WOOG5QLI.js";

// node_modules/zudoku/lib/hook-pPrHCB6G.js
var j = __toESM(require_react(), 1);
var import_react = __toESM(require_react(), 1);
var $e = (t5) => {
  throw TypeError(t5);
};
var be = (t5, e2, s2) => e2.has(t5) || $e("Cannot " + s2);
var n = (t5, e2, s2) => (be(t5, e2, "read from private field"), s2 ? s2.call(t5) : e2.get(t5));
var b = (t5, e2, s2) => e2.has(t5) ? $e("Cannot add the same private member more than once") : e2 instanceof WeakSet ? e2.add(t5) : e2.set(t5, s2);
var f = (t5, e2, s2, r2) => (be(t5, e2, "write to private field"), r2 ? r2.call(t5, s2) : e2.set(t5, s2), s2);
var w = (t5, e2, s2) => (be(t5, e2, "access private method"), s2);
var Qe = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Set(), this.subscribe = this.subscribe.bind(this);
  }
  subscribe(t5) {
    return this.listeners.add(t5), this.onSubscribe(), () => {
      this.listeners.delete(t5), this.onUnsubscribe();
    };
  }
  hasListeners() {
    return this.listeners.size > 0;
  }
  onSubscribe() {
  }
  onUnsubscribe() {
  }
};
var J = typeof window > "u" || "Deno" in globalThis;
function Se() {
}
function gs(t5, e2) {
  return typeof t5 == "function" ? t5(e2) : t5;
}
function we(t5) {
  return typeof t5 == "number" && t5 >= 0 && t5 !== 1 / 0;
}
function ot(t5, e2) {
  return Math.max(t5 + (e2 || 0) - Date.now(), 0);
}
function pe(t5, e2) {
  return typeof t5 == "function" ? t5(e2) : t5;
}
function k(t5, e2) {
  return typeof t5 == "function" ? t5(e2) : t5;
}
function Ss(t5, e2) {
  const {
    type: s2 = "all",
    exact: r2,
    fetchStatus: i2,
    predicate: a2,
    queryKey: o3,
    stale: u3
  } = t5;
  if (o3) {
    if (r2) {
      if (e2.queryHash !== Ft(o3, e2.options))
        return false;
    } else if (!Ne(e2.queryKey, o3))
      return false;
  }
  if (s2 !== "all") {
    const l5 = e2.isActive();
    if (s2 === "active" && !l5 || s2 === "inactive" && l5)
      return false;
  }
  return !(typeof u3 == "boolean" && e2.isStale() !== u3 || i2 && i2 !== e2.state.fetchStatus || a2 && !a2(e2));
}
function ws(t5, e2) {
  const { exact: s2, status: r2, predicate: i2, mutationKey: a2 } = t5;
  if (a2) {
    if (!e2.options.mutationKey)
      return false;
    if (s2) {
      if (Re(e2.options.mutationKey) !== Re(a2))
        return false;
    } else if (!Ne(e2.options.mutationKey, a2))
      return false;
  }
  return !(r2 && e2.state.status !== r2 || i2 && !i2(e2));
}
function Ft(t5, e2) {
  return ((e2 == null ? void 0 : e2.queryKeyHashFn) || Re)(t5);
}
function Re(t5) {
  return JSON.stringify(
    t5,
    (e2, s2) => Oe(s2) ? Object.keys(s2).sort().reduce((r2, i2) => (r2[i2] = s2[i2], r2), {}) : s2
  );
}
function Ne(t5, e2) {
  return t5 === e2 ? true : typeof t5 != typeof e2 ? false : t5 && e2 && typeof t5 == "object" && typeof e2 == "object" ? Object.keys(e2).every((s2) => Ne(t5[s2], e2[s2])) : false;
}
function Ee(t5, e2) {
  if (t5 === e2)
    return t5;
  const s2 = Ve(t5) && Ve(e2);
  if (s2 || Oe(t5) && Oe(e2)) {
    const r2 = s2 ? t5 : Object.keys(t5), i2 = r2.length, a2 = s2 ? e2 : Object.keys(e2), o3 = a2.length, u3 = s2 ? [] : {};
    let l5 = 0;
    for (let y4 = 0; y4 < o3; y4++) {
      const g2 = s2 ? y4 : a2[y4];
      (!s2 && r2.includes(g2) || s2) && t5[g2] === void 0 && e2[g2] === void 0 ? (u3[g2] = void 0, l5++) : (u3[g2] = Ee(t5[g2], e2[g2]), u3[g2] === t5[g2] && t5[g2] !== void 0 && l5++);
    }
    return i2 === o3 && l5 === i2 ? t5 : u3;
  }
  return e2;
}
function Ce(t5, e2) {
  if (!e2 || Object.keys(t5).length !== Object.keys(e2).length)
    return false;
  for (const s2 in t5)
    if (t5[s2] !== e2[s2])
      return false;
  return true;
}
function Ve(t5) {
  return Array.isArray(t5) && t5.length === Object.keys(t5).length;
}
function Oe(t5) {
  if (!Je(t5))
    return false;
  const e2 = t5.constructor;
  if (e2 === void 0)
    return true;
  const s2 = e2.prototype;
  return !(!Je(s2) || !s2.hasOwnProperty("isPrototypeOf") || Object.getPrototypeOf(t5) !== Object.prototype);
}
function Je(t5) {
  return Object.prototype.toString.call(t5) === "[object Object]";
}
function It(t5) {
  return new Promise((e2) => {
    setTimeout(e2, t5);
  });
}
function Fe(t5, e2, s2) {
  if (typeof s2.structuralSharing == "function")
    return s2.structuralSharing(t5, e2);
  if (s2.structuralSharing !== false) {
    if (true)
      try {
        return Ee(t5, e2);
      } catch (r2) {
        throw console.error(
          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${s2.queryHash}]: ${r2}`
        ), r2;
      }
    return Ee(t5, e2);
  }
  return e2;
}
function Es(t5, e2, s2 = 0) {
  const r2 = [...t5, e2];
  return s2 && r2.length > s2 ? r2.slice(1) : r2;
}
function Cs(t5, e2, s2 = 0) {
  const r2 = [e2, ...t5];
  return s2 && r2.length > s2 ? r2.slice(0, -1) : r2;
}
var ve = Symbol();
function Pt(t5, e2) {
  return t5.queryFn === ve && console.error(
    `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${t5.queryHash}'`
  ), !t5.queryFn && (e2 != null && e2.initialPromise) ? () => e2.initialPromise : !t5.queryFn || t5.queryFn === ve ? () => Promise.reject(new Error(`Missing queryFn: '${t5.queryHash}'`)) : t5.queryFn;
}
var H2;
var Q;
var Y;
var st;
var Tt = (st = class extends Qe {
  constructor() {
    super();
    b(this, H2);
    b(this, Q);
    b(this, Y);
    f(this, Y, (e2) => {
      if (!J && window.addEventListener) {
        const s2 = () => e2();
        return window.addEventListener("visibilitychange", s2, false), () => {
          window.removeEventListener("visibilitychange", s2);
        };
      }
    });
  }
  onSubscribe() {
    n(this, Q) || this.setEventListener(n(this, Y));
  }
  onUnsubscribe() {
    var e2;
    this.hasListeners() || ((e2 = n(this, Q)) == null || e2.call(this), f(this, Q, void 0));
  }
  setEventListener(e2) {
    var s2;
    f(this, Y, e2), (s2 = n(this, Q)) == null || s2.call(this), f(this, Q, e2((r2) => {
      typeof r2 == "boolean" ? this.setFocused(r2) : this.onFocus();
    }));
  }
  setFocused(e2) {
    n(this, H2) !== e2 && (f(this, H2, e2), this.onFocus());
  }
  onFocus() {
    const e2 = this.isFocused();
    this.listeners.forEach((s2) => {
      s2(e2);
    });
  }
  isFocused() {
    var e2;
    return typeof n(this, H2) == "boolean" ? n(this, H2) : ((e2 = globalThis.document) == null ? void 0 : e2.visibilityState) !== "hidden";
  }
}, H2 = /* @__PURE__ */ new WeakMap(), Q = /* @__PURE__ */ new WeakMap(), Y = /* @__PURE__ */ new WeakMap(), st);
var ut = new Tt();
var X2;
var N2;
var ee;
var rt;
var Dt = (rt = class extends Qe {
  constructor() {
    super();
    b(this, X2, true);
    b(this, N2);
    b(this, ee);
    f(this, ee, (e2) => {
      if (!J && window.addEventListener) {
        const s2 = () => e2(true), r2 = () => e2(false);
        return window.addEventListener("online", s2, false), window.addEventListener("offline", r2, false), () => {
          window.removeEventListener("online", s2), window.removeEventListener("offline", r2);
        };
      }
    });
  }
  onSubscribe() {
    n(this, N2) || this.setEventListener(n(this, ee));
  }
  onUnsubscribe() {
    var e2;
    this.hasListeners() || ((e2 = n(this, N2)) == null || e2.call(this), f(this, N2, void 0));
  }
  setEventListener(e2) {
    var s2;
    f(this, ee, e2), (s2 = n(this, N2)) == null || s2.call(this), f(this, N2, e2(this.setOnline.bind(this)));
  }
  setOnline(e2) {
    n(this, X2) !== e2 && (f(this, X2, e2), this.listeners.forEach((r2) => {
      r2(e2);
    }));
  }
  isOnline() {
    return n(this, X2);
  }
}, X2 = /* @__PURE__ */ new WeakMap(), N2 = /* @__PURE__ */ new WeakMap(), ee = /* @__PURE__ */ new WeakMap(), rt);
var ct = new Dt();
function Ie() {
  let t5, e2;
  const s2 = new Promise((i2, a2) => {
    t5 = i2, e2 = a2;
  });
  s2.status = "pending", s2.catch(() => {
  });
  function r2(i2) {
    Object.assign(s2, i2), delete s2.resolve, delete s2.reject;
  }
  return s2.resolve = (i2) => {
    r2({
      status: "fulfilled",
      value: i2
    }), t5(i2);
  }, s2.reject = (i2) => {
    r2({
      status: "rejected",
      reason: i2
    }), e2(i2);
  }, s2;
}
function jt(t5) {
  return Math.min(1e3 * 2 ** t5, 3e4);
}
function ht(t5) {
  return (t5 ?? "online") === "online" ? ct.isOnline() : true;
}
var lt = class extends Error {
  constructor(t5) {
    super("CancelledError"), this.revert = t5 == null ? void 0 : t5.revert, this.silent = t5 == null ? void 0 : t5.silent;
  }
};
function ge(t5) {
  return t5 instanceof lt;
}
function At(t5) {
  let e2 = false, s2 = 0, r2 = false, i2;
  const a2 = Ie(), o3 = (h2) => {
    var v;
    r2 || (p4(new lt(h2)), (v = t5.abort) == null || v.call(t5));
  }, u3 = () => {
    e2 = true;
  }, l5 = () => {
    e2 = false;
  }, y4 = () => ut.isFocused() && (t5.networkMode === "always" || ct.isOnline()) && t5.canRun(), g2 = () => ht(t5.networkMode) && t5.canRun(), c6 = (h2) => {
    var v;
    r2 || (r2 = true, (v = t5.onSuccess) == null || v.call(t5, h2), i2 == null || i2(), a2.resolve(h2));
  }, p4 = (h2) => {
    var v;
    r2 || (r2 = true, (v = t5.onError) == null || v.call(t5, h2), i2 == null || i2(), a2.reject(h2));
  }, d3 = () => new Promise((h2) => {
    var v;
    i2 = (C) => {
      (r2 || y4()) && h2(C);
    }, (v = t5.onPause) == null || v.call(t5);
  }).then(() => {
    var h2;
    i2 = void 0, r2 || (h2 = t5.onContinue) == null || h2.call(t5);
  }), E = () => {
    if (r2)
      return;
    let h2;
    const v = s2 === 0 ? t5.initialPromise : void 0;
    try {
      h2 = v ?? t5.fn();
    } catch (C) {
      h2 = Promise.reject(C);
    }
    Promise.resolve(h2).then(c6).catch((C) => {
      var oe2;
      if (r2)
        return;
      const R3 = t5.retry ?? (J ? 0 : 3), O2 = t5.retryDelay ?? jt, q2 = typeof O2 == "function" ? O2(s2, C) : O2, Z2 = R3 === true || typeof R3 == "number" && s2 < R3 || typeof R3 == "function" && R3(s2, C);
      if (e2 || !Z2) {
        p4(C);
        return;
      }
      s2++, (oe2 = t5.onFail) == null || oe2.call(t5, s2, C), It(q2).then(() => y4() ? void 0 : d3()).then(() => {
        e2 ? p4(C) : E();
      });
    });
  };
  return {
    promise: a2,
    cancel: o3,
    continue: () => (i2 == null || i2(), a2),
    cancelRetry: u3,
    continueRetry: l5,
    canStart: g2,
    start: () => (g2() ? E() : d3().then(E), a2)
  };
}
var kt = (t5) => setTimeout(t5, 0);
function xt() {
  let t5 = [], e2 = 0, s2 = (u3) => {
    u3();
  }, r2 = (u3) => {
    u3();
  }, i2 = kt;
  const a2 = (u3) => {
    e2 ? t5.push(u3) : i2(() => {
      s2(u3);
    });
  }, o3 = () => {
    const u3 = t5;
    t5 = [], u3.length && i2(() => {
      r2(() => {
        u3.forEach((l5) => {
          s2(l5);
        });
      });
    });
  };
  return {
    batch: (u3) => {
      let l5;
      e2++;
      try {
        l5 = u3();
      } finally {
        e2--, e2 || o3();
      }
      return l5;
    },
    /**
     * All calls to the wrapped function will be batched.
     */
    batchCalls: (u3) => (...l5) => {
      a2(() => {
        u3(...l5);
      });
    },
    schedule: a2,
    /**
     * Use this method to set a custom notify function.
     * This can be used to for example wrap notifications with `React.act` while running tests.
     */
    setNotifyFunction: (u3) => {
      s2 = u3;
    },
    /**
     * Use this method to set a custom function to batch notifications together into a single tick.
     * By default React Query will use the batch function provided by ReactDOM or React Native.
     */
    setBatchNotifyFunction: (u3) => {
      r2 = u3;
    },
    setScheduler: (u3) => {
      i2 = u3;
    }
  };
}
var Le = xt();
var K;
var nt;
var qt = (nt = class {
  constructor() {
    b(this, K);
  }
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout(), we(this.gcTime) && f(this, K, setTimeout(() => {
      this.optionalRemove();
    }, this.gcTime));
  }
  updateGcTime(t5) {
    this.gcTime = Math.max(
      this.gcTime || 0,
      t5 ?? (J ? 1 / 0 : 5 * 60 * 1e3)
    );
  }
  clearGcTimeout() {
    n(this, K) && (clearTimeout(n(this, K)), f(this, K, void 0));
  }
}, K = /* @__PURE__ */ new WeakMap(), nt);
var te;
var se;
var D;
var B;
var F;
var he;
var $;
var A;
var U;
var it;
var Os = (it = class extends qt {
  constructor(e2) {
    super();
    b(this, A);
    b(this, te);
    b(this, se);
    b(this, D);
    b(this, B);
    b(this, F);
    b(this, he);
    b(this, $);
    f(this, $, false), f(this, he, e2.defaultOptions), this.setOptions(e2.options), this.observers = [], f(this, B, e2.client), f(this, D, n(this, B).getQueryCache()), this.queryKey = e2.queryKey, this.queryHash = e2.queryHash, f(this, te, Ut(this.options)), this.state = e2.state ?? n(this, te), this.scheduleGc();
  }
  get meta() {
    return this.options.meta;
  }
  get promise() {
    var e2;
    return (e2 = n(this, F)) == null ? void 0 : e2.promise;
  }
  setOptions(e2) {
    this.options = { ...n(this, he), ...e2 }, this.updateGcTime(this.options.gcTime);
  }
  optionalRemove() {
    !this.observers.length && this.state.fetchStatus === "idle" && n(this, D).remove(this);
  }
  setData(e2, s2) {
    const r2 = Fe(this.state.data, e2, this.options);
    return w(this, A, U).call(this, {
      data: r2,
      type: "success",
      dataUpdatedAt: s2 == null ? void 0 : s2.updatedAt,
      manual: s2 == null ? void 0 : s2.manual
    }), r2;
  }
  setState(e2, s2) {
    w(this, A, U).call(this, { type: "setState", state: e2, setStateOptions: s2 });
  }
  cancel(e2) {
    var r2, i2;
    const s2 = (r2 = n(this, F)) == null ? void 0 : r2.promise;
    return (i2 = n(this, F)) == null || i2.cancel(e2), s2 ? s2.then(Se).catch(Se) : Promise.resolve();
  }
  destroy() {
    super.destroy(), this.cancel({ silent: true });
  }
  reset() {
    this.destroy(), this.setState(n(this, te));
  }
  isActive() {
    return this.observers.some(
      (e2) => k(e2.options.enabled, this) !== false
    );
  }
  isDisabled() {
    return this.getObserversCount() > 0 ? !this.isActive() : this.options.queryFn === ve || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;
  }
  isStale() {
    return this.state.isInvalidated ? true : this.getObserversCount() > 0 ? this.observers.some(
      (e2) => e2.getCurrentResult().isStale
    ) : this.state.data === void 0;
  }
  isStaleByTime(e2 = 0) {
    return this.state.isInvalidated || this.state.data === void 0 || !ot(this.state.dataUpdatedAt, e2);
  }
  onFocus() {
    var s2;
    const e2 = this.observers.find((r2) => r2.shouldFetchOnWindowFocus());
    e2 == null || e2.refetch({ cancelRefetch: false }), (s2 = n(this, F)) == null || s2.continue();
  }
  onOnline() {
    var s2;
    const e2 = this.observers.find((r2) => r2.shouldFetchOnReconnect());
    e2 == null || e2.refetch({ cancelRefetch: false }), (s2 = n(this, F)) == null || s2.continue();
  }
  addObserver(e2) {
    this.observers.includes(e2) || (this.observers.push(e2), this.clearGcTimeout(), n(this, D).notify({ type: "observerAdded", query: this, observer: e2 }));
  }
  removeObserver(e2) {
    this.observers.includes(e2) && (this.observers = this.observers.filter((s2) => s2 !== e2), this.observers.length || (n(this, F) && (n(this, $) ? n(this, F).cancel({ revert: true }) : n(this, F).cancelRetry()), this.scheduleGc()), n(this, D).notify({ type: "observerRemoved", query: this, observer: e2 }));
  }
  getObserversCount() {
    return this.observers.length;
  }
  invalidate() {
    this.state.isInvalidated || w(this, A, U).call(this, { type: "invalidate" });
  }
  fetch(e2, s2) {
    var l5, y4, g2;
    if (this.state.fetchStatus !== "idle") {
      if (this.state.data !== void 0 && (s2 != null && s2.cancelRefetch))
        this.cancel({ silent: true });
      else if (n(this, F))
        return n(this, F).continueRetry(), n(this, F).promise;
    }
    if (e2 && this.setOptions(e2), !this.options.queryFn) {
      const c6 = this.observers.find((p4) => p4.options.queryFn);
      c6 && this.setOptions(c6.options);
    }
    Array.isArray(this.options.queryKey) || console.error(
      "As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']"
    );
    const r2 = new AbortController(), i2 = (c6) => {
      Object.defineProperty(c6, "signal", {
        enumerable: true,
        get: () => (f(this, $, true), r2.signal)
      });
    }, a2 = () => {
      const c6 = Pt(this.options, s2), p4 = {
        client: n(this, B),
        queryKey: this.queryKey,
        meta: this.meta
      };
      return i2(p4), f(this, $, false), this.options.persister ? this.options.persister(
        c6,
        p4,
        this
      ) : c6(p4);
    }, o3 = {
      fetchOptions: s2,
      options: this.options,
      queryKey: this.queryKey,
      client: n(this, B),
      state: this.state,
      fetchFn: a2
    };
    i2(o3), (l5 = this.options.behavior) == null || l5.onFetch(
      o3,
      this
    ), f(this, se, this.state), (this.state.fetchStatus === "idle" || this.state.fetchMeta !== ((y4 = o3.fetchOptions) == null ? void 0 : y4.meta)) && w(this, A, U).call(this, { type: "fetch", meta: (g2 = o3.fetchOptions) == null ? void 0 : g2.meta });
    const u3 = (c6) => {
      var p4, d3, E, h2;
      ge(c6) && c6.silent || w(this, A, U).call(this, {
        type: "error",
        error: c6
      }), ge(c6) || ((d3 = (p4 = n(this, D).config).onError) == null || d3.call(
        p4,
        c6,
        this
      ), (h2 = (E = n(this, D).config).onSettled) == null || h2.call(
        E,
        this.state.data,
        c6,
        this
      )), this.scheduleGc();
    };
    return f(this, F, At({
      initialPromise: s2 == null ? void 0 : s2.initialPromise,
      fn: o3.fetchFn,
      abort: r2.abort.bind(r2),
      onSuccess: (c6) => {
        var p4, d3, E, h2;
        if (c6 === void 0) {
          console.error(
            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`
          ), u3(new Error(`${this.queryHash} data is undefined`));
          return;
        }
        try {
          this.setData(c6);
        } catch (v) {
          u3(v);
          return;
        }
        (d3 = (p4 = n(this, D).config).onSuccess) == null || d3.call(p4, c6, this), (h2 = (E = n(this, D).config).onSettled) == null || h2.call(
          E,
          c6,
          this.state.error,
          this
        ), this.scheduleGc();
      },
      onError: u3,
      onFail: (c6, p4) => {
        w(this, A, U).call(this, { type: "failed", failureCount: c6, error: p4 });
      },
      onPause: () => {
        w(this, A, U).call(this, { type: "pause" });
      },
      onContinue: () => {
        w(this, A, U).call(this, { type: "continue" });
      },
      retry: o3.options.retry,
      retryDelay: o3.options.retryDelay,
      networkMode: o3.options.networkMode,
      canRun: () => true
    })), n(this, F).start();
  }
}, te = /* @__PURE__ */ new WeakMap(), se = /* @__PURE__ */ new WeakMap(), D = /* @__PURE__ */ new WeakMap(), B = /* @__PURE__ */ new WeakMap(), F = /* @__PURE__ */ new WeakMap(), he = /* @__PURE__ */ new WeakMap(), $ = /* @__PURE__ */ new WeakMap(), A = /* @__PURE__ */ new WeakSet(), U = function(e2) {
  const s2 = (r2) => {
    switch (e2.type) {
      case "failed":
        return {
          ...r2,
          fetchFailureCount: e2.failureCount,
          fetchFailureReason: e2.error
        };
      case "pause":
        return {
          ...r2,
          fetchStatus: "paused"
        };
      case "continue":
        return {
          ...r2,
          fetchStatus: "fetching"
        };
      case "fetch":
        return {
          ...r2,
          ...dt(r2.data, this.options),
          fetchMeta: e2.meta ?? null
        };
      case "success":
        return {
          ...r2,
          data: e2.data,
          dataUpdateCount: r2.dataUpdateCount + 1,
          dataUpdatedAt: e2.dataUpdatedAt ?? Date.now(),
          error: null,
          isInvalidated: false,
          status: "success",
          ...!e2.manual && {
            fetchStatus: "idle",
            fetchFailureCount: 0,
            fetchFailureReason: null
          }
        };
      case "error":
        const i2 = e2.error;
        return ge(i2) && i2.revert && n(this, se) ? { ...n(this, se), fetchStatus: "idle" } : {
          ...r2,
          error: i2,
          errorUpdateCount: r2.errorUpdateCount + 1,
          errorUpdatedAt: Date.now(),
          fetchFailureCount: r2.fetchFailureCount + 1,
          fetchFailureReason: i2,
          fetchStatus: "idle",
          status: "error"
        };
      case "invalidate":
        return {
          ...r2,
          isInvalidated: true
        };
      case "setState":
        return {
          ...r2,
          ...e2.state
        };
    }
  };
  this.state = s2(this.state), Le.batch(() => {
    this.observers.forEach((r2) => {
      r2.onQueryUpdate();
    }), n(this, D).notify({ query: this, type: "updated", action: e2 });
  });
}, it);
function dt(t5, e2) {
  return {
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchStatus: ht(e2.networkMode) ? "fetching" : "paused",
    ...t5 === void 0 && {
      error: null,
      status: "pending"
    }
  };
}
function Ut(t5) {
  const e2 = typeof t5.initialData == "function" ? t5.initialData() : t5.initialData, s2 = e2 !== void 0, r2 = s2 ? typeof t5.initialDataUpdatedAt == "function" ? t5.initialDataUpdatedAt() : t5.initialDataUpdatedAt : 0;
  return {
    data: e2,
    dataUpdateCount: 0,
    dataUpdatedAt: s2 ? r2 ?? Date.now() : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: false,
    status: s2 ? "success" : "pending",
    fetchStatus: "idle"
  };
}
var P;
var m;
var le;
var I;
var G;
var re;
var L;
var M;
var de;
var ne2;
var ie;
var z;
var V;
var _;
var ae2;
var S;
var ue;
var Pe;
var Te;
var De;
var je;
var Ae;
var ke;
var xe;
var yt;
var at;
var ft = (at = class extends Qe {
  constructor(e2, s2) {
    super();
    b(this, S);
    b(this, P);
    b(this, m);
    b(this, le);
    b(this, I);
    b(this, G);
    b(this, re);
    b(this, L);
    b(this, M);
    b(this, de);
    b(this, ne2);
    b(this, ie);
    b(this, z);
    b(this, V);
    b(this, _);
    b(this, ae2, /* @__PURE__ */ new Set());
    this.options = s2, f(this, P, e2), f(this, M, null), f(this, L, Ie()), this.options.experimental_prefetchInRender || n(this, L).reject(
      new Error("experimental_prefetchInRender feature flag is not enabled")
    ), this.bindMethods(), this.setOptions(s2);
  }
  bindMethods() {
    this.refetch = this.refetch.bind(this);
  }
  onSubscribe() {
    this.listeners.size === 1 && (n(this, m).addObserver(this), Ze(n(this, m), this.options) ? w(this, S, ue).call(this) : this.updateResult(), w(this, S, je).call(this));
  }
  onUnsubscribe() {
    this.hasListeners() || this.destroy();
  }
  shouldFetchOnReconnect() {
    return qe(
      n(this, m),
      this.options,
      this.options.refetchOnReconnect
    );
  }
  shouldFetchOnWindowFocus() {
    return qe(
      n(this, m),
      this.options,
      this.options.refetchOnWindowFocus
    );
  }
  destroy() {
    this.listeners = /* @__PURE__ */ new Set(), w(this, S, Ae).call(this), w(this, S, ke).call(this), n(this, m).removeObserver(this);
  }
  setOptions(e2) {
    const s2 = this.options, r2 = n(this, m);
    if (this.options = n(this, P).defaultQueryOptions(e2), this.options.enabled !== void 0 && typeof this.options.enabled != "boolean" && typeof this.options.enabled != "function" && typeof k(this.options.enabled, n(this, m)) != "boolean")
      throw new Error(
        "Expected enabled to be a boolean or a callback that returns a boolean"
      );
    w(this, S, xe).call(this), n(this, m).setOptions(this.options), s2._defaulted && !Ce(this.options, s2) && n(this, P).getQueryCache().notify({
      type: "observerOptionsUpdated",
      query: n(this, m),
      observer: this
    });
    const i2 = this.hasListeners();
    i2 && We2(
      n(this, m),
      r2,
      this.options,
      s2
    ) && w(this, S, ue).call(this), this.updateResult(), i2 && (n(this, m) !== r2 || k(this.options.enabled, n(this, m)) !== k(s2.enabled, n(this, m)) || pe(this.options.staleTime, n(this, m)) !== pe(s2.staleTime, n(this, m))) && w(this, S, Pe).call(this);
    const a2 = w(this, S, Te).call(this);
    i2 && (n(this, m) !== r2 || k(this.options.enabled, n(this, m)) !== k(s2.enabled, n(this, m)) || a2 !== n(this, _)) && w(this, S, De).call(this, a2);
  }
  getOptimisticResult(e2) {
    const s2 = n(this, P).getQueryCache().build(n(this, P), e2), r2 = this.createResult(s2, e2);
    return Nt(this, r2) && (f(this, I, r2), f(this, re, this.options), f(this, G, n(this, m).state)), r2;
  }
  getCurrentResult() {
    return n(this, I);
  }
  trackResult(e2, s2) {
    const r2 = {};
    return Object.keys(e2).forEach((i2) => {
      Object.defineProperty(r2, i2, {
        configurable: false,
        enumerable: true,
        get: () => (this.trackProp(i2), s2 == null || s2(i2), e2[i2])
      });
    }), r2;
  }
  trackProp(e2) {
    n(this, ae2).add(e2);
  }
  getCurrentQuery() {
    return n(this, m);
  }
  refetch({ ...e2 } = {}) {
    return this.fetch({
      ...e2
    });
  }
  fetchOptimistic(e2) {
    const s2 = n(this, P).defaultQueryOptions(e2), r2 = n(this, P).getQueryCache().build(n(this, P), s2);
    return r2.fetch().then(() => this.createResult(r2, s2));
  }
  fetch(e2) {
    return w(this, S, ue).call(this, {
      ...e2,
      cancelRefetch: e2.cancelRefetch ?? true
    }).then(() => (this.updateResult(), n(this, I)));
  }
  createResult(e2, s2) {
    var Be2;
    const r2 = n(this, m), i2 = this.options, a2 = n(this, I), o3 = n(this, G), u3 = n(this, re), y4 = e2 !== r2 ? e2.state : n(this, le), { state: g2 } = e2;
    let c6 = { ...g2 }, p4 = false, d3;
    if (s2._optimisticResults) {
      const T = this.hasListeners(), fe2 = !T && Ze(e2, s2), W2 = T && We2(e2, r2, s2, i2);
      (fe2 || W2) && (c6 = {
        ...c6,
        ...dt(g2.data, e2.options)
      }), s2._optimisticResults === "isRestoring" && (c6.fetchStatus = "idle");
    }
    let { error: E, errorUpdatedAt: h2, status: v } = c6;
    d3 = c6.data;
    let C = false;
    if (s2.placeholderData !== void 0 && d3 === void 0 && v === "pending") {
      let T;
      a2 != null && a2.isPlaceholderData && s2.placeholderData === (u3 == null ? void 0 : u3.placeholderData) ? (T = a2.data, C = true) : T = typeof s2.placeholderData == "function" ? s2.placeholderData(
        (Be2 = n(this, ie)) == null ? void 0 : Be2.state.data,
        n(this, ie)
      ) : s2.placeholderData, T !== void 0 && (v = "success", d3 = Fe(
        a2 == null ? void 0 : a2.data,
        T,
        s2
      ), p4 = true);
    }
    if (s2.select && d3 !== void 0 && !C)
      if (a2 && d3 === (o3 == null ? void 0 : o3.data) && s2.select === n(this, de))
        d3 = n(this, ne2);
      else
        try {
          f(this, de, s2.select), d3 = s2.select(d3), d3 = Fe(a2 == null ? void 0 : a2.data, d3, s2), f(this, ne2, d3), f(this, M, null);
        } catch (T) {
          f(this, M, T);
        }
    n(this, M) && (E = n(this, M), d3 = n(this, ne2), h2 = Date.now(), v = "error");
    const R3 = c6.fetchStatus === "fetching", O2 = v === "pending", q2 = v === "error", Z2 = O2 && R3, oe2 = d3 !== void 0, x2 = {
      status: v,
      fetchStatus: c6.fetchStatus,
      isPending: O2,
      isSuccess: v === "success",
      isError: q2,
      isInitialLoading: Z2,
      isLoading: Z2,
      data: d3,
      dataUpdatedAt: c6.dataUpdatedAt,
      error: E,
      errorUpdatedAt: h2,
      failureCount: c6.fetchFailureCount,
      failureReason: c6.fetchFailureReason,
      errorUpdateCount: c6.errorUpdateCount,
      isFetched: c6.dataUpdateCount > 0 || c6.errorUpdateCount > 0,
      isFetchedAfterMount: c6.dataUpdateCount > y4.dataUpdateCount || c6.errorUpdateCount > y4.errorUpdateCount,
      isFetching: R3,
      isRefetching: R3 && !O2,
      isLoadingError: q2 && !oe2,
      isPaused: c6.fetchStatus === "paused",
      isPlaceholderData: p4,
      isRefetchError: q2 && oe2,
      isStale: Me(e2, s2),
      refetch: this.refetch,
      promise: n(this, L)
    };
    if (this.options.experimental_prefetchInRender) {
      const T = (ye2) => {
        x2.status === "error" ? ye2.reject(x2.error) : x2.data !== void 0 && ye2.resolve(x2.data);
      }, fe2 = () => {
        const ye2 = f(this, L, x2.promise = Ie());
        T(ye2);
      }, W2 = n(this, L);
      switch (W2.status) {
        case "pending":
          e2.queryHash === r2.queryHash && T(W2);
          break;
        case "fulfilled":
          (x2.status === "error" || x2.data !== W2.value) && fe2();
          break;
        case "rejected":
          (x2.status !== "error" || x2.error !== W2.reason) && fe2();
          break;
      }
    }
    return x2;
  }
  updateResult() {
    const e2 = n(this, I), s2 = this.createResult(n(this, m), this.options);
    if (f(this, G, n(this, m).state), f(this, re, this.options), n(this, G).data !== void 0 && f(this, ie, n(this, m)), Ce(s2, e2))
      return;
    f(this, I, s2);
    const r2 = () => {
      if (!e2)
        return true;
      const { notifyOnChangeProps: i2 } = this.options, a2 = typeof i2 == "function" ? i2() : i2;
      if (a2 === "all" || !a2 && !n(this, ae2).size)
        return true;
      const o3 = new Set(
        a2 ?? n(this, ae2)
      );
      return this.options.throwOnError && o3.add("error"), Object.keys(n(this, I)).some((u3) => {
        const l5 = u3;
        return n(this, I)[l5] !== e2[l5] && o3.has(l5);
      });
    };
    w(this, S, yt).call(this, { listeners: r2() });
  }
  onQueryUpdate() {
    this.updateResult(), this.hasListeners() && w(this, S, je).call(this);
  }
}, P = /* @__PURE__ */ new WeakMap(), m = /* @__PURE__ */ new WeakMap(), le = /* @__PURE__ */ new WeakMap(), I = /* @__PURE__ */ new WeakMap(), G = /* @__PURE__ */ new WeakMap(), re = /* @__PURE__ */ new WeakMap(), L = /* @__PURE__ */ new WeakMap(), M = /* @__PURE__ */ new WeakMap(), de = /* @__PURE__ */ new WeakMap(), ne2 = /* @__PURE__ */ new WeakMap(), ie = /* @__PURE__ */ new WeakMap(), z = /* @__PURE__ */ new WeakMap(), V = /* @__PURE__ */ new WeakMap(), _ = /* @__PURE__ */ new WeakMap(), ae2 = /* @__PURE__ */ new WeakMap(), S = /* @__PURE__ */ new WeakSet(), ue = function(e2) {
  w(this, S, xe).call(this);
  let s2 = n(this, m).fetch(
    this.options,
    e2
  );
  return e2 != null && e2.throwOnError || (s2 = s2.catch(Se)), s2;
}, Pe = function() {
  w(this, S, Ae).call(this);
  const e2 = pe(
    this.options.staleTime,
    n(this, m)
  );
  if (J || n(this, I).isStale || !we(e2))
    return;
  const r2 = ot(n(this, I).dataUpdatedAt, e2) + 1;
  f(this, z, setTimeout(() => {
    n(this, I).isStale || this.updateResult();
  }, r2));
}, Te = function() {
  return (typeof this.options.refetchInterval == "function" ? this.options.refetchInterval(n(this, m)) : this.options.refetchInterval) ?? false;
}, De = function(e2) {
  w(this, S, ke).call(this), f(this, _, e2), !(J || k(this.options.enabled, n(this, m)) === false || !we(n(this, _)) || n(this, _) === 0) && f(this, V, setInterval(() => {
    (this.options.refetchIntervalInBackground || ut.isFocused()) && w(this, S, ue).call(this);
  }, n(this, _)));
}, je = function() {
  w(this, S, Pe).call(this), w(this, S, De).call(this, w(this, S, Te).call(this));
}, Ae = function() {
  n(this, z) && (clearTimeout(n(this, z)), f(this, z, void 0));
}, ke = function() {
  n(this, V) && (clearInterval(n(this, V)), f(this, V, void 0));
}, xe = function() {
  const e2 = n(this, P).getQueryCache().build(n(this, P), this.options);
  if (e2 === n(this, m))
    return;
  const s2 = n(this, m);
  f(this, m, e2), f(this, le, e2.state), this.hasListeners() && (s2 == null || s2.removeObserver(this), e2.addObserver(this));
}, yt = function(e2) {
  Le.batch(() => {
    e2.listeners && this.listeners.forEach((s2) => {
      s2(n(this, I));
    }), n(this, P).getQueryCache().notify({
      query: n(this, m),
      type: "observerResultsUpdated"
    });
  });
}, at);
function Qt(t5, e2) {
  return k(e2.enabled, t5) !== false && t5.state.data === void 0 && !(t5.state.status === "error" && e2.retryOnMount === false);
}
function Ze(t5, e2) {
  return Qt(t5, e2) || t5.state.data !== void 0 && qe(t5, e2, e2.refetchOnMount);
}
function qe(t5, e2, s2) {
  if (k(e2.enabled, t5) !== false) {
    const r2 = typeof s2 == "function" ? s2(t5) : s2;
    return r2 === "always" || r2 !== false && Me(t5, e2);
  }
  return false;
}
function We2(t5, e2, s2, r2) {
  return (t5 !== e2 || k(r2.enabled, t5) === false) && (!s2.suspense || t5.state.status !== "error") && Me(t5, s2);
}
function Me(t5, e2) {
  return k(e2.enabled, t5) !== false && t5.isStaleByTime(pe(e2.staleTime, t5));
}
function Nt(t5, e2) {
  return !Ce(t5.getCurrentResult(), e2);
}
var pt = j.createContext(
  void 0
);
var vt = (t5) => {
  const e2 = j.useContext(pt);
  if (t5)
    return t5;
  if (!e2)
    throw new Error("No QueryClient set, use QueryClientProvider to set one");
  return e2;
};
var Fs = ({
  client: t5,
  children: e2
}) => (j.useEffect(() => (t5.mount(), () => {
  t5.unmount();
}), [t5]), ae.jsx(pt.Provider, { value: t5, children: e2 }));
var mt = j.createContext(false);
var Lt = () => j.useContext(mt);
mt.Provider;
function Mt() {
  let t5 = false;
  return {
    clearReset: () => {
      t5 = false;
    },
    reset: () => {
      t5 = true;
    },
    isReset: () => t5
  };
}
var _t = j.createContext(Mt());
var Ht = () => j.useContext(_t);
function Kt(t5, e2) {
  return typeof t5 == "function" ? t5(...e2) : !!t5;
}
function Ye() {
}
var Bt = (t5, e2) => {
  (t5.suspense || t5.throwOnError || t5.experimental_prefetchInRender) && (e2.isReset() || (t5.retryOnMount = false));
};
var $t = (t5) => {
  j.useEffect(() => {
    t5.clearReset();
  }, [t5]);
};
var Gt = ({
  result: t5,
  errorResetBoundary: e2,
  throwOnError: s2,
  query: r2,
  suspense: i2
}) => t5.isError && !e2.isReset() && !t5.isFetching && r2 && (i2 && t5.data === void 0 || Kt(s2, [t5.error, r2]));
var zt = (t5, e2) => e2.state.data === void 0;
var Vt = (t5) => {
  const e2 = t5.staleTime;
  t5.suspense && (t5.staleTime = typeof e2 == "function" ? (...s2) => Math.max(e2(...s2), 1e3) : Math.max(e2 ?? 1e3, 1e3), typeof t5.gcTime == "number" && (t5.gcTime = Math.max(t5.gcTime, 1e3)));
};
var Jt = (t5, e2) => t5.isLoading && t5.isFetching && !e2;
var Zt = (t5, e2) => (t5 == null ? void 0 : t5.suspense) && e2.isPending;
var Xe = (t5, e2, s2) => e2.fetchOptimistic(t5).catch(() => {
  s2.clearReset();
});
function bt(t5, e2, s2) {
  var c6, p4, d3, E, h2;
  if (typeof t5 != "object" || Array.isArray(t5))
    throw new Error(
      'Bad argument type. Starting with v5, only the "Object" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'
    );
  const r2 = vt(s2), i2 = Lt(), a2 = Ht(), o3 = r2.defaultQueryOptions(t5);
  (p4 = (c6 = r2.getDefaultOptions().queries) == null ? void 0 : c6._experimental_beforeQuery) == null || p4.call(
    c6,
    o3
  ), o3.queryFn || console.error(
    `[${o3.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`
  ), o3._optimisticResults = i2 ? "isRestoring" : "optimistic", Vt(o3), Bt(o3, a2), $t(a2);
  const u3 = !r2.getQueryCache().get(o3.queryHash), [l5] = j.useState(
    () => new e2(
      r2,
      o3
    )
  ), y4 = l5.getOptimisticResult(o3), g2 = !i2 && t5.subscribed !== false;
  if (j.useSyncExternalStore(
    j.useCallback(
      (v) => {
        const C = g2 ? l5.subscribe(Le.batchCalls(v)) : Ye;
        return l5.updateResult(), C;
      },
      [l5, g2]
    ),
    () => l5.getCurrentResult(),
    () => l5.getCurrentResult()
  ), j.useEffect(() => {
    l5.setOptions(o3);
  }, [o3, l5]), Zt(o3, y4))
    throw Xe(o3, l5, a2);
  if (Gt({
    result: y4,
    errorResetBoundary: a2,
    throwOnError: o3.throwOnError,
    query: r2.getQueryCache().get(o3.queryHash),
    suspense: o3.suspense
  }))
    throw y4.error;
  if ((E = (d3 = r2.getDefaultOptions().queries) == null ? void 0 : d3._experimental_afterQuery) == null || E.call(
    d3,
    o3,
    y4
  ), o3.experimental_prefetchInRender && !J && Jt(y4, i2)) {
    const v = u3 ? (
      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted
      Xe(o3, l5, a2)
    ) : (
      // subscribe to the "cache promise" so that we can finalize the currentThenable once data comes in
      (h2 = r2.getQueryCache().get(o3.queryHash)) == null ? void 0 : h2.promise
    );
    v == null || v.catch(Ye).finally(() => {
      l5.updateResult();
    });
  }
  return o3.notifyOnChangeProps ? y4 : l5.trackResult(y4);
}
function Wt(t5, e2) {
  return bt(t5, ft, e2);
}
function Yt(t5, e2) {
  return t5.queryFn === ve && console.error("skipToken is not allowed for useSuspenseQuery"), bt(
    {
      ...t5,
      enabled: true,
      suspense: true,
      throwOnError: zt,
      placeholderData: void 0
    },
    ft,
    e2
  );
}
var Xt = /^(\w+:\/\/[^/?]+)?([^?]*)(\?.*)?$/;
var es = (t5) => t5.filter(
  (e2) => e2 != null && e2 !== false && (typeof e2 == "string" || typeof e2 == "number")
).map((e2) => `${e2}`).filter((e2) => e2);
var ts = (t5) => {
  const e2 = t5.join("/"), [, s2 = "", r2 = ""] = e2.match(Xt) ?? [];
  return {
    prefix: s2,
    pathname: r2.split("/").filter((i2) => i2 !== "")
  };
};
var ss = (t5) => {
  const { prefix: e2, pathname: s2 } = t5;
  let r2 = e2;
  return s2.length > 0 ? (r2 ? r2 += "/" : r2 = "/", r2 += s2.join("/")) : r2 || (r2 = "/"), r2;
};
var et = (...t5) => {
  const e2 = es(t5), s2 = ts(e2);
  return ss(s2);
};
var gt = Object.freeze({
  API_IDENTITIES: ["api-identities"]
});
var Is = () => {
  const t5 = vt();
  return {
    invalidateCache: async (e2) => {
      await t5.invalidateQueries({ queryKey: gt[e2] });
    }
  };
};
var rs = "no-dehydrate";
var ce = (...t5) => {
  const e2 = t5.filter((s2) => !!s2).map((s2) => s2.replace(/(^\/+|\/+$)/g, "")).join("/").replace(/(^\/+|\/+$)/g, "");
  return e2 ? `/${e2}` : "/";
};
var _e = (t5, e2) => {
  for (const s2 of t5) {
    const r2 = He(s2, e2);
    if (r2 !== void 0) return r2;
  }
};
var He = (t5, e2, s2 = []) => {
  const r2 = e2(t5, s2);
  if (r2 !== void 0) return r2;
  if (t5.type === "category")
    for (const i2 of t5.items) {
      const a2 = He(i2, e2, [
        ...s2,
        t5
      ]);
      if (a2 !== void 0) return a2;
    }
};
var Ps = () => {
  const t5 = N(), s2 = St().sidebar;
  return _e(s2, (r2) => {
    if (r2.type === "doc" && ce(r2.id) === t5.pathname)
      return r2;
  });
};
var Ts = (t5) => {
  const e2 = N();
  return He(t5, (s2) => {
    if (s2.type === "category" && s2.link && ce(s2.link.id) === e2.pathname || s2.type === "doc" && ce(s2.id) === e2.pathname)
      return true;
  });
};
var Ds = () => {
  const t5 = N().pathname, s2 = St().sidebar;
  let r2, i2, a2 = false;
  return _e(s2, (o3) => {
    const u3 = o3.type === "doc" ? ce(o3.id) : o3.type === "category" && o3.link ? ce(o3.link.id) : void 0;
    if (u3) {
      if (a2)
        return i2 = { label: o3.label, id: u3 }, true;
      t5 === u3 ? a2 = true : r2 = { label: o3.label, id: u3 };
    }
  }), { prev: r2, next: i2 };
};
var ns = (0, import_react.createContext)(
  void 0
);
var Ke = () => {
  const t5 = (0, import_react.useContext)(ns);
  if (!t5)
    throw new Error("useZudoku must be used within a ZudokuProvider.");
  return t5;
};
var js = () => {
  const { getApiIdentities: t5 } = Ke();
  return Wt({
    queryFn: t5,
    queryKey: gt.API_IDENTITIES
  });
};
var St = () => {
  var c6;
  const { getPluginSidebar: t5, sidebars: e2, topNavigation: s2, options: r2 } = Ke(), i2 = N(), a2 = fs(), o3 = (c6 = r2.protectedRoutes) == null ? void 0 : c6.some(
    (p4) => H(p4, i2.pathname)
  );
  let u3 = Object.entries(e2).find(([, p4]) => _e(p4, (d3) => {
    if ((d3.type === "doc" ? et(d3.id) : d3.type === "category" && d3.link ? et(d3.link.id) : void 0) === i2.pathname)
      return d3;
  }));
  const l5 = s2.find((p4) => p4.id === (u3 == null ? void 0 : u3[0])) ?? s2.find((p4) => H(p4.id, i2.pathname));
  l5 && !u3 && l5.id in e2 && (u3 = ["", e2[l5.id]]);
  const { data: y4 } = Yt({
    queryFn: () => t5(i2.pathname),
    // We just want to suspend here and don't store in SSR dehydrated state
    queryKey: ["plugin-sidebar", rs, i2.pathname]
  });
  return {
    sidebar: a2.isAuthEnabled && !a2.isAuthenticated && o3 ? [] : [...u3 ? u3[1] : [], ...y4],
    topNavItem: l5
  };
};
var tt = (t5) => {
  let e2;
  const s2 = /* @__PURE__ */ new Set(), r2 = (y4, g2) => {
    const c6 = typeof y4 == "function" ? y4(e2) : y4;
    if (!Object.is(c6, e2)) {
      const p4 = e2;
      e2 = g2 ?? (typeof c6 != "object" || c6 === null) ? c6 : Object.assign({}, e2, c6), s2.forEach((d3) => d3(e2, p4));
    }
  }, i2 = () => e2, u3 = { setState: r2, getState: i2, getInitialState: () => l5, subscribe: (y4) => (s2.add(y4), () => s2.delete(y4)) }, l5 = e2 = t5(r2, i2, u3);
  return u3;
};
var is = (t5) => t5 ? tt(t5) : tt;
var as = (t5) => t5;
function os(t5, e2 = as) {
  const s2 = import_react.default.useSyncExternalStore(
    t5.subscribe,
    () => e2(t5.getState()),
    () => e2(t5.getInitialState())
  );
  return import_react.default.useDebugValue(s2), s2;
}
var us = (t5) => {
  const e2 = is(t5), s2 = (r2) => os(e2, r2);
  return Object.assign(s2, e2), s2;
};
var cs = (t5) => us;
function wt(t5, e2) {
  let s2;
  try {
    s2 = t5();
  } catch {
    return;
  }
  return {
    getItem: (i2) => {
      var a2;
      const o3 = (l5) => l5 === null ? null : JSON.parse(l5, void 0), u3 = (a2 = s2.getItem(i2)) != null ? a2 : null;
      return u3 instanceof Promise ? u3.then(o3) : o3(u3);
    },
    setItem: (i2, a2) => s2.setItem(
      i2,
      JSON.stringify(a2, void 0)
    ),
    removeItem: (i2) => s2.removeItem(i2)
  };
}
var Ue = (t5) => (e2) => {
  try {
    const s2 = t5(e2);
    return s2 instanceof Promise ? s2 : {
      then(r2) {
        return Ue(r2)(s2);
      },
      catch(r2) {
        return this;
      }
    };
  } catch (s2) {
    return {
      then(r2) {
        return this;
      },
      catch(r2) {
        return Ue(r2)(s2);
      }
    };
  }
};
var hs = (t5, e2) => (s2, r2, i2) => {
  let a2 = {
    storage: wt(() => localStorage),
    partialize: (h2) => h2,
    version: 0,
    merge: (h2, v) => ({
      ...v,
      ...h2
    }),
    ...e2
  }, o3 = false;
  const u3 = /* @__PURE__ */ new Set(), l5 = /* @__PURE__ */ new Set();
  let y4 = a2.storage;
  if (!y4)
    return t5(
      (...h2) => {
        console.warn(
          `[zustand persist middleware] Unable to update item '${a2.name}', the given storage is currently unavailable.`
        ), s2(...h2);
      },
      r2,
      i2
    );
  const g2 = () => {
    const h2 = a2.partialize({ ...r2() });
    return y4.setItem(a2.name, {
      state: h2,
      version: a2.version
    });
  }, c6 = i2.setState;
  i2.setState = (h2, v) => {
    c6(h2, v), g2();
  };
  const p4 = t5(
    (...h2) => {
      s2(...h2), g2();
    },
    r2,
    i2
  );
  i2.getInitialState = () => p4;
  let d3;
  const E = () => {
    var h2, v;
    if (!y4) return;
    o3 = false, u3.forEach((R3) => {
      var O2;
      return R3((O2 = r2()) != null ? O2 : p4);
    });
    const C = ((v = a2.onRehydrateStorage) == null ? void 0 : v.call(a2, (h2 = r2()) != null ? h2 : p4)) || void 0;
    return Ue(y4.getItem.bind(y4))(a2.name).then((R3) => {
      if (R3)
        if (typeof R3.version == "number" && R3.version !== a2.version) {
          if (a2.migrate) {
            const O2 = a2.migrate(
              R3.state,
              R3.version
            );
            return O2 instanceof Promise ? O2.then((q2) => [true, q2]) : [true, O2];
          }
          console.error(
            "State loaded from storage couldn't be migrated since no migrate function was provided"
          );
        } else
          return [false, R3.state];
      return [false, void 0];
    }).then((R3) => {
      var O2;
      const [q2, Z2] = R3;
      if (d3 = a2.merge(
        Z2,
        (O2 = r2()) != null ? O2 : p4
      ), s2(d3, true), q2)
        return g2();
    }).then(() => {
      C == null || C(d3, void 0), d3 = r2(), o3 = true, l5.forEach((R3) => R3(d3));
    }).catch((R3) => {
      C == null || C(void 0, R3);
    });
  };
  return i2.persist = {
    setOptions: (h2) => {
      a2 = {
        ...a2,
        ...h2
      }, h2.storage && (y4 = h2.storage);
    },
    clearStorage: () => {
      y4 == null || y4.removeItem(a2.name);
    },
    getOptions: () => a2,
    rehydrate: () => E(),
    hasHydrated: () => o3,
    onHydrate: (h2) => (u3.add(h2), () => {
      u3.delete(h2);
    }),
    onFinishHydration: (h2) => (l5.add(h2), () => {
      l5.delete(h2);
    })
  }, a2.skipHydration || E(), d3 || p4;
};
var ls = hs;
var ds = (t5) => {
  const e2 = (s2) => {
    s2.key === t5.persist.getOptions().name && s2.newValue && t5.persist.rehydrate();
  };
  return window.addEventListener("storage", e2), () => {
    window.removeEventListener("storage", e2);
  };
};
var Rt = cs()(
  ls(
    (t5) => ({
      isAuthenticated: false,
      isPending: true,
      profile: null,
      providerData: null
    }),
    {
      merge: (t5, e2) => ({
        ...e2,
        isPending: false,
        ...typeof t5 == "object" ? t5 : {}
      }),
      name: "auth-state",
      storage: wt(() => localStorage)
    }
  )
);
typeof window < "u" && ds(Rt);
var fs = () => {
  const { authentication: t5 } = Ke(), e2 = Rt(), s2 = typeof t5 < "u";
  return {
    isAuthEnabled: s2,
    ...e2,
    login: async () => {
      if (!s2)
        throw new Error("Authentication is not enabled.");
      await t5.signIn({
        redirectTo: window.location.href
      });
    },
    logout: async () => {
      if (!s2)
        throw new Error("Authentication is not enabled.");
      await t5.signOut(), window.location.href = "/";
    },
    signup: async () => {
      if (!s2)
        throw new Error("Authentication is not enabled.");
      await t5.signUp({
        redirectTo: window.location.href
      });
    }
  };
};

// node_modules/zudoku/lib/index-CPNSgwSb.js
var m2 = (e2) => typeof e2 == "boolean" ? `${e2}` : e2 === 0 ? "0" : e2;
var y = ne;
var j2 = (e2, a2) => (n5) => {
  var u3;
  if ((a2 == null ? void 0 : a2.variants) == null) return y(e2, n5 == null ? void 0 : n5.class, n5 == null ? void 0 : n5.className);
  const { variants: r2, defaultVariants: s2 } = a2, V4 = Object.keys(r2).map((t5) => {
    const l5 = n5 == null ? void 0 : n5[t5], d3 = s2 == null ? void 0 : s2[t5];
    if (l5 === null) return null;
    const i2 = m2(l5) || m2(d3);
    return r2[t5][i2];
  }), v = n5 && Object.entries(n5).reduce((t5, l5) => {
    let [d3, i2] = l5;
    return i2 === void 0 || (t5[d3] = i2), t5;
  }, {}), N5 = a2 == null || (u3 = a2.compoundVariants) === null || u3 === void 0 ? void 0 : u3.reduce((t5, l5) => {
    let { class: d3, className: i2, ...f6 } = l5;
    return Object.entries(f6).every((C) => {
      let [c6, o3] = C;
      return Array.isArray(o3) ? o3.includes({
        ...s2,
        ...v
      }[c6]) : {
        ...s2,
        ...v
      }[c6] === o3;
    }) ? [
      ...t5,
      d3,
      i2
    ] : t5;
  }, []);
  return y(e2, V4, N5, n5 == null ? void 0 : n5.class, n5 == null ? void 0 : n5.className);
};

// node_modules/zudoku/lib/ui/Button.js
var c = __toESM(require_react(), 1);
var f2 = j2(
  "not-prose inline-flex shrink-0 items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive: "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline: "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary: "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
        expand: "flex gap-1.5 border bg-transparent rounded-xl text-muted-foreground hover:text-foreground"
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        xl: "h-14 rounded-lg px-10 text-lg",
        icon: "h-9 w-9"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
);
var l = c.forwardRef(
  ({ className: e2, variant: r2, size: t5, asChild: o3 = false, ...n5 }, s2) => {
    const a2 = o3 ? Slot : "button";
    return ae.jsx(
      a2,
      {
        className: We(f2({ variant: r2, size: t5, className: e2 })),
        ref: s2,
        ...n5
      }
    );
  }
);
l.displayName = "Button";

// node_modules/zudoku/lib/index-DwT-v3zK.js
var t = __toESM(require_react(), 1);
var N3 = (e2, s2, a2, d3, m4, c6, u3, h2) => {
  let l5 = document.documentElement, b2 = ["light", "dark"];
  function f6(o3) {
    (Array.isArray(e2) ? e2 : [e2]).forEach((y4) => {
      let S2 = y4 === "class", k2 = S2 && c6 ? m4.map((v) => c6[v] || v) : m4;
      S2 ? (l5.classList.remove(...k2), l5.classList.add(o3)) : l5.setAttribute(y4, o3);
    }), C(o3);
  }
  function C(o3) {
    h2 && b2.includes(o3) && (l5.style.colorScheme = o3);
  }
  function i2() {
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  }
  if (d3) f6(d3);
  else try {
    let o3 = localStorage.getItem(s2) || a2, y4 = u3 && o3 === "system" ? i2() : o3;
    f6(y4);
  } catch {
  }
};
var M2 = ["light", "dark"];
var O = "(prefers-color-scheme: dark)";
var V2 = typeof window > "u";
var L2 = t.createContext(void 0);
var W = { setTheme: (e2) => {
}, themes: [] };
var $2 = () => {
  var e2;
  return (e2 = t.useContext(L2)) != null ? e2 : W;
};
var j3 = (e2) => t.useContext(L2) ? t.createElement(t.Fragment, null, e2.children) : t.createElement(z2, { ...e2 });
var _2 = ["light", "dark"];
var z2 = ({ forcedTheme: e2, disableTransitionOnChange: s2 = false, enableSystem: a2 = true, enableColorScheme: d3 = true, storageKey: m4 = "theme", themes: c6 = _2, defaultTheme: u3 = a2 ? "system" : "light", attribute: h2 = "data-theme", value: l5, children: b2, nonce: f6, scriptProps: C }) => {
  let [i2, o3] = t.useState(() => I2(m4, u3)), [y4, S2] = t.useState(() => I2(m4)), k2 = l5 ? Object.values(l5) : c6, v = t.useCallback((r2) => {
    let n5 = r2;
    if (!n5) return;
    r2 === "system" && a2 && (n5 = P2());
    let g2 = l5 ? l5[n5] : n5, A2 = s2 ? R(f6) : null, w2 = document.documentElement, x2 = (p4) => {
      p4 === "class" ? (w2.classList.remove(...k2), g2 && w2.classList.add(g2)) : p4.startsWith("data-") && (g2 ? w2.setAttribute(p4, g2) : w2.removeAttribute(p4));
    };
    if (Array.isArray(h2) ? h2.forEach(x2) : x2(h2), d3) {
      let p4 = M2.includes(u3) ? u3 : null, K3 = M2.includes(n5) ? n5 : p4;
      w2.style.colorScheme = K3;
    }
    A2 == null || A2();
  }, [f6]), T = t.useCallback((r2) => {
    let n5 = typeof r2 == "function" ? r2(i2) : r2;
    o3(n5);
    try {
      localStorage.setItem(m4, n5);
    } catch {
    }
  }, [i2]), E = t.useCallback((r2) => {
    let n5 = P2(r2);
    S2(n5), i2 === "system" && a2 && !e2 && v("system");
  }, [i2, e2]);
  t.useEffect(() => {
    let r2 = window.matchMedia(O);
    return r2.addListener(E), E(r2), () => r2.removeListener(E);
  }, [E]), t.useEffect(() => {
    let r2 = (n5) => {
      n5.key === m4 && (n5.newValue ? o3(n5.newValue) : T(u3));
    };
    return window.addEventListener("storage", r2), () => window.removeEventListener("storage", r2);
  }, [T]), t.useEffect(() => {
    v(e2 ?? i2);
  }, [e2, i2]);
  let H4 = t.useMemo(() => ({ theme: i2, setTheme: T, forcedTheme: e2, resolvedTheme: i2 === "system" ? y4 : i2, themes: a2 ? [...c6, "system"] : c6, systemTheme: a2 ? y4 : void 0 }), [i2, T, e2, y4, a2, c6]);
  return t.createElement(L2.Provider, { value: H4 }, t.createElement(J2, { forcedTheme: e2, storageKey: m4, attribute: h2, enableSystem: a2, enableColorScheme: d3, defaultTheme: u3, value: l5, themes: c6, nonce: f6, scriptProps: C }), b2);
};
var J2 = t.memo(({ forcedTheme: e2, storageKey: s2, attribute: a2, enableSystem: d3, enableColorScheme: m4, defaultTheme: c6, value: u3, themes: h2, nonce: l5, scriptProps: b2 }) => {
  let f6 = JSON.stringify([a2, s2, c6, e2, h2, u3, d3, m4]).slice(1, -1);
  return t.createElement("script", { ...b2, suppressHydrationWarning: true, nonce: typeof window > "u" ? l5 : "", dangerouslySetInnerHTML: { __html: `(${N3.toString()})(${f6})` } });
});
var I2 = (e2, s2) => {
  if (V2) return;
  let a2;
  try {
    a2 = localStorage.getItem(e2) || void 0;
  } catch {
  }
  return a2 || s2;
};
var R = (e2) => {
  let s2 = document.createElement("style");
  return e2 && s2.setAttribute("nonce", e2), s2.appendChild(document.createTextNode("*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")), document.head.appendChild(s2), () => {
    window.getComputedStyle(document.body), setTimeout(() => {
      document.head.removeChild(s2);
    }, 1);
  };
};
var P2 = (e2) => (e2 || (e2 = window.matchMedia(O)), e2.matches ? "dark" : "light");

// node_modules/zudoku/lib/Button-BBNrKpQd.js
var c2 = __toESM(require_react(), 1);
var f3 = j2(
  "not-prose inline-flex shrink-0 items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive: "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline: "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary: "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
        expand: "flex gap-1.5 border bg-transparent rounded-xl text-muted-foreground hover:text-foreground"
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        xl: "h-14 rounded-lg px-10 text-lg",
        icon: "h-9 w-9"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
);
var l2 = c2.forwardRef(
  ({ className: e2, variant: r2, size: t5, asChild: o3 = false, ...n5 }, s2) => {
    const a2 = o3 ? Slot : "button";
    return ae.jsx(
      a2,
      {
        className: We(f3({ variant: r2, size: t5, className: e2 })),
        ref: s2,
        ...n5
      }
    );
  }
);
l2.displayName = "Button";

// node_modules/zudoku/lib/Spinner-mNLZ6awP.js
var i = ({ size: r2 = 16 }) => ae.jsx(LoaderCircle, { size: r2, className: "animate-spin" });

// node_modules/zudoku/lib/ui/Callout.js
var y2 = {
  note: {
    border: "border-gray-300 dark:border-zinc-800",
    bg: "bg-gray-100 dark:bg-zinc-800/50",
    iconColor: "text-gray-600 dark:text-zinc-300",
    titleColor: "text-gray-600 dark:text-zinc-300",
    textColor: "text-gray-600 dark:text-zinc-300",
    Icon: Info
  },
  tip: {
    border: "border-green-500 dark:border-green-800",
    bg: "bg-green-200/25 dark:bg-green-950/70",
    iconColor: "text-green-600 dark:text-green-200",
    titleColor: "text-green-700 dark:text-green-200",
    textColor: "text-green-600 dark:text-green-50",
    Icon: Lightbulb
  },
  info: {
    border: "border-blue-400 dark:border-blue-900/60",
    bg: "bg-blue-50 dark:bg-blue-950/40",
    iconColor: "text-blue-400 dark:text-blue-200",
    titleColor: "text-blue-700 dark:text-blue-200",
    textColor: "text-blue-600 dark:text-blue-100",
    Icon: Info
  },
  caution: {
    border: "border-yellow-400 dark:border-yellow-400/25",
    bg: "bg-yellow-100/60 dark:bg-yellow-400/10",
    iconColor: "text-yellow-500 dark:text-yellow-300",
    titleColor: "text-yellow-600 dark:text-yellow-300",
    textColor: "text-yellow-700 dark:text-yellow-200",
    Icon: TriangleAlert
  },
  danger: {
    border: "border-rose-400 dark:border-rose-800",
    bg: "bg-rose-50 dark:bg-rose-950/40",
    iconColor: "text-rose-400 dark:text-rose-300",
    titleColor: "text-rose-800 dark:text-rose-300",
    textColor: "text-rose-700 dark:text-rose-100",
    Icon: ShieldAlert
  }
};
var p = ({
  type: d3,
  children: a2,
  title: e2,
  className: n5,
  icon: r2 = true
}) => {
  const { border: b2, bg: s2, iconColor: x2, titleColor: i2, textColor: g2, Icon: c6 } = y2[d3];
  return ae.jsxs(
    "div",
    {
      className: We(
        "not-prose rounded-md border p-4 text-md my-2",
        r2 && "grid grid-cols-[min-content_1fr] items-baseline grid-rows-[fit-content_1fr] gap-x-4 gap-y-2",
        !r2 && e2 && "flex flex-col gap-2",
        "[&_a]:underline [&_a]:decoration-current [&_a]:decoration-from-font [&_a]:underline-offset-4 hover:[&_a]:decoration-1",
        "[&_code]:!bg-gray-50 [&_code]:dark:!bg-gray-800 [&_code]:!border-none",
        "[&_ul]:list-disc [&_ol]:list-decimal [&_ul]:ps-4 [&_ul>li]:ps-1 [&_ul>li]:my-1",
        r2 && e2 && "items-center",
        b2,
        s2,
        n5
      ),
      children: [
        r2 && ae.jsx(
          c6,
          {
            className: We(e2 ? "align-middle" : "translate-y-1", x2),
            size: 20,
            "aria-hidden": "true"
          }
        ),
        e2 && ae.jsx("h3", { className: We("font-medium", i2), children: e2 }),
        ae.jsx(
          "div",
          {
            className: We(
              r2 && "col-start-2",
              !e2 && r2 && "row-start-1",
              g2
            ),
            children: a2
          }
        )
      ]
    }
  );
};

// node_modules/zudoku/lib/ClientOnly-E7hGysn1.js
var import_react2 = __toESM(require_react(), 1);
var t2 = () => () => {
};
var c3 = (e2) => (0, import_react2.useSyncExternalStore)(
  t2,
  () => "client",
  () => "server"
) === "client" ? e2.children : e2.fallback;

// node_modules/zudoku/lib/SyntaxHighlight-CxhyyMkF.js
var import_react3 = __toESM(require_react(), 1);
var ke2 = Object.create;
var Z = Object.defineProperty;
var we2 = Object.defineProperties;
var Ee2 = Object.getOwnPropertyDescriptor;
var xe2 = Object.getOwnPropertyDescriptors;
var le2 = Object.getOwnPropertyNames;
var G2 = Object.getOwnPropertySymbols;
var Ae2 = Object.getPrototypeOf;
var X3 = Object.prototype.hasOwnProperty;
var ie2 = Object.prototype.propertyIsEnumerable;
var ae3 = (e2, t5, r2) => t5 in e2 ? Z(e2, t5, { enumerable: true, configurable: true, writable: true, value: r2 }) : e2[t5] = r2;
var N4 = (e2, t5) => {
  for (var r2 in t5 || (t5 = {}))
    X3.call(t5, r2) && ae3(e2, r2, t5[r2]);
  if (G2)
    for (var r2 of G2(t5))
      ie2.call(t5, r2) && ae3(e2, r2, t5[r2]);
  return e2;
};
var q = (e2, t5) => we2(e2, xe2(t5));
var ue2 = (e2, t5) => {
  var r2 = {};
  for (var i2 in e2)
    X3.call(e2, i2) && t5.indexOf(i2) < 0 && (r2[i2] = e2[i2]);
  if (e2 != null && G2)
    for (var i2 of G2(e2))
      t5.indexOf(i2) < 0 && ie2.call(e2, i2) && (r2[i2] = e2[i2]);
  return r2;
};
var Se2 = (e2, t5) => function() {
  return t5 || (0, e2[le2(e2)[0]])((t5 = { exports: {} }).exports, t5), t5.exports;
};
var _e2 = (e2, t5) => {
  for (var r2 in t5)
    Z(e2, r2, { get: t5[r2], enumerable: true });
};
var Fe2 = (e2, t5, r2, i2) => {
  if (t5 && typeof t5 == "object" || typeof t5 == "function")
    for (let f6 of le2(t5))
      !X3.call(e2, f6) && f6 !== r2 && Z(e2, f6, { get: () => t5[f6], enumerable: !(i2 = Ee2(t5, f6)) || i2.enumerable });
  return e2;
};
var Te2 = (e2, t5, r2) => (r2 = e2 != null ? ke2(Ae2(e2)) : {}, Fe2(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  !e2 || !e2.__esModule ? Z(r2, "default", { value: e2, enumerable: true }) : r2,
  e2
));
var Re2 = Se2({
  "../../node_modules/.pnpm/prismjs@1.29.0_patch_hash=vrxx3pzkik6jpmgpayxfjunetu/node_modules/prismjs/prism.js"(e2, t5) {
    var r2 = function() {
      var i2 = /(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i, f6 = 0, h2 = {}, u3 = {
        /**
         * A namespace for utility methods.
         *
         * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may
         * change or disappear at any time.
         *
         * @namespace
         * @memberof Prism
         */
        util: {
          encode: function n5(a2) {
            return a2 instanceof m4 ? new m4(a2.type, n5(a2.content), a2.alias) : Array.isArray(a2) ? a2.map(n5) : a2.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
          },
          /**
           * Returns the name of the type of the given value.
           *
           * @param {any} o
           * @returns {string}
           * @example
           * type(null)      === 'Null'
           * type(undefined) === 'Undefined'
           * type(123)       === 'Number'
           * type('foo')     === 'String'
           * type(true)      === 'Boolean'
           * type([1, 2])    === 'Array'
           * type({})        === 'Object'
           * type(String)    === 'Function'
           * type(/abc+/)    === 'RegExp'
           */
          type: function(n5) {
            return Object.prototype.toString.call(n5).slice(8, -1);
          },
          /**
           * Returns a unique number for the given object. Later calls will still return the same number.
           *
           * @param {Object} obj
           * @returns {number}
           */
          objId: function(n5) {
            return n5.__id || Object.defineProperty(n5, "__id", { value: ++f6 }), n5.__id;
          },
          /**
           * Creates a deep clone of the given object.
           *
           * The main intended use of this function is to clone language definitions.
           *
           * @param {T} o
           * @param {Record<number, any>} [visited]
           * @returns {T}
           * @template T
           */
          clone: function n5(a2, s2) {
            s2 = s2 || {};
            var c6, l5;
            switch (u3.util.type(a2)) {
              case "Object":
                if (l5 = u3.util.objId(a2), s2[l5])
                  return s2[l5];
                c6 = /** @type {Record<string, any>} */
                {}, s2[l5] = c6;
                for (var d3 in a2)
                  a2.hasOwnProperty(d3) && (c6[d3] = n5(a2[d3], s2));
                return (
                  /** @type {any} */
                  c6
                );
              case "Array":
                return l5 = u3.util.objId(a2), s2[l5] ? s2[l5] : (c6 = [], s2[l5] = c6, a2.forEach(function(k2, E) {
                  c6[E] = n5(k2, s2);
                }), /** @type {any} */
                c6);
              default:
                return a2;
            }
          },
          /**
           * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.
           *
           * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.
           *
           * @param {Element} element
           * @returns {string}
           */
          getLanguage: function(n5) {
            for (; n5; ) {
              var a2 = i2.exec(n5.className);
              if (a2)
                return a2[1].toLowerCase();
              n5 = n5.parentElement;
            }
            return "none";
          },
          /**
           * Sets the Prism `language-xxxx` class of the given element.
           *
           * @param {Element} element
           * @param {string} language
           * @returns {void}
           */
          setLanguage: function(n5, a2) {
            n5.className = n5.className.replace(RegExp(i2, "gi"), ""), n5.classList.add("language-" + a2);
          },
          /**
           * Returns whether a given class is active for `element`.
           *
           * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated
           * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the
           * given class is just the given class with a `no-` prefix.
           *
           * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is
           * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its
           * ancestors have the given class or the negated version of it, then the default activation will be returned.
           *
           * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated
           * version of it, the class is considered active.
           *
           * @param {Element} element
           * @param {string} className
           * @param {boolean} [defaultActivation=false]
           * @returns {boolean}
           */
          isActive: function(n5, a2, s2) {
            for (var c6 = "no-" + a2; n5; ) {
              var l5 = n5.classList;
              if (l5.contains(a2))
                return true;
              if (l5.contains(c6))
                return false;
              n5 = n5.parentElement;
            }
            return !!s2;
          }
        },
        /**
         * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.
         *
         * @namespace
         * @memberof Prism
         * @public
         */
        languages: {
          /**
           * The grammar for plain, unformatted text.
           */
          plain: h2,
          plaintext: h2,
          text: h2,
          txt: h2,
          /**
           * Creates a deep copy of the language with the given id and appends the given tokens.
           *
           * If a token in `redef` also appears in the copied language, then the existing token in the copied language
           * will be overwritten at its original position.
           *
           * ## Best practices
           *
           * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)
           * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to
           * understand the language definition because, normally, the order of tokens matters in Prism grammars.
           *
           * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.
           * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.
           *
           * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.
           * @param {Grammar} redef The new tokens to append.
           * @returns {Grammar} The new language created.
           * @public
           * @example
           * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {
           *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token
           *     // at its original position
           *     'comment': { ... },
           *     // CSS doesn't have a 'color' token, so this token will be appended
           *     'color': /\b(?:red|green|blue)\b/
           * });
           */
          extend: function(n5, a2) {
            var s2 = u3.util.clone(u3.languages[n5]);
            for (var c6 in a2)
              s2[c6] = a2[c6];
            return s2;
          },
          /**
           * Inserts tokens _before_ another token in a language definition or any other grammar.
           *
           * ## Usage
           *
           * This helper method makes it easy to modify existing languages. For example, the CSS language definition
           * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded
           * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the
           * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do
           * this:
           *
           * ```js
           * Prism.languages.markup.style = {
           *     // token
           * };
           * ```
           *
           * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens
           * before existing tokens. For the CSS example above, you would use it like this:
           *
           * ```js
           * Prism.languages.insertBefore('markup', 'cdata', {
           *     'style': {
           *         // token
           *     }
           * });
           * ```
           *
           * ## Special cases
           *
           * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar
           * will be ignored.
           *
           * This behavior can be used to insert tokens after `before`:
           *
           * ```js
           * Prism.languages.insertBefore('markup', 'comment', {
           *     'comment': Prism.languages.markup.comment,
           *     // tokens after 'comment'
           * });
           * ```
           *
           * ## Limitations
           *
           * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object
           * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave
           * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily
           * deleting properties which is necessary to insert at arbitrary positions.
           *
           * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.
           * Instead, it will create a new object and replace all references to the target object with the new one. This
           * can be done without temporarily deleting properties, so the iteration order is well-defined.
           *
           * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if
           * you hold the target object in a variable, then the value of the variable will not change.
           *
           * ```js
           * var oldMarkup = Prism.languages.markup;
           * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });
           *
           * assert(oldMarkup !== Prism.languages.markup);
           * assert(newMarkup === Prism.languages.markup);
           * ```
           *
           * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the
           * object to be modified.
           * @param {string} before The key to insert before.
           * @param {Grammar} insert An object containing the key-value pairs to be inserted.
           * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the
           * object to be modified.
           *
           * Defaults to `Prism.languages`.
           * @returns {Grammar} The new grammar object.
           * @public
           */
          insertBefore: function(n5, a2, s2, c6) {
            c6 = c6 || /** @type {any} */
            u3.languages;
            var l5 = c6[n5], d3 = {};
            for (var k2 in l5)
              if (l5.hasOwnProperty(k2)) {
                if (k2 == a2)
                  for (var E in s2)
                    s2.hasOwnProperty(E) && (d3[E] = s2[E]);
                s2.hasOwnProperty(k2) || (d3[k2] = l5[k2]);
              }
            var A2 = c6[n5];
            return c6[n5] = d3, u3.languages.DFS(u3.languages, function(x2, F2) {
              F2 === A2 && x2 != n5 && (this[x2] = d3);
            }), d3;
          },
          // Traverse a language definition with Depth First Search
          DFS: function n5(a2, s2, c6, l5) {
            l5 = l5 || {};
            var d3 = u3.util.objId;
            for (var k2 in a2)
              if (a2.hasOwnProperty(k2)) {
                s2.call(a2, k2, a2[k2], c6 || k2);
                var E = a2[k2], A2 = u3.util.type(E);
                A2 === "Object" && !l5[d3(E)] ? (l5[d3(E)] = true, n5(E, s2, null, l5)) : A2 === "Array" && !l5[d3(E)] && (l5[d3(E)] = true, n5(E, s2, k2, l5));
              }
          }
        },
        plugins: {},
        /**
         * Low-level function, only use if you know what you’re doing. It accepts a string of text as input
         * and the language definitions to use, and returns a string with the HTML produced.
         *
         * The following hooks will be run:
         * 1. `before-tokenize`
         * 2. `after-tokenize`
         * 3. `wrap`: On each {@link Token}.
         *
         * @param {string} text A string with the code to be highlighted.
         * @param {Grammar} grammar An object containing the tokens to use.
         *
         * Usually a language definition like `Prism.languages.markup`.
         * @param {string} language The name of the language definition passed to `grammar`.
         * @returns {string} The highlighted HTML.
         * @memberof Prism
         * @public
         * @example
         * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');
         */
        highlight: function(n5, a2, s2) {
          var c6 = {
            code: n5,
            grammar: a2,
            language: s2
          };
          if (u3.hooks.run("before-tokenize", c6), !c6.grammar)
            throw new Error('The language "' + c6.language + '" has no grammar.');
          return c6.tokens = u3.tokenize(c6.code, c6.grammar), u3.hooks.run("after-tokenize", c6), m4.stringify(u3.util.encode(c6.tokens), c6.language);
        },
        /**
         * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input
         * and the language definitions to use, and returns an array with the tokenized code.
         *
         * When the language definition includes nested tokens, the function is called recursively on each of these tokens.
         *
         * This method could be useful in other contexts as well, as a very crude parser.
         *
         * @param {string} text A string with the code to be highlighted.
         * @param {Grammar} grammar An object containing the tokens to use.
         *
         * Usually a language definition like `Prism.languages.markup`.
         * @returns {TokenStream} An array of strings and tokens, a token stream.
         * @memberof Prism
         * @public
         * @example
         * let code = `var foo = 0;`;
         * let tokens = Prism.tokenize(code, Prism.languages.javascript);
         * tokens.forEach(token => {
         *     if (token instanceof Prism.Token && token.type === 'number') {
         *         console.log(`Found numeric literal: ${token.content}`);
         *     }
         * });
         */
        tokenize: function(n5, a2) {
          var s2 = a2.rest;
          if (s2) {
            for (var c6 in s2)
              a2[c6] = s2[c6];
            delete a2.rest;
          }
          var l5 = new b2();
          return y4(l5, l5.head, n5), g2(n5, l5, a2, l5.head, 0), w2(l5);
        },
        /**
         * @namespace
         * @memberof Prism
         * @public
         */
        hooks: {
          all: {},
          /**
           * Adds the given callback to the list of callbacks for the given hook.
           *
           * The callback will be invoked when the hook it is registered for is run.
           * Hooks are usually directly run by a highlight function but you can also run hooks yourself.
           *
           * One callback function can be registered to multiple hooks and the same hook multiple times.
           *
           * @param {string} name The name of the hook.
           * @param {HookCallback} callback The callback function which is given environment variables.
           * @public
           */
          add: function(n5, a2) {
            var s2 = u3.hooks.all;
            s2[n5] = s2[n5] || [], s2[n5].push(a2);
          },
          /**
           * Runs a hook invoking all registered callbacks with the given environment variables.
           *
           * Callbacks will be invoked synchronously and in the order in which they were registered.
           *
           * @param {string} name The name of the hook.
           * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.
           * @public
           */
          run: function(n5, a2) {
            var s2 = u3.hooks.all[n5];
            if (!(!s2 || !s2.length))
              for (var c6 = 0, l5; l5 = s2[c6++]; )
                l5(a2);
          }
        },
        Token: m4
      };
      function m4(n5, a2, s2, c6) {
        this.type = n5, this.content = a2, this.alias = s2, this.length = (c6 || "").length | 0;
      }
      m4.stringify = function n5(a2, s2) {
        if (typeof a2 == "string")
          return a2;
        if (Array.isArray(a2)) {
          var c6 = "";
          return a2.forEach(function(A2) {
            c6 += n5(A2, s2);
          }), c6;
        }
        var l5 = {
          type: a2.type,
          content: n5(a2.content, s2),
          tag: "span",
          classes: ["token", a2.type],
          attributes: {},
          language: s2
        }, d3 = a2.alias;
        d3 && (Array.isArray(d3) ? Array.prototype.push.apply(l5.classes, d3) : l5.classes.push(d3)), u3.hooks.run("wrap", l5);
        var k2 = "";
        for (var E in l5.attributes)
          k2 += " " + E + '="' + (l5.attributes[E] || "").replace(/"/g, "&quot;") + '"';
        return "<" + l5.tag + ' class="' + l5.classes.join(" ") + '"' + k2 + ">" + l5.content + "</" + l5.tag + ">";
      };
      function p4(n5, a2, s2, c6) {
        n5.lastIndex = a2;
        var l5 = n5.exec(s2);
        if (l5 && c6 && l5[1]) {
          var d3 = l5[1].length;
          l5.index += d3, l5[0] = l5[0].slice(d3);
        }
        return l5;
      }
      function g2(n5, a2, s2, c6, l5, d3) {
        for (var k2 in s2)
          if (!(!s2.hasOwnProperty(k2) || !s2[k2])) {
            var E = s2[k2];
            E = Array.isArray(E) ? E : [E];
            for (var A2 = 0; A2 < E.length; ++A2) {
              if (d3 && d3.cause == k2 + "," + A2)
                return;
              var x2 = E[A2], F2 = x2.inside, T = !!x2.lookbehind, D3 = !!x2.greedy, C = x2.alias;
              if (D3 && !x2.pattern.global) {
                var L4 = x2.pattern.toString().match(/[imsuy]*$/)[0];
                x2.pattern = RegExp(x2.pattern.source, L4 + "g");
              }
              for (var Q2 = x2.pattern || x2, S2 = c6.next, O2 = l5; S2 !== a2.tail && !(d3 && O2 >= d3.reach); O2 += S2.value.length, S2 = S2.next) {
                var $3 = S2.value;
                if (a2.length > n5.length)
                  return;
                if (!($3 instanceof m4)) {
                  var j6 = 1, I3;
                  if (D3) {
                    if (I3 = p4(Q2, O2, n5, T), !I3 || I3.index >= n5.length)
                      break;
                    var z3 = I3.index, pe2 = I3.index + I3[0].length, B2 = O2;
                    for (B2 += S2.value.length; z3 >= B2; )
                      S2 = S2.next, B2 += S2.value.length;
                    if (B2 -= S2.value.length, O2 = B2, S2.value instanceof m4)
                      continue;
                    for (var P3 = S2; P3 !== a2.tail && (B2 < pe2 || typeof P3.value == "string"); P3 = P3.next)
                      j6++, B2 += P3.value.length;
                    j6--, $3 = n5.slice(O2, B2), I3.index -= O2;
                  } else if (I3 = p4(Q2, 0, $3, T), !I3)
                    continue;
                  var z3 = I3.index, M3 = I3[0], W2 = $3.slice(0, z3), J3 = $3.slice(z3 + M3.length), H4 = O2 + $3.length;
                  d3 && H4 > d3.reach && (d3.reach = H4);
                  var U3 = S2.prev;
                  W2 && (U3 = y4(a2, U3, W2), O2 += W2.length), v(a2, U3, j6);
                  var ge2 = new m4(k2, F2 ? u3.tokenize(M3, F2) : M3, C, M3);
                  if (S2 = y4(a2, U3, ge2), J3 && y4(a2, S2, J3), j6 > 1) {
                    var Y2 = {
                      cause: k2 + "," + A2,
                      reach: H4
                    };
                    g2(n5, a2, s2, S2.prev, O2, Y2), d3 && Y2.reach > d3.reach && (d3.reach = Y2.reach);
                  }
                }
              }
            }
          }
      }
      function b2() {
        var n5 = { value: null, prev: null, next: null }, a2 = { value: null, prev: n5, next: null };
        n5.next = a2, this.head = n5, this.tail = a2, this.length = 0;
      }
      function y4(n5, a2, s2) {
        var c6 = a2.next, l5 = { value: s2, prev: a2, next: c6 };
        return a2.next = l5, c6.prev = l5, n5.length++, l5;
      }
      function v(n5, a2, s2) {
        for (var c6 = a2.next, l5 = 0; l5 < s2 && c6 !== n5.tail; l5++)
          c6 = c6.next;
        a2.next = c6, c6.prev = a2, n5.length -= l5;
      }
      function w2(n5) {
        for (var a2 = [], s2 = n5.head.next; s2 !== n5.tail; )
          a2.push(s2.value), s2 = s2.next;
        return a2;
      }
      return u3;
    }();
    t5.exports = r2, r2.default = r2;
  }
});
var o = Te2(Re2());
o.languages.markup = { comment: { pattern: /<!--(?:(?!<!--)[\s\S])*?-->/, greedy: true }, prolog: { pattern: /<\?[\s\S]+?\?>/, greedy: true }, doctype: { pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i, greedy: true, inside: { "internal-subset": { pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/, lookbehind: true, greedy: true, inside: null }, string: { pattern: /"[^"]*"|'[^']*'/, greedy: true }, punctuation: /^<!|>$|[[\]]/, "doctype-tag": /^DOCTYPE/i, name: /[^\s<>'"]+/ } }, cdata: { pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i, greedy: true }, tag: { pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/, greedy: true, inside: { tag: { pattern: /^<\/?[^\s>\/]+/, inside: { punctuation: /^<\/?/, namespace: /^[^\s>\/:]+:/ } }, "special-attr": [], "attr-value": { pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/, inside: { punctuation: [{ pattern: /^=/, alias: "attr-equals" }, { pattern: /^(\s*)["']|["']$/, lookbehind: true }] } }, punctuation: /\/?>/, "attr-name": { pattern: /[^\s>\/]+/, inside: { namespace: /^[^\s>\/:]+:/ } } } }, entity: [{ pattern: /&[\da-z]{1,8};/i, alias: "named-entity" }, /&#x?[\da-f]{1,8};/i] }, o.languages.markup.tag.inside["attr-value"].inside.entity = o.languages.markup.entity, o.languages.markup.doctype.inside["internal-subset"].inside = o.languages.markup, o.hooks.add("wrap", function(e2) {
  e2.type === "entity" && (e2.attributes.title = e2.content.replace(/&amp;/, "&"));
}), Object.defineProperty(o.languages.markup.tag, "addInlined", { value: function(e2, i2) {
  var r2 = {}, r2 = (r2["language-" + i2] = { pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i, lookbehind: true, inside: o.languages[i2] }, r2.cdata = /^<!\[CDATA\[|\]\]>$/i, { "included-cdata": { pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i, inside: r2 } }), i2 = (r2["language-" + i2] = { pattern: /[\s\S]+/, inside: o.languages[i2] }, {});
  i2[e2] = { pattern: RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function() {
    return e2;
  }), "i"), lookbehind: true, greedy: true, inside: r2 }, o.languages.insertBefore("markup", "cdata", i2);
} }), Object.defineProperty(o.languages.markup.tag, "addAttribute", { value: function(e2, t5) {
  o.languages.markup.tag.inside["special-attr"].push({ pattern: RegExp(/(^|["'\s])/.source + "(?:" + e2 + ")" + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source, "i"), lookbehind: true, inside: { "attr-name": /^[^\s=]+/, "attr-value": { pattern: /=[\s\S]+/, inside: { value: { pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/, lookbehind: true, alias: [t5, "language-" + t5], inside: o.languages[t5] }, punctuation: [{ pattern: /^=/, alias: "attr-equals" }, /"|'/] } } } });
} }), o.languages.html = o.languages.markup, o.languages.mathml = o.languages.markup, o.languages.svg = o.languages.markup, o.languages.xml = o.languages.extend("markup", {}), o.languages.ssml = o.languages.xml, o.languages.atom = o.languages.xml, o.languages.rss = o.languages.xml, function(e2) {
  var t5 = { pattern: /\\[\\(){}[\]^$+*?|.]/, alias: "escape" }, r2 = /\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/, i2 = "(?:[^\\\\-]|" + r2.source + ")", i2 = RegExp(i2 + "-" + i2), f6 = { pattern: /(<|')[^<>']+(?=[>']$)/, lookbehind: true, alias: "variable" };
  e2.languages.regex = { "char-class": { pattern: /((?:^|[^\\])(?:\\\\)*)\[(?:[^\\\]]|\\[\s\S])*\]/, lookbehind: true, inside: { "char-class-negation": { pattern: /(^\[)\^/, lookbehind: true, alias: "operator" }, "char-class-punctuation": { pattern: /^\[|\]$/, alias: "punctuation" }, range: { pattern: i2, inside: { escape: r2, "range-punctuation": { pattern: /-/, alias: "operator" } } }, "special-escape": t5, "char-set": { pattern: /\\[wsd]|\\p\{[^{}]+\}/i, alias: "class-name" }, escape: r2 } }, "special-escape": t5, "char-set": { pattern: /\.|\\[wsd]|\\p\{[^{}]+\}/i, alias: "class-name" }, backreference: [{ pattern: /\\(?![123][0-7]{2})[1-9]/, alias: "keyword" }, { pattern: /\\k<[^<>']+>/, alias: "keyword", inside: { "group-name": f6 } }], anchor: { pattern: /[$^]|\\[ABbGZz]/, alias: "function" }, escape: r2, group: [{ pattern: /\((?:\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/, alias: "punctuation", inside: { "group-name": f6 } }, { pattern: /\)/, alias: "punctuation" }], quantifier: { pattern: /(?:[+*?]|\{\d+(?:,\d*)?\})[?+]?/, alias: "number" }, alternation: { pattern: /\|/, alias: "keyword" } };
}(o), o.languages.clike = { comment: [{ pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: true, greedy: true }, { pattern: /(^|[^\\:])\/\/.*/, lookbehind: true, greedy: true }], string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: true }, "class-name": { pattern: /(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i, lookbehind: true, inside: { punctuation: /[.\\]/ } }, keyword: /\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/, boolean: /\b(?:false|true)\b/, function: /\b\w+(?=\()/, number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i, operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/, punctuation: /[{}[\];(),.:]/ }, o.languages.javascript = o.languages.extend("clike", { "class-name": [o.languages.clike["class-name"], { pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/, lookbehind: true }], keyword: [{ pattern: /((?:^|\})\s*)catch\b/, lookbehind: true }, { pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/, lookbehind: true }], function: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/, number: { pattern: RegExp(/(^|[^\w$])/.source + "(?:" + /NaN|Infinity/.source + "|" + /0[bB][01]+(?:_[01]+)*n?/.source + "|" + /0[oO][0-7]+(?:_[0-7]+)*n?/.source + "|" + /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source + "|" + /\d+(?:_\d+)*n/.source + "|" + /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source + ")" + /(?![\w$])/.source), lookbehind: true }, operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/ }), o.languages.javascript["class-name"][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/, o.languages.insertBefore("javascript", "keyword", { regex: { pattern: RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source + /\//.source + "(?:" + /(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source + "|" + /(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + ")" + /(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source), lookbehind: true, greedy: true, inside: { "regex-source": { pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/, lookbehind: true, alias: "language-regex", inside: o.languages.regex }, "regex-delimiter": /^\/|\/$/, "regex-flags": /^[a-z]+$/ } }, "function-variable": { pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/, alias: "function" }, parameter: [{ pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/, lookbehind: true, inside: o.languages.javascript }, { pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i, lookbehind: true, inside: o.languages.javascript }, { pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/, lookbehind: true, inside: o.languages.javascript }, { pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/, lookbehind: true, inside: o.languages.javascript }], constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/ }), o.languages.insertBefore("javascript", "string", { hashbang: { pattern: /^#!.*/, greedy: true, alias: "comment" }, "template-string": { pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/, greedy: true, inside: { "template-punctuation": { pattern: /^`|`$/, alias: "string" }, interpolation: { pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/, lookbehind: true, inside: { "interpolation-punctuation": { pattern: /^\$\{|\}$/, alias: "punctuation" }, rest: o.languages.javascript } }, string: /[\s\S]+/ } }, "string-property": { pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m, lookbehind: true, greedy: true, alias: "property" } }), o.languages.insertBefore("javascript", "operator", { "literal-property": { pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m, lookbehind: true, alias: "property" } }), o.languages.markup && (o.languages.markup.tag.addInlined("script", "javascript"), o.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, "javascript")), o.languages.js = o.languages.javascript, o.languages.actionscript = o.languages.extend("javascript", { keyword: /\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\b/, operator: /\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/ }), o.languages.actionscript["class-name"].alias = "function", delete o.languages.actionscript.parameter, delete o.languages.actionscript["literal-property"], o.languages.markup && o.languages.insertBefore("actionscript", "string", { xml: { pattern: /(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/, lookbehind: true, inside: o.languages.markup } }), function(e2) {
  var t5 = /#(?!\{).+/, r2 = { pattern: /#\{[^}]+\}/, alias: "variable" };
  e2.languages.coffeescript = e2.languages.extend("javascript", { comment: t5, string: [{ pattern: /'(?:\\[\s\S]|[^\\'])*'/, greedy: true }, { pattern: /"(?:\\[\s\S]|[^\\"])*"/, greedy: true, inside: { interpolation: r2 } }], keyword: /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/, "class-member": { pattern: /@(?!\d)\w+/, alias: "variable" } }), e2.languages.insertBefore("coffeescript", "comment", { "multiline-comment": { pattern: /###[\s\S]+?###/, alias: "comment" }, "block-regex": { pattern: /\/{3}[\s\S]*?\/{3}/, alias: "regex", inside: { comment: t5, interpolation: r2 } } }), e2.languages.insertBefore("coffeescript", "string", { "inline-javascript": { pattern: /`(?:\\[\s\S]|[^\\`])*`/, inside: { delimiter: { pattern: /^`|`$/, alias: "punctuation" }, script: { pattern: /[\s\S]+/, alias: "language-javascript", inside: e2.languages.javascript } } }, "multiline-string": [{ pattern: /'''[\s\S]*?'''/, greedy: true, alias: "string" }, { pattern: /"""[\s\S]*?"""/, greedy: true, alias: "string", inside: { interpolation: r2 } }] }), e2.languages.insertBefore("coffeescript", "keyword", { property: /(?!\d)\w+(?=\s*:(?!:))/ }), delete e2.languages.coffeescript["template-string"], e2.languages.coffee = e2.languages.coffeescript;
}(o), function(e2) {
  var t5 = e2.languages.javadoclike = { parameter: { pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m, lookbehind: true }, keyword: { pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m, lookbehind: true }, punctuation: /[{}]/ };
  Object.defineProperty(t5, "addSupport", { value: function(r2, i2) {
    (r2 = typeof r2 == "string" ? [r2] : r2).forEach(function(f6) {
      var h2 = function(y4) {
        y4.inside || (y4.inside = {}), y4.inside.rest = i2;
      }, u3 = "doc-comment";
      if (m4 = e2.languages[f6]) {
        var m4, p4 = m4[u3];
        if ((p4 = p4 || (m4 = e2.languages.insertBefore(f6, "comment", { "doc-comment": { pattern: /(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/, lookbehind: true, alias: "comment" } }))[u3]) instanceof RegExp && (p4 = m4[u3] = { pattern: p4 }), Array.isArray(p4))
          for (var g2 = 0, b2 = p4.length; g2 < b2; g2++)
            p4[g2] instanceof RegExp && (p4[g2] = { pattern: p4[g2] }), h2(p4[g2]);
        else
          h2(p4);
      }
    });
  } }), t5.addSupport(["java", "javascript", "php"], t5);
}(o), function(e2) {
  var t5 = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/, t5 = (e2.languages.css = { comment: /\/\*[\s\S]*?\*\//, atrule: { pattern: RegExp("@[\\w-](?:" + /[^;{\s"']|\s+(?!\s)/.source + "|" + t5.source + ")*?" + /(?:;|(?=\s*\{))/.source), inside: { rule: /^@[\w-]+/, "selector-function-argument": { pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/, lookbehind: true, alias: "selector" }, keyword: { pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/, lookbehind: true } } }, url: { pattern: RegExp("\\burl\\((?:" + t5.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"), greedy: true, inside: { function: /^url/i, punctuation: /^\(|\)$/, string: { pattern: RegExp("^" + t5.source + "$"), alias: "url" } } }, selector: { pattern: RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + t5.source + ")*(?=\\s*\\{)"), lookbehind: true }, string: { pattern: t5, greedy: true }, property: { pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i, lookbehind: true }, important: /!important\b/i, function: { pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i, lookbehind: true }, punctuation: /[(){};:,]/ }, e2.languages.css.atrule.inside.rest = e2.languages.css, e2.languages.markup);
  t5 && (t5.tag.addInlined("style", "css"), t5.tag.addAttribute("style", "css"));
}(o), function(e2) {
  var t5 = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, t5 = (e2.languages.css.selector = { pattern: e2.languages.css.selector.pattern, lookbehind: true, inside: t5 = { "pseudo-element": /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/, "pseudo-class": /:[-\w]+/, class: /\.[-\w]+/, id: /#[-\w]+/, attribute: { pattern: RegExp(`\\[(?:[^[\\]"']|` + t5.source + ")*\\]"), greedy: true, inside: { punctuation: /^\[|\]$/, "case-sensitivity": { pattern: /(\s)[si]$/i, lookbehind: true, alias: "keyword" }, namespace: { pattern: /^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/, lookbehind: true, inside: { punctuation: /\|$/ } }, "attr-name": { pattern: /^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/, lookbehind: true }, "attr-value": [t5, { pattern: /(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/, lookbehind: true }], operator: /[|~*^$]?=/ } }, "n-th": [{ pattern: /(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/, lookbehind: true, inside: { number: /[\dn]+/, operator: /[+-]/ } }, { pattern: /(\(\s*)(?:even|odd)(?=\s*\))/i, lookbehind: true }], combinator: />|\+|~|\|\|/, punctuation: /[(),]/ } }, e2.languages.css.atrule.inside["selector-function-argument"].inside = t5, e2.languages.insertBefore("css", "property", { variable: { pattern: /(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i, lookbehind: true } }), { pattern: /(\b\d+)(?:%|[a-z]+(?![\w-]))/, lookbehind: true }), r2 = { pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/, lookbehind: true };
  e2.languages.insertBefore("css", "function", { operator: { pattern: /(\s)[+\-*\/](?=\s)/, lookbehind: true }, hexcode: { pattern: /\B#[\da-f]{3,8}\b/i, alias: "color" }, color: [{ pattern: /(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i, lookbehind: true }, { pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i, inside: { unit: t5, number: r2, function: /[\w-]+(?=\()/, punctuation: /[(),]/ } }], entity: /\\[\da-f]{1,8}/i, unit: t5, number: r2 });
}(o), function(e2) {
  var t5 = /[*&][^\s[\]{},]+/, r2 = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/, i2 = "(?:" + r2.source + "(?:[ 	]+" + t5.source + ")?|" + t5.source + "(?:[ 	]+" + r2.source + ")?)", f6 = /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function() {
    return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
  }), h2 = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
  function u3(m4, p4) {
    p4 = (p4 || "").replace(/m/g, "") + "m";
    var g2 = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g, function() {
      return i2;
    }).replace(/<<value>>/g, function() {
      return m4;
    });
    return RegExp(g2, p4);
  }
  e2.languages.yaml = { scalar: { pattern: RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g, function() {
    return i2;
  })), lookbehind: true, alias: "string" }, comment: /#.*/, key: { pattern: RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g, function() {
    return i2;
  }).replace(/<<key>>/g, function() {
    return "(?:" + f6 + "|" + h2 + ")";
  })), lookbehind: true, greedy: true, alias: "atrule" }, directive: { pattern: /(^[ \t]*)%.+/m, lookbehind: true, alias: "important" }, datetime: { pattern: u3(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source), lookbehind: true, alias: "number" }, boolean: { pattern: u3(/false|true/.source, "i"), lookbehind: true, alias: "important" }, null: { pattern: u3(/null|~/.source, "i"), lookbehind: true, alias: "important" }, string: { pattern: u3(h2), lookbehind: true, greedy: true }, number: { pattern: u3(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source, "i"), lookbehind: true }, tag: r2, important: t5, punctuation: /---|[:[\]{}\-,|>?]|\.\.\./ }, e2.languages.yml = e2.languages.yaml;
}(o), function(e2) {
  var t5 = /(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;
  function r2(g2) {
    return g2 = g2.replace(/<inner>/g, function() {
      return t5;
    }), RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + "(?:" + g2 + ")");
  }
  var i2 = /(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source, f6 = /\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g, function() {
    return i2;
  }), h2 = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source, u3 = (e2.languages.markdown = e2.languages.extend("markup", {}), e2.languages.insertBefore("markdown", "prolog", { "front-matter-block": { pattern: /(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/, lookbehind: true, greedy: true, inside: { punctuation: /^---|---$/, "front-matter": { pattern: /\S+(?:\s+\S+)*/, alias: ["yaml", "language-yaml"], inside: e2.languages.yaml } } }, blockquote: { pattern: /^>(?:[\t ]*>)*/m, alias: "punctuation" }, table: { pattern: RegExp("^" + f6 + h2 + "(?:" + f6 + ")*", "m"), inside: { "table-data-rows": { pattern: RegExp("^(" + f6 + h2 + ")(?:" + f6 + ")*$"), lookbehind: true, inside: { "table-data": { pattern: RegExp(i2), inside: e2.languages.markdown }, punctuation: /\|/ } }, "table-line": { pattern: RegExp("^(" + f6 + ")" + h2 + "$"), lookbehind: true, inside: { punctuation: /\||:?-{3,}:?/ } }, "table-header-row": { pattern: RegExp("^" + f6 + "$"), inside: { "table-header": { pattern: RegExp(i2), alias: "important", inside: e2.languages.markdown }, punctuation: /\|/ } } } }, code: [{ pattern: /((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/, lookbehind: true, alias: "keyword" }, { pattern: /^```[\s\S]*?^```$/m, greedy: true, inside: { "code-block": { pattern: /^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m, lookbehind: true }, "code-language": { pattern: /^(```).+/, lookbehind: true }, punctuation: /```/ } }], title: [{ pattern: /\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m, alias: "important", inside: { punctuation: /==+$|--+$/ } }, { pattern: /(^\s*)#.+/m, lookbehind: true, alias: "important", inside: { punctuation: /^#+|#+$/ } }], hr: { pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m, lookbehind: true, alias: "punctuation" }, list: { pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m, lookbehind: true, alias: "punctuation" }, "url-reference": { pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/, inside: { variable: { pattern: /^(!?\[)[^\]]+/, lookbehind: true }, string: /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/, punctuation: /^[\[\]!:]|[<>]/ }, alias: "url" }, bold: { pattern: r2(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source), lookbehind: true, greedy: true, inside: { content: { pattern: /(^..)[\s\S]+(?=..$)/, lookbehind: true, inside: {} }, punctuation: /\*\*|__/ } }, italic: { pattern: r2(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source), lookbehind: true, greedy: true, inside: { content: { pattern: /(^.)[\s\S]+(?=.$)/, lookbehind: true, inside: {} }, punctuation: /[*_]/ } }, strike: { pattern: r2(/(~~?)(?:(?!~)<inner>)+\2/.source), lookbehind: true, greedy: true, inside: { content: { pattern: /(^~~?)[\s\S]+(?=\1$)/, lookbehind: true, inside: {} }, punctuation: /~~?/ } }, "code-snippet": { pattern: /(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/, lookbehind: true, greedy: true, alias: ["code", "keyword"] }, url: { pattern: r2(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source), lookbehind: true, greedy: true, inside: { operator: /^!/, content: { pattern: /(^\[)[^\]]+(?=\])/, lookbehind: true, inside: {} }, variable: { pattern: /(^\][ \t]?\[)[^\]]+(?=\]$)/, lookbehind: true }, url: { pattern: /(^\]\()[^\s)]+/, lookbehind: true }, string: { pattern: /(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/, lookbehind: true } } } }), ["url", "bold", "italic", "strike"].forEach(function(g2) {
    ["url", "bold", "italic", "strike", "code-snippet"].forEach(function(b2) {
      g2 !== b2 && (e2.languages.markdown[g2].inside.content.inside[b2] = e2.languages.markdown[b2]);
    });
  }), e2.hooks.add("after-tokenize", function(g2) {
    g2.language !== "markdown" && g2.language !== "md" || function b2(y4) {
      if (y4 && typeof y4 != "string")
        for (var v = 0, w2 = y4.length; v < w2; v++) {
          var n5, a2 = y4[v];
          a2.type !== "code" ? b2(a2.content) : (n5 = a2.content[1], a2 = a2.content[3], n5 && a2 && n5.type === "code-language" && a2.type === "code-block" && typeof n5.content == "string" && (n5 = n5.content.replace(/\b#/g, "sharp").replace(/\b\+\+/g, "pp"), n5 = "language-" + (n5 = (/[a-z][\w-]*/i.exec(n5) || [""])[0].toLowerCase()), a2.alias ? typeof a2.alias == "string" ? a2.alias = [a2.alias, n5] : a2.alias.push(n5) : a2.alias = [n5]));
        }
    }(g2.tokens);
  }), e2.hooks.add("wrap", function(g2) {
    if (g2.type === "code-block") {
      for (var b2 = "", y4 = 0, v = g2.classes.length; y4 < v; y4++) {
        var w2 = g2.classes[y4], w2 = /language-(.+)/.exec(w2);
        if (w2) {
          b2 = w2[1];
          break;
        }
      }
      var n5, a2 = e2.languages[b2];
      a2 ? g2.content = e2.highlight(function(s2) {
        return s2 = s2.replace(u3, ""), s2 = s2.replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi, function(c6, l5) {
          var d3;
          return (l5 = l5.toLowerCase())[0] === "#" ? (d3 = l5[1] === "x" ? parseInt(l5.slice(2), 16) : Number(l5.slice(1)), p4(d3)) : m4[l5] || c6;
        });
      }(g2.content), a2, b2) : b2 && b2 !== "none" && e2.plugins.autoloader && (n5 = "md-" + (/* @__PURE__ */ new Date()).valueOf() + "-" + Math.floor(1e16 * Math.random()), g2.attributes.id = n5, e2.plugins.autoloader.loadLanguages(b2, function() {
        var s2 = document.getElementById(n5);
        s2 && (s2.innerHTML = e2.highlight(s2.textContent, e2.languages[b2], b2));
      }));
    }
  }), RegExp(e2.languages.markup.tag.pattern.source, "gi")), m4 = { amp: "&", lt: "<", gt: ">", quot: '"' }, p4 = String.fromCodePoint || String.fromCharCode;
  e2.languages.md = e2.languages.markdown;
}(o), o.languages.graphql = { comment: /#.*/, description: { pattern: /(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i, greedy: true, alias: "string", inside: { "language-markdown": { pattern: /(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/, lookbehind: true, inside: o.languages.markdown } } }, string: { pattern: /"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/, greedy: true }, number: /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i, boolean: /\b(?:false|true)\b/, variable: /\$[a-z_]\w*/i, directive: { pattern: /@[a-z_]\w*/i, alias: "function" }, "attr-name": { pattern: /\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i, greedy: true }, "atom-input": { pattern: /\b[A-Z]\w*Input\b/, alias: "class-name" }, scalar: /\b(?:Boolean|Float|ID|Int|String)\b/, constant: /\b[A-Z][A-Z_\d]*\b/, "class-name": { pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/, lookbehind: true }, fragment: { pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/, lookbehind: true, alias: "function" }, "definition-mutation": { pattern: /(\bmutation\s+)[a-zA-Z_]\w*/, lookbehind: true, alias: "function" }, "definition-query": { pattern: /(\bquery\s+)[a-zA-Z_]\w*/, lookbehind: true, alias: "function" }, keyword: /\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/, operator: /[!=|&]|\.{3}/, "property-query": /\w+(?=\s*\()/, object: /\w+(?=\s*\{)/, punctuation: /[!(){}\[\]:=,]/, property: /\w+/ }, o.hooks.add("after-tokenize", function(e2) {
  if (e2.language === "graphql")
    for (var t5 = e2.tokens.filter(function(n5) {
      return typeof n5 != "string" && n5.type !== "comment" && n5.type !== "scalar";
    }), r2 = 0; r2 < t5.length; ) {
      var i2 = t5[r2++];
      if (i2.type === "keyword" && i2.content === "mutation") {
        var f6 = [];
        if (y4(["definition-mutation", "punctuation"]) && b2(1).content === "(") {
          r2 += 2;
          var h2 = v(/^\($/, /^\)$/);
          if (h2 === -1)
            continue;
          for (; r2 < h2; r2++) {
            var u3 = b2(0);
            u3.type === "variable" && (w2(u3, "variable-input"), f6.push(u3.content));
          }
          r2 = h2 + 1;
        }
        if (y4(["punctuation", "property-query"]) && b2(0).content === "{" && (r2++, w2(b2(0), "property-mutation"), 0 < f6.length)) {
          var m4 = v(/^\{$/, /^\}$/);
          if (m4 !== -1)
            for (var p4 = r2; p4 < m4; p4++) {
              var g2 = t5[p4];
              g2.type === "variable" && 0 <= f6.indexOf(g2.content) && w2(g2, "variable-input");
            }
        }
      }
    }
  function b2(n5) {
    return t5[r2 + n5];
  }
  function y4(n5, a2) {
    a2 = a2 || 0;
    for (var s2 = 0; s2 < n5.length; s2++) {
      var c6 = b2(s2 + a2);
      if (!c6 || c6.type !== n5[s2])
        return;
    }
    return 1;
  }
  function v(n5, a2) {
    for (var s2 = 1, c6 = r2; c6 < t5.length; c6++) {
      var l5 = t5[c6], d3 = l5.content;
      if (l5.type === "punctuation" && typeof d3 == "string") {
        if (n5.test(d3))
          s2++;
        else if (a2.test(d3) && --s2 === 0)
          return c6;
      }
    }
    return -1;
  }
  function w2(n5, a2) {
    var s2 = n5.alias;
    s2 ? Array.isArray(s2) || (n5.alias = s2 = [s2]) : n5.alias = s2 = [], s2.push(a2);
  }
}), o.languages.sql = { comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/, lookbehind: true }, variable: [{ pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/, greedy: true }, /@[\w.$]+/], string: { pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/, greedy: true, lookbehind: true }, identifier: { pattern: /(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/, greedy: true, lookbehind: true, inside: { punctuation: /^`|`$/ } }, function: /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i, keyword: /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i, boolean: /\b(?:FALSE|NULL|TRUE)\b/i, number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i, operator: /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i, punctuation: /[;[\]()`,.]/ }, function(e2) {
  var t5 = e2.languages.javascript["template-string"], r2 = t5.pattern.source, i2 = t5.inside.interpolation, f6 = i2.inside["interpolation-punctuation"], h2 = i2.pattern.source;
  function u3(y4, v) {
    if (e2.languages[y4])
      return { pattern: RegExp("((?:" + v + ")\\s*)" + r2), lookbehind: true, greedy: true, inside: { "template-punctuation": { pattern: /^`|`$/, alias: "string" }, "embedded-code": { pattern: /[\s\S]+/, alias: y4 } } };
  }
  function m4(y4, v, w2) {
    return y4 = { code: y4, grammar: v, language: w2 }, e2.hooks.run("before-tokenize", y4), y4.tokens = e2.tokenize(y4.code, y4.grammar), e2.hooks.run("after-tokenize", y4), y4.tokens;
  }
  function p4(y4, v, w2) {
    var s2 = e2.tokenize(y4, { interpolation: { pattern: RegExp(h2), lookbehind: true } }), n5 = 0, a2 = {}, s2 = m4(s2.map(function(l5) {
      if (typeof l5 == "string")
        return l5;
      for (var d3, k2, l5 = l5.content; y4.indexOf((k2 = n5++, d3 = "___" + w2.toUpperCase() + "_" + k2 + "___")) !== -1; )
        ;
      return a2[d3] = l5, d3;
    }).join(""), v, w2), c6 = Object.keys(a2);
    return n5 = 0, function l5(d3) {
      for (var k2 = 0; k2 < d3.length; k2++) {
        if (n5 >= c6.length)
          return;
        var E, A2, x2, F2, T, D3, C, L4 = d3[k2];
        typeof L4 == "string" || typeof L4.content == "string" ? (E = c6[n5], (C = (D3 = typeof L4 == "string" ? L4 : L4.content).indexOf(E)) !== -1 && (++n5, A2 = D3.substring(0, C), T = a2[E], x2 = void 0, (F2 = {})["interpolation-punctuation"] = f6, (F2 = e2.tokenize(T, F2)).length === 3 && ((x2 = [1, 1]).push.apply(x2, m4(F2[1], e2.languages.javascript, "javascript")), F2.splice.apply(F2, x2)), x2 = new e2.Token("interpolation", F2, i2.alias, T), F2 = D3.substring(C + E.length), T = [], A2 && T.push(A2), T.push(x2), F2 && (l5(D3 = [F2]), T.push.apply(T, D3)), typeof L4 == "string" ? (d3.splice.apply(d3, [k2, 1].concat(T)), k2 += T.length - 1) : L4.content = T)) : (C = L4.content, Array.isArray(C) ? l5(C) : l5([C]));
      }
    }(s2), new e2.Token(w2, s2, "language-" + w2, y4);
  }
  e2.languages.javascript["template-string"] = [u3("css", /\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), u3("html", /\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source), u3("svg", /\bsvg/.source), u3("markdown", /\b(?:markdown|md)/.source), u3("graphql", /\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source), u3("sql", /\bsql/.source), t5].filter(Boolean);
  var g2 = { javascript: true, js: true, typescript: true, ts: true, jsx: true, tsx: true };
  function b2(y4) {
    return typeof y4 == "string" ? y4 : Array.isArray(y4) ? y4.map(b2).join("") : b2(y4.content);
  }
  e2.hooks.add("after-tokenize", function(y4) {
    y4.language in g2 && function v(w2) {
      for (var n5 = 0, a2 = w2.length; n5 < a2; n5++) {
        var s2, c6, l5, d3 = w2[n5];
        typeof d3 != "string" && (s2 = d3.content, Array.isArray(s2) ? d3.type === "template-string" ? (d3 = s2[1], s2.length === 3 && typeof d3 != "string" && d3.type === "embedded-code" && (c6 = b2(d3), d3 = d3.alias, d3 = Array.isArray(d3) ? d3[0] : d3, l5 = e2.languages[d3]) && (s2[1] = p4(c6, l5, d3))) : v(s2) : typeof s2 != "string" && v([s2]));
      }
    }(y4.tokens);
  });
}(o), function(e2) {
  e2.languages.typescript = e2.languages.extend("javascript", { "class-name": { pattern: /(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/, lookbehind: true, greedy: true, inside: null }, builtin: /\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/ }), e2.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/, /\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/, /\btype\b(?=\s*(?:[\{*]|$))/), delete e2.languages.typescript.parameter, delete e2.languages.typescript["literal-property"];
  var t5 = e2.languages.extend("typescript", {});
  delete t5["class-name"], e2.languages.typescript["class-name"].inside = t5, e2.languages.insertBefore("typescript", "function", { decorator: { pattern: /@[$\w\xA0-\uFFFF]+/, inside: { at: { pattern: /^@/, alias: "operator" }, function: /^[\s\S]+/ } }, "generic-function": { pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/, greedy: true, inside: { function: /^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/, generic: { pattern: /<[\s\S]+/, alias: "class-name", inside: t5 } } } }), e2.languages.ts = e2.languages.typescript;
}(o), function(e2) {
  var t5 = e2.languages.javascript, r2 = /\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}/.source, i2 = "(@(?:arg|argument|param|property)\\s+(?:" + r2 + "\\s+)?)";
  e2.languages.jsdoc = e2.languages.extend("javadoclike", { parameter: { pattern: RegExp(i2 + /(?:(?!\s)[$\w\xA0-\uFFFF.])+(?=\s|$)/.source), lookbehind: true, inside: { punctuation: /\./ } } }), e2.languages.insertBefore("jsdoc", "keyword", { "optional-parameter": { pattern: RegExp(i2 + /\[(?:(?!\s)[$\w\xA0-\uFFFF.])+(?:=[^[\]]+)?\](?=\s|$)/.source), lookbehind: true, inside: { parameter: { pattern: /(^\[)[$\w\xA0-\uFFFF\.]+/, lookbehind: true, inside: { punctuation: /\./ } }, code: { pattern: /(=)[\s\S]*(?=\]$)/, lookbehind: true, inside: t5, alias: "language-javascript" }, punctuation: /[=[\]]/ } }, "class-name": [{ pattern: RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\s+(?:<TYPE>\s+)?)[A-Z]\w*(?:\.[A-Z]\w*)*/.source.replace(/<TYPE>/g, function() {
    return r2;
  })), lookbehind: true, inside: { punctuation: /\./ } }, { pattern: RegExp("(@[a-z]+\\s+)" + r2), lookbehind: true, inside: { string: t5.string, number: t5.number, boolean: t5.boolean, keyword: e2.languages.typescript.keyword, operator: /=>|\.\.\.|[&|?:*]/, punctuation: /[.,;=<>{}()[\]]/ } }], example: { pattern: /(@example\s+(?!\s))(?:[^@\s]|\s+(?!\s))+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/, lookbehind: true, inside: { code: { pattern: /^([\t ]*(?:\*\s*)?)\S.*$/m, lookbehind: true, inside: t5, alias: "language-javascript" } } } }), e2.languages.javadoclike.addSupport("javascript", e2.languages.jsdoc);
}(o), function(e2) {
  e2.languages.flow = e2.languages.extend("javascript", {}), e2.languages.insertBefore("flow", "keyword", { type: [{ pattern: /\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\b/, alias: "class-name" }] }), e2.languages.flow["function-variable"].pattern = /(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/i, delete e2.languages.flow.parameter, e2.languages.insertBefore("flow", "operator", { "flow-punctuation": { pattern: /\{\||\|\}/, alias: "punctuation" } }), Array.isArray(e2.languages.flow.keyword) || (e2.languages.flow.keyword = [e2.languages.flow.keyword]), e2.languages.flow.keyword.unshift({ pattern: /(^|[^$]\b)(?:Class|declare|opaque|type)\b(?!\$)/, lookbehind: true }, { pattern: /(^|[^$]\B)\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\b(?!\$)/, lookbehind: true });
}(o), o.languages.n4js = o.languages.extend("javascript", { keyword: /\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/ }), o.languages.insertBefore("n4js", "constant", { annotation: { pattern: /@+\w+/, alias: "operator" } }), o.languages.n4jsd = o.languages.n4js, function(e2) {
  function t5(u3, m4) {
    return RegExp(u3.replace(/<ID>/g, function() {
      return /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source;
    }), m4);
  }
  e2.languages.insertBefore("javascript", "function-variable", { "method-variable": { pattern: RegExp("(\\.\\s*)" + e2.languages.javascript["function-variable"].pattern.source), lookbehind: true, alias: ["function-variable", "method", "function", "property-access"] } }), e2.languages.insertBefore("javascript", "function", { method: { pattern: RegExp("(\\.\\s*)" + e2.languages.javascript.function.source), lookbehind: true, alias: ["function", "property-access"] } }), e2.languages.insertBefore("javascript", "constant", { "known-class-name": [{ pattern: /\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/, alias: "class-name" }, { pattern: /\b(?:[A-Z]\w*)Error\b/, alias: "class-name" }] }), e2.languages.insertBefore("javascript", "keyword", { imports: { pattern: t5(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source), lookbehind: true, inside: e2.languages.javascript }, exports: { pattern: t5(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source), lookbehind: true, inside: e2.languages.javascript } }), e2.languages.javascript.keyword.unshift({ pattern: /\b(?:as|default|export|from|import)\b/, alias: "module" }, { pattern: /\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/, alias: "control-flow" }, { pattern: /\bnull\b/, alias: ["null", "nil"] }, { pattern: /\bundefined\b/, alias: "nil" }), e2.languages.insertBefore("javascript", "operator", { spread: { pattern: /\.{3}/, alias: "operator" }, arrow: { pattern: /=>/, alias: "operator" } }), e2.languages.insertBefore("javascript", "punctuation", { "property-access": { pattern: t5(/(\.\s*)#?<ID>/.source), lookbehind: true }, "maybe-class-name": { pattern: /(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/, lookbehind: true }, dom: { pattern: /\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/, alias: "variable" }, console: { pattern: /\bconsole(?=\s*\.)/, alias: "class-name" } });
  for (var r2 = ["function", "function-variable", "method", "method-variable", "property-access"], i2 = 0; i2 < r2.length; i2++) {
    var h2 = r2[i2], f6 = e2.languages.javascript[h2], h2 = (f6 = e2.util.type(f6) === "RegExp" ? e2.languages.javascript[h2] = { pattern: f6 } : f6).inside || {};
    (f6.inside = h2)["maybe-class-name"] = /^[A-Z][\s\S]*/;
  }
}(o), function(e2) {
  var t5 = e2.util.clone(e2.languages.javascript), r2 = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source, i2 = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source, f6 = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;
  function h2(p4, g2) {
    return p4 = p4.replace(/<S>/g, function() {
      return r2;
    }).replace(/<BRACES>/g, function() {
      return i2;
    }).replace(/<SPREAD>/g, function() {
      return f6;
    }), RegExp(p4, g2);
  }
  f6 = h2(f6).source, e2.languages.jsx = e2.languages.extend("markup", t5), e2.languages.jsx.tag.pattern = h2(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source), e2.languages.jsx.tag.inside.tag.pattern = /^<\/?[^\s>\/]*/, e2.languages.jsx.tag.inside["attr-value"].pattern = /=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/, e2.languages.jsx.tag.inside.tag.inside["class-name"] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/, e2.languages.jsx.tag.inside.comment = t5.comment, e2.languages.insertBefore("inside", "attr-name", { spread: { pattern: h2(/<SPREAD>/.source), inside: e2.languages.jsx } }, e2.languages.jsx.tag), e2.languages.insertBefore("inside", "special-attr", { script: { pattern: h2(/=<BRACES>/.source), alias: "language-javascript", inside: { "script-punctuation": { pattern: /^=(?=\{)/, alias: "punctuation" }, rest: e2.languages.jsx } } }, e2.languages.jsx.tag);
  function u3(p4) {
    for (var g2 = [], b2 = 0; b2 < p4.length; b2++) {
      var y4 = p4[b2], v = false;
      typeof y4 != "string" && (y4.type === "tag" && y4.content[0] && y4.content[0].type === "tag" ? y4.content[0].content[0].content === "</" ? 0 < g2.length && g2[g2.length - 1].tagName === m4(y4.content[0].content[1]) && g2.pop() : y4.content[y4.content.length - 1].content !== "/>" && g2.push({ tagName: m4(y4.content[0].content[1]), openedBraces: 0 }) : 0 < g2.length && y4.type === "punctuation" && y4.content === "{" ? g2[g2.length - 1].openedBraces++ : 0 < g2.length && 0 < g2[g2.length - 1].openedBraces && y4.type === "punctuation" && y4.content === "}" ? g2[g2.length - 1].openedBraces-- : v = true), (v || typeof y4 == "string") && 0 < g2.length && g2[g2.length - 1].openedBraces === 0 && (v = m4(y4), b2 < p4.length - 1 && (typeof p4[b2 + 1] == "string" || p4[b2 + 1].type === "plain-text") && (v += m4(p4[b2 + 1]), p4.splice(b2 + 1, 1)), 0 < b2 && (typeof p4[b2 - 1] == "string" || p4[b2 - 1].type === "plain-text") && (v = m4(p4[b2 - 1]) + v, p4.splice(b2 - 1, 1), b2--), p4[b2] = new e2.Token("plain-text", v, null, v)), y4.content && typeof y4.content != "string" && u3(y4.content);
    }
  }
  var m4 = function(p4) {
    return p4 ? typeof p4 == "string" ? p4 : typeof p4.content == "string" ? p4.content : p4.content.map(m4).join("") : "";
  };
  e2.hooks.add("after-tokenize", function(p4) {
    p4.language !== "jsx" && p4.language !== "tsx" || u3(p4.tokens);
  });
}(o), function(e2) {
  var t5 = e2.util.clone(e2.languages.typescript), t5 = (e2.languages.tsx = e2.languages.extend("jsx", t5), delete e2.languages.tsx.parameter, delete e2.languages.tsx["literal-property"], e2.languages.tsx.tag);
  t5.pattern = RegExp(/(^|[^\w$]|(?=<\/))/.source + "(?:" + t5.pattern.source + ")", t5.pattern.flags), t5.lookbehind = true;
}(o), o.languages.swift = { comment: { pattern: /(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/, lookbehind: true, greedy: true }, "string-literal": [{ pattern: RegExp(/(^|[^"#])/.source + "(?:" + /"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source + "|" + /"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source + ")" + /(?!["#])/.source), lookbehind: true, greedy: true, inside: { interpolation: { pattern: /(\\\()(?:[^()]|\([^()]*\))*(?=\))/, lookbehind: true, inside: null }, "interpolation-punctuation": { pattern: /^\)|\\\($/, alias: "punctuation" }, punctuation: /\\(?=[\r\n])/, string: /[\s\S]+/ } }, { pattern: RegExp(/(^|[^"#])(#+)/.source + "(?:" + /"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source + "|" + /"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source + ")\\2"), lookbehind: true, greedy: true, inside: { interpolation: { pattern: /(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/, lookbehind: true, inside: null }, "interpolation-punctuation": { pattern: /^\)|\\#+\($/, alias: "punctuation" }, string: /[\s\S]+/ } }], directive: { pattern: RegExp(/#/.source + "(?:" + /(?:elseif|if)\b/.source + "(?:[ 	]*" + /(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source + ")+|" + /(?:else|endif)\b/.source + ")"), alias: "property", inside: { "directive-name": /^#\w+/, boolean: /\b(?:false|true)\b/, number: /\b\d+(?:\.\d+)*\b/, operator: /!|&&|\|\||[<>]=?/, punctuation: /[(),]/ } }, literal: { pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/, alias: "constant" }, "other-directive": { pattern: /#\w+\b/, alias: "property" }, attribute: { pattern: /@\w+/, alias: "atrule" }, "function-definition": { pattern: /(\bfunc\s+)\w+/, lookbehind: true, alias: "function" }, label: { pattern: /\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/, lookbehind: true, alias: "important" }, keyword: /\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/, boolean: /\b(?:false|true)\b/, nil: { pattern: /\bnil\b/, alias: "constant" }, "short-argument": /\$\d+\b/, omit: { pattern: /\b_\b/, alias: "keyword" }, number: /\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i, "class-name": /\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/, function: /\b[a-z_]\w*(?=\s*\()/i, constant: /\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/, operator: /[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/, punctuation: /[{}[\]();,.:\\]/ }, o.languages.swift["string-literal"].forEach(function(e2) {
  e2.inside.interpolation.inside = o.languages.swift;
}), function(e2) {
  e2.languages.kotlin = e2.languages.extend("clike", { keyword: { pattern: /(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/, lookbehind: true }, function: [{ pattern: /(?:`[^\r\n`]+`|\b\w+)(?=\s*\()/, greedy: true }, { pattern: /(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/, lookbehind: true, greedy: true }], number: /\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/, operator: /\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/ }), delete e2.languages.kotlin["class-name"];
  var t5 = { "interpolation-punctuation": { pattern: /^\$\{?|\}$/, alias: "punctuation" }, expression: { pattern: /[\s\S]+/, inside: e2.languages.kotlin } };
  e2.languages.insertBefore("kotlin", "string", { "string-literal": [{ pattern: /"""(?:[^$]|\$(?:(?!\{)|\{[^{}]*\}))*?"""/, alias: "multiline", inside: { interpolation: { pattern: /\$(?:[a-z_]\w*|\{[^{}]*\})/i, inside: t5 }, string: /[\s\S]+/ } }, { pattern: /"(?:[^"\\\r\n$]|\\.|\$(?:(?!\{)|\{[^{}]*\}))*"/, alias: "singleline", inside: { interpolation: { pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:[a-z_]\w*|\{[^{}]*\})/i, lookbehind: true, inside: t5 }, string: /[\s\S]+/ } }], char: { pattern: /'(?:[^'\\\r\n]|\\(?:.|u[a-fA-F0-9]{0,4}))'/, greedy: true } }), delete e2.languages.kotlin.string, e2.languages.insertBefore("kotlin", "keyword", { annotation: { pattern: /\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/, alias: "builtin" } }), e2.languages.insertBefore("kotlin", "function", { label: { pattern: /\b\w+@|@\w+\b/, alias: "symbol" } }), e2.languages.kt = e2.languages.kotlin, e2.languages.kts = e2.languages.kotlin;
}(o), o.languages.c = o.languages.extend("clike", { comment: { pattern: /\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/, greedy: true }, string: { pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/, greedy: true }, "class-name": { pattern: /(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/, lookbehind: true }, keyword: /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/, function: /\b[a-z_]\w*(?=\s*\()/i, number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i, operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/ }), o.languages.insertBefore("c", "string", { char: { pattern: /'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/, greedy: true } }), o.languages.insertBefore("c", "string", { macro: { pattern: /(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im, lookbehind: true, greedy: true, alias: "property", inside: { string: [{ pattern: /^(#\s*include\s*)<[^>]+>/, lookbehind: true }, o.languages.c.string], char: o.languages.c.char, comment: o.languages.c.comment, "macro-name": [{ pattern: /(^#\s*define\s+)\w+\b(?!\()/i, lookbehind: true }, { pattern: /(^#\s*define\s+)\w+\b(?=\()/i, lookbehind: true, alias: "function" }], directive: { pattern: /^(#\s*)[a-z]+/, lookbehind: true, alias: "keyword" }, "directive-hash": /^#/, punctuation: /##|\\(?=[\r\n])/, expression: { pattern: /\S[\s\S]*/, inside: o.languages.c } } } }), o.languages.insertBefore("c", "function", { constant: /\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/ }), delete o.languages.c.boolean, o.languages.objectivec = o.languages.extend("c", { string: { pattern: /@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/, greedy: true }, keyword: /\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/, operator: /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/ }), delete o.languages.objectivec["class-name"], o.languages.objc = o.languages.objectivec, o.languages.reason = o.languages.extend("clike", { string: { pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/, greedy: true }, "class-name": /\b[A-Z]\w*/, keyword: /\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/, operator: /\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/ }), o.languages.insertBefore("reason", "class-name", { char: { pattern: /'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/, greedy: true }, constructor: /\b[A-Z]\w*\b(?!\s*\.)/, label: { pattern: /\b[a-z]\w*(?=::)/, alias: "symbol" } }), delete o.languages.reason.function, function(e2) {
  for (var t5 = /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\//.source, r2 = 0; r2 < 2; r2++)
    t5 = t5.replace(/<self>/g, function() {
      return t5;
    });
  t5 = t5.replace(/<self>/g, function() {
    return /[^\s\S]/.source;
  }), e2.languages.rust = { comment: [{ pattern: RegExp(/(^|[^\\])/.source + t5), lookbehind: true, greedy: true }, { pattern: /(^|[^\\:])\/\/.*/, lookbehind: true, greedy: true }], string: { pattern: /b?"(?:\\[\s\S]|[^\\"])*"|b?r(#*)"(?:[^"]|"(?!\1))*"\1/, greedy: true }, char: { pattern: /b?'(?:\\(?:x[0-7][\da-fA-F]|u\{(?:[\da-fA-F]_*){1,6}\}|.)|[^\\\r\n\t'])'/, greedy: true }, attribute: { pattern: /#!?\[(?:[^\[\]"]|"(?:\\[\s\S]|[^\\"])*")*\]/, greedy: true, alias: "attr-name", inside: { string: null } }, "closure-params": { pattern: /([=(,:]\s*|\bmove\s*)\|[^|]*\||\|[^|]*\|(?=\s*(?:\{|->))/, lookbehind: true, greedy: true, inside: { "closure-punctuation": { pattern: /^\||\|$/, alias: "punctuation" }, rest: null } }, "lifetime-annotation": { pattern: /'\w+/, alias: "symbol" }, "fragment-specifier": { pattern: /(\$\w+:)[a-z]+/, lookbehind: true, alias: "punctuation" }, variable: /\$\w+/, "function-definition": { pattern: /(\bfn\s+)\w+/, lookbehind: true, alias: "function" }, "type-definition": { pattern: /(\b(?:enum|struct|trait|type|union)\s+)\w+/, lookbehind: true, alias: "class-name" }, "module-declaration": [{ pattern: /(\b(?:crate|mod)\s+)[a-z][a-z_\d]*/, lookbehind: true, alias: "namespace" }, { pattern: /(\b(?:crate|self|super)\s*)::\s*[a-z][a-z_\d]*\b(?:\s*::(?:\s*[a-z][a-z_\d]*\s*::)*)?/, lookbehind: true, alias: "namespace", inside: { punctuation: /::/ } }], keyword: [/\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\b/, /\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\b/], function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())/, macro: { pattern: /\b\w+!/, alias: "property" }, constant: /\b[A-Z_][A-Z_\d]+\b/, "class-name": /\b[A-Z]\w*\b/, namespace: { pattern: /(?:\b[a-z][a-z_\d]*\s*::\s*)*\b[a-z][a-z_\d]*\s*::(?!\s*<)/, inside: { punctuation: /::/ } }, number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\b/, boolean: /\b(?:false|true)\b/, punctuation: /->|\.\.=|\.{1,3}|::|[{}[\];(),:]/, operator: /[-+*\/%!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?=?|[@?]/ }, e2.languages.rust["closure-params"].inside.rest = e2.languages.rust, e2.languages.rust.attribute.inside.string = e2.languages.rust.string;
}(o), o.languages.go = o.languages.extend("clike", { string: { pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/, lookbehind: true, greedy: true }, keyword: /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/, boolean: /\b(?:_|false|iota|nil|true)\b/, number: [/\b0(?:b[01_]+|o[0-7_]+)i?\b/i, /\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i, /(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i], operator: /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./, builtin: /\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/ }), o.languages.insertBefore("go", "string", { char: { pattern: /'(?:\\.|[^'\\\r\n]){0,10}'/, greedy: true } }), delete o.languages.go["class-name"], function(e2) {
  var t5 = /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/, r2 = /\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g, function() {
    return t5.source;
  });
  e2.languages.cpp = e2.languages.extend("c", { "class-name": [{ pattern: RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g, function() {
    return t5.source;
  })), lookbehind: true }, /\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/, /\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i, /\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/], keyword: t5, number: { pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i, greedy: true }, operator: />>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/, boolean: /\b(?:false|true)\b/ }), e2.languages.insertBefore("cpp", "string", { module: { pattern: RegExp(/(\b(?:import|module)\s+)/.source + "(?:" + /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source + "|" + /<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g, function() {
    return r2;
  }) + ")"), lookbehind: true, greedy: true, inside: { string: /^[<"][\s\S]+/, operator: /:/, punctuation: /\./ } }, "raw-string": { pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/, alias: "string", greedy: true } }), e2.languages.insertBefore("cpp", "keyword", { "generic-function": { pattern: /\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i, inside: { function: /^\w+/, generic: { pattern: /<[\s\S]+/, alias: "class-name", inside: e2.languages.cpp } } } }), e2.languages.insertBefore("cpp", "operator", { "double-colon": { pattern: /::/, alias: "punctuation" } }), e2.languages.insertBefore("cpp", "class-name", { "base-clause": { pattern: /(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/, lookbehind: true, greedy: true, inside: e2.languages.extend("cpp", {}) } }), e2.languages.insertBefore("inside", "double-colon", { "class-name": /\b[a-z_]\w*\b(?!\s*::)/i }, e2.languages.cpp["base-clause"]);
}(o), o.languages.python = { comment: { pattern: /(^|[^\\])#.*/, lookbehind: true, greedy: true }, "string-interpolation": { pattern: /(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i, greedy: true, inside: { interpolation: { pattern: /((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/, lookbehind: true, inside: { "format-spec": { pattern: /(:)[^:(){}]+(?=\}$)/, lookbehind: true }, "conversion-option": { pattern: /![sra](?=[:}]$)/, alias: "punctuation" }, rest: null } }, string: /[\s\S]+/ } }, "triple-quoted-string": { pattern: /(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i, greedy: true, alias: "string" }, string: { pattern: /(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i, greedy: true }, function: { pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g, lookbehind: true }, "class-name": { pattern: /(\bclass\s+)\w+/i, lookbehind: true }, decorator: { pattern: /(^[\t ]*)@\w+(?:\.\w+)*/m, lookbehind: true, alias: ["annotation", "punctuation"], inside: { punctuation: /\./ } }, keyword: /\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/, builtin: /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/, boolean: /\b(?:False|None|True)\b/, number: /\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i, operator: /[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/, punctuation: /[{}[\];(),.:]/ }, o.languages.python["string-interpolation"].inside.interpolation.inside.rest = o.languages.python, o.languages.py = o.languages.python, o.languages.json = { property: { pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/, lookbehind: true, greedy: true }, string: { pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/, lookbehind: true, greedy: true }, comment: { pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/, greedy: true }, number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i, punctuation: /[{}[\],]/, operator: /:/, boolean: /\b(?:false|true)\b/, null: { pattern: /\bnull\b/, alias: "keyword" } }, o.languages.webmanifest = o.languages.json;
var V3 = {};
_e2(V3, {
  dracula: () => Le2,
  duotoneDark: () => Ne2,
  duotoneLight: () => De2,
  github: () => $e2,
  gruvboxMaterialDark: () => gt2,
  gruvboxMaterialLight: () => yt2,
  jettwaveDark: () => rt2,
  jettwaveLight: () => st2,
  nightOwl: () => je2,
  nightOwlLight: () => Me2,
  oceanicNext: () => Ge2,
  okaidia: () => qe2,
  oneDark: () => it2,
  oneLight: () => ct2,
  palenight: () => He2,
  shadesOfPurple: () => Ke2,
  synthwave84: () => Xe2,
  ultramin: () => Je2,
  vsDark: () => ce2,
  vsLight: () => at2
});
var Ie2 = {
  plain: {
    color: "#F8F8F2",
    backgroundColor: "#282A36"
  },
  styles: [
    {
      types: ["prolog", "constant", "builtin"],
      style: {
        color: "rgb(189, 147, 249)"
      }
    },
    {
      types: ["inserted", "function"],
      style: {
        color: "rgb(80, 250, 123)"
      }
    },
    {
      types: ["deleted"],
      style: {
        color: "rgb(255, 85, 85)"
      }
    },
    {
      types: ["changed"],
      style: {
        color: "rgb(255, 184, 108)"
      }
    },
    {
      types: ["punctuation", "symbol"],
      style: {
        color: "rgb(248, 248, 242)"
      }
    },
    {
      types: ["string", "char", "tag", "selector"],
      style: {
        color: "rgb(255, 121, 198)"
      }
    },
    {
      types: ["keyword", "variable"],
      style: {
        color: "rgb(189, 147, 249)",
        fontStyle: "italic"
      }
    },
    {
      types: ["comment"],
      style: {
        color: "rgb(98, 114, 164)"
      }
    },
    {
      types: ["attr-name"],
      style: {
        color: "rgb(241, 250, 140)"
      }
    }
  ]
};
var Le2 = Ie2;
var Oe2 = {
  plain: {
    backgroundColor: "#2a2734",
    color: "#9a86fd"
  },
  styles: [
    {
      types: ["comment", "prolog", "doctype", "cdata", "punctuation"],
      style: {
        color: "#6c6783"
      }
    },
    {
      types: ["namespace"],
      style: {
        opacity: 0.7
      }
    },
    {
      types: ["tag", "operator", "number"],
      style: {
        color: "#e09142"
      }
    },
    {
      types: ["property", "function"],
      style: {
        color: "#9a86fd"
      }
    },
    {
      types: ["tag-id", "selector", "atrule-id"],
      style: {
        color: "#eeebff"
      }
    },
    {
      types: ["attr-name"],
      style: {
        color: "#c4b9fe"
      }
    },
    {
      types: [
        "boolean",
        "string",
        "entity",
        "url",
        "attr-value",
        "keyword",
        "control",
        "directive",
        "unit",
        "statement",
        "regex",
        "atrule",
        "placeholder",
        "variable"
      ],
      style: {
        color: "#ffcc99"
      }
    },
    {
      types: ["deleted"],
      style: {
        textDecorationLine: "line-through"
      }
    },
    {
      types: ["inserted"],
      style: {
        textDecorationLine: "underline"
      }
    },
    {
      types: ["italic"],
      style: {
        fontStyle: "italic"
      }
    },
    {
      types: ["important", "bold"],
      style: {
        fontWeight: "bold"
      }
    },
    {
      types: ["important"],
      style: {
        color: "#c4b9fe"
      }
    }
  ]
};
var Ne2 = Oe2;
var Ce2 = {
  plain: {
    backgroundColor: "#faf8f5",
    color: "#728fcb"
  },
  styles: [
    {
      types: ["comment", "prolog", "doctype", "cdata", "punctuation"],
      style: {
        color: "#b6ad9a"
      }
    },
    {
      types: ["namespace"],
      style: {
        opacity: 0.7
      }
    },
    {
      types: ["tag", "operator", "number"],
      style: {
        color: "#063289"
      }
    },
    {
      types: ["property", "function"],
      style: {
        color: "#b29762"
      }
    },
    {
      types: ["tag-id", "selector", "atrule-id"],
      style: {
        color: "#2d2006"
      }
    },
    {
      types: ["attr-name"],
      style: {
        color: "#896724"
      }
    },
    {
      types: [
        "boolean",
        "string",
        "entity",
        "url",
        "attr-value",
        "keyword",
        "control",
        "directive",
        "unit",
        "statement",
        "regex",
        "atrule"
      ],
      style: {
        color: "#728fcb"
      }
    },
    {
      types: ["placeholder", "variable"],
      style: {
        color: "#93abdc"
      }
    },
    {
      types: ["deleted"],
      style: {
        textDecorationLine: "line-through"
      }
    },
    {
      types: ["inserted"],
      style: {
        textDecorationLine: "underline"
      }
    },
    {
      types: ["italic"],
      style: {
        fontStyle: "italic"
      }
    },
    {
      types: ["important", "bold"],
      style: {
        fontWeight: "bold"
      }
    },
    {
      types: ["important"],
      style: {
        color: "#896724"
      }
    }
  ]
};
var De2 = Ce2;
var Be = {
  plain: {
    color: "#393A34",
    backgroundColor: "#f6f8fa"
  },
  styles: [
    {
      types: ["comment", "prolog", "doctype", "cdata"],
      style: {
        color: "#999988",
        fontStyle: "italic"
      }
    },
    {
      types: ["namespace"],
      style: {
        opacity: 0.7
      }
    },
    {
      types: ["string", "attr-value"],
      style: {
        color: "#e3116c"
      }
    },
    {
      types: ["punctuation", "operator"],
      style: {
        color: "#393A34"
      }
    },
    {
      types: [
        "entity",
        "url",
        "symbol",
        "number",
        "boolean",
        "variable",
        "constant",
        "property",
        "regex",
        "inserted"
      ],
      style: {
        color: "#36acaa"
      }
    },
    {
      types: ["atrule", "keyword", "attr-name", "selector"],
      style: {
        color: "#00a4db"
      }
    },
    {
      types: ["function", "deleted", "tag"],
      style: {
        color: "#d73a49"
      }
    },
    {
      types: ["function-variable"],
      style: {
        color: "#6f42c1"
      }
    },
    {
      types: ["tag", "selector", "keyword"],
      style: {
        color: "#00009f"
      }
    }
  ]
};
var $e2 = Be;
var Pe2 = {
  plain: {
    color: "#d6deeb",
    backgroundColor: "#011627"
  },
  styles: [
    {
      types: ["changed"],
      style: {
        color: "rgb(162, 191, 252)",
        fontStyle: "italic"
      }
    },
    {
      types: ["deleted"],
      style: {
        color: "rgba(239, 83, 80, 0.56)",
        fontStyle: "italic"
      }
    },
    {
      types: ["inserted", "attr-name"],
      style: {
        color: "rgb(173, 219, 103)",
        fontStyle: "italic"
      }
    },
    {
      types: ["comment"],
      style: {
        color: "rgb(99, 119, 119)",
        fontStyle: "italic"
      }
    },
    {
      types: ["string", "url"],
      style: {
        color: "rgb(173, 219, 103)"
      }
    },
    {
      types: ["variable"],
      style: {
        color: "rgb(214, 222, 235)"
      }
    },
    {
      types: ["number"],
      style: {
        color: "rgb(247, 140, 108)"
      }
    },
    {
      types: ["builtin", "char", "constant", "function"],
      style: {
        color: "rgb(130, 170, 255)"
      }
    },
    {
      // This was manually added after the auto-generation
      // so that punctuations are not italicised
      types: ["punctuation"],
      style: {
        color: "rgb(199, 146, 234)"
      }
    },
    {
      types: ["selector", "doctype"],
      style: {
        color: "rgb(199, 146, 234)",
        fontStyle: "italic"
      }
    },
    {
      types: ["class-name"],
      style: {
        color: "rgb(255, 203, 139)"
      }
    },
    {
      types: ["tag", "operator", "keyword"],
      style: {
        color: "rgb(127, 219, 202)"
      }
    },
    {
      types: ["boolean"],
      style: {
        color: "rgb(255, 88, 116)"
      }
    },
    {
      types: ["property"],
      style: {
        color: "rgb(128, 203, 196)"
      }
    },
    {
      types: ["namespace"],
      style: {
        color: "rgb(178, 204, 214)"
      }
    }
  ]
};
var je2 = Pe2;
var ze = {
  plain: {
    color: "#403f53",
    backgroundColor: "#FBFBFB"
  },
  styles: [
    {
      types: ["changed"],
      style: {
        color: "rgb(162, 191, 252)",
        fontStyle: "italic"
      }
    },
    {
      types: ["deleted"],
      style: {
        color: "rgba(239, 83, 80, 0.56)",
        fontStyle: "italic"
      }
    },
    {
      types: ["inserted", "attr-name"],
      style: {
        color: "rgb(72, 118, 214)",
        fontStyle: "italic"
      }
    },
    {
      types: ["comment"],
      style: {
        color: "rgb(152, 159, 177)",
        fontStyle: "italic"
      }
    },
    {
      types: ["string", "builtin", "char", "constant", "url"],
      style: {
        color: "rgb(72, 118, 214)"
      }
    },
    {
      types: ["variable"],
      style: {
        color: "rgb(201, 103, 101)"
      }
    },
    {
      types: ["number"],
      style: {
        color: "rgb(170, 9, 130)"
      }
    },
    {
      // This was manually added after the auto-generation
      // so that punctuations are not italicised
      types: ["punctuation"],
      style: {
        color: "rgb(153, 76, 195)"
      }
    },
    {
      types: ["function", "selector", "doctype"],
      style: {
        color: "rgb(153, 76, 195)",
        fontStyle: "italic"
      }
    },
    {
      types: ["class-name"],
      style: {
        color: "rgb(17, 17, 17)"
      }
    },
    {
      types: ["tag"],
      style: {
        color: "rgb(153, 76, 195)"
      }
    },
    {
      types: ["operator", "property", "keyword", "namespace"],
      style: {
        color: "rgb(12, 150, 155)"
      }
    },
    {
      types: ["boolean"],
      style: {
        color: "rgb(188, 84, 84)"
      }
    }
  ]
};
var Me2 = ze;
var R2 = {
  char: "#D8DEE9",
  comment: "#999999",
  keyword: "#c5a5c5",
  primitive: "#5a9bcf",
  string: "#8dc891",
  variable: "#d7deea",
  boolean: "#ff8b50",
  tag: "#fc929e",
  function: "#79b6f2",
  className: "#FAC863"
};
var Ue2 = {
  plain: {
    backgroundColor: "#282c34",
    color: "#ffffff"
  },
  styles: [
    {
      types: ["attr-name"],
      style: {
        color: R2.keyword
      }
    },
    {
      types: ["attr-value"],
      style: {
        color: R2.string
      }
    },
    {
      types: [
        "comment",
        "block-comment",
        "prolog",
        "doctype",
        "cdata",
        "shebang"
      ],
      style: {
        color: R2.comment
      }
    },
    {
      types: [
        "property",
        "number",
        "function-name",
        "constant",
        "symbol",
        "deleted"
      ],
      style: {
        color: R2.primitive
      }
    },
    {
      types: ["boolean"],
      style: {
        color: R2.boolean
      }
    },
    {
      types: ["tag"],
      style: {
        color: R2.tag
      }
    },
    {
      types: ["string"],
      style: {
        color: R2.string
      }
    },
    {
      types: ["punctuation"],
      style: {
        color: R2.string
      }
    },
    {
      types: ["selector", "char", "builtin", "inserted"],
      style: {
        color: R2.char
      }
    },
    {
      types: ["function"],
      style: {
        color: R2.function
      }
    },
    {
      types: ["operator", "entity", "url", "variable"],
      style: {
        color: R2.variable
      }
    },
    {
      types: ["keyword"],
      style: {
        color: R2.keyword
      }
    },
    {
      types: ["atrule", "class-name"],
      style: {
        color: R2.className
      }
    },
    {
      types: ["important"],
      style: {
        fontWeight: "400"
      }
    },
    {
      types: ["bold"],
      style: {
        fontWeight: "bold"
      }
    },
    {
      types: ["italic"],
      style: {
        fontStyle: "italic"
      }
    },
    {
      types: ["namespace"],
      style: {
        opacity: 0.7
      }
    }
  ]
};
var Ge2 = Ue2;
var Ze2 = {
  plain: {
    color: "#f8f8f2",
    backgroundColor: "#272822"
  },
  styles: [
    {
      types: ["changed"],
      style: {
        color: "rgb(162, 191, 252)",
        fontStyle: "italic"
      }
    },
    {
      types: ["deleted"],
      style: {
        color: "#f92672",
        fontStyle: "italic"
      }
    },
    {
      types: ["inserted"],
      style: {
        color: "rgb(173, 219, 103)",
        fontStyle: "italic"
      }
    },
    {
      types: ["comment"],
      style: {
        color: "#8292a2",
        fontStyle: "italic"
      }
    },
    {
      types: ["string", "url"],
      style: {
        color: "#a6e22e"
      }
    },
    {
      types: ["variable"],
      style: {
        color: "#f8f8f2"
      }
    },
    {
      types: ["number"],
      style: {
        color: "#ae81ff"
      }
    },
    {
      types: ["builtin", "char", "constant", "function", "class-name"],
      style: {
        color: "#e6db74"
      }
    },
    {
      types: ["punctuation"],
      style: {
        color: "#f8f8f2"
      }
    },
    {
      types: ["selector", "doctype"],
      style: {
        color: "#a6e22e",
        fontStyle: "italic"
      }
    },
    {
      types: ["tag", "operator", "keyword"],
      style: {
        color: "#66d9ef"
      }
    },
    {
      types: ["boolean"],
      style: {
        color: "#ae81ff"
      }
    },
    {
      types: ["namespace"],
      style: {
        color: "rgb(178, 204, 214)",
        opacity: 0.7
      }
    },
    {
      types: ["tag", "property"],
      style: {
        color: "#f92672"
      }
    },
    {
      types: ["attr-name"],
      style: {
        color: "#a6e22e !important"
      }
    },
    {
      types: ["doctype"],
      style: {
        color: "#8292a2"
      }
    },
    {
      types: ["rule"],
      style: {
        color: "#e6db74"
      }
    }
  ]
};
var qe2 = Ze2;
var We3 = {
  plain: {
    color: "#bfc7d5",
    backgroundColor: "#292d3e"
  },
  styles: [
    {
      types: ["comment"],
      style: {
        color: "rgb(105, 112, 152)",
        fontStyle: "italic"
      }
    },
    {
      types: ["string", "inserted"],
      style: {
        color: "rgb(195, 232, 141)"
      }
    },
    {
      types: ["number"],
      style: {
        color: "rgb(247, 140, 108)"
      }
    },
    {
      types: ["builtin", "char", "constant", "function"],
      style: {
        color: "rgb(130, 170, 255)"
      }
    },
    {
      types: ["punctuation", "selector"],
      style: {
        color: "rgb(199, 146, 234)"
      }
    },
    {
      types: ["variable"],
      style: {
        color: "rgb(191, 199, 213)"
      }
    },
    {
      types: ["class-name", "attr-name"],
      style: {
        color: "rgb(255, 203, 107)"
      }
    },
    {
      types: ["tag", "deleted"],
      style: {
        color: "rgb(255, 85, 114)"
      }
    },
    {
      types: ["operator"],
      style: {
        color: "rgb(137, 221, 255)"
      }
    },
    {
      types: ["boolean"],
      style: {
        color: "rgb(255, 88, 116)"
      }
    },
    {
      types: ["keyword"],
      style: {
        fontStyle: "italic"
      }
    },
    {
      types: ["doctype"],
      style: {
        color: "rgb(199, 146, 234)",
        fontStyle: "italic"
      }
    },
    {
      types: ["namespace"],
      style: {
        color: "rgb(178, 204, 214)"
      }
    },
    {
      types: ["url"],
      style: {
        color: "rgb(221, 221, 221)"
      }
    }
  ]
};
var He2 = We3;
var Ye2 = {
  plain: {
    color: "#9EFEFF",
    backgroundColor: "#2D2A55"
  },
  styles: [
    {
      types: ["changed"],
      style: {
        color: "rgb(255, 238, 128)"
      }
    },
    {
      types: ["deleted"],
      style: {
        color: "rgba(239, 83, 80, 0.56)"
      }
    },
    {
      types: ["inserted"],
      style: {
        color: "rgb(173, 219, 103)"
      }
    },
    {
      types: ["comment"],
      style: {
        color: "rgb(179, 98, 255)",
        fontStyle: "italic"
      }
    },
    {
      types: ["punctuation"],
      style: {
        color: "rgb(255, 255, 255)"
      }
    },
    {
      types: ["constant"],
      style: {
        color: "rgb(255, 98, 140)"
      }
    },
    {
      types: ["string", "url"],
      style: {
        color: "rgb(165, 255, 144)"
      }
    },
    {
      types: ["variable"],
      style: {
        color: "rgb(255, 238, 128)"
      }
    },
    {
      types: ["number", "boolean"],
      style: {
        color: "rgb(255, 98, 140)"
      }
    },
    {
      types: ["attr-name"],
      style: {
        color: "rgb(255, 180, 84)"
      }
    },
    {
      types: [
        "keyword",
        "operator",
        "property",
        "namespace",
        "tag",
        "selector",
        "doctype"
      ],
      style: {
        color: "rgb(255, 157, 0)"
      }
    },
    {
      types: ["builtin", "char", "constant", "function", "class-name"],
      style: {
        color: "rgb(250, 208, 0)"
      }
    }
  ]
};
var Ke2 = Ye2;
var Ve2 = {
  plain: {
    backgroundColor: "linear-gradient(to bottom, #2a2139 75%, #34294f)",
    backgroundImage: "#34294f",
    color: "#f92aad",
    textShadow: "0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3"
  },
  styles: [
    {
      types: ["comment", "block-comment", "prolog", "doctype", "cdata"],
      style: {
        color: "#495495",
        fontStyle: "italic"
      }
    },
    {
      types: ["punctuation"],
      style: {
        color: "#ccc"
      }
    },
    {
      types: [
        "tag",
        "attr-name",
        "namespace",
        "number",
        "unit",
        "hexcode",
        "deleted"
      ],
      style: {
        color: "#e2777a"
      }
    },
    {
      types: ["property", "selector"],
      style: {
        color: "#72f1b8",
        textShadow: "0 0 2px #100c0f, 0 0 10px #257c5575, 0 0 35px #21272475"
      }
    },
    {
      types: ["function-name"],
      style: {
        color: "#6196cc"
      }
    },
    {
      types: ["boolean", "selector-id", "function"],
      style: {
        color: "#fdfdfd",
        textShadow: "0 0 2px #001716, 0 0 3px #03edf975, 0 0 5px #03edf975, 0 0 8px #03edf975"
      }
    },
    {
      types: ["class-name", "maybe-class-name", "builtin"],
      style: {
        color: "#fff5f6",
        textShadow: "0 0 2px #000, 0 0 10px #fc1f2c75, 0 0 5px #fc1f2c75, 0 0 25px #fc1f2c75"
      }
    },
    {
      types: ["constant", "symbol"],
      style: {
        color: "#f92aad",
        textShadow: "0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3"
      }
    },
    {
      types: ["important", "atrule", "keyword", "selector-class"],
      style: {
        color: "#f4eee4",
        textShadow: "0 0 2px #393a33, 0 0 8px #f39f0575, 0 0 2px #f39f0575"
      }
    },
    {
      types: ["string", "char", "attr-value", "regex", "variable"],
      style: {
        color: "#f87c32"
      }
    },
    {
      types: ["parameter"],
      style: {
        fontStyle: "italic"
      }
    },
    {
      types: ["entity", "url"],
      style: {
        color: "#67cdcc"
      }
    },
    {
      types: ["operator"],
      style: {
        color: "ffffffee"
      }
    },
    {
      types: ["important", "bold"],
      style: {
        fontWeight: "bold"
      }
    },
    {
      types: ["italic"],
      style: {
        fontStyle: "italic"
      }
    },
    {
      types: ["entity"],
      style: {
        cursor: "help"
      }
    },
    {
      types: ["inserted"],
      style: {
        color: "green"
      }
    }
  ]
};
var Xe2 = Ve2;
var Qe2 = {
  plain: {
    color: "#282a2e",
    backgroundColor: "#ffffff"
  },
  styles: [
    {
      types: ["comment"],
      style: {
        color: "rgb(197, 200, 198)"
      }
    },
    {
      types: ["string", "number", "builtin", "variable"],
      style: {
        color: "rgb(150, 152, 150)"
      }
    },
    {
      types: ["class-name", "function", "tag", "attr-name"],
      style: {
        color: "rgb(40, 42, 46)"
      }
    }
  ]
};
var Je2 = Qe2;
var et2 = {
  plain: {
    color: "#9CDCFE",
    backgroundColor: "#1E1E1E"
  },
  styles: [
    {
      types: ["prolog"],
      style: {
        color: "rgb(0, 0, 128)"
      }
    },
    {
      types: ["comment"],
      style: {
        color: "rgb(106, 153, 85)"
      }
    },
    {
      types: ["builtin", "changed", "keyword", "interpolation-punctuation"],
      style: {
        color: "rgb(86, 156, 214)"
      }
    },
    {
      types: ["number", "inserted"],
      style: {
        color: "rgb(181, 206, 168)"
      }
    },
    {
      types: ["constant"],
      style: {
        color: "rgb(100, 102, 149)"
      }
    },
    {
      types: ["attr-name", "variable"],
      style: {
        color: "rgb(156, 220, 254)"
      }
    },
    {
      types: ["deleted", "string", "attr-value", "template-punctuation"],
      style: {
        color: "rgb(206, 145, 120)"
      }
    },
    {
      types: ["selector"],
      style: {
        color: "rgb(215, 186, 125)"
      }
    },
    {
      // Fix tag color
      types: ["tag"],
      style: {
        color: "rgb(78, 201, 176)"
      }
    },
    {
      // Fix tag color for HTML
      types: ["tag"],
      languages: ["markup"],
      style: {
        color: "rgb(86, 156, 214)"
      }
    },
    {
      types: ["punctuation", "operator"],
      style: {
        color: "rgb(212, 212, 212)"
      }
    },
    {
      // Fix punctuation color for HTML
      types: ["punctuation"],
      languages: ["markup"],
      style: {
        color: "#808080"
      }
    },
    {
      types: ["function"],
      style: {
        color: "rgb(220, 220, 170)"
      }
    },
    {
      types: ["class-name"],
      style: {
        color: "rgb(78, 201, 176)"
      }
    },
    {
      types: ["char"],
      style: {
        color: "rgb(209, 105, 105)"
      }
    }
  ]
};
var ce2 = et2;
var tt2 = {
  plain: {
    color: "#000000",
    backgroundColor: "#ffffff"
  },
  styles: [
    {
      types: ["comment"],
      style: {
        color: "rgb(0, 128, 0)"
      }
    },
    {
      types: ["builtin"],
      style: {
        color: "rgb(0, 112, 193)"
      }
    },
    {
      types: ["number", "variable", "inserted"],
      style: {
        color: "rgb(9, 134, 88)"
      }
    },
    {
      types: ["operator"],
      style: {
        color: "rgb(0, 0, 0)"
      }
    },
    {
      types: ["constant", "char"],
      style: {
        color: "rgb(129, 31, 63)"
      }
    },
    {
      types: ["tag"],
      style: {
        color: "rgb(128, 0, 0)"
      }
    },
    {
      types: ["attr-name"],
      style: {
        color: "rgb(255, 0, 0)"
      }
    },
    {
      types: ["deleted", "string"],
      style: {
        color: "rgb(163, 21, 21)"
      }
    },
    {
      types: ["changed", "punctuation"],
      style: {
        color: "rgb(4, 81, 165)"
      }
    },
    {
      types: ["function", "keyword"],
      style: {
        color: "rgb(0, 0, 255)"
      }
    },
    {
      types: ["class-name"],
      style: {
        color: "rgb(38, 127, 153)"
      }
    }
  ]
};
var at2 = tt2;
var nt2 = {
  plain: {
    color: "#f8fafc",
    backgroundColor: "#011627"
  },
  styles: [
    {
      types: ["prolog"],
      style: {
        color: "#000080"
      }
    },
    {
      types: ["comment"],
      style: {
        color: "#6A9955"
      }
    },
    {
      types: ["builtin", "changed", "keyword", "interpolation-punctuation"],
      style: {
        color: "#569CD6"
      }
    },
    {
      types: ["number", "inserted"],
      style: {
        color: "#B5CEA8"
      }
    },
    {
      types: ["constant"],
      style: {
        color: "#f8fafc"
      }
    },
    {
      types: ["attr-name", "variable"],
      style: {
        color: "#9CDCFE"
      }
    },
    {
      types: ["deleted", "string", "attr-value", "template-punctuation"],
      style: {
        color: "#cbd5e1"
      }
    },
    {
      types: ["selector"],
      style: {
        color: "#D7BA7D"
      }
    },
    {
      types: ["tag"],
      style: {
        color: "#0ea5e9"
      }
    },
    {
      types: ["tag"],
      languages: ["markup"],
      style: {
        color: "#0ea5e9"
      }
    },
    {
      types: ["punctuation", "operator"],
      style: {
        color: "#D4D4D4"
      }
    },
    {
      types: ["punctuation"],
      languages: ["markup"],
      style: {
        color: "#808080"
      }
    },
    {
      types: ["function"],
      style: {
        color: "#7dd3fc"
      }
    },
    {
      types: ["class-name"],
      style: {
        color: "#0ea5e9"
      }
    },
    {
      types: ["char"],
      style: {
        color: "#D16969"
      }
    }
  ]
};
var rt2 = nt2;
var ot2 = {
  plain: {
    color: "#0f172a",
    backgroundColor: "#f1f5f9"
  },
  styles: [
    {
      types: ["prolog"],
      style: {
        color: "#000080"
      }
    },
    {
      types: ["comment"],
      style: {
        color: "#6A9955"
      }
    },
    {
      types: ["builtin", "changed", "keyword", "interpolation-punctuation"],
      style: {
        color: "#0c4a6e"
      }
    },
    {
      types: ["number", "inserted"],
      style: {
        color: "#B5CEA8"
      }
    },
    {
      types: ["constant"],
      style: {
        color: "#0f172a"
      }
    },
    {
      types: ["attr-name", "variable"],
      style: {
        color: "#0c4a6e"
      }
    },
    {
      types: ["deleted", "string", "attr-value", "template-punctuation"],
      style: {
        color: "#64748b"
      }
    },
    {
      types: ["selector"],
      style: {
        color: "#D7BA7D"
      }
    },
    {
      types: ["tag"],
      style: {
        color: "#0ea5e9"
      }
    },
    {
      types: ["tag"],
      languages: ["markup"],
      style: {
        color: "#0ea5e9"
      }
    },
    {
      types: ["punctuation", "operator"],
      style: {
        color: "#475569"
      }
    },
    {
      types: ["punctuation"],
      languages: ["markup"],
      style: {
        color: "#808080"
      }
    },
    {
      types: ["function"],
      style: {
        color: "#0e7490"
      }
    },
    {
      types: ["class-name"],
      style: {
        color: "#0ea5e9"
      }
    },
    {
      types: ["char"],
      style: {
        color: "#D16969"
      }
    }
  ]
};
var st2 = ot2;
var lt2 = {
  plain: {
    backgroundColor: "hsl(220, 13%, 18%)",
    color: "hsl(220, 14%, 71%)",
    textShadow: "0 1px rgba(0, 0, 0, 0.3)"
  },
  styles: [
    {
      types: ["comment", "prolog", "cdata"],
      style: {
        color: "hsl(220, 10%, 40%)"
      }
    },
    {
      types: ["doctype", "punctuation", "entity"],
      style: {
        color: "hsl(220, 14%, 71%)"
      }
    },
    {
      types: [
        "attr-name",
        "class-name",
        "maybe-class-name",
        "boolean",
        "constant",
        "number",
        "atrule"
      ],
      style: { color: "hsl(29, 54%, 61%)" }
    },
    {
      types: ["keyword"],
      style: { color: "hsl(286, 60%, 67%)" }
    },
    {
      types: ["property", "tag", "symbol", "deleted", "important"],
      style: {
        color: "hsl(355, 65%, 65%)"
      }
    },
    {
      types: [
        "selector",
        "string",
        "char",
        "builtin",
        "inserted",
        "regex",
        "attr-value"
      ],
      style: {
        color: "hsl(95, 38%, 62%)"
      }
    },
    {
      types: ["variable", "operator", "function"],
      style: {
        color: "hsl(207, 82%, 66%)"
      }
    },
    {
      types: ["url"],
      style: {
        color: "hsl(187, 47%, 55%)"
      }
    },
    {
      types: ["deleted"],
      style: {
        textDecorationLine: "line-through"
      }
    },
    {
      types: ["inserted"],
      style: {
        textDecorationLine: "underline"
      }
    },
    {
      types: ["italic"],
      style: {
        fontStyle: "italic"
      }
    },
    {
      types: ["important", "bold"],
      style: {
        fontWeight: "bold"
      }
    },
    {
      types: ["important"],
      style: {
        color: "hsl(220, 14%, 71%)"
      }
    }
  ]
};
var it2 = lt2;
var ut2 = {
  plain: {
    backgroundColor: "hsl(230, 1%, 98%)",
    color: "hsl(230, 8%, 24%)"
  },
  styles: [
    {
      types: ["comment", "prolog", "cdata"],
      style: {
        color: "hsl(230, 4%, 64%)"
      }
    },
    {
      types: ["doctype", "punctuation", "entity"],
      style: {
        color: "hsl(230, 8%, 24%)"
      }
    },
    {
      types: [
        "attr-name",
        "class-name",
        "boolean",
        "constant",
        "number",
        "atrule"
      ],
      style: {
        color: "hsl(35, 99%, 36%)"
      }
    },
    {
      types: ["keyword"],
      style: {
        color: "hsl(301, 63%, 40%)"
      }
    },
    {
      types: ["property", "tag", "symbol", "deleted", "important"],
      style: {
        color: "hsl(5, 74%, 59%)"
      }
    },
    {
      types: [
        "selector",
        "string",
        "char",
        "builtin",
        "inserted",
        "regex",
        "attr-value",
        "punctuation"
      ],
      style: {
        color: "hsl(119, 34%, 47%)"
      }
    },
    {
      types: ["variable", "operator", "function"],
      style: {
        color: "hsl(221, 87%, 60%)"
      }
    },
    {
      types: ["url"],
      style: {
        color: "hsl(198, 99%, 37%)"
      }
    },
    {
      types: ["deleted"],
      style: {
        textDecorationLine: "line-through"
      }
    },
    {
      types: ["inserted"],
      style: {
        textDecorationLine: "underline"
      }
    },
    {
      types: ["italic"],
      style: {
        fontStyle: "italic"
      }
    },
    {
      types: ["important", "bold"],
      style: {
        fontWeight: "bold"
      }
    },
    {
      types: ["important"],
      style: {
        color: "hsl(230, 8%, 24%)"
      }
    }
  ]
};
var ct2 = ut2;
var pt2 = {
  plain: {
    color: "#ebdbb2",
    backgroundColor: "#292828"
  },
  styles: [
    {
      types: [
        "imports",
        "class-name",
        "maybe-class-name",
        "constant",
        "doctype",
        "builtin",
        "function"
      ],
      style: {
        color: "#d8a657"
      }
    },
    {
      types: ["property-access"],
      style: {
        color: "#7daea3"
      }
    },
    {
      types: ["tag"],
      style: {
        color: "#e78a4e"
      }
    },
    {
      types: ["attr-name", "char", "url", "regex"],
      style: {
        color: "#a9b665"
      }
    },
    {
      types: ["attr-value", "string"],
      style: {
        color: "#89b482"
      }
    },
    {
      types: ["comment", "prolog", "cdata", "operator", "inserted"],
      style: {
        color: "#a89984"
      }
    },
    {
      types: [
        "delimiter",
        "boolean",
        "keyword",
        "selector",
        "important",
        "atrule",
        "property",
        "variable",
        "deleted"
      ],
      style: {
        color: "#ea6962"
      }
    },
    {
      types: ["entity", "number", "symbol"],
      style: {
        color: "#d3869b"
      }
    }
  ]
};
var gt2 = pt2;
var dt2 = {
  plain: {
    color: "#654735",
    backgroundColor: "#f9f5d7"
  },
  styles: [
    {
      types: [
        "delimiter",
        "boolean",
        "keyword",
        "selector",
        "important",
        "atrule",
        "property",
        "variable",
        "deleted"
      ],
      style: {
        color: "#af2528"
      }
    },
    {
      types: [
        "imports",
        "class-name",
        "maybe-class-name",
        "constant",
        "doctype",
        "builtin"
      ],
      style: {
        color: "#b4730e"
      }
    },
    {
      types: ["string", "attr-value"],
      style: {
        color: "#477a5b"
      }
    },
    {
      types: ["property-access"],
      style: {
        color: "#266b79"
      }
    },
    {
      types: ["function", "attr-name", "char", "url"],
      style: {
        color: "#72761e"
      }
    },
    {
      types: ["tag"],
      style: {
        color: "#b94c07"
      }
    },
    {
      types: ["comment", "prolog", "cdata", "operator", "inserted"],
      style: {
        color: "#a89984"
      }
    },
    {
      types: ["entity", "number", "symbol"],
      style: {
        color: "#924f79"
      }
    }
  ]
};
var yt2 = dt2;
var ft2 = (e2) => (0, import_react3.useCallback)(
  (t5) => {
    var r2 = t5, { className: i2, style: f6, line: h2 } = r2, u3 = ue2(r2, ["className", "style", "line"]);
    const m4 = q(N4({}, u3), {
      className: ne("token-line", i2)
    });
    return typeof e2 == "object" && "plain" in e2 && (m4.style = e2.plain), typeof f6 == "object" && (m4.style = N4(N4({}, m4.style || {}), f6)), m4;
  },
  [e2]
);
var bt2 = (e2) => {
  const t5 = (0, import_react3.useCallback)(
    ({ types: r2, empty: i2 }) => {
      if (e2 != null) {
        {
          if (r2.length === 1 && r2[0] === "plain")
            return i2 != null ? { display: "inline-block" } : void 0;
          if (r2.length === 1 && i2 != null)
            return e2[r2[0]];
        }
        return Object.assign(
          i2 != null ? { display: "inline-block" } : {},
          ...r2.map((f6) => e2[f6])
        );
      }
    },
    [e2]
  );
  return (0, import_react3.useCallback)(
    (r2) => {
      var i2 = r2, { token: f6, className: h2, style: u3 } = i2, m4 = ue2(i2, ["token", "className", "style"]);
      const p4 = q(N4({}, m4), {
        className: ne("token", ...f6.types, h2),
        children: f6.content,
        style: t5(f6)
      });
      return u3 != null && (p4.style = N4(N4({}, p4.style || {}), u3)), p4;
    },
    [t5]
  );
};
var mt2 = /\r\n|\r|\n/;
var ne3 = (e2) => {
  e2.length === 0 ? e2.push({
    types: ["plain"],
    content: `
`,
    empty: true
  }) : e2.length === 1 && e2[0].content === "" && (e2[0].content = `
`, e2[0].empty = true);
};
var re2 = (e2, t5) => {
  const r2 = e2.length;
  return r2 > 0 && e2[r2 - 1] === t5 ? e2 : e2.concat(t5);
};
var ht2 = (e2) => {
  const t5 = [[]], r2 = [e2], i2 = [0], f6 = [e2.length];
  let h2 = 0, u3 = 0, m4 = [];
  const p4 = [m4];
  for (; u3 > -1; ) {
    for (; (h2 = i2[u3]++) < f6[u3]; ) {
      let g2, b2 = t5[u3];
      const v = r2[u3][h2];
      if (typeof v == "string" ? (b2 = u3 > 0 ? b2 : ["plain"], g2 = v) : (b2 = re2(b2, v.type), v.alias && (b2 = re2(b2, v.alias)), g2 = v.content), typeof g2 != "string") {
        u3++, t5.push(b2), r2.push(g2), i2.push(0), f6.push(g2.length);
        continue;
      }
      const w2 = g2.split(mt2), n5 = w2.length;
      m4.push({
        types: b2,
        content: w2[0]
      });
      for (let a2 = 1; a2 < n5; a2++)
        ne3(m4), p4.push(m4 = []), m4.push({
          types: b2,
          content: w2[a2]
        });
    }
    u3--, t5.pop(), r2.pop(), i2.pop(), f6.pop();
  }
  return ne3(m4), p4;
};
var oe = ht2;
var vt2 = ({ prism: e2, code: t5, grammar: r2, language: i2 }) => (0, import_react3.useMemo)(() => {
  if (r2 == null)
    return oe([t5]);
  const f6 = {
    code: t5,
    grammar: r2,
    language: i2,
    tokens: []
  };
  return e2.hooks.run("before-tokenize", f6), f6.tokens = e2.tokenize(t5, r2), e2.hooks.run("after-tokenize", f6), oe(f6.tokens);
}, [
  t5,
  r2,
  i2,
  // prism is a stable import
  e2
]);
var kt2 = (e2, t5) => {
  const { plain: r2 } = e2, i2 = e2.styles.reduce((f6, h2) => {
    const { languages: u3, style: m4 } = h2;
    return u3 && !u3.includes(t5) || h2.types.forEach((p4) => {
      const g2 = N4(N4({}, f6[p4]), m4);
      f6[p4] = g2;
    }), f6;
  }, {});
  return i2.root = r2, i2.plain = q(N4({}, r2), { backgroundColor: void 0 }), i2;
};
var wt2 = kt2;
var Et2 = ({
  children: e2,
  language: t5,
  code: r2,
  theme: i2,
  prism: f6
}) => {
  const h2 = t5.toLowerCase(), u3 = wt2(i2, h2), m4 = ft2(u3), p4 = bt2(u3), g2 = f6.languages[h2], b2 = vt2({ prism: f6, language: h2, code: r2, grammar: g2 });
  return e2({
    tokens: b2,
    className: `prism-code language-${h2}`,
    style: u3 != null ? u3.root : {},
    getLineProps: m4,
    getTokenProps: p4
  });
};
var xt2 = (e2) => (0, import_react3.createElement)(Et2, q(N4({}, e2), {
  prism: e2.prism || o,
  theme: e2.theme || ce2,
  code: e2.code,
  language: e2.language
}));
globalThis.Prism = o;
import("./prism-bash.min-HHIMdNJ_-DLEF4EMJ.js");
import("./prism-ruby.min-L9OdQ6tU-HBGUMUYE.js").then((e2) => e2.p);
import("./prism-markup-BNGj0Tvm-LCRY7W27.js");
import("./prism-json.min-B1GJqK1k-NZ6TWZT6.js");
import("./prism-java.min-CQzr40NQ-N3WXFXOK.js").then((e2) => e2.p);
import("./prism-csharp.min-C43x1RY2-MVA7ALZO.js").then((e2) => e2.p);
import("./prism-objectivec.min-BXSWqpJJ-AV24KVLA.js");
import("./prism-markdown.min-C0Qn0m-5-YBENOCJN.js");
import("./prism-javascript.min-CEqHqgbm-AVI2GOBU.js");
import("./prism-typescript.min-qTySPvCh-56D4GEKN.js").then((e2) => e2.p);
import("./prism-jsstacktrace.min-BfobCF2F-SEPZM6VR.js");
var At2 = {
  mdx: "md"
};
var St2 = ({
  language: e2 = "plain",
  showCopy: t5 = "hover",
  showCopyText: r2,
  title: i2,
  children: f6,
  disabled: h2,
  ...u3
}) => {
  const { resolvedTheme: m4 } = $2(), [p4, g2] = (0, import_react3.useState)(false), b2 = f6 ?? u3.code;
  if (!b2)
    return null;
  const y4 = m4 === "dark" ? V3.vsDark : V3.github, v = "bg-[#f6f8fa] text-[#393a34] dark:bg-[#1e1e1e] dark:text-[#9cdcfe]", w2 = ({
    children: n5,
    className: a2,
    style: s2
  }) => ae.jsxs("div", { className: "relative group", children: [
    i2 && ae.jsx("div", { className: "text-xs text-muted-foreground absolute top-2 font-mono border-b w-full pb-2 px-4 ", children: i2 }),
    ae.jsx(
      "pre",
      {
        className: We(
          "relative scrollbar overflow-x-auto",
          u3.className,
          u3.noBackground ? "!bg-transparent" : v,
          u3.wrapLines && "whitespace-pre-wrap break-words",
          i2 && "pt-10",
          a2
        ),
        style: s2,
        children: n5
      }
    ),
    u3.showLanguageIndicator && ae.jsx("span", { className: "absolute top-1.5 right-3 text-[11px] font-mono text-muted-foreground transition group-hover:opacity-0", children: e2 }),
    t5 !== "never" && ae.jsxs(
      "button",
      {
        type: "button",
        "aria-label": "Copy code",
        title: "Copy code",
        className: We(
          "absolute top-2 right-2 p-2  hover:outline hover:outline-border/75 dark:hover:outline-border rounded-md text-sm text-muted-foreground transition",
          t5 === "hover" ? "opacity-0 group-hover:opacity-100 group-hover:bg-zinc-100 group-hover:dark:bg-zinc-700" : "bg-zinc-100 dark:bg-zinc-700",
          r2 && "flex gap-2 items-center font-medium"
        ),
        disabled: p4,
        onClick: () => {
          g2(true), navigator.clipboard.writeText(b2), setTimeout(() => g2(false), 2e3);
        },
        children: [
          p4 ? ae.jsx(
            Check,
            {
              className: "text-emerald-600",
              size: 16,
              strokeWidth: 2.5,
              absoluteStrokeWidth: true
            }
          ) : ae.jsx(Copy, { size: 16 }),
          r2 && "Copy"
        ]
      }
    )
  ] });
  return h2 ? ae.jsx(c3, { fallback: ae.jsx(w2, { children: b2 }), children: ae.jsx(w2, { children: b2 }) }) : ae.jsx(c3, { fallback: ae.jsx(w2, { children: b2 }), children: ae.jsx(
    xt2,
    {
      theme: y4,
      language: At2[e2] ?? e2,
      ...u3,
      code: b2,
      children: ({ className: n5, style: a2, tokens: s2, getLineProps: c6, getTokenProps: l5 }) => ae.jsx(w2, { className: n5, style: a2, children: s2.map((d3, k2) => (
        // eslint-disable-next-line react/no-array-index-key
        ae.jsx("div", { ...c6({ line: d3 }), children: d3.map((E, A2) => (
          // eslint-disable-next-line react/no-array-index-key
          ae.jsx("span", { ...l5({ token: E }) }, A2)
        )) }, k2)
      )) })
    }
  ) });
};
var _t2 = (0, import_react3.memo)(St2);
_t2.displayName = "SyntaxHighlight";

// node_modules/zudoku/lib/invariant-Caa8-XvF.js
var d = Object.defineProperty;
var a = (t5, r2, i2) => r2 in t5 ? d(t5, r2, { enumerable: true, configurable: true, writable: true, value: i2 }) : t5[r2] = i2;
var n3 = (t5, r2, i2) => a(t5, typeof r2 != "symbol" ? r2 + "" : r2, i2);
var s = class extends Error {
  constructor(i2, {
    developerHint: o3,
    title: e2,
    cause: u3
  } = {}) {
    super(i2, { cause: u3 });
    n3(this, "developerHint");
    n3(this, "title");
    this.name = "ZudokuError", this.title = e2, this.developerHint = o3;
  }
};

// node_modules/@radix-ui/react-dialog/dist/index.mjs
var React12 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-focus-scope/dist/index.mjs
var React = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount";
var AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount";
var EVENT_OPTIONS = { bubbles: false, cancelable: true };
var FOCUS_SCOPE_NAME = "FocusScope";
var FocusScope = React.forwardRef((props, forwardedRef) => {
  const {
    loop = false,
    trapped = false,
    onMountAutoFocus: onMountAutoFocusProp,
    onUnmountAutoFocus: onUnmountAutoFocusProp,
    ...scopeProps
  } = props;
  const [container, setContainer] = React.useState(null);
  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);
  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);
  const lastFocusedElementRef = React.useRef(null);
  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));
  const focusScope = React.useRef({
    paused: false,
    pause() {
      this.paused = true;
    },
    resume() {
      this.paused = false;
    }
  }).current;
  React.useEffect(() => {
    if (trapped) {
      let handleFocusIn2 = function(event) {
        if (focusScope.paused || !container) return;
        const target = event.target;
        if (container.contains(target)) {
          lastFocusedElementRef.current = target;
        } else {
          focus(lastFocusedElementRef.current, { select: true });
        }
      }, handleFocusOut2 = function(event) {
        if (focusScope.paused || !container) return;
        const relatedTarget = event.relatedTarget;
        if (relatedTarget === null) return;
        if (!container.contains(relatedTarget)) {
          focus(lastFocusedElementRef.current, { select: true });
        }
      }, handleMutations2 = function(mutations) {
        const focusedElement = document.activeElement;
        if (focusedElement !== document.body) return;
        for (const mutation of mutations) {
          if (mutation.removedNodes.length > 0) focus(container);
        }
      };
      var handleFocusIn = handleFocusIn2, handleFocusOut = handleFocusOut2, handleMutations = handleMutations2;
      document.addEventListener("focusin", handleFocusIn2);
      document.addEventListener("focusout", handleFocusOut2);
      const mutationObserver = new MutationObserver(handleMutations2);
      if (container) mutationObserver.observe(container, { childList: true, subtree: true });
      return () => {
        document.removeEventListener("focusin", handleFocusIn2);
        document.removeEventListener("focusout", handleFocusOut2);
        mutationObserver.disconnect();
      };
    }
  }, [trapped, container, focusScope.paused]);
  React.useEffect(() => {
    if (container) {
      focusScopesStack.add(focusScope);
      const previouslyFocusedElement = document.activeElement;
      const hasFocusedCandidate = container.contains(previouslyFocusedElement);
      if (!hasFocusedCandidate) {
        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);
        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        container.dispatchEvent(mountEvent);
        if (!mountEvent.defaultPrevented) {
          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });
          if (document.activeElement === previouslyFocusedElement) {
            focus(container);
          }
        }
      }
      return () => {
        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        setTimeout(() => {
          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);
          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          container.dispatchEvent(unmountEvent);
          if (!unmountEvent.defaultPrevented) {
            focus(previouslyFocusedElement ?? document.body, { select: true });
          }
          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          focusScopesStack.remove(focusScope);
        }, 0);
      };
    }
  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);
  const handleKeyDown = React.useCallback(
    (event) => {
      if (!loop && !trapped) return;
      if (focusScope.paused) return;
      const isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey;
      const focusedElement = document.activeElement;
      if (isTabKey && focusedElement) {
        const container2 = event.currentTarget;
        const [first, last] = getTabbableEdges(container2);
        const hasTabbableElementsInside = first && last;
        if (!hasTabbableElementsInside) {
          if (focusedElement === container2) event.preventDefault();
        } else {
          if (!event.shiftKey && focusedElement === last) {
            event.preventDefault();
            if (loop) focus(first, { select: true });
          } else if (event.shiftKey && focusedElement === first) {
            event.preventDefault();
            if (loop) focus(last, { select: true });
          }
        }
      }
    },
    [loop, trapped, focusScope.paused]
  );
  return (0, import_jsx_runtime.jsx)(Primitive.div, { tabIndex: -1, ...scopeProps, ref: composedRefs, onKeyDown: handleKeyDown });
});
FocusScope.displayName = FOCUS_SCOPE_NAME;
function focusFirst(candidates, { select = false } = {}) {
  const previouslyFocusedElement = document.activeElement;
  for (const candidate of candidates) {
    focus(candidate, { select });
    if (document.activeElement !== previouslyFocusedElement) return;
  }
}
function getTabbableEdges(container) {
  const candidates = getTabbableCandidates(container);
  const first = findVisible(candidates, container);
  const last = findVisible(candidates.reverse(), container);
  return [first, last];
}
function getTabbableCandidates(container) {
  const nodes = [];
  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode()) nodes.push(walker.currentNode);
  return nodes;
}
function findVisible(elements, container) {
  for (const element of elements) {
    if (!isHidden(element, { upTo: container })) return element;
  }
}
function isHidden(node, { upTo }) {
  if (getComputedStyle(node).visibility === "hidden") return true;
  while (node) {
    if (upTo !== void 0 && node === upTo) return false;
    if (getComputedStyle(node).display === "none") return true;
    node = node.parentElement;
  }
  return false;
}
function isSelectableInput(element) {
  return element instanceof HTMLInputElement && "select" in element;
}
function focus(element, { select = false } = {}) {
  if (element && element.focus) {
    const previouslyFocusedElement = document.activeElement;
    element.focus({ preventScroll: true });
    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)
      element.select();
  }
}
var focusScopesStack = createFocusScopesStack();
function createFocusScopesStack() {
  let stack = [];
  return {
    add(focusScope) {
      const activeFocusScope = stack[0];
      if (focusScope !== activeFocusScope) {
        activeFocusScope == null ? void 0 : activeFocusScope.pause();
      }
      stack = arrayRemove(stack, focusScope);
      stack.unshift(focusScope);
    },
    remove(focusScope) {
      var _a;
      stack = arrayRemove(stack, focusScope);
      (_a = stack[0]) == null ? void 0 : _a.resume();
    }
  };
}
function arrayRemove(array, item) {
  const updatedArray = [...array];
  const index = updatedArray.indexOf(item);
  if (index !== -1) {
    updatedArray.splice(index, 1);
  }
  return updatedArray;
}
function removeLinks(items) {
  return items.filter((item) => item.tagName !== "A");
}

// node_modules/@radix-ui/react-focus-guards/dist/index.mjs
var React2 = __toESM(require_react(), 1);
var count = 0;
function useFocusGuards() {
  React2.useEffect(() => {
    const edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
    document.body.insertAdjacentElement("afterbegin", edgeGuards[0] ?? createFocusGuard());
    document.body.insertAdjacentElement("beforeend", edgeGuards[1] ?? createFocusGuard());
    count++;
    return () => {
      if (count === 1) {
        document.querySelectorAll("[data-radix-focus-guard]").forEach((node) => node.remove());
      }
      count--;
    };
  }, []);
}
function createFocusGuard() {
  const element = document.createElement("span");
  element.setAttribute("data-radix-focus-guard", "");
  element.tabIndex = 0;
  element.style.outline = "none";
  element.style.opacity = "0";
  element.style.position = "fixed";
  element.style.pointerEvents = "none";
  return element;
}

// node_modules/tslib/tslib.es6.mjs
var __assign = function() {
  __assign = Object.assign || function __assign2(t5) {
    for (var s2, i2 = 1, n5 = arguments.length; i2 < n5; i2++) {
      s2 = arguments[i2];
      for (var p4 in s2) if (Object.prototype.hasOwnProperty.call(s2, p4)) t5[p4] = s2[p4];
    }
    return t5;
  };
  return __assign.apply(this, arguments);
};
function __rest(s2, e2) {
  var t5 = {};
  for (var p4 in s2) if (Object.prototype.hasOwnProperty.call(s2, p4) && e2.indexOf(p4) < 0)
    t5[p4] = s2[p4];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i2 = 0, p4 = Object.getOwnPropertySymbols(s2); i2 < p4.length; i2++) {
      if (e2.indexOf(p4[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p4[i2]))
        t5[p4[i2]] = s2[p4[i2]];
    }
  return t5;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i2 = 0, l5 = from.length, ar; i2 < l5; i2++) {
    if (ar || !(i2 in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i2);
      ar[i2] = from[i2];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}

// node_modules/react-remove-scroll/dist/es2015/Combination.js
var React11 = __toESM(require_react());

// node_modules/react-remove-scroll/dist/es2015/UI.js
var React7 = __toESM(require_react());

// node_modules/react-remove-scroll-bar/dist/es2015/constants.js
var zeroRightClassName = "right-scroll-bar-position";
var fullWidthClassName = "width-before-scroll-bar";
var noScrollbarsClassName = "with-scroll-bars-hidden";
var removedBarSizeVariable = "--removed-body-scroll-bar-size";

// node_modules/use-callback-ref/dist/es2015/assignRef.js
function assignRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
  return ref;
}

// node_modules/use-callback-ref/dist/es2015/useRef.js
var import_react4 = __toESM(require_react());
function useCallbackRef2(initialValue, callback) {
  var ref = (0, import_react4.useState)(function() {
    return {
      // value
      value: initialValue,
      // last callback
      callback,
      // "memoized" public interface
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last = ref.value;
          if (last !== value) {
            ref.value = value;
            ref.callback(value, last);
          }
        }
      }
    };
  })[0];
  ref.callback = callback;
  return ref.facade;
}

// node_modules/use-callback-ref/dist/es2015/useMergeRef.js
var React3 = __toESM(require_react());
var useIsomorphicLayoutEffect = typeof window !== "undefined" ? React3.useLayoutEffect : React3.useEffect;
var currentValues = /* @__PURE__ */ new WeakMap();
function useMergeRefs(refs, defaultValue) {
  var callbackRef = useCallbackRef2(defaultValue || null, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef(ref, newValue);
    });
  });
  useIsomorphicLayoutEffect(function() {
    var oldValue = currentValues.get(callbackRef);
    if (oldValue) {
      var prevRefs_1 = new Set(oldValue);
      var nextRefs_1 = new Set(refs);
      var current_1 = callbackRef.current;
      prevRefs_1.forEach(function(ref) {
        if (!nextRefs_1.has(ref)) {
          assignRef(ref, null);
        }
      });
      nextRefs_1.forEach(function(ref) {
        if (!prevRefs_1.has(ref)) {
          assignRef(ref, current_1);
        }
      });
    }
    currentValues.set(callbackRef, refs);
  }, [refs]);
  return callbackRef;
}

// node_modules/use-sidecar/dist/es2015/hoc.js
var React4 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/hook.js
var import_react5 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/medium.js
function ItoI(a2) {
  return a2;
}
function innerCreateMedium(defaults, middleware) {
  if (middleware === void 0) {
    middleware = ItoI;
  }
  var buffer = [];
  var assigned = false;
  var medium = {
    read: function() {
      if (assigned) {
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      }
      if (buffer.length) {
        return buffer[buffer.length - 1];
      }
      return defaults;
    },
    useMedium: function(data) {
      var item = middleware(data, assigned);
      buffer.push(item);
      return function() {
        buffer = buffer.filter(function(x2) {
          return x2 !== item;
        });
      };
    },
    assignSyncMedium: function(cb) {
      assigned = true;
      while (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
      }
      buffer = {
        push: function(x2) {
          return cb(x2);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb) {
      assigned = true;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
        pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [];
        cbs2.forEach(cb);
      };
      var cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle();
      buffer = {
        push: function(x2) {
          pendingQueue.push(x2);
          cycle();
        },
        filter: function(filter) {
          pendingQueue = pendingQueue.filter(filter);
          return buffer;
        }
      };
    }
  };
  return medium;
}
function createSidecarMedium(options) {
  if (options === void 0) {
    options = {};
  }
  var medium = innerCreateMedium(null);
  medium.options = __assign({ async: true, ssr: false }, options);
  return medium;
}

// node_modules/use-sidecar/dist/es2015/renderProp.js
var React5 = __toESM(require_react());
var import_react6 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/exports.js
var React6 = __toESM(require_react());
var SideCar = function(_a) {
  var sideCar = _a.sideCar, rest = __rest(_a, ["sideCar"]);
  if (!sideCar) {
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  }
  var Target = sideCar.read();
  if (!Target) {
    throw new Error("Sidecar medium not found");
  }
  return React6.createElement(Target, __assign({}, rest));
};
SideCar.isSideCarExport = true;
function exportSidecar(medium, exported) {
  medium.useMedium(exported);
  return SideCar;
}

// node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar = createSidecarMedium();

// node_modules/react-remove-scroll/dist/es2015/UI.js
var nothing = function() {
  return;
};
var RemoveScroll = React7.forwardRef(function(props, parentRef) {
  var ref = React7.useRef(null);
  var _a = React7.useState({
    onScrollCapture: nothing,
    onWheelCapture: nothing,
    onTouchMoveCapture: nothing
  }), callbacks = _a[0], setCallbacks = _a[1];
  var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? "div" : _b, gapMode = props.gapMode, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]);
  var SideCar2 = sideCar;
  var containerRef = useMergeRefs([ref, parentRef]);
  var containerProps = __assign(__assign({}, rest), callbacks);
  return React7.createElement(
    React7.Fragment,
    null,
    enabled && React7.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode }),
    forwardProps ? React7.cloneElement(React7.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef })) : React7.createElement(Container, __assign({}, containerProps, { className, ref: containerRef }), children)
  );
});
RemoveScroll.defaultProps = {
  enabled: true,
  removeScrollBar: true,
  inert: false
};
RemoveScroll.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};

// node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var React10 = __toESM(require_react());

// node_modules/react-remove-scroll-bar/dist/es2015/component.js
var React9 = __toESM(require_react());

// node_modules/react-style-singleton/dist/es2015/hook.js
var React8 = __toESM(require_react());

// node_modules/get-nonce/dist/es2015/index.js
var currentNonce;
var getNonce = function() {
  if (currentNonce) {
    return currentNonce;
  }
  if (typeof __webpack_nonce__ !== "undefined") {
    return __webpack_nonce__;
  }
  return void 0;
};

// node_modules/react-style-singleton/dist/es2015/singleton.js
function makeStyleTag() {
  if (!document)
    return null;
  var tag = document.createElement("style");
  tag.type = "text/css";
  var nonce = getNonce();
  if (nonce) {
    tag.setAttribute("nonce", nonce);
  }
  return tag;
}
function injectStyles(tag, css) {
  if (tag.styleSheet) {
    tag.styleSheet.cssText = css;
  } else {
    tag.appendChild(document.createTextNode(css));
  }
}
function insertStyleTag(tag) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}
var stylesheetSingleton = function() {
  var counter = 0;
  var stylesheet = null;
  return {
    add: function(style) {
      if (counter == 0) {
        if (stylesheet = makeStyleTag()) {
          injectStyles(stylesheet, style);
          insertStyleTag(stylesheet);
        }
      }
      counter++;
    },
    remove: function() {
      counter--;
      if (!counter && stylesheet) {
        stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
        stylesheet = null;
      }
    }
  };
};

// node_modules/react-style-singleton/dist/es2015/hook.js
var styleHookSingleton = function() {
  var sheet = stylesheetSingleton();
  return function(styles, isDynamic) {
    React8.useEffect(function() {
      sheet.add(styles);
      return function() {
        sheet.remove();
      };
    }, [styles && isDynamic]);
  };
};

// node_modules/react-style-singleton/dist/es2015/component.js
var styleSingleton = function() {
  var useStyle = styleHookSingleton();
  var Sheet = function(_a) {
    var styles = _a.styles, dynamic = _a.dynamic;
    useStyle(styles, dynamic);
    return null;
  };
  return Sheet;
};

// node_modules/react-remove-scroll-bar/dist/es2015/utils.js
var zeroGap = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
};
var parse = function(x2) {
  return parseInt(x2 || "", 10) || 0;
};
var getOffset = function(gapMode) {
  var cs2 = window.getComputedStyle(document.body);
  var left = cs2[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
  var top = cs2[gapMode === "padding" ? "paddingTop" : "marginTop"];
  var right = cs2[gapMode === "padding" ? "paddingRight" : "marginRight"];
  return [parse(left), parse(top), parse(right)];
};
var getGapWidth = function(gapMode) {
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  if (typeof window === "undefined") {
    return zeroGap;
  }
  var offsets = getOffset(gapMode);
  var documentWidth = document.documentElement.clientWidth;
  var windowWidth = window.innerWidth;
  return {
    left: offsets[0],
    top: offsets[1],
    right: offsets[2],
    gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
  };
};

// node_modules/react-remove-scroll-bar/dist/es2015/component.js
var Style = styleSingleton();
var lockAttribute = "data-scroll-locked";
var getStyles = function(_a, allowRelative, gapMode, important) {
  var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  return "\n  .".concat(noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body[").concat(lockAttribute, "] {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
    allowRelative && "position: relative ".concat(important, ";"),
    gapMode === "margin" && "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
    gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
  ].filter(Boolean).join(""), "\n  }\n  \n  .").concat(zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(zeroRightClassName, " .").concat(zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " .").concat(fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body[").concat(lockAttribute, "] {\n    ").concat(removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
};
var getCurrentUseCounter = function() {
  var counter = parseInt(document.body.getAttribute(lockAttribute) || "0", 10);
  return isFinite(counter) ? counter : 0;
};
var useLockAttribute = function() {
  React9.useEffect(function() {
    document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());
    return function() {
      var newCounter = getCurrentUseCounter() - 1;
      if (newCounter <= 0) {
        document.body.removeAttribute(lockAttribute);
      } else {
        document.body.setAttribute(lockAttribute, newCounter.toString());
      }
    };
  }, []);
};
var RemoveScrollBar = function(_a) {
  var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? "margin" : _b;
  useLockAttribute();
  var gap = React9.useMemo(function() {
    return getGapWidth(gapMode);
  }, [gapMode]);
  return React9.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
};

// node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported = false;
if (typeof window !== "undefined") {
  try {
    options = Object.defineProperty({}, "passive", {
      get: function() {
        passiveSupported = true;
        return true;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (err) {
    passiveSupported = false;
  }
}
var options;
var nonPassive = passiveSupported ? { passive: false } : false;

// node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var alwaysContainsScroll = function(node) {
  return node.tagName === "TEXTAREA";
};
var elementCanBeScrolled = function(node, overflow) {
  if (!(node instanceof Element)) {
    return false;
  }
  var styles = window.getComputedStyle(node);
  return (
    // not-not-scrollable
    styles[overflow] !== "hidden" && // contains scroll inside self
    !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === "visible")
  );
};
var elementCouldBeVScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowY");
};
var elementCouldBeHScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowX");
};
var locationCouldBeScrolled = function(axis, node) {
  var ownerDocument = node.ownerDocument;
  var current = node;
  do {
    if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
      current = current.host;
    }
    var isScrollable = elementCouldBeScrolled(axis, current);
    if (isScrollable) {
      var _a = getScrollVariables(axis, current), scrollHeight = _a[1], clientHeight = _a[2];
      if (scrollHeight > clientHeight) {
        return true;
      }
    }
    current = current.parentNode;
  } while (current && current !== ownerDocument.body);
  return false;
};
var getVScrollVariables = function(_a) {
  var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
  return [
    scrollTop,
    scrollHeight,
    clientHeight
  ];
};
var getHScrollVariables = function(_a) {
  var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
  return [
    scrollLeft,
    scrollWidth,
    clientWidth
  ];
};
var elementCouldBeScrolled = function(axis, node) {
  return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
};
var getScrollVariables = function(axis, node) {
  return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
};
var getDirectionFactor = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
};
var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
  var delta = directionFactor * sourceDelta;
  var target = event.target;
  var targetInLock = endTarget.contains(target);
  var shouldCancelScroll = false;
  var isDeltaPositive = delta > 0;
  var availableScroll = 0;
  var availableScrollTop = 0;
  do {
    var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];
    var elementScroll = scroll_1 - capacity - directionFactor * position;
    if (position || elementScroll) {
      if (elementCouldBeScrolled(axis, target)) {
        availableScroll += elementScroll;
        availableScrollTop += position;
      }
    }
    if (target instanceof ShadowRoot) {
      target = target.host;
    } else {
      target = target.parentNode;
    }
  } while (
    // portaled content
    !targetInLock && target !== document.body || // self content
    targetInLock && (endTarget.contains(target) || endTarget === target)
  );
  if (isDeltaPositive && (noOverscroll && Math.abs(availableScroll) < 1 || !noOverscroll && delta > availableScroll)) {
    shouldCancelScroll = true;
  } else if (!isDeltaPositive && (noOverscroll && Math.abs(availableScrollTop) < 1 || !noOverscroll && -delta > availableScrollTop)) {
    shouldCancelScroll = true;
  }
  return shouldCancelScroll;
};

// node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var getTouchXY = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY = function(event) {
  return [event.deltaX, event.deltaY];
};
var extractRef = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var deltaCompare = function(x2, y4) {
  return x2[0] === y4[0] && x2[1] === y4[1];
};
var generateStyle = function(id) {
  return "\n  .block-interactivity-".concat(id, " {pointer-events: none;}\n  .allow-interactivity-").concat(id, " {pointer-events: all;}\n");
};
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = React10.useRef([]);
  var touchStartRef = React10.useRef([0, 0]);
  var activeAxis = React10.useRef();
  var id = React10.useState(idCounter++)[0];
  var Style2 = React10.useState(styleSingleton)[0];
  var lastProps = React10.useRef(props);
  React10.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  React10.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);
      allow_1.forEach(function(el) {
        return el.classList.add("allow-interactivity-".concat(id));
      });
      return function() {
        document.body.classList.remove("block-interactivity-".concat(id));
        allow_1.forEach(function(el) {
          return el.classList.remove("allow-interactivity-".concat(id));
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React10.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2 || event.type === "wheel" && event.ctrlKey) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range") {
      return false;
    }
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = React10.useCallback(function(_event) {
    var event = _event;
    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style2) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event);
    var sourceEvent = shouldPreventQueue.current.filter(function(e2) {
      return e2.name === event.type && (e2.target === event.target || event.target === e2.shadowParent) && deltaCompare(e2.delta, delta);
    })[0];
    if (sourceEvent && sourceEvent.should) {
      if (event.cancelable) {
        event.preventDefault();
      }
      return;
    }
    if (!sourceEvent) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
        return node.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        if (event.cancelable) {
          event.preventDefault();
        }
      }
    }
  }, []);
  var shouldCancel = React10.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should, shadowParent: getOutermostShadowParent(target) };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e2) {
        return e2 !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = React10.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = React10.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = React10.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React10.useEffect(function() {
    lockStack.push(Style2);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive);
    document.addEventListener("touchmove", shouldPrevent, nonPassive);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive);
    return function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style2;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React10.createElement(
    React10.Fragment,
    null,
    inert ? React10.createElement(Style2, { styles: generateStyle(id) }) : null,
    removeScrollBar ? React10.createElement(RemoveScrollBar, { gapMode: props.gapMode }) : null
  );
}
function getOutermostShadowParent(node) {
  var shadowParent = null;
  while (node !== null) {
    if (node instanceof ShadowRoot) {
      shadowParent = node.host;
      node = node.host;
    }
    node = node.parentNode;
  }
  return shadowParent;
}

// node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default = exportSidecar(effectCar, RemoveScrollSideCar);

// node_modules/react-remove-scroll/dist/es2015/Combination.js
var ReactRemoveScroll = React11.forwardRef(function(props, ref) {
  return React11.createElement(RemoveScroll, __assign({}, props, { ref, sideCar: sidecar_default }));
});
ReactRemoveScroll.classNames = RemoveScroll.classNames;
var Combination_default = ReactRemoveScroll;

// node_modules/aria-hidden/dist/es2015/index.js
var getDefaultParent = function(originalTarget) {
  if (typeof document === "undefined") {
    return null;
  }
  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
  return sampleTarget.ownerDocument.body;
};
var counterMap = /* @__PURE__ */ new WeakMap();
var uncontrolledNodes = /* @__PURE__ */ new WeakMap();
var markerMap = {};
var lockCount = 0;
var unwrapHost = function(node) {
  return node && (node.host || unwrapHost(node.parentNode));
};
var correctTargets = function(parent, targets) {
  return targets.map(function(target) {
    if (parent.contains(target)) {
      return target;
    }
    var correctedTarget = unwrapHost(target);
    if (correctedTarget && parent.contains(correctedTarget)) {
      return correctedTarget;
    }
    console.error("aria-hidden", target, "in not contained inside", parent, ". Doing nothing");
    return null;
  }).filter(function(x2) {
    return Boolean(x2);
  });
};
var applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
  var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  if (!markerMap[markerName]) {
    markerMap[markerName] = /* @__PURE__ */ new WeakMap();
  }
  var markerCounter = markerMap[markerName];
  var hiddenNodes = [];
  var elementsToKeep = /* @__PURE__ */ new Set();
  var elementsToStop = new Set(targets);
  var keep = function(el) {
    if (!el || elementsToKeep.has(el)) {
      return;
    }
    elementsToKeep.add(el);
    keep(el.parentNode);
  };
  targets.forEach(keep);
  var deep = function(parent) {
    if (!parent || elementsToStop.has(parent)) {
      return;
    }
    Array.prototype.forEach.call(parent.children, function(node) {
      if (elementsToKeep.has(node)) {
        deep(node);
      } else {
        try {
          var attr = node.getAttribute(controlAttribute);
          var alreadyHidden = attr !== null && attr !== "false";
          var counterValue = (counterMap.get(node) || 0) + 1;
          var markerValue = (markerCounter.get(node) || 0) + 1;
          counterMap.set(node, counterValue);
          markerCounter.set(node, markerValue);
          hiddenNodes.push(node);
          if (counterValue === 1 && alreadyHidden) {
            uncontrolledNodes.set(node, true);
          }
          if (markerValue === 1) {
            node.setAttribute(markerName, "true");
          }
          if (!alreadyHidden) {
            node.setAttribute(controlAttribute, "true");
          }
        } catch (e2) {
          console.error("aria-hidden: cannot operate on ", node, e2);
        }
      }
    });
  };
  deep(parentNode);
  elementsToKeep.clear();
  lockCount++;
  return function() {
    hiddenNodes.forEach(function(node) {
      var counterValue = counterMap.get(node) - 1;
      var markerValue = markerCounter.get(node) - 1;
      counterMap.set(node, counterValue);
      markerCounter.set(node, markerValue);
      if (!counterValue) {
        if (!uncontrolledNodes.has(node)) {
          node.removeAttribute(controlAttribute);
        }
        uncontrolledNodes.delete(node);
      }
      if (!markerValue) {
        node.removeAttribute(markerName);
      }
    });
    lockCount--;
    if (!lockCount) {
      counterMap = /* @__PURE__ */ new WeakMap();
      counterMap = /* @__PURE__ */ new WeakMap();
      uncontrolledNodes = /* @__PURE__ */ new WeakMap();
      markerMap = {};
    }
  };
};
var hideOthers = function(originalTarget, parentNode, markerName) {
  if (markerName === void 0) {
    markerName = "data-aria-hidden";
  }
  var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  var activeParentNode = parentNode || getDefaultParent(originalTarget);
  if (!activeParentNode) {
    return function() {
      return null;
    };
  }
  targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll("[aria-live]")));
  return applyAttributeToOthers(targets, activeParentNode, markerName, "aria-hidden");
};

// node_modules/@radix-ui/react-dialog/dist/index.mjs
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var DIALOG_NAME = "Dialog";
var [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);
var [DialogProvider, useDialogContext] = createDialogContext(DIALOG_NAME);
var Dialog = (props) => {
  const {
    __scopeDialog,
    children,
    open: openProp,
    defaultOpen,
    onOpenChange,
    modal = true
  } = props;
  const triggerRef = React12.useRef(null);
  const contentRef = React12.useRef(null);
  const [open = false, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_jsx_runtime2.jsx)(
    DialogProvider,
    {
      scope: __scopeDialog,
      triggerRef,
      contentRef,
      contentId: useId(),
      titleId: useId(),
      descriptionId: useId(),
      open,
      onOpenChange: setOpen,
      onOpenToggle: React12.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
      modal,
      children
    }
  );
};
Dialog.displayName = DIALOG_NAME;
var TRIGGER_NAME = "DialogTrigger";
var DialogTrigger = React12.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...triggerProps } = props;
    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);
    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);
    return (0, import_jsx_runtime2.jsx)(
      Primitive.button,
      {
        type: "button",
        "aria-haspopup": "dialog",
        "aria-expanded": context.open,
        "aria-controls": context.contentId,
        "data-state": getState(context.open),
        ...triggerProps,
        ref: composedTriggerRef,
        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)
      }
    );
  }
);
DialogTrigger.displayName = TRIGGER_NAME;
var PORTAL_NAME = "DialogPortal";
var [PortalProvider, usePortalContext] = createDialogContext(PORTAL_NAME, {
  forceMount: void 0
});
var DialogPortal = (props) => {
  const { __scopeDialog, forceMount, children, container } = props;
  const context = useDialogContext(PORTAL_NAME, __scopeDialog);
  return (0, import_jsx_runtime2.jsx)(PortalProvider, { scope: __scopeDialog, forceMount, children: React12.Children.map(children, (child) => (0, import_jsx_runtime2.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime2.jsx)(Portal, { asChild: true, container, children: child }) })) });
};
DialogPortal.displayName = PORTAL_NAME;
var OVERLAY_NAME = "DialogOverlay";
var DialogOverlay = React12.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);
    const { forceMount = portalContext.forceMount, ...overlayProps } = props;
    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);
    return context.modal ? (0, import_jsx_runtime2.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime2.jsx)(DialogOverlayImpl, { ...overlayProps, ref: forwardedRef }) }) : null;
  }
);
DialogOverlay.displayName = OVERLAY_NAME;
var Slot2 = createSlot("DialogOverlay.RemoveScroll");
var DialogOverlayImpl = React12.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...overlayProps } = props;
    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);
    return (
      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
      // ie. when `Overlay` and `Content` are siblings
      (0, import_jsx_runtime2.jsx)(Combination_default, { as: Slot2, allowPinchZoom: true, shards: [context.contentRef], children: (0, import_jsx_runtime2.jsx)(
        Primitive.div,
        {
          "data-state": getState(context.open),
          ...overlayProps,
          ref: forwardedRef,
          style: { pointerEvents: "auto", ...overlayProps.style }
        }
      ) })
    );
  }
);
var CONTENT_NAME = "DialogContent";
var DialogContent = React12.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);
    const { forceMount = portalContext.forceMount, ...contentProps } = props;
    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);
    return (0, import_jsx_runtime2.jsx)(Presence, { present: forceMount || context.open, children: context.modal ? (0, import_jsx_runtime2.jsx)(DialogContentModal, { ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime2.jsx)(DialogContentNonModal, { ...contentProps, ref: forwardedRef }) });
  }
);
DialogContent.displayName = CONTENT_NAME;
var DialogContentModal = React12.forwardRef(
  (props, forwardedRef) => {
    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);
    const contentRef = React12.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);
    React12.useEffect(() => {
      const content = contentRef.current;
      if (content) return hideOthers(content);
    }, []);
    return (0, import_jsx_runtime2.jsx)(
      DialogContentImpl,
      {
        ...props,
        ref: composedRefs,
        trapFocus: context.open,
        disableOutsidePointerEvents: true,
        onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {
          var _a;
          event.preventDefault();
          (_a = context.triggerRef.current) == null ? void 0 : _a.focus();
        }),
        onPointerDownOutside: composeEventHandlers(props.onPointerDownOutside, (event) => {
          const originalEvent = event.detail.originalEvent;
          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
          if (isRightClick) event.preventDefault();
        }),
        onFocusOutside: composeEventHandlers(
          props.onFocusOutside,
          (event) => event.preventDefault()
        )
      }
    );
  }
);
var DialogContentNonModal = React12.forwardRef(
  (props, forwardedRef) => {
    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);
    const hasInteractedOutsideRef = React12.useRef(false);
    const hasPointerDownOutsideRef = React12.useRef(false);
    return (0, import_jsx_runtime2.jsx)(
      DialogContentImpl,
      {
        ...props,
        ref: forwardedRef,
        trapFocus: false,
        disableOutsidePointerEvents: false,
        onCloseAutoFocus: (event) => {
          var _a, _b;
          (_a = props.onCloseAutoFocus) == null ? void 0 : _a.call(props, event);
          if (!event.defaultPrevented) {
            if (!hasInteractedOutsideRef.current) (_b = context.triggerRef.current) == null ? void 0 : _b.focus();
            event.preventDefault();
          }
          hasInteractedOutsideRef.current = false;
          hasPointerDownOutsideRef.current = false;
        },
        onInteractOutside: (event) => {
          var _a, _b;
          (_a = props.onInteractOutside) == null ? void 0 : _a.call(props, event);
          if (!event.defaultPrevented) {
            hasInteractedOutsideRef.current = true;
            if (event.detail.originalEvent.type === "pointerdown") {
              hasPointerDownOutsideRef.current = true;
            }
          }
          const target = event.target;
          const targetIsTrigger = (_b = context.triggerRef.current) == null ? void 0 : _b.contains(target);
          if (targetIsTrigger) event.preventDefault();
          if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current) {
            event.preventDefault();
          }
        }
      }
    );
  }
);
var DialogContentImpl = React12.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;
    const context = useDialogContext(CONTENT_NAME, __scopeDialog);
    const contentRef = React12.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, contentRef);
    useFocusGuards();
    return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [
      (0, import_jsx_runtime2.jsx)(
        FocusScope,
        {
          asChild: true,
          loop: true,
          trapped: trapFocus,
          onMountAutoFocus: onOpenAutoFocus,
          onUnmountAutoFocus: onCloseAutoFocus,
          children: (0, import_jsx_runtime2.jsx)(
            DismissableLayer,
            {
              role: "dialog",
              id: context.contentId,
              "aria-describedby": context.descriptionId,
              "aria-labelledby": context.titleId,
              "data-state": getState(context.open),
              ...contentProps,
              ref: composedRefs,
              onDismiss: () => context.onOpenChange(false)
            }
          )
        }
      ),
      (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [
        (0, import_jsx_runtime2.jsx)(TitleWarning, { titleId: context.titleId }),
        (0, import_jsx_runtime2.jsx)(DescriptionWarning, { contentRef, descriptionId: context.descriptionId })
      ] })
    ] });
  }
);
var TITLE_NAME = "DialogTitle";
var DialogTitle = React12.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...titleProps } = props;
    const context = useDialogContext(TITLE_NAME, __scopeDialog);
    return (0, import_jsx_runtime2.jsx)(Primitive.h2, { id: context.titleId, ...titleProps, ref: forwardedRef });
  }
);
DialogTitle.displayName = TITLE_NAME;
var DESCRIPTION_NAME = "DialogDescription";
var DialogDescription = React12.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...descriptionProps } = props;
    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);
    return (0, import_jsx_runtime2.jsx)(Primitive.p, { id: context.descriptionId, ...descriptionProps, ref: forwardedRef });
  }
);
DialogDescription.displayName = DESCRIPTION_NAME;
var CLOSE_NAME = "DialogClose";
var DialogClose = React12.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...closeProps } = props;
    const context = useDialogContext(CLOSE_NAME, __scopeDialog);
    return (0, import_jsx_runtime2.jsx)(
      Primitive.button,
      {
        type: "button",
        ...closeProps,
        ref: forwardedRef,
        onClick: composeEventHandlers(props.onClick, () => context.onOpenChange(false))
      }
    );
  }
);
DialogClose.displayName = CLOSE_NAME;
function getState(open) {
  return open ? "open" : "closed";
}
var TITLE_WARNING_NAME = "DialogTitleWarning";
var [WarningProvider, useWarningContext] = createContext2(TITLE_WARNING_NAME, {
  contentName: CONTENT_NAME,
  titleName: TITLE_NAME,
  docsSlug: "dialog"
});
var TitleWarning = ({ titleId }) => {
  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);
  const MESSAGE = `\`${titleWarningContext.contentName}\` requires a \`${titleWarningContext.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${titleWarningContext.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;
  React12.useEffect(() => {
    if (titleId) {
      const hasTitle = document.getElementById(titleId);
      if (!hasTitle) console.error(MESSAGE);
    }
  }, [MESSAGE, titleId]);
  return null;
};
var DESCRIPTION_WARNING_NAME = "DialogDescriptionWarning";
var DescriptionWarning = ({ contentRef, descriptionId }) => {
  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);
  const MESSAGE = `Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${descriptionWarningContext.contentName}}.`;
  React12.useEffect(() => {
    var _a;
    const describedById = (_a = contentRef.current) == null ? void 0 : _a.getAttribute("aria-describedby");
    if (descriptionId && describedById) {
      const hasDescription = document.getElementById(descriptionId);
      if (!hasDescription) console.warn(MESSAGE);
    }
  }, [MESSAGE, contentRef, descriptionId]);
  return null;
};
var Root = Dialog;
var Trigger = DialogTrigger;
var Portal2 = DialogPortal;
var Overlay = DialogOverlay;
var Content2 = DialogContent;
var Title = DialogTitle;
var Description = DialogDescription;
var Close = DialogClose;

// node_modules/zudoku/lib/Dialog-ByYz4ABw.js
var l3 = __toESM(require_react(), 1);
var D2 = Root;
var j4 = Trigger;
var c4 = Portal2;
var n4 = l3.forwardRef(({ className: e2, ...t5 }, o3) => ae.jsx(
  Overlay,
  {
    ref: o3,
    className: We(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      e2
    ),
    ...t5
  }
));
n4.displayName = Overlay.displayName;
var m3 = l3.forwardRef(({ className: e2, children: t5, ...o3 }, d3) => ae.jsxs(c4, { children: [
  ae.jsx(n4, {}),
  ae.jsxs(
    Content2,
    {
      ref: d3,
      className: We(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        e2
      ),
      ...o3,
      children: [
        t5,
        ae.jsxs(Close, { className: "absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground", children: [
          ae.jsx(X, { className: "h-4 w-4" }),
          ae.jsx("span", { className: "sr-only", children: "Close" })
        ] })
      ]
    }
  )
] }));
m3.displayName = Content2.displayName;
var f4 = ({
  className: e2,
  ...t5
}) => ae.jsx(
  "div",
  {
    className: We(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      e2
    ),
    ...t5
  }
);
f4.displayName = "DialogHeader";
var p2 = ({
  className: e2,
  ...t5
}) => ae.jsx(
  "div",
  {
    className: We(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      e2
    ),
    ...t5
  }
);
p2.displayName = "DialogFooter";
var g = l3.forwardRef(({ className: e2, ...t5 }, o3) => ae.jsx(
  Title,
  {
    ref: o3,
    className: We(
      "text-lg font-semibold leading-none tracking-tight",
      e2
    ),
    ...t5
  }
));
g.displayName = Title.displayName;
var x = l3.forwardRef(({ className: e2, ...t5 }, o3) => ae.jsx(
  Description,
  {
    ref: o3,
    className: We("text-sm text-muted-foreground", e2),
    ...t5
  }
));
x.displayName = Description.displayName;

// node_modules/zudoku/lib/mutation-Csa9eQDM.js
var j5 = (i2) => {
  throw TypeError(i2);
};
var y3 = (i2, t5, s2) => t5.has(i2) || j5("Cannot " + s2);
var e = (i2, t5, s2) => (y3(i2, t5, "read from private field"), s2 ? s2.call(i2) : t5.get(i2));
var l4 = (i2, t5, s2) => t5.has(i2) ? j5("Cannot add the same private member more than once") : t5 instanceof WeakSet ? t5.add(i2) : t5.set(i2, s2);
var p3 = (i2, t5, s2, a2) => (y3(i2, t5, "write to private field"), a2 ? a2.call(i2, s2) : t5.set(i2, s2), s2);
var h = (i2, t5, s2) => (y3(i2, t5, "access private method"), s2);
var r;
var o2;
var d2;
var u;
var c5;
var U2;
var L3 = (U2 = class extends qt {
  constructor(t5) {
    super();
    l4(this, u);
    l4(this, r);
    l4(this, o2);
    l4(this, d2);
    this.mutationId = t5.mutationId, p3(this, o2, t5.mutationCache), p3(this, r, []), this.state = t5.state || H3(), this.setOptions(t5.options), this.scheduleGc();
  }
  setOptions(t5) {
    this.options = t5, this.updateGcTime(this.options.gcTime);
  }
  get meta() {
    return this.options.meta;
  }
  addObserver(t5) {
    e(this, r).includes(t5) || (e(this, r).push(t5), this.clearGcTimeout(), e(this, o2).notify({
      type: "observerAdded",
      mutation: this,
      observer: t5
    }));
  }
  removeObserver(t5) {
    p3(this, r, e(this, r).filter((s2) => s2 !== t5)), this.scheduleGc(), e(this, o2).notify({
      type: "observerRemoved",
      mutation: this,
      observer: t5
    });
  }
  optionalRemove() {
    e(this, r).length || (this.state.status === "pending" ? this.scheduleGc() : e(this, o2).remove(this));
  }
  continue() {
    var t5;
    return ((t5 = e(this, d2)) == null ? void 0 : t5.continue()) ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before
    this.execute(this.state.variables);
  }
  async execute(t5) {
    var x2, w2, g2, R3, v, C, P3, M3, S2, G3, D3, E, F2, O2, A2, T, b2, k2, I3, N5;
    const s2 = () => {
      h(this, u, c5).call(this, { type: "continue" });
    };
    p3(this, d2, At({
      fn: () => this.options.mutationFn ? this.options.mutationFn(t5) : Promise.reject(new Error("No mutationFn found")),
      onFail: (n5, f6) => {
        h(this, u, c5).call(this, { type: "failed", failureCount: n5, error: f6 });
      },
      onPause: () => {
        h(this, u, c5).call(this, { type: "pause" });
      },
      onContinue: s2,
      retry: this.options.retry ?? 0,
      retryDelay: this.options.retryDelay,
      networkMode: this.options.networkMode,
      canRun: () => e(this, o2).canRun(this)
    }));
    const a2 = this.state.status === "pending", m4 = !e(this, d2).canStart();
    try {
      if (a2)
        s2();
      else {
        h(this, u, c5).call(this, { type: "pending", variables: t5, isPaused: m4 }), await ((w2 = (x2 = e(this, o2).config).onMutate) == null ? void 0 : w2.call(
          x2,
          t5,
          this
        ));
        const f6 = await ((R3 = (g2 = this.options).onMutate) == null ? void 0 : R3.call(g2, t5));
        f6 !== this.state.context && h(this, u, c5).call(this, {
          type: "pending",
          context: f6,
          variables: t5,
          isPaused: m4
        });
      }
      const n5 = await e(this, d2).start();
      return await ((C = (v = e(this, o2).config).onSuccess) == null ? void 0 : C.call(
        v,
        n5,
        t5,
        this.state.context,
        this
      )), await ((M3 = (P3 = this.options).onSuccess) == null ? void 0 : M3.call(P3, n5, t5, this.state.context)), await ((G3 = (S2 = e(this, o2).config).onSettled) == null ? void 0 : G3.call(
        S2,
        n5,
        null,
        this.state.variables,
        this.state.context,
        this
      )), await ((E = (D3 = this.options).onSettled) == null ? void 0 : E.call(D3, n5, null, t5, this.state.context)), h(this, u, c5).call(this, { type: "success", data: n5 }), n5;
    } catch (n5) {
      try {
        throw await ((O2 = (F2 = e(this, o2).config).onError) == null ? void 0 : O2.call(
          F2,
          n5,
          t5,
          this.state.context,
          this
        )), await ((T = (A2 = this.options).onError) == null ? void 0 : T.call(
          A2,
          n5,
          t5,
          this.state.context
        )), await ((k2 = (b2 = e(this, o2).config).onSettled) == null ? void 0 : k2.call(
          b2,
          void 0,
          n5,
          this.state.variables,
          this.state.context,
          this
        )), await ((N5 = (I3 = this.options).onSettled) == null ? void 0 : N5.call(
          I3,
          void 0,
          n5,
          t5,
          this.state.context
        )), n5;
      } finally {
        h(this, u, c5).call(this, { type: "error", error: n5 });
      }
    } finally {
      e(this, o2).runNext(this);
    }
  }
}, r = /* @__PURE__ */ new WeakMap(), o2 = /* @__PURE__ */ new WeakMap(), d2 = /* @__PURE__ */ new WeakMap(), u = /* @__PURE__ */ new WeakSet(), c5 = function(t5) {
  const s2 = (a2) => {
    switch (t5.type) {
      case "failed":
        return {
          ...a2,
          failureCount: t5.failureCount,
          failureReason: t5.error
        };
      case "pause":
        return {
          ...a2,
          isPaused: true
        };
      case "continue":
        return {
          ...a2,
          isPaused: false
        };
      case "pending":
        return {
          ...a2,
          context: t5.context,
          data: void 0,
          failureCount: 0,
          failureReason: null,
          error: null,
          isPaused: t5.isPaused,
          status: "pending",
          variables: t5.variables,
          submittedAt: Date.now()
        };
      case "success":
        return {
          ...a2,
          data: t5.data,
          failureCount: 0,
          failureReason: null,
          error: null,
          status: "success",
          isPaused: false
        };
      case "error":
        return {
          ...a2,
          data: void 0,
          error: t5.error,
          failureCount: a2.failureCount + 1,
          failureReason: t5.error,
          isPaused: false,
          status: "error"
        };
    }
  };
  this.state = s2(this.state), Le.batch(() => {
    e(this, r).forEach((a2) => {
      a2.onMutationUpdate(t5);
    }), e(this, o2).notify({
      mutation: this,
      type: "updated",
      action: t5
    });
  });
}, U2);
function H3() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: false,
    status: "idle",
    variables: void 0,
    submittedAt: 0
  };
}

// node_modules/@radix-ui/react-direction/dist/index.mjs
var React13 = __toESM(require_react(), 1);
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var DirectionContext = React13.createContext(void 0);
function useDirection(localDir) {
  const globalDir = React13.useContext(DirectionContext);
  return localDir || globalDir || "ltr";
}

// node_modules/@radix-ui/react-roving-focus/dist/index.mjs
var React15 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-collection/dist/index.mjs
var import_react7 = __toESM(require_react(), 1);
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
function createCollection(name) {
  const PROVIDER_NAME = name + "CollectionProvider";
  const [createCollectionContext, createCollectionScope3] = createContextScope(PROVIDER_NAME);
  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(
    PROVIDER_NAME,
    { collectionRef: { current: null }, itemMap: /* @__PURE__ */ new Map() }
  );
  const CollectionProvider = (props) => {
    const { scope, children } = props;
    const ref = import_react7.default.useRef(null);
    const itemMap = import_react7.default.useRef(/* @__PURE__ */ new Map()).current;
    return (0, import_jsx_runtime4.jsx)(CollectionProviderImpl, { scope, itemMap, collectionRef: ref, children });
  };
  CollectionProvider.displayName = PROVIDER_NAME;
  const COLLECTION_SLOT_NAME = name + "CollectionSlot";
  const CollectionSlotImpl = createSlot(COLLECTION_SLOT_NAME);
  const CollectionSlot = import_react7.default.forwardRef(
    (props, forwardedRef) => {
      const { scope, children } = props;
      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);
      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);
      return (0, import_jsx_runtime4.jsx)(CollectionSlotImpl, { ref: composedRefs, children });
    }
  );
  CollectionSlot.displayName = COLLECTION_SLOT_NAME;
  const ITEM_SLOT_NAME = name + "CollectionItemSlot";
  const ITEM_DATA_ATTR = "data-radix-collection-item";
  const CollectionItemSlotImpl = createSlot(ITEM_SLOT_NAME);
  const CollectionItemSlot = import_react7.default.forwardRef(
    (props, forwardedRef) => {
      const { scope, children, ...itemData } = props;
      const ref = import_react7.default.useRef(null);
      const composedRefs = useComposedRefs(forwardedRef, ref);
      const context = useCollectionContext(ITEM_SLOT_NAME, scope);
      import_react7.default.useEffect(() => {
        context.itemMap.set(ref, { ref, ...itemData });
        return () => void context.itemMap.delete(ref);
      });
      return (0, import_jsx_runtime4.jsx)(CollectionItemSlotImpl, { ...{ [ITEM_DATA_ATTR]: "" }, ref: composedRefs, children });
    }
  );
  CollectionItemSlot.displayName = ITEM_SLOT_NAME;
  function useCollection3(scope) {
    const context = useCollectionContext(name + "CollectionConsumer", scope);
    const getItems = import_react7.default.useCallback(() => {
      const collectionNode = context.collectionRef.current;
      if (!collectionNode) return [];
      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));
      const items = Array.from(context.itemMap.values());
      const orderedItems = items.sort(
        (a2, b2) => orderedNodes.indexOf(a2.ref.current) - orderedNodes.indexOf(b2.ref.current)
      );
      return orderedItems;
    }, [context.collectionRef, context.itemMap]);
    return getItems;
  }
  return [
    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },
    useCollection3,
    createCollectionScope3
  ];
}

// node_modules/@radix-ui/react-roving-focus/dist/index.mjs
var import_jsx_runtime5 = __toESM(require_jsx_runtime(), 1);
var ENTRY_FOCUS = "rovingFocusGroup.onEntryFocus";
var EVENT_OPTIONS2 = { bubbles: false, cancelable: true };
var GROUP_NAME = "RovingFocusGroup";
var [Collection, useCollection, createCollectionScope] = createCollection(GROUP_NAME);
var [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(
  GROUP_NAME,
  [createCollectionScope]
);
var [RovingFocusProvider, useRovingFocusContext] = createRovingFocusGroupContext(GROUP_NAME);
var RovingFocusGroup = React15.forwardRef(
  (props, forwardedRef) => {
    return (0, import_jsx_runtime5.jsx)(Collection.Provider, { scope: props.__scopeRovingFocusGroup, children: (0, import_jsx_runtime5.jsx)(Collection.Slot, { scope: props.__scopeRovingFocusGroup, children: (0, import_jsx_runtime5.jsx)(RovingFocusGroupImpl, { ...props, ref: forwardedRef }) }) });
  }
);
RovingFocusGroup.displayName = GROUP_NAME;
var RovingFocusGroupImpl = React15.forwardRef((props, forwardedRef) => {
  const {
    __scopeRovingFocusGroup,
    orientation,
    loop = false,
    dir,
    currentTabStopId: currentTabStopIdProp,
    defaultCurrentTabStopId,
    onCurrentTabStopIdChange,
    onEntryFocus,
    preventScrollOnEntryFocus = false,
    ...groupProps
  } = props;
  const ref = React15.useRef(null);
  const composedRefs = useComposedRefs(forwardedRef, ref);
  const direction = useDirection(dir);
  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({
    prop: currentTabStopIdProp,
    defaultProp: defaultCurrentTabStopId,
    onChange: onCurrentTabStopIdChange
  });
  const [isTabbingBackOut, setIsTabbingBackOut] = React15.useState(false);
  const handleEntryFocus = useCallbackRef(onEntryFocus);
  const getItems = useCollection(__scopeRovingFocusGroup);
  const isClickFocusRef = React15.useRef(false);
  const [focusableItemsCount, setFocusableItemsCount] = React15.useState(0);
  React15.useEffect(() => {
    const node = ref.current;
    if (node) {
      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);
      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);
    }
  }, [handleEntryFocus]);
  return (0, import_jsx_runtime5.jsx)(
    RovingFocusProvider,
    {
      scope: __scopeRovingFocusGroup,
      orientation,
      dir: direction,
      loop,
      currentTabStopId,
      onItemFocus: React15.useCallback(
        (tabStopId) => setCurrentTabStopId(tabStopId),
        [setCurrentTabStopId]
      ),
      onItemShiftTab: React15.useCallback(() => setIsTabbingBackOut(true), []),
      onFocusableItemAdd: React15.useCallback(
        () => setFocusableItemsCount((prevCount) => prevCount + 1),
        []
      ),
      onFocusableItemRemove: React15.useCallback(
        () => setFocusableItemsCount((prevCount) => prevCount - 1),
        []
      ),
      children: (0, import_jsx_runtime5.jsx)(
        Primitive.div,
        {
          tabIndex: isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0,
          "data-orientation": orientation,
          ...groupProps,
          ref: composedRefs,
          style: { outline: "none", ...props.style },
          onMouseDown: composeEventHandlers(props.onMouseDown, () => {
            isClickFocusRef.current = true;
          }),
          onFocus: composeEventHandlers(props.onFocus, (event) => {
            const isKeyboardFocus = !isClickFocusRef.current;
            if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {
              const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS2);
              event.currentTarget.dispatchEvent(entryFocusEvent);
              if (!entryFocusEvent.defaultPrevented) {
                const items = getItems().filter((item) => item.focusable);
                const activeItem = items.find((item) => item.active);
                const currentItem = items.find((item) => item.id === currentTabStopId);
                const candidateItems = [activeItem, currentItem, ...items].filter(
                  Boolean
                );
                const candidateNodes = candidateItems.map((item) => item.ref.current);
                focusFirst2(candidateNodes, preventScrollOnEntryFocus);
              }
            }
            isClickFocusRef.current = false;
          }),
          onBlur: composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))
        }
      )
    }
  );
});
var ITEM_NAME = "RovingFocusGroupItem";
var RovingFocusGroupItem = React15.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeRovingFocusGroup,
      focusable = true,
      active = false,
      tabStopId,
      ...itemProps
    } = props;
    const autoId = useId();
    const id = tabStopId || autoId;
    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);
    const isCurrentTabStop = context.currentTabStopId === id;
    const getItems = useCollection(__scopeRovingFocusGroup);
    const { onFocusableItemAdd, onFocusableItemRemove } = context;
    React15.useEffect(() => {
      if (focusable) {
        onFocusableItemAdd();
        return () => onFocusableItemRemove();
      }
    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);
    return (0, import_jsx_runtime5.jsx)(
      Collection.ItemSlot,
      {
        scope: __scopeRovingFocusGroup,
        id,
        focusable,
        active,
        children: (0, import_jsx_runtime5.jsx)(
          Primitive.span,
          {
            tabIndex: isCurrentTabStop ? 0 : -1,
            "data-orientation": context.orientation,
            ...itemProps,
            ref: forwardedRef,
            onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {
              if (!focusable) event.preventDefault();
              else context.onItemFocus(id);
            }),
            onFocus: composeEventHandlers(props.onFocus, () => context.onItemFocus(id)),
            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
              if (event.key === "Tab" && event.shiftKey) {
                context.onItemShiftTab();
                return;
              }
              if (event.target !== event.currentTarget) return;
              const focusIntent = getFocusIntent(event, context.orientation, context.dir);
              if (focusIntent !== void 0) {
                if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;
                event.preventDefault();
                const items = getItems().filter((item) => item.focusable);
                let candidateNodes = items.map((item) => item.ref.current);
                if (focusIntent === "last") candidateNodes.reverse();
                else if (focusIntent === "prev" || focusIntent === "next") {
                  if (focusIntent === "prev") candidateNodes.reverse();
                  const currentIndex = candidateNodes.indexOf(event.currentTarget);
                  candidateNodes = context.loop ? wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);
                }
                setTimeout(() => focusFirst2(candidateNodes));
              }
            })
          }
        )
      }
    );
  }
);
RovingFocusGroupItem.displayName = ITEM_NAME;
var MAP_KEY_TO_FOCUS_INTENT = {
  ArrowLeft: "prev",
  ArrowUp: "prev",
  ArrowRight: "next",
  ArrowDown: "next",
  PageUp: "first",
  Home: "first",
  PageDown: "last",
  End: "last"
};
function getDirectionAwareKey(key, dir) {
  if (dir !== "rtl") return key;
  return key === "ArrowLeft" ? "ArrowRight" : key === "ArrowRight" ? "ArrowLeft" : key;
}
function getFocusIntent(event, orientation, dir) {
  const key = getDirectionAwareKey(event.key, dir);
  if (orientation === "vertical" && ["ArrowLeft", "ArrowRight"].includes(key)) return void 0;
  if (orientation === "horizontal" && ["ArrowUp", "ArrowDown"].includes(key)) return void 0;
  return MAP_KEY_TO_FOCUS_INTENT[key];
}
function focusFirst2(candidates, preventScroll = false) {
  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (const candidate of candidates) {
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
    candidate.focus({ preventScroll });
    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
  }
}
function wrapArray(array, startIndex) {
  return array.map((_3, index) => array[(startIndex + index) % array.length]);
}
var Root3 = RovingFocusGroup;
var Item = RovingFocusGroupItem;

// node_modules/zudoku/lib/objectEntries-yMIkr2mI.js
var t3 = (e2) => Object.entries(e2);

// node_modules/zudoku/lib/useLatest-hmRS46UF.js
var import_react8 = __toESM(require_react(), 1);
var u2 = (e2) => {
  const s2 = (0, import_react8.useRef)(e2);
  return s2.current = e2, (0, import_react8.useEffect)(() => {
    s2.current = e2;
  }, [e2]), s2;
};

// node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs
var React17 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-menu/dist/index.mjs
var React16 = __toESM(require_react(), 1);
var import_jsx_runtime6 = __toESM(require_jsx_runtime(), 1);
var SELECTION_KEYS = ["Enter", " "];
var FIRST_KEYS = ["ArrowDown", "PageUp", "Home"];
var LAST_KEYS = ["ArrowUp", "PageDown", "End"];
var FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];
var SUB_OPEN_KEYS = {
  ltr: [...SELECTION_KEYS, "ArrowRight"],
  rtl: [...SELECTION_KEYS, "ArrowLeft"]
};
var SUB_CLOSE_KEYS = {
  ltr: ["ArrowLeft"],
  rtl: ["ArrowRight"]
};
var MENU_NAME = "Menu";
var [Collection2, useCollection2, createCollectionScope2] = createCollection(MENU_NAME);
var [createMenuContext, createMenuScope] = createContextScope(MENU_NAME, [
  createCollectionScope2,
  createPopperScope,
  createRovingFocusGroupScope
]);
var usePopperScope = createPopperScope();
var useRovingFocusGroupScope = createRovingFocusGroupScope();
var [MenuProvider, useMenuContext] = createMenuContext(MENU_NAME);
var [MenuRootProvider, useMenuRootContext] = createMenuContext(MENU_NAME);
var Menu = (props) => {
  const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;
  const popperScope = usePopperScope(__scopeMenu);
  const [content, setContent] = React16.useState(null);
  const isUsingKeyboardRef = React16.useRef(false);
  const handleOpenChange = useCallbackRef(onOpenChange);
  const direction = useDirection(dir);
  React16.useEffect(() => {
    const handleKeyDown = () => {
      isUsingKeyboardRef.current = true;
      document.addEventListener("pointerdown", handlePointer, { capture: true, once: true });
      document.addEventListener("pointermove", handlePointer, { capture: true, once: true });
    };
    const handlePointer = () => isUsingKeyboardRef.current = false;
    document.addEventListener("keydown", handleKeyDown, { capture: true });
    return () => {
      document.removeEventListener("keydown", handleKeyDown, { capture: true });
      document.removeEventListener("pointerdown", handlePointer, { capture: true });
      document.removeEventListener("pointermove", handlePointer, { capture: true });
    };
  }, []);
  return (0, import_jsx_runtime6.jsx)(Root2, { ...popperScope, children: (0, import_jsx_runtime6.jsx)(
    MenuProvider,
    {
      scope: __scopeMenu,
      open,
      onOpenChange: handleOpenChange,
      content,
      onContentChange: setContent,
      children: (0, import_jsx_runtime6.jsx)(
        MenuRootProvider,
        {
          scope: __scopeMenu,
          onClose: React16.useCallback(() => handleOpenChange(false), [handleOpenChange]),
          isUsingKeyboardRef,
          dir: direction,
          modal,
          children
        }
      )
    }
  ) });
};
Menu.displayName = MENU_NAME;
var ANCHOR_NAME = "MenuAnchor";
var MenuAnchor = React16.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, ...anchorProps } = props;
    const popperScope = usePopperScope(__scopeMenu);
    return (0, import_jsx_runtime6.jsx)(Anchor, { ...popperScope, ...anchorProps, ref: forwardedRef });
  }
);
MenuAnchor.displayName = ANCHOR_NAME;
var PORTAL_NAME2 = "MenuPortal";
var [PortalProvider2, usePortalContext2] = createMenuContext(PORTAL_NAME2, {
  forceMount: void 0
});
var MenuPortal = (props) => {
  const { __scopeMenu, forceMount, children, container } = props;
  const context = useMenuContext(PORTAL_NAME2, __scopeMenu);
  return (0, import_jsx_runtime6.jsx)(PortalProvider2, { scope: __scopeMenu, forceMount, children: (0, import_jsx_runtime6.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime6.jsx)(Portal, { asChild: true, container, children }) }) });
};
MenuPortal.displayName = PORTAL_NAME2;
var CONTENT_NAME2 = "MenuContent";
var [MenuContentProvider, useMenuContentContext] = createMenuContext(CONTENT_NAME2);
var MenuContent = React16.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext2(CONTENT_NAME2, props.__scopeMenu);
    const { forceMount = portalContext.forceMount, ...contentProps } = props;
    const context = useMenuContext(CONTENT_NAME2, props.__scopeMenu);
    const rootContext = useMenuRootContext(CONTENT_NAME2, props.__scopeMenu);
    return (0, import_jsx_runtime6.jsx)(Collection2.Provider, { scope: props.__scopeMenu, children: (0, import_jsx_runtime6.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime6.jsx)(Collection2.Slot, { scope: props.__scopeMenu, children: rootContext.modal ? (0, import_jsx_runtime6.jsx)(MenuRootContentModal, { ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime6.jsx)(MenuRootContentNonModal, { ...contentProps, ref: forwardedRef }) }) }) });
  }
);
var MenuRootContentModal = React16.forwardRef(
  (props, forwardedRef) => {
    const context = useMenuContext(CONTENT_NAME2, props.__scopeMenu);
    const ref = React16.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    React16.useEffect(() => {
      const content = ref.current;
      if (content) return hideOthers(content);
    }, []);
    return (0, import_jsx_runtime6.jsx)(
      MenuContentImpl,
      {
        ...props,
        ref: composedRefs,
        trapFocus: context.open,
        disableOutsidePointerEvents: context.open,
        disableOutsideScroll: true,
        onFocusOutside: composeEventHandlers(
          props.onFocusOutside,
          (event) => event.preventDefault(),
          { checkForDefaultPrevented: false }
        ),
        onDismiss: () => context.onOpenChange(false)
      }
    );
  }
);
var MenuRootContentNonModal = React16.forwardRef((props, forwardedRef) => {
  const context = useMenuContext(CONTENT_NAME2, props.__scopeMenu);
  return (0, import_jsx_runtime6.jsx)(
    MenuContentImpl,
    {
      ...props,
      ref: forwardedRef,
      trapFocus: false,
      disableOutsidePointerEvents: false,
      disableOutsideScroll: false,
      onDismiss: () => context.onOpenChange(false)
    }
  );
});
var Slot3 = createSlot("MenuContent.ScrollLock");
var MenuContentImpl = React16.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeMenu,
      loop = false,
      trapFocus,
      onOpenAutoFocus,
      onCloseAutoFocus,
      disableOutsidePointerEvents,
      onEntryFocus,
      onEscapeKeyDown,
      onPointerDownOutside,
      onFocusOutside,
      onInteractOutside,
      onDismiss,
      disableOutsideScroll,
      ...contentProps
    } = props;
    const context = useMenuContext(CONTENT_NAME2, __scopeMenu);
    const rootContext = useMenuRootContext(CONTENT_NAME2, __scopeMenu);
    const popperScope = usePopperScope(__scopeMenu);
    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);
    const getItems = useCollection2(__scopeMenu);
    const [currentItemId, setCurrentItemId] = React16.useState(null);
    const contentRef = React16.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, contentRef, context.onContentChange);
    const timerRef = React16.useRef(0);
    const searchRef = React16.useRef("");
    const pointerGraceTimerRef = React16.useRef(0);
    const pointerGraceIntentRef = React16.useRef(null);
    const pointerDirRef = React16.useRef("right");
    const lastPointerXRef = React16.useRef(0);
    const ScrollLockWrapper = disableOutsideScroll ? Combination_default : React16.Fragment;
    const scrollLockWrapperProps = disableOutsideScroll ? { as: Slot3, allowPinchZoom: true } : void 0;
    const handleTypeaheadSearch = (key) => {
      var _a, _b;
      const search = searchRef.current + key;
      const items = getItems().filter((item) => !item.disabled);
      const currentItem = document.activeElement;
      const currentMatch = (_a = items.find((item) => item.ref.current === currentItem)) == null ? void 0 : _a.textValue;
      const values = items.map((item) => item.textValue);
      const nextMatch = getNextMatch(values, search, currentMatch);
      const newItem = (_b = items.find((item) => item.textValue === nextMatch)) == null ? void 0 : _b.ref.current;
      (function updateSearch(value) {
        searchRef.current = value;
        window.clearTimeout(timerRef.current);
        if (value !== "") timerRef.current = window.setTimeout(() => updateSearch(""), 1e3);
      })(search);
      if (newItem) {
        setTimeout(() => newItem.focus());
      }
    };
    React16.useEffect(() => {
      return () => window.clearTimeout(timerRef.current);
    }, []);
    useFocusGuards();
    const isPointerMovingToSubmenu = React16.useCallback((event) => {
      var _a, _b;
      const isMovingTowards = pointerDirRef.current === ((_a = pointerGraceIntentRef.current) == null ? void 0 : _a.side);
      return isMovingTowards && isPointerInGraceArea(event, (_b = pointerGraceIntentRef.current) == null ? void 0 : _b.area);
    }, []);
    return (0, import_jsx_runtime6.jsx)(
      MenuContentProvider,
      {
        scope: __scopeMenu,
        searchRef,
        onItemEnter: React16.useCallback(
          (event) => {
            if (isPointerMovingToSubmenu(event)) event.preventDefault();
          },
          [isPointerMovingToSubmenu]
        ),
        onItemLeave: React16.useCallback(
          (event) => {
            var _a;
            if (isPointerMovingToSubmenu(event)) return;
            (_a = contentRef.current) == null ? void 0 : _a.focus();
            setCurrentItemId(null);
          },
          [isPointerMovingToSubmenu]
        ),
        onTriggerLeave: React16.useCallback(
          (event) => {
            if (isPointerMovingToSubmenu(event)) event.preventDefault();
          },
          [isPointerMovingToSubmenu]
        ),
        pointerGraceTimerRef,
        onPointerGraceIntentChange: React16.useCallback((intent) => {
          pointerGraceIntentRef.current = intent;
        }, []),
        children: (0, import_jsx_runtime6.jsx)(ScrollLockWrapper, { ...scrollLockWrapperProps, children: (0, import_jsx_runtime6.jsx)(
          FocusScope,
          {
            asChild: true,
            trapped: trapFocus,
            onMountAutoFocus: composeEventHandlers(onOpenAutoFocus, (event) => {
              var _a;
              event.preventDefault();
              (_a = contentRef.current) == null ? void 0 : _a.focus({ preventScroll: true });
            }),
            onUnmountAutoFocus: onCloseAutoFocus,
            children: (0, import_jsx_runtime6.jsx)(
              DismissableLayer,
              {
                asChild: true,
                disableOutsidePointerEvents,
                onEscapeKeyDown,
                onPointerDownOutside,
                onFocusOutside,
                onInteractOutside,
                onDismiss,
                children: (0, import_jsx_runtime6.jsx)(
                  Root3,
                  {
                    asChild: true,
                    ...rovingFocusGroupScope,
                    dir: rootContext.dir,
                    orientation: "vertical",
                    loop,
                    currentTabStopId: currentItemId,
                    onCurrentTabStopIdChange: setCurrentItemId,
                    onEntryFocus: composeEventHandlers(onEntryFocus, (event) => {
                      if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();
                    }),
                    preventScrollOnEntryFocus: true,
                    children: (0, import_jsx_runtime6.jsx)(
                      Content,
                      {
                        role: "menu",
                        "aria-orientation": "vertical",
                        "data-state": getOpenState(context.open),
                        "data-radix-menu-content": "",
                        dir: rootContext.dir,
                        ...popperScope,
                        ...contentProps,
                        ref: composedRefs,
                        style: { outline: "none", ...contentProps.style },
                        onKeyDown: composeEventHandlers(contentProps.onKeyDown, (event) => {
                          const target = event.target;
                          const isKeyDownInside = target.closest("[data-radix-menu-content]") === event.currentTarget;
                          const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
                          const isCharacterKey = event.key.length === 1;
                          if (isKeyDownInside) {
                            if (event.key === "Tab") event.preventDefault();
                            if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);
                          }
                          const content = contentRef.current;
                          if (event.target !== content) return;
                          if (!FIRST_LAST_KEYS.includes(event.key)) return;
                          event.preventDefault();
                          const items = getItems().filter((item) => !item.disabled);
                          const candidateNodes = items.map((item) => item.ref.current);
                          if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();
                          focusFirst3(candidateNodes);
                        }),
                        onBlur: composeEventHandlers(props.onBlur, (event) => {
                          if (!event.currentTarget.contains(event.target)) {
                            window.clearTimeout(timerRef.current);
                            searchRef.current = "";
                          }
                        }),
                        onPointerMove: composeEventHandlers(
                          props.onPointerMove,
                          whenMouse((event) => {
                            const target = event.target;
                            const pointerXHasChanged = lastPointerXRef.current !== event.clientX;
                            if (event.currentTarget.contains(target) && pointerXHasChanged) {
                              const newDir = event.clientX > lastPointerXRef.current ? "right" : "left";
                              pointerDirRef.current = newDir;
                              lastPointerXRef.current = event.clientX;
                            }
                          })
                        )
                      }
                    )
                  }
                )
              }
            )
          }
        ) })
      }
    );
  }
);
MenuContent.displayName = CONTENT_NAME2;
var GROUP_NAME2 = "MenuGroup";
var MenuGroup = React16.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, ...groupProps } = props;
    return (0, import_jsx_runtime6.jsx)(Primitive.div, { role: "group", ...groupProps, ref: forwardedRef });
  }
);
MenuGroup.displayName = GROUP_NAME2;
var LABEL_NAME = "MenuLabel";
var MenuLabel = React16.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, ...labelProps } = props;
    return (0, import_jsx_runtime6.jsx)(Primitive.div, { ...labelProps, ref: forwardedRef });
  }
);
MenuLabel.displayName = LABEL_NAME;
var ITEM_NAME2 = "MenuItem";
var ITEM_SELECT = "menu.itemSelect";
var MenuItem = React16.forwardRef(
  (props, forwardedRef) => {
    const { disabled = false, onSelect, ...itemProps } = props;
    const ref = React16.useRef(null);
    const rootContext = useMenuRootContext(ITEM_NAME2, props.__scopeMenu);
    const contentContext = useMenuContentContext(ITEM_NAME2, props.__scopeMenu);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    const isPointerDownRef = React16.useRef(false);
    const handleSelect = () => {
      const menuItem = ref.current;
      if (!disabled && menuItem) {
        const itemSelectEvent = new CustomEvent(ITEM_SELECT, { bubbles: true, cancelable: true });
        menuItem.addEventListener(ITEM_SELECT, (event) => onSelect == null ? void 0 : onSelect(event), { once: true });
        dispatchDiscreteCustomEvent(menuItem, itemSelectEvent);
        if (itemSelectEvent.defaultPrevented) {
          isPointerDownRef.current = false;
        } else {
          rootContext.onClose();
        }
      }
    };
    return (0, import_jsx_runtime6.jsx)(
      MenuItemImpl,
      {
        ...itemProps,
        ref: composedRefs,
        disabled,
        onClick: composeEventHandlers(props.onClick, handleSelect),
        onPointerDown: (event) => {
          var _a;
          (_a = props.onPointerDown) == null ? void 0 : _a.call(props, event);
          isPointerDownRef.current = true;
        },
        onPointerUp: composeEventHandlers(props.onPointerUp, (event) => {
          var _a;
          if (!isPointerDownRef.current) (_a = event.currentTarget) == null ? void 0 : _a.click();
        }),
        onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
          const isTypingAhead = contentContext.searchRef.current !== "";
          if (disabled || isTypingAhead && event.key === " ") return;
          if (SELECTION_KEYS.includes(event.key)) {
            event.currentTarget.click();
            event.preventDefault();
          }
        })
      }
    );
  }
);
MenuItem.displayName = ITEM_NAME2;
var MenuItemImpl = React16.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;
    const contentContext = useMenuContentContext(ITEM_NAME2, __scopeMenu);
    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);
    const ref = React16.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    const [isFocused, setIsFocused] = React16.useState(false);
    const [textContent, setTextContent] = React16.useState("");
    React16.useEffect(() => {
      const menuItem = ref.current;
      if (menuItem) {
        setTextContent((menuItem.textContent ?? "").trim());
      }
    }, [itemProps.children]);
    return (0, import_jsx_runtime6.jsx)(
      Collection2.ItemSlot,
      {
        scope: __scopeMenu,
        disabled,
        textValue: textValue ?? textContent,
        children: (0, import_jsx_runtime6.jsx)(Item, { asChild: true, ...rovingFocusGroupScope, focusable: !disabled, children: (0, import_jsx_runtime6.jsx)(
          Primitive.div,
          {
            role: "menuitem",
            "data-highlighted": isFocused ? "" : void 0,
            "aria-disabled": disabled || void 0,
            "data-disabled": disabled ? "" : void 0,
            ...itemProps,
            ref: composedRefs,
            onPointerMove: composeEventHandlers(
              props.onPointerMove,
              whenMouse((event) => {
                if (disabled) {
                  contentContext.onItemLeave(event);
                } else {
                  contentContext.onItemEnter(event);
                  if (!event.defaultPrevented) {
                    const item = event.currentTarget;
                    item.focus({ preventScroll: true });
                  }
                }
              })
            ),
            onPointerLeave: composeEventHandlers(
              props.onPointerLeave,
              whenMouse((event) => contentContext.onItemLeave(event))
            ),
            onFocus: composeEventHandlers(props.onFocus, () => setIsFocused(true)),
            onBlur: composeEventHandlers(props.onBlur, () => setIsFocused(false))
          }
        ) })
      }
    );
  }
);
var CHECKBOX_ITEM_NAME = "MenuCheckboxItem";
var MenuCheckboxItem = React16.forwardRef(
  (props, forwardedRef) => {
    const { checked = false, onCheckedChange, ...checkboxItemProps } = props;
    return (0, import_jsx_runtime6.jsx)(ItemIndicatorProvider, { scope: props.__scopeMenu, checked, children: (0, import_jsx_runtime6.jsx)(
      MenuItem,
      {
        role: "menuitemcheckbox",
        "aria-checked": isIndeterminate(checked) ? "mixed" : checked,
        ...checkboxItemProps,
        ref: forwardedRef,
        "data-state": getCheckedState(checked),
        onSelect: composeEventHandlers(
          checkboxItemProps.onSelect,
          () => onCheckedChange == null ? void 0 : onCheckedChange(isIndeterminate(checked) ? true : !checked),
          { checkForDefaultPrevented: false }
        )
      }
    ) });
  }
);
MenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;
var RADIO_GROUP_NAME = "MenuRadioGroup";
var [RadioGroupProvider, useRadioGroupContext] = createMenuContext(
  RADIO_GROUP_NAME,
  { value: void 0, onValueChange: () => {
  } }
);
var MenuRadioGroup = React16.forwardRef(
  (props, forwardedRef) => {
    const { value, onValueChange, ...groupProps } = props;
    const handleValueChange = useCallbackRef(onValueChange);
    return (0, import_jsx_runtime6.jsx)(RadioGroupProvider, { scope: props.__scopeMenu, value, onValueChange: handleValueChange, children: (0, import_jsx_runtime6.jsx)(MenuGroup, { ...groupProps, ref: forwardedRef }) });
  }
);
MenuRadioGroup.displayName = RADIO_GROUP_NAME;
var RADIO_ITEM_NAME = "MenuRadioItem";
var MenuRadioItem = React16.forwardRef(
  (props, forwardedRef) => {
    const { value, ...radioItemProps } = props;
    const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);
    const checked = value === context.value;
    return (0, import_jsx_runtime6.jsx)(ItemIndicatorProvider, { scope: props.__scopeMenu, checked, children: (0, import_jsx_runtime6.jsx)(
      MenuItem,
      {
        role: "menuitemradio",
        "aria-checked": checked,
        ...radioItemProps,
        ref: forwardedRef,
        "data-state": getCheckedState(checked),
        onSelect: composeEventHandlers(
          radioItemProps.onSelect,
          () => {
            var _a;
            return (_a = context.onValueChange) == null ? void 0 : _a.call(context, value);
          },
          { checkForDefaultPrevented: false }
        )
      }
    ) });
  }
);
MenuRadioItem.displayName = RADIO_ITEM_NAME;
var ITEM_INDICATOR_NAME = "MenuItemIndicator";
var [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext(
  ITEM_INDICATOR_NAME,
  { checked: false }
);
var MenuItemIndicator = React16.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;
    const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);
    return (0, import_jsx_runtime6.jsx)(
      Presence,
      {
        present: forceMount || isIndeterminate(indicatorContext.checked) || indicatorContext.checked === true,
        children: (0, import_jsx_runtime6.jsx)(
          Primitive.span,
          {
            ...itemIndicatorProps,
            ref: forwardedRef,
            "data-state": getCheckedState(indicatorContext.checked)
          }
        )
      }
    );
  }
);
MenuItemIndicator.displayName = ITEM_INDICATOR_NAME;
var SEPARATOR_NAME = "MenuSeparator";
var MenuSeparator = React16.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, ...separatorProps } = props;
    return (0, import_jsx_runtime6.jsx)(
      Primitive.div,
      {
        role: "separator",
        "aria-orientation": "horizontal",
        ...separatorProps,
        ref: forwardedRef
      }
    );
  }
);
MenuSeparator.displayName = SEPARATOR_NAME;
var ARROW_NAME = "MenuArrow";
var MenuArrow = React16.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, ...arrowProps } = props;
    const popperScope = usePopperScope(__scopeMenu);
    return (0, import_jsx_runtime6.jsx)(Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef });
  }
);
MenuArrow.displayName = ARROW_NAME;
var SUB_NAME = "MenuSub";
var [MenuSubProvider, useMenuSubContext] = createMenuContext(SUB_NAME);
var MenuSub = (props) => {
  const { __scopeMenu, children, open = false, onOpenChange } = props;
  const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);
  const popperScope = usePopperScope(__scopeMenu);
  const [trigger, setTrigger] = React16.useState(null);
  const [content, setContent] = React16.useState(null);
  const handleOpenChange = useCallbackRef(onOpenChange);
  React16.useEffect(() => {
    if (parentMenuContext.open === false) handleOpenChange(false);
    return () => handleOpenChange(false);
  }, [parentMenuContext.open, handleOpenChange]);
  return (0, import_jsx_runtime6.jsx)(Root2, { ...popperScope, children: (0, import_jsx_runtime6.jsx)(
    MenuProvider,
    {
      scope: __scopeMenu,
      open,
      onOpenChange: handleOpenChange,
      content,
      onContentChange: setContent,
      children: (0, import_jsx_runtime6.jsx)(
        MenuSubProvider,
        {
          scope: __scopeMenu,
          contentId: useId(),
          triggerId: useId(),
          trigger,
          onTriggerChange: setTrigger,
          children
        }
      )
    }
  ) });
};
MenuSub.displayName = SUB_NAME;
var SUB_TRIGGER_NAME = "MenuSubTrigger";
var MenuSubTrigger = React16.forwardRef(
  (props, forwardedRef) => {
    const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);
    const rootContext = useMenuRootContext(SUB_TRIGGER_NAME, props.__scopeMenu);
    const subContext = useMenuSubContext(SUB_TRIGGER_NAME, props.__scopeMenu);
    const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);
    const openTimerRef = React16.useRef(null);
    const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;
    const scope = { __scopeMenu: props.__scopeMenu };
    const clearOpenTimer = React16.useCallback(() => {
      if (openTimerRef.current) window.clearTimeout(openTimerRef.current);
      openTimerRef.current = null;
    }, []);
    React16.useEffect(() => clearOpenTimer, [clearOpenTimer]);
    React16.useEffect(() => {
      const pointerGraceTimer = pointerGraceTimerRef.current;
      return () => {
        window.clearTimeout(pointerGraceTimer);
        onPointerGraceIntentChange(null);
      };
    }, [pointerGraceTimerRef, onPointerGraceIntentChange]);
    return (0, import_jsx_runtime6.jsx)(MenuAnchor, { asChild: true, ...scope, children: (0, import_jsx_runtime6.jsx)(
      MenuItemImpl,
      {
        id: subContext.triggerId,
        "aria-haspopup": "menu",
        "aria-expanded": context.open,
        "aria-controls": subContext.contentId,
        "data-state": getOpenState(context.open),
        ...props,
        ref: composeRefs(forwardedRef, subContext.onTriggerChange),
        onClick: (event) => {
          var _a;
          (_a = props.onClick) == null ? void 0 : _a.call(props, event);
          if (props.disabled || event.defaultPrevented) return;
          event.currentTarget.focus();
          if (!context.open) context.onOpenChange(true);
        },
        onPointerMove: composeEventHandlers(
          props.onPointerMove,
          whenMouse((event) => {
            contentContext.onItemEnter(event);
            if (event.defaultPrevented) return;
            if (!props.disabled && !context.open && !openTimerRef.current) {
              contentContext.onPointerGraceIntentChange(null);
              openTimerRef.current = window.setTimeout(() => {
                context.onOpenChange(true);
                clearOpenTimer();
              }, 100);
            }
          })
        ),
        onPointerLeave: composeEventHandlers(
          props.onPointerLeave,
          whenMouse((event) => {
            var _a, _b;
            clearOpenTimer();
            const contentRect = (_a = context.content) == null ? void 0 : _a.getBoundingClientRect();
            if (contentRect) {
              const side = (_b = context.content) == null ? void 0 : _b.dataset.side;
              const rightSide = side === "right";
              const bleed = rightSide ? -5 : 5;
              const contentNearEdge = contentRect[rightSide ? "left" : "right"];
              const contentFarEdge = contentRect[rightSide ? "right" : "left"];
              contentContext.onPointerGraceIntentChange({
                area: [
                  // Apply a bleed on clientX to ensure that our exit point is
                  // consistently within polygon bounds
                  { x: event.clientX + bleed, y: event.clientY },
                  { x: contentNearEdge, y: contentRect.top },
                  { x: contentFarEdge, y: contentRect.top },
                  { x: contentFarEdge, y: contentRect.bottom },
                  { x: contentNearEdge, y: contentRect.bottom }
                ],
                side
              });
              window.clearTimeout(pointerGraceTimerRef.current);
              pointerGraceTimerRef.current = window.setTimeout(
                () => contentContext.onPointerGraceIntentChange(null),
                300
              );
            } else {
              contentContext.onTriggerLeave(event);
              if (event.defaultPrevented) return;
              contentContext.onPointerGraceIntentChange(null);
            }
          })
        ),
        onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
          var _a;
          const isTypingAhead = contentContext.searchRef.current !== "";
          if (props.disabled || isTypingAhead && event.key === " ") return;
          if (SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {
            context.onOpenChange(true);
            (_a = context.content) == null ? void 0 : _a.focus();
            event.preventDefault();
          }
        })
      }
    ) });
  }
);
MenuSubTrigger.displayName = SUB_TRIGGER_NAME;
var SUB_CONTENT_NAME = "MenuSubContent";
var MenuSubContent = React16.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext2(CONTENT_NAME2, props.__scopeMenu);
    const { forceMount = portalContext.forceMount, ...subContentProps } = props;
    const context = useMenuContext(CONTENT_NAME2, props.__scopeMenu);
    const rootContext = useMenuRootContext(CONTENT_NAME2, props.__scopeMenu);
    const subContext = useMenuSubContext(SUB_CONTENT_NAME, props.__scopeMenu);
    const ref = React16.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    return (0, import_jsx_runtime6.jsx)(Collection2.Provider, { scope: props.__scopeMenu, children: (0, import_jsx_runtime6.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime6.jsx)(Collection2.Slot, { scope: props.__scopeMenu, children: (0, import_jsx_runtime6.jsx)(
      MenuContentImpl,
      {
        id: subContext.contentId,
        "aria-labelledby": subContext.triggerId,
        ...subContentProps,
        ref: composedRefs,
        align: "start",
        side: rootContext.dir === "rtl" ? "left" : "right",
        disableOutsidePointerEvents: false,
        disableOutsideScroll: false,
        trapFocus: false,
        onOpenAutoFocus: (event) => {
          var _a;
          if (rootContext.isUsingKeyboardRef.current) (_a = ref.current) == null ? void 0 : _a.focus();
          event.preventDefault();
        },
        onCloseAutoFocus: (event) => event.preventDefault(),
        onFocusOutside: composeEventHandlers(props.onFocusOutside, (event) => {
          if (event.target !== subContext.trigger) context.onOpenChange(false);
        }),
        onEscapeKeyDown: composeEventHandlers(props.onEscapeKeyDown, (event) => {
          rootContext.onClose();
          event.preventDefault();
        }),
        onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
          var _a;
          const isKeyDownInside = event.currentTarget.contains(event.target);
          const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);
          if (isKeyDownInside && isCloseKey) {
            context.onOpenChange(false);
            (_a = subContext.trigger) == null ? void 0 : _a.focus();
            event.preventDefault();
          }
        })
      }
    ) }) }) });
  }
);
MenuSubContent.displayName = SUB_CONTENT_NAME;
function getOpenState(open) {
  return open ? "open" : "closed";
}
function isIndeterminate(checked) {
  return checked === "indeterminate";
}
function getCheckedState(checked) {
  return isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
}
function focusFirst3(candidates) {
  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (const candidate of candidates) {
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
    candidate.focus();
    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
  }
}
function wrapArray2(array, startIndex) {
  return array.map((_3, index) => array[(startIndex + index) % array.length]);
}
function getNextMatch(values, search, currentMatch) {
  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);
  const normalizedSearch = isRepeated ? search[0] : search;
  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;
  let wrappedValues = wrapArray2(values, Math.max(currentMatchIndex, 0));
  const excludeCurrentMatch = normalizedSearch.length === 1;
  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);
  const nextMatch = wrappedValues.find(
    (value) => value.toLowerCase().startsWith(normalizedSearch.toLowerCase())
  );
  return nextMatch !== currentMatch ? nextMatch : void 0;
}
function isPointInPolygon(point, polygon) {
  const { x: x2, y: y4 } = point;
  let inside = false;
  for (let i2 = 0, j6 = polygon.length - 1; i2 < polygon.length; j6 = i2++) {
    const xi = polygon[i2].x;
    const yi = polygon[i2].y;
    const xj = polygon[j6].x;
    const yj = polygon[j6].y;
    const intersect = yi > y4 !== yj > y4 && x2 < (xj - xi) * (y4 - yi) / (yj - yi) + xi;
    if (intersect) inside = !inside;
  }
  return inside;
}
function isPointerInGraceArea(event, area) {
  if (!area) return false;
  const cursorPos = { x: event.clientX, y: event.clientY };
  return isPointInPolygon(cursorPos, area);
}
function whenMouse(handler) {
  return (event) => event.pointerType === "mouse" ? handler(event) : void 0;
}
var Root32 = Menu;
var Anchor2 = MenuAnchor;
var Portal3 = MenuPortal;
var Content22 = MenuContent;
var Group = MenuGroup;
var Label = MenuLabel;
var Item2 = MenuItem;
var CheckboxItem = MenuCheckboxItem;
var RadioGroup = MenuRadioGroup;
var RadioItem = MenuRadioItem;
var ItemIndicator = MenuItemIndicator;
var Separator = MenuSeparator;
var Arrow2 = MenuArrow;
var Sub = MenuSub;
var SubTrigger = MenuSubTrigger;
var SubContent = MenuSubContent;

// node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs
var import_jsx_runtime7 = __toESM(require_jsx_runtime(), 1);
var DROPDOWN_MENU_NAME = "DropdownMenu";
var [createDropdownMenuContext, createDropdownMenuScope] = createContextScope(
  DROPDOWN_MENU_NAME,
  [createMenuScope]
);
var useMenuScope = createMenuScope();
var [DropdownMenuProvider, useDropdownMenuContext] = createDropdownMenuContext(DROPDOWN_MENU_NAME);
var DropdownMenu = (props) => {
  const {
    __scopeDropdownMenu,
    children,
    dir,
    open: openProp,
    defaultOpen,
    onOpenChange,
    modal = true
  } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  const triggerRef = React17.useRef(null);
  const [open = false, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_jsx_runtime7.jsx)(
    DropdownMenuProvider,
    {
      scope: __scopeDropdownMenu,
      triggerId: useId(),
      triggerRef,
      contentId: useId(),
      open,
      onOpenChange: setOpen,
      onOpenToggle: React17.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
      modal,
      children: (0, import_jsx_runtime7.jsx)(Root32, { ...menuScope, open, onOpenChange: setOpen, dir, modal, children })
    }
  );
};
DropdownMenu.displayName = DROPDOWN_MENU_NAME;
var TRIGGER_NAME2 = "DropdownMenuTrigger";
var DropdownMenuTrigger = React17.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;
    const context = useDropdownMenuContext(TRIGGER_NAME2, __scopeDropdownMenu);
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return (0, import_jsx_runtime7.jsx)(Anchor2, { asChild: true, ...menuScope, children: (0, import_jsx_runtime7.jsx)(
      Primitive.button,
      {
        type: "button",
        id: context.triggerId,
        "aria-haspopup": "menu",
        "aria-expanded": context.open,
        "aria-controls": context.open ? context.contentId : void 0,
        "data-state": context.open ? "open" : "closed",
        "data-disabled": disabled ? "" : void 0,
        disabled,
        ...triggerProps,
        ref: composeRefs(forwardedRef, context.triggerRef),
        onPointerDown: composeEventHandlers(props.onPointerDown, (event) => {
          if (!disabled && event.button === 0 && event.ctrlKey === false) {
            context.onOpenToggle();
            if (!context.open) event.preventDefault();
          }
        }),
        onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
          if (disabled) return;
          if (["Enter", " "].includes(event.key)) context.onOpenToggle();
          if (event.key === "ArrowDown") context.onOpenChange(true);
          if (["Enter", " ", "ArrowDown"].includes(event.key)) event.preventDefault();
        })
      }
    ) });
  }
);
DropdownMenuTrigger.displayName = TRIGGER_NAME2;
var PORTAL_NAME3 = "DropdownMenuPortal";
var DropdownMenuPortal = (props) => {
  const { __scopeDropdownMenu, ...portalProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime7.jsx)(Portal3, { ...menuScope, ...portalProps });
};
DropdownMenuPortal.displayName = PORTAL_NAME3;
var CONTENT_NAME3 = "DropdownMenuContent";
var DropdownMenuContent = React17.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, ...contentProps } = props;
    const context = useDropdownMenuContext(CONTENT_NAME3, __scopeDropdownMenu);
    const menuScope = useMenuScope(__scopeDropdownMenu);
    const hasInteractedOutsideRef = React17.useRef(false);
    return (0, import_jsx_runtime7.jsx)(
      Content22,
      {
        id: context.contentId,
        "aria-labelledby": context.triggerId,
        ...menuScope,
        ...contentProps,
        ref: forwardedRef,
        onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {
          var _a;
          if (!hasInteractedOutsideRef.current) (_a = context.triggerRef.current) == null ? void 0 : _a.focus();
          hasInteractedOutsideRef.current = false;
          event.preventDefault();
        }),
        onInteractOutside: composeEventHandlers(props.onInteractOutside, (event) => {
          const originalEvent = event.detail.originalEvent;
          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
          if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;
        }),
        style: {
          ...props.style,
          // re-namespace exposed content custom properties
          ...{
            "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
            "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
            "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
            "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
            "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
          }
        }
      }
    );
  }
);
DropdownMenuContent.displayName = CONTENT_NAME3;
var GROUP_NAME3 = "DropdownMenuGroup";
var DropdownMenuGroup = React17.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, ...groupProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return (0, import_jsx_runtime7.jsx)(Group, { ...menuScope, ...groupProps, ref: forwardedRef });
  }
);
DropdownMenuGroup.displayName = GROUP_NAME3;
var LABEL_NAME2 = "DropdownMenuLabel";
var DropdownMenuLabel = React17.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, ...labelProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return (0, import_jsx_runtime7.jsx)(Label, { ...menuScope, ...labelProps, ref: forwardedRef });
  }
);
DropdownMenuLabel.displayName = LABEL_NAME2;
var ITEM_NAME3 = "DropdownMenuItem";
var DropdownMenuItem = React17.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, ...itemProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return (0, import_jsx_runtime7.jsx)(Item2, { ...menuScope, ...itemProps, ref: forwardedRef });
  }
);
DropdownMenuItem.displayName = ITEM_NAME3;
var CHECKBOX_ITEM_NAME2 = "DropdownMenuCheckboxItem";
var DropdownMenuCheckboxItem = React17.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...checkboxItemProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime7.jsx)(CheckboxItem, { ...menuScope, ...checkboxItemProps, ref: forwardedRef });
});
DropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME2;
var RADIO_GROUP_NAME2 = "DropdownMenuRadioGroup";
var DropdownMenuRadioGroup = React17.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...radioGroupProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime7.jsx)(RadioGroup, { ...menuScope, ...radioGroupProps, ref: forwardedRef });
});
DropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME2;
var RADIO_ITEM_NAME2 = "DropdownMenuRadioItem";
var DropdownMenuRadioItem = React17.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...radioItemProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime7.jsx)(RadioItem, { ...menuScope, ...radioItemProps, ref: forwardedRef });
});
DropdownMenuRadioItem.displayName = RADIO_ITEM_NAME2;
var INDICATOR_NAME = "DropdownMenuItemIndicator";
var DropdownMenuItemIndicator = React17.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime7.jsx)(ItemIndicator, { ...menuScope, ...itemIndicatorProps, ref: forwardedRef });
});
DropdownMenuItemIndicator.displayName = INDICATOR_NAME;
var SEPARATOR_NAME2 = "DropdownMenuSeparator";
var DropdownMenuSeparator = React17.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...separatorProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime7.jsx)(Separator, { ...menuScope, ...separatorProps, ref: forwardedRef });
});
DropdownMenuSeparator.displayName = SEPARATOR_NAME2;
var ARROW_NAME2 = "DropdownMenuArrow";
var DropdownMenuArrow = React17.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, ...arrowProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return (0, import_jsx_runtime7.jsx)(Arrow2, { ...menuScope, ...arrowProps, ref: forwardedRef });
  }
);
DropdownMenuArrow.displayName = ARROW_NAME2;
var DropdownMenuSub = (props) => {
  const { __scopeDropdownMenu, children, open: openProp, onOpenChange, defaultOpen } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  const [open = false, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_jsx_runtime7.jsx)(Sub, { ...menuScope, open, onOpenChange: setOpen, children });
};
var SUB_TRIGGER_NAME2 = "DropdownMenuSubTrigger";
var DropdownMenuSubTrigger = React17.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...subTriggerProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime7.jsx)(SubTrigger, { ...menuScope, ...subTriggerProps, ref: forwardedRef });
});
DropdownMenuSubTrigger.displayName = SUB_TRIGGER_NAME2;
var SUB_CONTENT_NAME2 = "DropdownMenuSubContent";
var DropdownMenuSubContent = React17.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...subContentProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime7.jsx)(
    SubContent,
    {
      ...menuScope,
      ...subContentProps,
      ref: forwardedRef,
      style: {
        ...props.style,
        // re-namespace exposed content custom properties
        ...{
          "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
          "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
          "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
          "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
          "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
        }
      }
    }
  );
});
DropdownMenuSubContent.displayName = SUB_CONTENT_NAME2;
var Root22 = DropdownMenu;
var Trigger2 = DropdownMenuTrigger;
var Portal22 = DropdownMenuPortal;
var Content23 = DropdownMenuContent;
var Group2 = DropdownMenuGroup;
var Label2 = DropdownMenuLabel;
var Item22 = DropdownMenuItem;
var CheckboxItem2 = DropdownMenuCheckboxItem;
var RadioItem2 = DropdownMenuRadioItem;
var ItemIndicator2 = DropdownMenuItemIndicator;
var Separator2 = DropdownMenuSeparator;
var Sub2 = DropdownMenuSub;
var SubTrigger2 = DropdownMenuSubTrigger;
var SubContent2 = DropdownMenuSubContent;

// node_modules/@radix-ui/react-collapsible/dist/index.mjs
var React18 = __toESM(require_react(), 1);
var import_jsx_runtime8 = __toESM(require_jsx_runtime(), 1);
var COLLAPSIBLE_NAME = "Collapsible";
var [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);
var [CollapsibleProvider, useCollapsibleContext] = createCollapsibleContext(COLLAPSIBLE_NAME);
var Collapsible = React18.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeCollapsible,
      open: openProp,
      defaultOpen,
      disabled,
      onOpenChange,
      ...collapsibleProps
    } = props;
    const [open = false, setOpen] = useControllableState({
      prop: openProp,
      defaultProp: defaultOpen,
      onChange: onOpenChange
    });
    return (0, import_jsx_runtime8.jsx)(
      CollapsibleProvider,
      {
        scope: __scopeCollapsible,
        disabled,
        contentId: useId(),
        open,
        onOpenToggle: React18.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
        children: (0, import_jsx_runtime8.jsx)(
          Primitive.div,
          {
            "data-state": getState2(open),
            "data-disabled": disabled ? "" : void 0,
            ...collapsibleProps,
            ref: forwardedRef
          }
        )
      }
    );
  }
);
Collapsible.displayName = COLLAPSIBLE_NAME;
var TRIGGER_NAME3 = "CollapsibleTrigger";
var CollapsibleTrigger = React18.forwardRef(
  (props, forwardedRef) => {
    const { __scopeCollapsible, ...triggerProps } = props;
    const context = useCollapsibleContext(TRIGGER_NAME3, __scopeCollapsible);
    return (0, import_jsx_runtime8.jsx)(
      Primitive.button,
      {
        type: "button",
        "aria-controls": context.contentId,
        "aria-expanded": context.open || false,
        "data-state": getState2(context.open),
        "data-disabled": context.disabled ? "" : void 0,
        disabled: context.disabled,
        ...triggerProps,
        ref: forwardedRef,
        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)
      }
    );
  }
);
CollapsibleTrigger.displayName = TRIGGER_NAME3;
var CONTENT_NAME4 = "CollapsibleContent";
var CollapsibleContent = React18.forwardRef(
  (props, forwardedRef) => {
    const { forceMount, ...contentProps } = props;
    const context = useCollapsibleContext(CONTENT_NAME4, props.__scopeCollapsible);
    return (0, import_jsx_runtime8.jsx)(Presence, { present: forceMount || context.open, children: ({ present }) => (0, import_jsx_runtime8.jsx)(CollapsibleContentImpl, { ...contentProps, ref: forwardedRef, present }) });
  }
);
CollapsibleContent.displayName = CONTENT_NAME4;
var CollapsibleContentImpl = React18.forwardRef((props, forwardedRef) => {
  const { __scopeCollapsible, present, children, ...contentProps } = props;
  const context = useCollapsibleContext(CONTENT_NAME4, __scopeCollapsible);
  const [isPresent, setIsPresent] = React18.useState(present);
  const ref = React18.useRef(null);
  const composedRefs = useComposedRefs(forwardedRef, ref);
  const heightRef = React18.useRef(0);
  const height = heightRef.current;
  const widthRef = React18.useRef(0);
  const width = widthRef.current;
  const isOpen = context.open || isPresent;
  const isMountAnimationPreventedRef = React18.useRef(isOpen);
  const originalStylesRef = React18.useRef(void 0);
  React18.useEffect(() => {
    const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);
    return () => cancelAnimationFrame(rAF);
  }, []);
  useLayoutEffect2(() => {
    const node = ref.current;
    if (node) {
      originalStylesRef.current = originalStylesRef.current || {
        transitionDuration: node.style.transitionDuration,
        animationName: node.style.animationName
      };
      node.style.transitionDuration = "0s";
      node.style.animationName = "none";
      const rect = node.getBoundingClientRect();
      heightRef.current = rect.height;
      widthRef.current = rect.width;
      if (!isMountAnimationPreventedRef.current) {
        node.style.transitionDuration = originalStylesRef.current.transitionDuration;
        node.style.animationName = originalStylesRef.current.animationName;
      }
      setIsPresent(present);
    }
  }, [context.open, present]);
  return (0, import_jsx_runtime8.jsx)(
    Primitive.div,
    {
      "data-state": getState2(context.open),
      "data-disabled": context.disabled ? "" : void 0,
      id: context.contentId,
      hidden: !isOpen,
      ...contentProps,
      ref: composedRefs,
      style: {
        [`--radix-collapsible-content-height`]: height ? `${height}px` : void 0,
        [`--radix-collapsible-content-width`]: width ? `${width}px` : void 0,
        ...props.style
      },
      children: isOpen && children
    }
  );
});
function getState2(open) {
  return open ? "open" : "closed";
}
var Root4 = Collapsible;
var Trigger3 = CollapsibleTrigger;
var Content3 = CollapsibleContent;

export {
  Qe,
  Se,
  gs,
  pe,
  Ss,
  ws,
  Ft,
  Re,
  Ne,
  Ce,
  Es,
  Cs,
  ve,
  Pt,
  ut,
  ct,
  Le,
  Os,
  vt,
  Fs,
  Kt,
  Ye,
  Wt,
  Yt,
  et,
  gt,
  Is,
  ce,
  _e,
  Ps,
  Ts,
  Ds,
  ns,
  Ke,
  js,
  St,
  cs,
  wt,
  ls,
  Rt,
  fs,
  y,
  j2 as j,
  l,
  s,
  FocusScope,
  useFocusGuards,
  Combination_default,
  hideOthers,
  Root,
  Trigger,
  Portal2 as Portal,
  Overlay,
  Content2 as Content,
  Title,
  Description,
  Close,
  D2 as D,
  j4 as j2,
  m3 as m,
  f4 as f,
  p2 as p,
  g,
  x,
  L3 as L,
  H3 as H,
  createCollection,
  useDirection,
  createRovingFocusGroupScope,
  Root3 as Root2,
  Item,
  t3 as t,
  u2 as u,
  $2 as $,
  j3,
  l2,
  Root22 as Root23,
  Trigger2,
  Portal22 as Portal2,
  Content23 as Content2,
  Group2,
  Label2,
  Item22 as Item2,
  CheckboxItem2,
  RadioItem2,
  ItemIndicator2,
  Separator2,
  Sub2,
  SubTrigger2,
  SubContent2,
  i,
  p as p2,
  CollapsibleTrigger,
  CollapsibleContent,
  Root4 as Root3,
  Trigger3,
  Content3,
  c3 as c,
  o,
  V3 as V,
  xt2 as xt,
  _t2 as _t
};
/*! Bundled license information:

zudoku/lib/SyntaxHighlight-CxhyyMkF.js:
  (*! Bundled license information:
  
  prismjs/prism.js:
    (**
     * Prism: Lightweight, robust, elegant syntax highlighting
     *
     * @license MIT <https://opensource.org/licenses/MIT>
     * @author Lea Verou <https://lea.verou.me>
     * @namespace
     * @public
     *)
  *)
*/
//# sourceMappingURL=chunk-6HIU6SLM.js.map
