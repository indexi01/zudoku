import fs from "node:fs/promises";
import path from "node:path";
import { removeExtensions } from "../lib/plugins/openapi/processors/removeExtensions.js";
import { removeParameters } from "../lib/plugins/openapi/processors/removeParameters.js";
import { removePaths } from "../lib/plugins/openapi/processors/removePaths.js";
import { enrichWithZuploData } from "./enrich-with-zuplo.js";
import { ZuploEnv } from "./env.js";
export const getProcessors = async (rootDir) => {
    const policiesConfig = JSON.parse(await fs.readFile(path.join(rootDir, "../config/policies.json"), "utf-8"));
    return [
        removePaths({ shouldRemove: ({ operation }) => operation["x-internal"] }),
        removeParameters({
            shouldRemove: ({ parameter }) => parameter["x-internal"],
        }),
        enrichWithZuploData({ policiesConfig }),
        ({ schema }) => {
            const url = ZuploEnv.serverUrl;
            if (!url)
                return schema;
            return { ...schema, servers: [{ url }] };
        },
        removeExtensions({ shouldRemove: (key) => key.startsWith("x-zuplo") }),
    ];
};
export default getProcessors;
//# sourceMappingURL=with-zuplo-processors.js.map