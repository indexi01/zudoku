import { type LucideIcon } from "lucide-react";
import type { ReactNode } from "react";
declare const stylesMap: {
    readonly note: {
        readonly border: "border-gray-300 dark:border-zinc-800";
        readonly bg: "bg-gray-100 dark:bg-zinc-800/50";
        readonly iconColor: "text-gray-600 dark:text-zinc-300";
        readonly titleColor: "text-gray-600 dark:text-zinc-300";
        readonly textColor: "text-gray-600 dark:text-zinc-300";
        readonly Icon: LucideIcon;
    };
    readonly tip: {
        readonly border: "border-green-500 dark:border-green-800";
        readonly bg: "bg-green-200/25 dark:bg-green-950/70";
        readonly iconColor: "text-green-600 dark:text-green-200";
        readonly titleColor: "text-green-700 dark:text-green-200";
        readonly textColor: "text-green-600 dark:text-green-50";
        readonly Icon: LucideIcon;
    };
    readonly info: {
        readonly border: "border-blue-400 dark:border-blue-900/60";
        readonly bg: "bg-blue-50 dark:bg-blue-950/40";
        readonly iconColor: "text-blue-400 dark:text-blue-200";
        readonly titleColor: "text-blue-700 dark:text-blue-200";
        readonly textColor: "text-blue-600 dark:text-blue-100";
        readonly Icon: LucideIcon;
    };
    readonly caution: {
        readonly border: "border-yellow-400 dark:border-yellow-400/25";
        readonly bg: "bg-yellow-100/60 dark:bg-yellow-400/10";
        readonly iconColor: "text-yellow-500 dark:text-yellow-300";
        readonly titleColor: "text-yellow-600 dark:text-yellow-300";
        readonly textColor: "text-yellow-700 dark:text-yellow-200";
        readonly Icon: LucideIcon;
    };
    readonly danger: {
        readonly border: "border-rose-400 dark:border-rose-800";
        readonly bg: "bg-rose-50 dark:bg-rose-950/40";
        readonly iconColor: "text-rose-400 dark:text-rose-300";
        readonly titleColor: "text-rose-800 dark:text-rose-300";
        readonly textColor: "text-rose-700 dark:text-rose-100";
        readonly Icon: LucideIcon;
    };
};
type CalloutProps = {
    type: keyof typeof stylesMap;
    title?: string;
    children: ReactNode;
    className?: string;
    icon?: boolean;
};
export declare const Callout: ({ type, children, title, className, icon, }: CalloutProps) => import("react/jsx-runtime").JSX.Element;
export {};
