import { OpenAPIV3, type OpenAPIV3_1 } from "openapi-types";
interface WithRef {
    __$ref?: string;
}
type DeepOmitReference<T> = T extends OpenAPIV3_1.ReferenceObject ? never : T extends object ? {
    [K in keyof T]: DeepOmitReference<T[K]>;
} & WithRef : T;
export type OpenAPIDocument = DeepOmitReference<OpenAPIV3_1.Document>;
export type ResponseObject = DeepOmitReference<OpenAPIV3_1.ResponseObject>;
export type OperationObject = DeepOmitReference<OpenAPIV3_1.OperationObject>;
export type PathsObject = DeepOmitReference<OpenAPIV3_1.PathsObject>;
export type PathItemObject = DeepOmitReference<OpenAPIV3_1.PathItemObject>;
export type ParameterObject = DeepOmitReference<OpenAPIV3_1.ParameterObject>;
export type TagObject = DeepOmitReference<OpenAPIV3_1.TagObject>;
export type ExampleObject = DeepOmitReference<OpenAPIV3_1.ExampleObject>;
export type EncodingObject = DeepOmitReference<OpenAPIV3_1.EncodingObject>;
export type SchemaObject = DeepOmitReference<OpenAPIV3_1.SchemaObject>;
export type ServerObject = DeepOmitReference<OpenAPIV3_1.ServerObject>;
export declare const HttpMethods: OpenAPIV3.HttpMethods[];
/**
 * Validates, dereferences and upgrades the OpenAPI schema (to v3.1) if necessary.
 */
export declare const validate: (schemaInput: unknown) => Promise<OpenAPIDocument>;
export {};
