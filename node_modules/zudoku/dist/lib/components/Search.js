import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { SearchIcon } from "lucide-react";
import { Suspense, useCallback, useEffect, useState } from "react";
import { isSearchPlugin } from "../core/plugins.js";
import { detectOS } from "../util/detectOS.js";
import { ClientOnly } from "./ClientOnly.js";
import { useZudoku } from "./context/ZudokuContext.js";
export const Search = ({ className }) => {
    const ctx = useZudoku();
    const [isOpen, setIsOpen] = useState(false);
    const onClose = useCallback(() => setIsOpen(false), []);
    useEffect(() => {
        if (isOpen) {
            return;
        }
        function onKeyDown(event) {
            if (event.key === "k" && (event.metaKey || event.ctrlKey)) {
                event.preventDefault();
                setIsOpen(true);
            }
        }
        window.addEventListener("keydown", onKeyDown);
        return () => {
            window.removeEventListener("keydown", onKeyDown);
        };
    }, [isOpen, setIsOpen]);
    const searchPlugin = ctx.plugins.find(isSearchPlugin);
    if (!searchPlugin) {
        return null;
    }
    return (_jsxs("div", { className: className, children: [_jsxs("button", { type: "button", onClick: () => setIsOpen(true), className: "flex items-center border border-input hover:bg-accent hover:text-accent-foreground p-4 relative h-8 justify-start rounded-lg bg-background text-sm text-muted-foreground shadow-none w-full sm:w-72", children: [_jsxs("div", { className: "flex items-center gap-2 flex-grow", children: [_jsx(SearchIcon, { size: 14 }), "Search"] }), _jsx(ClientOnly, { children: _jsx(KbdShortcut, {}) })] }), _jsx(Suspense, { fallback: null, children: searchPlugin.renderSearch({
                    isOpen,
                    onClose,
                }) })] }));
};
const KbdShortcut = () => {
    const os = detectOS();
    return (_jsxs("kbd", { className: "absolute right-[0.3rem] top-[0.35rem] hidden h-5 select-none items-center gap-1 rounded border bg-muted px-1.5 font-mono text-[11px] font-medium opacity-100 sm:flex", children: [os === "macOS" ? "âŒ˜" : "Ctrl", "+K"] }));
};
//# sourceMappingURL=Search.js.map