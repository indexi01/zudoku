import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment } from "react";
export const PathRenderer = ({ path, renderParam, }) => {
    let paramIndex = 0;
    return path.split("/").map((part, i, arr) => {
        const matches = Array.from(part.matchAll(/{([^}]+)}/g));
        const elements = [];
        let lastIndex = 0;
        matches.forEach((match) => {
            const [originalValue, name] = match;
            if (!name)
                return;
            const startIndex = match.index;
            if (startIndex > lastIndex) {
                elements.push(_jsx(Fragment, { children: part.slice(lastIndex, startIndex) }, `text-${lastIndex}-${startIndex}`));
            }
            elements.push(_jsx(Fragment, { children: renderParam({ name, originalValue, index: paramIndex++ }) }, `param-${name}`));
            lastIndex = startIndex + originalValue.length;
        });
        if (lastIndex < part.length) {
            elements.push(_jsx(Fragment, { children: part.slice(lastIndex) }, `text-${lastIndex}-${part.length}`));
        }
        return (
        // eslint-disable-next-line react/no-array-index-key
        _jsxs(Fragment, { children: [elements, i < arr.length - 1 && "/", _jsx("wbr", {})] }, `${part}-${i}`));
    });
};
//# sourceMappingURL=PathRenderer.js.map