import type { Element, Parents } from "hast";
import { Components as JsxRuntimeComponents } from "hast-util-to-jsx-runtime";
import { ReactElement } from "react";
import { Options as RemarkRehypeOptions } from "remark-rehype";
import { PluggableList } from "unified";
interface AllowElement {
    (element: Readonly<Element>, index: number, parent: Readonly<Parents> | undefined): boolean | null | undefined;
}
interface UrlTransform {
    (url: string, key: string, node: Readonly<Element>): string | null | undefined;
}
interface Components extends Partial<JsxRuntimeComponents> {
}
interface Options {
    allowElement?: AllowElement | null;
    allowedElements?: ReadonlyArray<string> | null;
    children?: string | null;
    className?: string | null;
    components?: Components | null;
    disallowedElements?: ReadonlyArray<string> | null;
    rehypePlugins?: PluggableList | null;
    remarkPlugins?: PluggableList | null;
    remarkRehypeOptions?: Readonly<RemarkRehypeOptions> | null;
    skipHtml?: boolean | null;
    unwrapDisallowed?: boolean | null;
    urlTransform?: UrlTransform | null;
}
export declare function ReactMarkdown(options: Readonly<Options>): ReactElement;
export {};
