import React, { type ComponentType, type ReactElement, ReactNode } from "react";
import { type Location, type NavigateFunction, type Params, type SetURLSearchParams } from "react-router";
export type Slotlets = Record<string, ReactNode | ReactElement | ComponentType<ExposedComponentProps>>;
export declare const SlotletProvider: ({ slotlets, children, }: {
    children: ReactNode;
    slotlets?: Slotlets;
}) => import("react/jsx-runtime").JSX.Element;
export type ExposedComponentProps = {
    location: Location;
    navigate: NavigateFunction;
    searchParams: URLSearchParams;
    setSearchParams: SetURLSearchParams;
    params: Params;
};
export declare const Slotlet: ({ name }: {
    name: string;
}) => string | number | bigint | boolean | Iterable<React.ReactNode> | Promise<string | number | bigint | boolean | React.ReactPortal | React.ReactElement<unknown, string | React.JSXElementConstructor<any>> | Iterable<React.ReactNode> | null | undefined> | React.ReactElement<any, string | React.JSXElementConstructor<any>> | null | undefined;
