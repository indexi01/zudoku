import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Helmet } from "@zudoku/react-helmet-async";
import { Suspense, useEffect } from "react";
import { Outlet, useLocation } from "react-router";
import { cn } from "../util/cn.js";
import { joinUrl } from "../util/joinUrl.js";
import { useScrollToAnchor } from "../util/useScrollToAnchor.js";
import { useScrollToTop } from "../util/useScrollToTop.js";
import { useZudoku } from "./context/ZudokuContext.js";
import { Footer } from "./Footer.js";
import { Header } from "./Header.js";
import { Main } from "./Main.js";
import { Slotlet } from "./SlotletProvider.js";
import { Spinner } from "./Spinner.js";
const LoadingFallback = () => (_jsx("main", { className: "col-span-full row-span-full grid place-items-center", children: _jsx(Spinner, {}) }));
export const Layout = ({ children }) => {
    const { meta, authentication, options } = useZudoku();
    const location = useLocation();
    useScrollToAnchor();
    useScrollToTop();
    useEffect(() => {
        // Initialize the authentication plugin
        authentication?.onPageLoad?.();
    }, [authentication]);
    return (_jsxs(_Fragment, { children: [import.meta.env.MODE === "standalone" && (_jsx("style", { children: `:root { --top-nav-height: 0px; }` })), _jsxs(Helmet, { titleTemplate: meta?.title, children: [options.canonicalUrlOrigin && (_jsx("link", { rel: "canonical", href: joinUrl(options.canonicalUrlOrigin, options.basePath, location.pathname) })), meta?.description && (_jsx("meta", { name: "description", content: meta.description })), meta?.favicon && _jsx("link", { rel: "icon", href: meta.favicon })] }), _jsx(Slotlet, { name: "layout-before-head" }), _jsx(Header, {}), _jsx(Slotlet, { name: "layout-after-head" }), _jsx("div", { className: cn("grid max-w-screen-2xl w-full lg:mx-auto", "has-[:only-child]:grid-rows-1 grid-rows-[0_min-content_1fr] lg:grid-rows-[min-content_1fr]", "grid-cols-1 lg:grid-cols-[var(--side-nav-width)_1fr]"), children: _jsx(Suspense, { fallback: _jsx(LoadingFallback, {}), children: _jsx(Main, { children: children ?? _jsx(Outlet, {}) }) }) }), _jsx(Footer, {})] }));
};
//# sourceMappingURL=Layout.js.map