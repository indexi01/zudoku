import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ChevronDownIcon } from "lucide-react";
import { useState } from "react";
import { useFormContext } from "react-hook-form";
import { Button } from "zudoku/ui/Button.js";
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger, } from "zudoku/ui/DropdownMenu.js";
import { RadioGroup, RadioGroupItem } from "zudoku/ui/RadioGroup.js";
import { NO_IDENTITY } from "./Playground.js";
const SubmitButton = ({ identities, formRef, disabled, }) => {
    const { setValue } = useFormContext();
    const [dropdownValue, setDropdownValue] = useState();
    if (identities.length === 0) {
        return _jsx(Button, { disabled: disabled, children: "Send" });
    }
    return (_jsxs("div", { className: "flex", children: [_jsx(Button, { className: "rounded-r-none inset-shadow-sm", disabled: disabled, onClick: () => formRef?.current?.requestSubmit(), children: "Send" }), _jsxs(DropdownMenu, { children: [_jsx(DropdownMenuTrigger, { asChild: true, children: _jsx(Button, { disabled: disabled, className: "rounded-l-none border-l border-border/40 inset-shadow-sm w-6", size: "icon", children: _jsx(ChevronDownIcon, { className: "w-4 h-4" }) }) }), _jsx(RadioGroup, { value: dropdownValue, children: _jsx(DropdownMenuContent, { className: "w-56", align: "end", alignOffset: -150, children: [{ id: NO_IDENTITY, label: "None" }, ...identities].map((identity) => (_jsxs(DropdownMenuItem, { onClick: () => {
                                    setDropdownValue(identity.id);
                                    setValue("identity", identity.id);
                                    formRef?.current?.requestSubmit();
                                }, onMouseEnter: () => setDropdownValue(identity.id), onMouseLeave: () => setDropdownValue(undefined), children: [_jsx(RadioGroupItem, { value: identity.id, className: "mr-2" }), identity.label] }, identity.id))) }) })] })] }));
};
export default SubmitButton;
//# sourceMappingURL=SubmitButton.js.map