import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { Button } from "zudoku/ui/Button.js";
import { Checkbox } from "zudoku/ui/Checkbox.js";
import { Dialog, DialogContent, DialogDescription, DialogFooter, DialogTitle, } from "zudoku/ui/Dialog.js";
import { Label } from "zudoku/ui/Label.js";
import IdentitySelector from "./IdentitySelector.js";
const IdentityDialog = ({ onSubmit, identities, open, onOpenChange, }) => {
    const [identity, setIdentity] = useState(undefined);
    const [rememberedIdentity, setRememberedIdentity] = useState(false);
    return (_jsx(Dialog, { open: open, onOpenChange: onOpenChange, children: _jsxs(DialogContent, { children: [_jsx(DialogTitle, { children: "Select an auth identity" }), _jsx(DialogDescription, { children: "Please select an identity for this request." }), _jsx("div", { className: "max-h-80 overflow-auto", children: _jsx(IdentitySelector, { identities: identities, setValue: setIdentity, value: identity }) }), _jsxs(DialogFooter, { className: "flex flex-col gap-2", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Checkbox, { id: "remember", checked: rememberedIdentity, onCheckedChange: (checked) => setRememberedIdentity(checked === "indeterminate" ? false : !!checked) }), _jsx(Label, { htmlFor: "remember", children: "Remember my choice" })] }), _jsx(Button, { onClick: () => onSubmit({ identity: identity, rememberedIdentity }), children: "Send" })] })] }) }));
};
export { IdentityDialog };
//# sourceMappingURL=IdentityDialog.js.map