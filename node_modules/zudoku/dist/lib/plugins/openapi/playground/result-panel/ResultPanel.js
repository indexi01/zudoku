import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Spinner } from "../../../../components/Spinner.js";
import { Button } from "../../../../ui/Button.js";
import { Callout } from "../../../../ui/Callout.js";
import { Card, CardContent, CardHeader, CardTitle, } from "../../../../ui/Card.js";
import { Tabs, TabsContent, TabsList, TabsTrigger, } from "../../../../ui/Tabs.js";
import { cn } from "../../../../util/cn.js";
import { RequestTab } from "./RequestTab.js";
import { ResponseTab } from "./ResponseTab.js";
export const ResultPanel = ({ queryMutation, showPathParamsWarning, showLongRunningWarning, onCancel, }) => {
    const status = ((queryMutation.data?.status ?? 0) / 100).toFixed(0);
    return (_jsx("div", { className: "min-w-0 p-4 py-8 bg-muted/50", children: queryMutation.error ? (_jsxs("div", { className: "flex flex-col gap-2", children: [showPathParamsWarning && (_jsx(Callout, { type: "caution", children: "Some path parameters are missing values. Please fill them in to ensure the request is sent correctly." })), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Request failed" }) }), _jsxs(CardContent, { children: ["Error:", " ", queryMutation.error.message ||
                                    String(queryMutation.error) ||
                                    "Unexpected error"] })] })] })) : queryMutation.data ? (_jsxs(Tabs, { defaultValue: "response", children: [_jsxs(TabsList, { children: [_jsx(TabsTrigger, { value: "request", children: "Request" }), _jsxs(TabsTrigger, { value: "response", children: ["Response", _jsxs("span", { className: cn("text-xs font-mono ml-1", status === "2" && "text-green-500", status === "3" && "text-blue-500", status === "4" && "text-yellow-500", status === "5" && "text-red-500"), children: ["(", queryMutation.data.status, ")"] })] })] }), _jsx(TabsContent, { value: "request", children: _jsx(RequestTab, { ...queryMutation.data.request }) }), _jsx(TabsContent, { value: "response", children: _jsx(ResponseTab, { status: queryMutation.data.status, time: queryMutation.data.time, size: queryMutation.data.size, headers: queryMutation.data.headers, body: queryMutation.data.body, url: queryMutation.data.request.url }) })] })) : (_jsx("div", { className: "grid place-items-center h-full", children: queryMutation.isPending ? (_jsxs("div", { className: "flex flex-col gap-2 items-center mt-20", children: [_jsx(Spinner, { size: 20 }), _jsxs("div", { className: cn("opacity-0 pointer-events-none transition-opacity h-20 text-sm text-muted-foreground duration-300 flex flex-col gap-2 items-center", showLongRunningWarning && "opacity-100 pointer-events-auto"), children: ["Looks like the request is taking longer than expected.", _jsx(Button, { type: "button", onClick: onCancel, size: "sm", className: "w-fit", variant: "outline", children: "Cancel" })] })] })) : (_jsx("span", { className: "text-[16px] font-semibold text-muted-foreground", children: "Send a request first to see the response here" })) })) }));
};
export default ResultPanel;
//# sourceMappingURL=ResultPanel.js.map