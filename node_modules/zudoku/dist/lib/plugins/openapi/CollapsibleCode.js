import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { FoldVerticalIcon, UnfoldVerticalIcon } from "lucide-react";
import { useRef, useState } from "react";
import { Button } from "zudoku/ui/Button.js";
import { Collapsible, CollapsibleContent, CollapsibleTrigger, } from "zudoku/ui/Collapsible.js";
import { cn } from "../../util/cn.js";
import useIsomorphicLayoutEffect from "../../util/useIsomorphicLayoutEffect.js";
export const CollapsibleCode = ({ children, maxHeight = 250, }) => {
    const contentRef = useRef(null);
    const [isOverflowing, setIsOverflowing] = useState(false);
    const [open, setOpen] = useState(false);
    useIsomorphicLayoutEffect(() => {
        const el = contentRef.current;
        if (!el)
            return;
        setIsOverflowing(el.scrollHeight > maxHeight);
        const observer = new ResizeObserver(() => {
            setIsOverflowing(el.scrollHeight > maxHeight);
        });
        observer.observe(el);
        return () => observer.disconnect();
    }, [maxHeight]);
    return (_jsxs(Collapsible, { className: "group", open: open, onOpenChange: setOpen, style: { "--max-height": `${maxHeight}px` }, children: [_jsxs(CollapsibleContent, { forceMount: true, className: cn("relative overflow-hidden group", !open && isOverflowing && "max-h-[--max-height]"), children: [!open && isOverflowing && (_jsx("div", { className: " absolute inset-0 bg-gradient-to-b from-transparent to-zinc-50/60 dark:to-zinc-950/90 z-10 group-hover:to-transparent" })), _jsx("div", { ref: contentRef, children: children }), !open && isOverflowing && (_jsx(CollapsibleTrigger, { className: "absolute inset-0 grid place-items-center z-10 cursor-pointer peer", asChild: true, children: _jsx("div", { children: _jsxs(Button, { variant: "outline", className: "hidden group-hover:flex", children: [_jsx(UnfoldVerticalIcon, { size: 14, className: "mr-1.5" }), "Click to expand"] }) }) }))] }), isOverflowing && (_jsx("div", { className: cn("flex justify-center w-full mb-2", !open && "hidden"), children: _jsx(CollapsibleTrigger, { asChild: true, children: _jsxs(Button, { variant: "outline", size: "sm", children: ["Collapse", _jsx(FoldVerticalIcon, { size: 14, className: "ml-1.5" })] }) }) }))] }));
};
//# sourceMappingURL=CollapsibleCode.js.map