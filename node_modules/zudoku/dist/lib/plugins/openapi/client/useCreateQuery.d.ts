import type { TypedDocumentString } from "../graphql/graphql.js";
type NoExtraProps<T, U extends T = T> = U & {
    [K in Exclude<keyof U, keyof T>]?: never;
};
export declare const useCreateQuery: <TResult, TVariables>(query: TypedDocumentString<TResult, TVariables>, ...[variables]: TVariables extends Record<string, never> ? [] : [NoExtraProps<TVariables>]) => {
    readonly queryFn: () => Promise<TResult>;
    readonly queryKey: readonly [string, NoExtraProps<TVariables, TVariables> | undefined];
};
export {};
