import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ChevronDownIcon, ChevronUpIcon } from "lucide-react";
import { useState } from "react";
import { Button } from "zudoku/ui/Button.js";
import { cn } from "../../../util/cn.js";
import { SelectOnClick } from "./SelectOnClick.js";
export const EnumValues = ({ values, className, maxVisibleValues = 8, }) => {
    const [isOpen, setIsOpen] = useState(false);
    if (!values.length)
        return null;
    const shouldCollapse = values.length > maxVisibleValues;
    const visibleValues = shouldCollapse && !isOpen ? values.slice(0, maxVisibleValues) : values;
    return (_jsxs("div", { className: cn("flex flex-wrap gap-1.5 text-xs", className), children: [_jsx("span", { className: "text-muted-foreground", children: "Enum values: " }), visibleValues.map((value) => (_jsx("div", { children: _jsx(SelectOnClick, { className: "border rounded px-1 font-mono", children: value }) }, value))), shouldCollapse && (_jsx(Button, { variant: "ghost", size: "sm", className: "h-fit px-0", onClick: () => setIsOpen(!isOpen), children: isOpen ? (_jsxs("div", { className: "flex items-center gap-1", children: [_jsx(ChevronUpIcon, { size: 12 }), _jsx("span", { className: "text-muted-foreground", children: "show less" })] })) : (_jsxs("div", { className: "flex items-center gap-1", children: [_jsx(ChevronDownIcon, { size: 12 }), _jsxs("span", { className: "text-muted-foreground", children: ["show ", values.length - maxVisibleValues, " more"] })] })) }))] }));
};
//# sourceMappingURL=EnumValues.js.map