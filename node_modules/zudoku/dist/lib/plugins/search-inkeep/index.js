import { jsx as _jsx } from "react/jsx-runtime";
import { useEffect, useMemo, useRef, useState } from "react";
import { ClientOnly } from "../../components/ClientOnly.js";
import { aiChatSettings, baseSettings } from "./inkeep.js";
const InkeepSearch = ({ prefilledQuery, isOpen, onClose, settings, }) => {
    const ref = useRef(null);
    const widgetRef = useRef(null);
    const [isInkeepAvailable, setIsInkeepAvailable] = useState(typeof Inkeep !== "undefined");
    const config = useMemo(() => ({
        componentType: "CustomTrigger",
        targetElement: ref.current,
        properties: {
            isOpen,
            onClose,
            onOpen: undefined,
            baseSettings: { ...baseSettings, ...settings },
            searchSettings: {
                prefilledQuery: prefilledQuery || undefined,
            },
            aiChatSettings,
        },
    }), [isOpen, onClose, prefilledQuery, settings, ref]);
    useEffect(() => {
        if (isInkeepAvailable)
            return;
        const checkInkeep = setInterval(() => {
            if (typeof Inkeep !== "undefined") {
                setIsInkeepAvailable(true);
                clearInterval(checkInkeep);
            }
        }, 100);
        return () => clearInterval(checkInkeep);
    }, [isInkeepAvailable]);
    useEffect(() => {
        if (!isInkeepAvailable || widgetRef.current)
            return;
        widgetRef.current = Inkeep().embed(config);
    }, [config, isInkeepAvailable]);
    useEffect(() => {
        widgetRef.current?.render({ ...config, isOpen });
    }, [config, isOpen]);
    return _jsx("div", { ref: ref });
};
export const inkeepSearchPlugin = (settings) => {
    return {
        getHead: () => {
            return (_jsx("script", { type: "module", src: "https://unpkg.com/@inkeep/uikit-js@0.3.19/dist/embed.js", defer: true }));
        },
        renderSearch: ({ isOpen, onClose, }) => {
            return (_jsx(ClientOnly, { children: _jsx(InkeepSearch, { isOpen: isOpen, onClose: onClose, settings: settings }) }));
        },
    };
};
//# sourceMappingURL=index.js.map