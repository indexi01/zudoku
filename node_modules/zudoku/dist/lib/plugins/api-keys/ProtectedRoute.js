import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Outlet } from "react-router";
import { useAuth } from "../../authentication/hook.js";
import { DeveloperHint } from "../../components/DeveloperHint.js";
import { Button } from "../../ui/Button.js";
export const ProtectedRoute = () => {
    const auth = useAuth();
    // TODO: should we suspend here somehow?
    if (auth.isAuthEnabled && auth.isPending) {
        return null;
    }
    return auth.isAuthenticated ? (_jsx(Outlet, {})) : !auth.isAuthEnabled ? (_jsx("div", { className: "flex flex-col justify-center gap-2 items-center h-1/2", children: _jsxs(DeveloperHint, { className: "max-w-[600px]", children: ["Authentication needs to be enabled for API keys to work. Enable it in your Zudoku configuration under ", _jsx("code", { children: "authentication" }), "."] }) })) : (_jsxs("div", { className: "flex flex-col justify-center gap-2 items-center h-1/2", children: ["Please login first to view this page", _jsx(Button, { onClick: () => auth.login(), children: "Login" })] }));
};
//# sourceMappingURL=ProtectedRoute.js.map