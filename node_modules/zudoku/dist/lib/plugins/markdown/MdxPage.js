import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useMDXComponents } from "@mdx-js/react";
import slugify from "@sindresorhus/slugify";
import { Helmet } from "@zudoku/react-helmet-async";
import { useEffect } from "react";
import { CategoryHeading } from "../../components/CategoryHeading.js";
import { Heading } from "../../components/Heading.js";
import { ProseClasses } from "../../components/Markdown.js";
import { Pagination } from "../../components/Pagination.js";
import { Toc } from "../../components/navigation/Toc.js";
import { useCurrentItem, usePrevNext, } from "../../components/navigation/utils.js";
import { cn } from "../../util/cn.js";
const MarkdownHeadings = {
    h2: ({ children, id }) => (_jsx(Heading, { level: 2, id: id, registerSidebarAnchor: true, children: children })),
    h3: ({ children, id }) => (_jsx(Heading, { level: 3, id: id, registerSidebarAnchor: true, children: children })),
};
export const MdxPage = ({ mdxComponent: MdxComponent, file, frontmatter = {}, defaultOptions, tableOfContents, excerpt, }) => {
    const categoryTitle = useCurrentItem()?.categoryLabel;
    const title = frontmatter.title;
    const category = frontmatter.category ?? categoryTitle;
    const hideToc = frontmatter.toc === false || defaultOptions?.toc === false;
    const pageTitle = tableOfContents.find((item) => item.depth === 1)?.value ?? title;
    const hidePager = frontmatter.disablePager ?? defaultOptions?.disablePager ?? false;
    const tocEntries = tableOfContents.find((item) => item.depth === 1)?.children ??
        // if `title` is provided by frontmatter it does not appear in the table of contents
        tableOfContents.filter((item) => item.depth === 2);
    const showToc = !hideToc && tocEntries.length > 0;
    const { prev, next } = usePrevNext();
    useEffect(() => {
        if (process.env.NODE_ENV === "development") {
            window.__getReactRefreshIgnoredExports = ({ id }) => {
                if (!id.endsWith(file))
                    return;
                return ["frontmatter", "tableOfContents"];
            };
            return () => {
                window.__getReactRefreshIgnoredExports = undefined;
            };
        }
    }, [file]);
    return (_jsxs("div", { className: "grid grid-cols-1 xl:grid-cols-[--sidecar-grid-cols] gap-8 justify-between", "data-pagefind-filter": "section:markdown", "data-pagefind-meta": "section:markdown", children: [_jsxs(Helmet, { children: [_jsx("title", { children: pageTitle }), excerpt && _jsx("meta", { name: "description", content: excerpt })] }), _jsxs("div", { className: cn(ProseClasses, "max-w-full xl:w-full xl:max-w-3xl flex-1 flex-shrink pt-[--padding-content-top]"), children: [(category || title) && (_jsxs("header", { children: [category && _jsx(CategoryHeading, { children: category }), title && (_jsx(Heading, { level: 1, id: slugify(title), children: title }))] })), _jsx(MdxComponent, { components: { ...useMDXComponents(), ...MarkdownHeadings } }), !hidePager && (_jsxs(_Fragment, { children: [_jsx("hr", { className: "my-10" }), _jsx(Pagination, { prev: prev ? { to: prev.id, label: prev.label } : undefined, next: next ? { to: next.id, label: next.label } : undefined, className: "mb-4" })] }))] }), _jsx("div", { className: "hidden xl:block", children: showToc && _jsx(Toc, { entries: tocEntries }) })] }));
};
//# sourceMappingURL=MdxPage.js.map