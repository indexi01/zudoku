import { jsx as _jsx } from "react/jsx-runtime";
import { DocResolver } from "./resolver.js";
export const markdownPlugin = (options) => ({
    getRoutes: () => {
        const routeMap = new Map();
        options.forEach(({ fileImports, files, defaultOptions }) => Object.entries(fileImports).flatMap(([file, importPromise]) => {
            const routePath = DocResolver.resolveRoutePath({
                filesGlob: files,
                fsPath: file,
            });
            if (!routePath)
                return [];
            if (routeMap.has(routePath)) {
                // eslint-disable-next-line no-console
                console.warn(`Duplicate route path found for ${routePath}. Skipping file at '${file}'.`);
                return [];
            }
            const route = {
                path: routePath,
                lazy: async () => {
                    const { MdxPage } = await import("./MdxPage.js");
                    const { default: Component, ...props } = await importPromise();
                    return {
                        element: (_jsx(MdxPage, { file: file, mdxComponent: Component, ...props, defaultOptions: defaultOptions })),
                    };
                },
            };
            routeMap.set(routePath, route);
        }));
        return [...routeMap.values()];
    },
});
//# sourceMappingURL=index.js.map