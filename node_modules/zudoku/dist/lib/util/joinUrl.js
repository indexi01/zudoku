// Mostly adapted from https://github.com/moxystudio/js-proper-url-join
const defaultUrlRegExp = /^(\w+:\/\/[^/?]+)?([^?]*)(\?.*)?$/;
const normalizeParts = (parts) => parts
    .filter((part) => part !== null &&
    part !== undefined &&
    part !== false &&
    (typeof part === "string" || typeof part === "number"))
    .map((part) => `${part}`)
    .filter((part) => part);
const parseParts = (parts) => {
    const partsStr = parts.join("/");
    const [, prefix = "", pathname = ""] = partsStr.match(defaultUrlRegExp) ?? [];
    return {
        prefix,
        pathname: pathname.split("/").filter((part) => part !== ""),
    };
};
const buildUrl = (parsedParts) => {
    const { prefix, pathname } = parsedParts;
    let url = prefix;
    if (pathname.length > 0) {
        if (url) {
            url += "/";
        }
        else {
            url = "/";
        }
        url += pathname.join("/");
    }
    else if (!url) {
        url = "/";
    }
    return url;
};
export const joinUrl = (...parts) => {
    const normalizedParts = normalizeParts(parts);
    const parsedParts = parseParts(normalizedParts);
    return buildUrl(parsedParts);
};
//# sourceMappingURL=joinUrl.js.map