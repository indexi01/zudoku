export const traverse = (specification, transform) => {
    const transformed = transform(specification);
    if (typeof transformed !== "object" || transformed === null) {
        return transformed;
    }
    const result = Array.isArray(transformed) ? [] : {};
    for (const [key, value] of Object.entries(transformed)) {
        if (Array.isArray(value)) {
            result[key] = value.map((item) => typeof item === "object" && item != null
                ? traverse(item, transform)
                : item);
        }
        else if (typeof value === "object" && value != null) {
            result[key] = traverse(value, transform);
        }
        else {
            result[key] = value;
        }
    }
    return result;
};
//# sourceMappingURL=traverse.js.map