import z from "zod";
import { fromError } from "zod-validation-error";
import { CommonConfigSchema, refine } from "./common.js";
/**
 * These are the configuration elements that are only available if using
 * zudoku.config.{js,ts,tsx,jsx} files.
 */
const CodeConfigSchema = z.object({
    // slotlets are a concept we are working on and not yet finalized
    UNSAFE_slotlets: z.record(z.string(), z.custom()),
    mdx: z
        .object({
        components: z.custom(),
    })
        .partial(),
    customPages: z.array(z.object({
        path: z.string(),
        element: z.custom().optional(),
        render: z.custom().optional(),
        prose: z.boolean().optional(),
    })),
    plugins: z.array(z.custom()),
    build: z.custom(),
});
const ConfigSchema = CommonConfigSchema.merge(CodeConfigSchema)
    .partial()
    .superRefine(refine);
export function validateConfig(config) {
    const validationResult = ConfigSchema.safeParse(config);
    if (!validationResult.success) {
        // eslint-disable-next-line no-console
        console.log("Validation errors:");
        // eslint-disable-next-line no-console
        console.log(fromError(validationResult.error).toString());
    }
}
//# sourceMappingURL=validate.js.map