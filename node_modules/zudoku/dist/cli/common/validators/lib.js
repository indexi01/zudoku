export class CompositeValidator {
    validators = new Array();
    constructor(...validators) {
        this.validators = validators;
    }
    async validate(what) {
        for (const rule of this.validators) {
            const result = await rule.validate(what);
            if (!result.ok) {
                return result;
            }
        }
        return { ok: true };
    }
}
export class YargsChecker {
    validator;
    constructor(validator) {
        this.validator = validator;
    }
    async check(what) {
        const result = await this.validator.validate(what);
        if (!result.ok) {
            return result.error.message;
        }
        else {
            return true;
        }
    }
}
//# sourceMappingURL=lib.js.map