{"version":3,"file":"removeExtensions.js","sources":["../../src/lib/plugins/openapi/processors/removeExtensions.ts"],"sourcesContent":["import type { ProcessorArg } from \"../../../../config/validators/BuildSchema.js\";\nimport type { OpenAPIDocument } from \"../../../oas/parser/index.js\";\nimport { type RecordAny, traverse } from \"./traverse.js\";\n\ninterface RemoveExtensionsOptions {\n  keys?: string[];\n  shouldRemove?: (key: string) => boolean;\n}\n\n// Remove all `x-` prefixed key/value pairs, or filter by names if provided\nexport const removeExtensions =\n  ({ keys, shouldRemove }: RemoveExtensionsOptions = {}) =>\n  ({ schema }: ProcessorArg) =>\n    traverse(schema, (spec) => {\n      const result: RecordAny = {};\n\n      for (const [key, value] of Object.entries(spec)) {\n        const isExtension = key.startsWith(\"x-\");\n        const shouldBeRemoved =\n          isExtension &&\n          (keys === undefined || keys.includes(key)) &&\n          (!shouldRemove || shouldRemove(key));\n\n        if (shouldBeRemoved) continue;\n\n        result[key] = value;\n      }\n      return result;\n    }) as OpenAPIDocument;\n"],"names":["removeExtensions","keys","shouldRemove","schema","traverse","spec","result","key","value"],"mappings":";AAUO,MAAMA,IACX,CAAC,EAAE,MAAAC,GAAM,cAAAC,EAA0C,IAAA,CACnD,MAAA,CAAC,EAAE,QAAAC,QACDC,EAASD,GAAQ,CAACE,MAAS;AACzB,QAAMC,IAAoB,CAAC;AAE3B,aAAW,CAACC,GAAKC,CAAK,KAAK,OAAO,QAAQH,CAAI;AAO5C,IANoBE,EAAI,WAAW,IAAI,MAGpCN,MAAS,UAAaA,EAAK,SAASM,CAAG,OACvC,CAACL,KAAgBA,EAAaK,CAAG,OAIpCD,EAAOC,CAAG,IAAIC;AAET,SAAAF;AACT,CAAC;"}