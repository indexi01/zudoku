{"version":3,"file":"traverse.js","sources":["../../src/lib/util/traverse.ts"],"sourcesContent":["import type { JsonValue, RecordAny } from \"./types.js\";\n\nexport type { RecordAny };\n\nexport const traverse = <T extends JsonValue = RecordAny>(\n  specification: RecordAny,\n  transform: (specification: RecordAny) => T,\n) => {\n  const transformed = transform(specification);\n  if (typeof transformed !== \"object\" || transformed === null) {\n    return transformed;\n  }\n\n  const result: RecordAny = Array.isArray(transformed) ? [] : {};\n\n  for (const [key, value] of Object.entries(transformed)) {\n    if (Array.isArray(value)) {\n      result[key] = value.map((item) =>\n        typeof item === \"object\" && item != null\n          ? traverse(item, transform)\n          : item,\n      );\n    } else if (typeof value === \"object\" && value != null) {\n      result[key] = traverse(value, transform);\n    } else {\n      result[key] = value;\n    }\n  }\n\n  return result;\n};\n"],"names":["traverse","specification","transform","transformed","result","key","value","item"],"mappings":"AAIa,MAAAA,IAAW,CACtBC,GACAC,MACG;AACG,QAAAC,IAAcD,EAAUD,CAAa;AAC3C,MAAI,OAAOE,KAAgB,YAAYA,MAAgB;AAC9C,WAAAA;AAGT,QAAMC,IAAoB,MAAM,QAAQD,CAAW,IAAI,KAAK,CAAC;AAE7D,aAAW,CAACE,GAAKC,CAAK,KAAK,OAAO,QAAQH,CAAW;AAC/C,IAAA,MAAM,QAAQG,CAAK,IACdF,EAAAC,CAAG,IAAIC,EAAM;AAAA,MAAI,CAACC,MACvB,OAAOA,KAAS,YAAYA,KAAQ,OAChCP,EAASO,GAAML,CAAS,IACxBK;AAAA,IACN,IACS,OAAOD,KAAU,YAAYA,KAAS,OAC/CF,EAAOC,CAAG,IAAIL,EAASM,GAAOJ,CAAS,IAEvCE,EAAOC,CAAG,IAAIC;AAIX,SAAAF;AACT;"}