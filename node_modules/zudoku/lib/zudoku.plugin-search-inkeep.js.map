{"version":3,"file":"zudoku.plugin-search-inkeep.js","sources":["../src/lib/plugins/search-inkeep/inkeep.ts","../src/lib/plugins/search-inkeep/index.tsx"],"sourcesContent":["const baseSettings = {\n  theme: {\n    components: {\n      AIChatPageWrapper: {\n        defaultProps: {\n          size: \"shrink-vertically\",\n          variant: \"no-shadow\",\n        },\n      },\n      SearchBarTrigger: {\n        defaultProps: {\n          size: \"expand\",\n          variant: \"subtle\", // Choose from 'emphasized' or 'subtle'\n        },\n      },\n    },\n  },\n} as const;\n\nconst modalSettings = {};\n\nconst searchSettings = {};\n\nconst aiChatSettings = {};\n\nexport { aiChatSettings, baseSettings, modalSettings, searchSettings };\n","import { useEffect, useMemo, useRef, useState } from \"react\";\nimport { ClientOnly } from \"../../components/ClientOnly.js\";\nimport type { ZudokuPlugin } from \"../../core/plugins.js\";\nimport { aiChatSettings, baseSettings } from \"./inkeep.js\";\n\ninterface PluginInkeepBaseSettings {\n  apiKey?: string;\n  integrationId: string;\n  organizationId: string;\n  organizationDisplayName?: string;\n  primaryBrandColor: string;\n}\n\ninterface InkeepEmbedConfig {\n  componentType: string;\n  targetElement: HTMLElement;\n  properties: unknown;\n}\n\ninterface InkeepWidget {\n  render: (config: InkeepEmbedConfig & { isOpen: boolean }) => void;\n}\n\ndeclare global {\n  let Inkeep: () => {\n    embed: (config: InkeepEmbedConfig) => InkeepWidget;\n  };\n}\n\nconst InkeepSearch = ({\n  prefilledQuery,\n  isOpen,\n  onClose,\n  settings,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  prefilledQuery?: string | null;\n  settings: PluginInkeepBaseSettings;\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const widgetRef = useRef<InkeepWidget | null>(null);\n  const [isInkeepAvailable, setIsInkeepAvailable] = useState(\n    typeof Inkeep !== \"undefined\",\n  );\n\n  const config: InkeepEmbedConfig = useMemo(\n    () => ({\n      componentType: \"CustomTrigger\",\n      targetElement: ref.current!,\n      properties: {\n        isOpen,\n        onClose,\n        onOpen: undefined,\n        baseSettings: { ...baseSettings, ...settings },\n        searchSettings: {\n          prefilledQuery: prefilledQuery || undefined,\n        },\n        aiChatSettings,\n      },\n    }),\n    [isOpen, onClose, prefilledQuery, settings, ref],\n  );\n\n  useEffect(() => {\n    if (isInkeepAvailable) return;\n\n    const checkInkeep = setInterval(() => {\n      if (typeof Inkeep !== \"undefined\") {\n        setIsInkeepAvailable(true);\n        clearInterval(checkInkeep);\n      }\n    }, 100);\n\n    return () => clearInterval(checkInkeep);\n  }, [isInkeepAvailable]);\n\n  useEffect(() => {\n    if (!isInkeepAvailable || widgetRef.current) return;\n\n    widgetRef.current = Inkeep().embed(config);\n  }, [config, isInkeepAvailable]);\n\n  useEffect(() => {\n    widgetRef.current?.render({ ...config, isOpen });\n  }, [config, isOpen]);\n\n  return <div ref={ref} />;\n};\n\nexport const inkeepSearchPlugin = (\n  settings: PluginInkeepBaseSettings,\n): ZudokuPlugin => {\n  return {\n    getHead: () => {\n      return (\n        <script\n          type=\"module\"\n          src=\"https://unpkg.com/@inkeep/uikit-js@0.3.19/dist/embed.js\"\n          defer\n        />\n      );\n    },\n    renderSearch: ({\n      isOpen,\n      onClose,\n    }: {\n      isOpen: boolean;\n      onClose: () => void;\n    }) => {\n      return (\n        <ClientOnly>\n          <InkeepSearch isOpen={isOpen} onClose={onClose} settings={settings} />\n        </ClientOnly>\n      );\n    },\n  };\n};\n"],"names":["baseSettings","aiChatSettings","InkeepSearch","prefilledQuery","isOpen","onClose","settings","ref","useRef","widgetRef","isInkeepAvailable","setIsInkeepAvailable","useState","config","useMemo","useEffect","checkInkeep","_a","jsx","inkeepSearchPlugin","ClientOnly"],"mappings":";;;AAAA,MAAMA,IAAe;AAAA,EACnB,OAAO;AAAA,IACL,YAAY;AAAA,MACV,mBAAmB;AAAA,QACjB,cAAc;AAAA,UACZ,MAAM;AAAA,UACN,SAAS;AAAA,QAAA;AAAA,MAEb;AAAA,MACA,kBAAkB;AAAA,QAChB,cAAc;AAAA,UACZ,MAAM;AAAA,UACN,SAAS;AAAA;AAAA,QAAA;AAAA,MACX;AAAA,IACF;AAAA,EACF;AAEJ,GAMMC,IAAiB,CAAC,GCMlBC,IAAe,CAAC;AAAA,EACpB,gBAAAC;AAAA,EACA,QAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AACF,MAKM;AACE,QAAAC,IAAMC,EAAuB,IAAI,GACjCC,IAAYD,EAA4B,IAAI,GAC5C,CAACE,GAAmBC,CAAoB,IAAIC;AAAA,IAChD,OAAO,SAAW;AAAA,EACpB,GAEMC,IAA4BC;AAAA,IAChC,OAAO;AAAA,MACL,eAAe;AAAA,MACf,eAAeP,EAAI;AAAA,MACnB,YAAY;AAAA,QACV,QAAAH;AAAA,QACA,SAAAC;AAAA,QACA,QAAQ;AAAA,QACR,cAAc,EAAE,GAAGL,GAAc,GAAGM,EAAS;AAAA,QAC7C,gBAAgB;AAAA,UACd,gBAAgBH,KAAkB;AAAA,QACpC;AAAA,QACA,gBAAAF;AAAA,MAAA;AAAA,IACF;AAAA,IAEF,CAACG,GAAQC,GAASF,GAAgBG,GAAUC,CAAG;AAAA,EACjD;AAEA,SAAAQ,EAAU,MAAM;AACd,QAAIL,EAAmB;AAEjB,UAAAM,IAAc,YAAY,MAAM;AAChC,MAAA,OAAO,SAAW,QACpBL,EAAqB,EAAI,GACzB,cAAcK,CAAW;AAAA,OAE1B,GAAG;AAEC,WAAA,MAAM,cAAcA,CAAW;AAAA,EAAA,GACrC,CAACN,CAAiB,CAAC,GAEtBK,EAAU,MAAM;AACV,IAAA,CAACL,KAAqBD,EAAU,YAEpCA,EAAU,UAAU,SAAS,MAAMI,CAAM;AAAA,EAAA,GACxC,CAACA,GAAQH,CAAiB,CAAC,GAE9BK,EAAU,MAAM;;AACd,KAAAE,IAAAR,EAAU,YAAV,QAAAQ,EAAmB,OAAO,EAAE,GAAGJ,GAAQ,QAAAT;EAAQ,GAC9C,CAACS,GAAQT,CAAM,CAAC,GAEZc,gBAAAA,MAAC,SAAI,KAAAX,GAAU;AACxB,GAEaY,IAAqB,CAChCb,OAEO;AAAA,EACL,SAAS,MAELY,gBAAAA,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,MAAK;AAAA,MACL,KAAI;AAAA,MACJ,OAAK;AAAA,IAAA;AAAA,EACP;AAAA,EAGJ,cAAc,CAAC;AAAA,IACb,QAAAd;AAAA,IACA,SAAAC;AAAA,EAAA,4BAMGe,GACC,EAAA,UAAAF,gBAAAA,EAAA,IAAChB,KAAa,QAAAE,GAAgB,SAAAC,GAAkB,UAAAC,GAAoB,EACtE,CAAA;AAGN;"}