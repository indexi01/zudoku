import { j as s } from "./jsx-runtime-C5mzlN2N.js";
import { s as h } from "./index-LNp6rxyU.js";
import { d as b, m as x } from "./chunk-KNED5TY2-BUPjb3LQ.js";
import { u as j, d as y, f as p } from "./hook-pPrHCB6G.js";
import { H as v } from "./RouteGuard-BZ_VsiXc.js";
import { L as N } from "./index-tpbiZmWp.js";
import { H as S, M as w } from "./Markdown-C5h6bxbE.js";
const H = ({
  items: r,
  filterCatalogItems: o = (n) => n,
  label: d = "API Library",
  categoryLabel: a
}) => {
  const n = j(), i = b({ path: "/catalog/:category" }), t = i == null ? void 0 : i.params.category, l = y({
    queryFn: () => o(r, { auth: n }),
    queryKey: ["catalogItems", n]
  }), m = t ? { "data-pagefind-ignore": "all" } : {};
  return /* @__PURE__ */ s.jsxs("section", { className: "pt-[--padding-content-top]", ...m, children: [
    /* @__PURE__ */ s.jsx(v, { children: /* @__PURE__ */ s.jsxs("title", { children: [
      a ? `${a} - ` : "",
      d
    ] }) }),
    /* @__PURE__ */ s.jsxs("div", { className: "grid gap-4", children: [
      /* @__PURE__ */ s.jsxs(S, { level: 2, children: [
        d,
        a && ` - ${a}`
      ] }),
      /* @__PURE__ */ s.jsx("div", { className: "grid grid-cols-2 gap-4", children: l.data.filter(
        (e) => !t || e.categories.find(
          (c) => c.tags.find((u) => f(c.label, u) === t)
        )
      ).map((e) => /* @__PURE__ */ s.jsx(
        N,
        {
          to: p(e.path),
          className: "no-underline hover:!text-foreground",
          children: /* @__PURE__ */ s.jsxs("div", { className: "border h-full rounded-lg p-4 flex flex-col gap-2 cursor-pointer hover:bg-border/20 font-normal", children: [
            /* @__PURE__ */ s.jsx("span", { className: "font-semibold", children: e.label }),
            /* @__PURE__ */ s.jsx(
              w,
              {
                className: "text-sm whitespace-pre-wrap mb-6 line-clamp-2",
                content: e.description
              }
            )
          ] })
        },
        e.path
      )) })
    ] })
  ] });
}, f = (r, o) => h(`${r}-${o}`), A = ({
  navigationId: r,
  items: o,
  label: d,
  categories: a = [],
  filterCatalogItems: n
}) => {
  const i = Object.fromEntries(
    a.flatMap(
      (t) => [void 0, ...t.tags].map((l) => [
        p(r, l ? f(t.label, l) : void 0),
        l
      ])
    )
  );
  return {
    getSidebar: async (t) => {
      if (!Object.keys(i).some(
        (e) => x(e, t)
      ))
        return [];
      const m = a.map((e) => ({
        type: "category",
        label: e.label,
        collapsible: !1,
        items: e.tags.map((c) => ({
          type: "doc",
          id: p(r, f(e.label, c)),
          label: c,
          badge: {
            label: String(
              o.filter(
                (u) => u.categories.find((g) => g.tags.includes(c))
              ).length
            ),
            color: "outline"
          }
        }))
      }));
      return m.unshift({
        type: "doc",
        id: p(r),
        label: "Overview",
        badge: { label: String(o.length), color: "outline" }
      }), m;
    },
    getRoutes: () => Object.entries(i).map(([t, l]) => ({
      path: t,
      element: /* @__PURE__ */ s.jsx(
        H,
        {
          label: d,
          categoryLabel: l,
          items: o,
          filterCatalogItems: n,
          categories: a
        }
      )
    }))
  };
};
export {
  A as apiCatalogPlugin,
  f as getKey
};
//# sourceMappingURL=zudoku.plugin-api-catalog.js.map
