{"version":3,"file":"zudoku.plugin-search-pagefind.js","sources":["../src/lib/plugins/search-pagefind/get-results.tsx","../src/lib/plugins/search-pagefind/ResultList.tsx","../src/lib/plugins/search-pagefind/PagefindSearch.tsx","../src/lib/plugins/search-pagefind/index.tsx"],"sourcesContent":["import type { AuthState } from \"../../authentication/state.js\";\nimport type { ZudokuContext } from \"../../core/ZudokuContext.js\";\nimport type { PagefindOptions } from \"./index.js\";\nimport type { PagefindSearchFragment, PagefindSearchResults } from \"./types.js\";\n\nexport const getResults = async ({\n  search,\n  options,\n  auth,\n  context,\n}: {\n  search: PagefindSearchResults;\n  options: PagefindOptions;\n  auth: AuthState;\n  context: ZudokuContext;\n}) => {\n  const maxResults = options.maxResults ?? 10;\n  const transformFn = options.transformResults ?? (() => true);\n\n  const transformedResults: PagefindSearchFragment[] = [];\n\n  const generator = searchResultGenerator({\n    search,\n    transformFn,\n    auth,\n    context,\n  });\n\n  for await (const result of generator) {\n    transformedResults.push(result);\n    if (transformedResults.length >= maxResults) break;\n  }\n\n  return transformedResults;\n};\n\nasync function* searchResultGenerator({\n  search,\n  transformFn,\n  auth,\n  context,\n}: {\n  search: PagefindSearchResults;\n  transformFn: NonNullable<PagefindOptions[\"transformResults\"]>;\n  auth: AuthState<unknown>;\n  context: ZudokuContext;\n}) {\n  const batchSize = 5;\n  let processedCount = 0;\n\n  while (processedCount < search.results.length) {\n    const batch = search.results.slice(\n      processedCount,\n      processedCount + batchSize,\n    );\n    processedCount += batch.length;\n\n    const batchData = await Promise.all(batch.map((result) => result.data()));\n\n    for (const result of batchData) {\n      const transformed = transformFn({ result, auth, context });\n\n      if (transformed === false) {\n        // Skip this result\n        continue;\n      } else if (transformed === true || transformed == null) {\n        // Keep the original result\n        yield result;\n      } else {\n        // Return the transformed result\n        yield transformed;\n      }\n    }\n  }\n}\n","import { BracketsIcon, FileTextIcon } from \"lucide-react\";\nimport { useLayoutEffect, useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router\";\nimport { CommandGroup, CommandItem, CommandList } from \"zudoku/ui/Command.js\";\nimport {\n  type PagefindSearchFragment,\n  type PagefindSubResult,\n} from \"./types.js\";\n\nconst sortSubResults = (a: PagefindSubResult, b: PagefindSubResult) => {\n  const aScore = a.weighted_locations.reduce(\n    (sum, loc) => sum + loc.balanced_score,\n    0,\n  );\n  const bScore = b.weighted_locations.reduce(\n    (sum, loc) => sum + loc.balanced_score,\n    0,\n  );\n  return bScore - aScore;\n};\n\nconst hoverClassname = `cursor-pointer border border-transparent data-[selected=true]:border-border`;\n\nexport const ResultList = ({\n  searchResults,\n  searchTerm,\n  onClose,\n  maxSubResults = 4,\n}: {\n  basePath?: string;\n  searchResults: PagefindSearchFragment[];\n  searchTerm: string;\n  onClose: () => void;\n  maxSubResults?: number;\n}) => {\n  const navigate = useNavigate();\n  const commandListRef = useRef<HTMLDivElement | null>(null);\n\n  useLayoutEffect(() => {\n    requestIdleCallback(() => {\n      commandListRef.current?.scrollTo({ top: 0 });\n    });\n  }, [searchTerm]);\n\n  return (\n    <CommandList className=\"max-h-[450px]\" ref={commandListRef}>\n      {searchTerm && searchResults.length > 0 && (\n        <CommandGroup\n          className=\"text-sm text-muted-foreground\"\n          heading={`${searchResults.length} results for \"${searchTerm}\"`}\n        />\n      )}\n      {searchTerm &&\n        searchResults.map((result) => (\n          <CommandGroup\n            key={[result.meta.title ?? result.excerpt, result.url].join(\"-\")}\n          >\n            <CommandItem\n              asChild\n              value={`${result.meta.title}-${result.url}`}\n              className={hoverClassname}\n              onSelect={() => {\n                void navigate(result.url);\n                onClose();\n              }}\n            >\n              <Link to={result.url}>\n                {result.meta.section === \"openapi\" ? (\n                  <BracketsIcon />\n                ) : (\n                  <FileTextIcon />\n                )}\n                {result.meta.title}\n              </Link>\n            </CommandItem>\n            {result.sub_results\n              .sort(sortSubResults)\n              .slice(0, maxSubResults)\n              .map((subResult) => (\n                <CommandItem\n                  asChild\n                  key={`sub-${result.meta.title}-${subResult.url}`}\n                  value={`sub-${result.meta.title}-${subResult.url}`}\n                  className={hoverClassname}\n                  onSelect={() => {\n                    void navigate(subResult.url);\n                    onClose();\n                  }}\n                >\n                  <Link to={subResult.url} onClick={onClose}>\n                    <div className=\"flex flex-col items-start gap-2 ms-2.5 ps-5 border-l border-muted-foreground/50\">\n                      <span className=\"font-bold\">{subResult.title}</span>\n                      <span\n                        className=\"text-[13px] [&_mark]:bg-primary [&_mark]:text-primary-foreground\"\n                        dangerouslySetInnerHTML={{ __html: subResult.excerpt }}\n                      />\n                    </div>\n                  </Link>\n                </CommandItem>\n              ))}\n          </CommandGroup>\n        ))}\n    </CommandList>\n  );\n};\n","import { VisuallyHidden } from \"@radix-ui/react-visually-hidden\";\nimport { keepPreviousData, useQuery } from \"@tanstack/react-query\";\nimport { useRef, useState } from \"react\";\nimport { Button } from \"zudoku/ui/Button.js\";\nimport { Callout } from \"zudoku/ui/Callout.js\";\nimport {\n  CommandDialog,\n  CommandEmpty,\n  CommandInput,\n} from \"zudoku/ui/Command.js\";\nimport { DialogTitle } from \"zudoku/ui/Dialog.js\";\nimport { useAuthState } from \"../../authentication/state.js\";\nimport { useZudoku } from \"../../components/context/ZudokuContext.js\";\nimport { SEARCH_PROTECTED_SECTION } from \"../../core/RouteGuard.js\";\nimport { joinUrl } from \"../../util/joinUrl.js\";\nimport { getResults } from \"./get-results.js\";\nimport type { PagefindOptions } from \"./index.js\";\nimport { ResultList } from \"./ResultList.js\";\nimport type { Pagefind } from \"./types.js\";\n\nconst DEFAULT_RANKING = {\n  // Slightly lower than default because API docs tend to have repetitive terms (parameter names, HTTP methods, etc.)\n  termFrequency: 0.8,\n  // Lower than default because API documentation pages tend to be longer due to comprehensive endpoint documentation\n  pageLength: 0.6,\n  // Slightly higher than default because in technical documentation, exact matches should be prioritized\n  termSimilarity: 1.2,\n  // Slightly lower than default because API docs might have legitimate repetition of terms\n  termSaturation: 1.2,\n};\n\nconst importPagefind = (basePath?: string): Promise<Pagefind> =>\n  import.meta.env.DEV\n    ? // @ts-expect-error TypeScript can't resolve the import\n      import(/* @vite-ignore */ \"/pagefind/pagefind.js\")\n    : import(/* @vite-ignore */ joinUrl(basePath, \"/pagefind/pagefind.js\"));\n\nconst usePagefind = (options: PagefindOptions) => {\n  const {\n    options: { basePath },\n  } = useZudoku();\n  const { data: pagefind, ...result } = useQuery<Pagefind>({\n    queryKey: [\"pagefind\", options.ranking],\n    retry: false,\n    queryFn: async () => {\n      const pagefind = await importPagefind(basePath);\n      await pagefind.init();\n      await pagefind.options({\n        ranking: {\n          termFrequency:\n            options.ranking?.termFrequency ?? DEFAULT_RANKING.termFrequency,\n          pageLength: options.ranking?.pageLength ?? DEFAULT_RANKING.pageLength,\n          termSimilarity:\n            options.ranking?.termSimilarity ?? DEFAULT_RANKING.termSimilarity,\n          termSaturation:\n            options.ranking?.termSaturation ?? DEFAULT_RANKING.termSaturation,\n        },\n      });\n\n      return pagefind;\n    },\n    enabled: typeof window !== \"undefined\",\n  });\n\n  if (result.isError && result.error.message !== \"NOT_BUILT_YET\") {\n    // eslint-disable-next-line no-console\n    console.error(result.error);\n  }\n\n  return { ...result, pagefind };\n};\n\nexport const PagefindSearch = ({\n  isOpen,\n  onClose,\n  options,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  options: PagefindOptions;\n}) => {\n  const { pagefind, error, isError } = usePagefind(options);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const auth = useAuthState();\n  const context = useZudoku();\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const { data: searchResults } = useQuery({\n    queryKey: [\"pagefind-search\", searchTerm, auth.isAuthenticated],\n    queryFn: async () => {\n      const filters = auth.isAuthenticated\n        ? undefined\n        : { not: { section: SEARCH_PROTECTED_SECTION } };\n\n      const search = await pagefind?.search(searchTerm, { filters });\n      if (!search) return [];\n      return getResults({ search, options, auth, context });\n    },\n    placeholderData: keepPreviousData,\n    enabled: !!pagefind && !!searchTerm,\n  });\n\n  return (\n    <CommandDialog\n      command={{ shouldFilter: false }}\n      content={{ className: \"max-w-[750px]\" }}\n      open={isOpen}\n      onOpenChange={onClose}\n    >\n      <VisuallyHidden>\n        <DialogTitle>Search</DialogTitle>\n      </VisuallyHidden>\n      <CommandInput\n        ref={inputRef}\n        placeholder=\"Search...\"\n        value={searchTerm}\n        onValueChange={setSearchTerm}\n        disabled={isError}\n      />\n      <CommandEmpty>\n        {searchTerm ? (\n          <div className=\"flex flex-col items-center\">\n            No results found.\n            <Button\n              variant=\"link\"\n              onClick={() => {\n                setSearchTerm(\"\");\n                inputRef.current?.focus();\n              }}\n            >\n              Clear search\n            </Button>\n          </div>\n        ) : (\n          \"Start typing to search\"\n        )}\n      </CommandEmpty>\n      {isError ? (\n        <div className=\"p-4 text-sm\">\n          {error.message === \"NOT_BUILT_YET\" ? (\n            <Callout type=\"info\">\n              Search is currently not available in development mode by default.\n              <br />\n              To still use search in development, run <code>\n                zudoku build\n              </code>{\" \"}\n              and copy the <code>dist/pagefind</code> directory to your{\" \"}\n              <code>public</code> directory.\n            </Callout>\n          ) : (\n            \"An error occurred while loading search.\"\n          )}\n        </div>\n      ) : (\n        <ResultList\n          searchResults={searchResults ?? []}\n          searchTerm={searchTerm}\n          onClose={onClose}\n          maxSubResults={options.maxSubResults}\n        />\n      )}\n    </CommandDialog>\n  );\n};\n","import type { ZudokuConfig } from \"../../../config/validators/validate.js\";\nimport { ClientOnly } from \"../../components/ClientOnly.js\";\nimport type { ZudokuPlugin } from \"../../core/plugins.js\";\nimport { PagefindSearch } from \"./PagefindSearch.js\";\n\nexport type PagefindOptions = Extract<\n  ZudokuConfig[\"search\"],\n  { type: \"pagefind\" }\n>;\n\nexport const pagefindSearchPlugin = (\n  options: PagefindOptions,\n): ZudokuPlugin => {\n  return {\n    renderSearch: ({ isOpen, onClose }) => (\n      <ClientOnly>\n        <PagefindSearch isOpen={isOpen} onClose={onClose} options={options} />\n      </ClientOnly>\n    ),\n  };\n};\n"],"names":["getResults","search","options","auth","context","maxResults","transformFn","transformedResults","generator","searchResultGenerator","result","processedCount","batch","batchData","transformed","sortSubResults","a","b","aScore","sum","loc","hoverClassname","ResultList","searchResults","searchTerm","onClose","maxSubResults","navigate","useNavigate","commandListRef","useRef","useLayoutEffect","_a","jsxs","CommandList","jsx","CommandGroup","CommandItem","Link","BracketsIcon","FileTextIcon","subResult","DEFAULT_RANKING","importPagefind","basePath","joinUrl","usePagefind","useZudoku","pagefind","useQuery","_b","_c","_d","PagefindSearch","isOpen","error","isError","setSearchTerm","useState","useAuthState","inputRef","filters","SEARCH_PROTECTED_SECTION","keepPreviousData","CommandDialog","VisuallyHidden","DialogTitle","CommandInput","CommandEmpty","Button","Callout","pagefindSearchPlugin","ClientOnly"],"mappings":"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"}