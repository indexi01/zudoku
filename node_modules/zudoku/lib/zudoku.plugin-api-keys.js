import { j as e } from "./jsx-runtime-C5mzlN2N.js";
import { RotateCwIcon as j, TrashIcon as v, EyeOffIcon as w, EyeIcon as K, CheckIcon as b, CopyIcon as k, FileKey2Icon as N } from "lucide-react";
import { D as I, S as x, R as S } from "./SlotletProvider-VUmTNmLZ.js";
import { i as c } from "./invariant-Caa8-XvF.js";
import { e as h, g, l as A, d as C } from "./hook-pPrHCB6G.js";
import { u as d, S as E, a as P, b as D, c as q, d as R, e as p } from "./Select-Dg5R11Dx.js";
import { a as O } from "./index.esm-D2ZUREQN.js";
import { a as z, L as u, O as F } from "./chunk-KNED5TY2-BUPjb3LQ.js";
import { Button as l } from "./ui/Button.js";
import { Input as T } from "./ui/Input.js";
import { useState as y } from "react";
import { c as L } from "./cn-qaFjX9_3.js";
const V = ({ service: t }) => {
  const n = h(), i = g(), r = z(), a = O({
    defaultValues: {
      expiresOn: "30"
    }
  }), o = d({
    mutationFn: ({ description: s, expiresOn: m }) => {
      if (!t.createKey)
        throw new Error("createKey not implemented");
      const f = m !== "never" ? M(Number(m)) : void 0;
      return t.createKey(
        { description: s, expiresOn: f },
        n
      );
    },
    onSuccess: async () => {
      await i.invalidateQueries({ queryKey: ["api-keys"] }), await r("/settings/api-keys/");
    }
  });
  return t.createKey ? /* @__PURE__ */ e.jsxs("div", { className: "max-w-screen-lg pt-[--padding-content-top] pb-[--padding-content-bottom]", children: [
    /* @__PURE__ */ e.jsx("div", { className: "flex justify-between mb-4 border-b pb-1", children: /* @__PURE__ */ e.jsx("h1", { className: "font-medium text-2xl", children: "New API Key" }) }),
    /* @__PURE__ */ e.jsx(
      "form",
      {
        onSubmit: a.handleSubmit((s) => o.mutate(s)),
        children: /* @__PURE__ */ e.jsxs("div", { className: "flex gap-2 flex-col", children: [
          "Note",
          /* @__PURE__ */ e.jsx(T, { ...a.register("description") }),
          "Expiration",
          /* @__PURE__ */ e.jsxs(
            E,
            {
              onValueChange: (s) => a.setValue("expiresOn", s),
              defaultValue: a.getValues("expiresOn"),
              children: [
                /* @__PURE__ */ e.jsx(P, { children: /* @__PURE__ */ e.jsx(D, {}) }),
                /* @__PURE__ */ e.jsx(q, { children: /* @__PURE__ */ e.jsxs(R, { children: [
                  [7, 30, 60, 90].map((s) => /* @__PURE__ */ e.jsxs(p, { value: String(s), children: [
                    s,
                    " days"
                  ] }, s)),
                  /* @__PURE__ */ e.jsx(p, { value: "never", children: "Never" })
                ] }) })
              ]
            }
          ),
          /* @__PURE__ */ e.jsxs("div", { className: "flex gap-2", children: [
            /* @__PURE__ */ e.jsx(l, { children: "Generate Key" }),
            /* @__PURE__ */ e.jsx(l, { variant: "outline", asChild: !0, children: /* @__PURE__ */ e.jsx(u, { to: "/settings/api-keys/", children: "Cancel" }) })
          ] })
        ] })
      }
    )
  ] }) : null;
}, M = (t) => {
  const n = /* @__PURE__ */ new Date();
  return n.setDate(n.getDate() + t), n.toISOString();
}, Q = () => {
  const t = A();
  return t.isAuthEnabled && t.isPending ? null : t.isAuthenticated ? /* @__PURE__ */ e.jsx(F, {}) : t.isAuthEnabled ? /* @__PURE__ */ e.jsxs("div", { className: "flex flex-col justify-center gap-2 items-center h-1/2", children: [
    "Please login first to view this page",
    /* @__PURE__ */ e.jsx(l, { onClick: () => t.login(), children: "Login" })
  ] }) : /* @__PURE__ */ e.jsx("div", { className: "flex flex-col justify-center gap-2 items-center h-1/2", children: /* @__PURE__ */ e.jsxs(I, { className: "max-w-[600px]", children: [
    "Authentication needs to be enabled for API keys to work. Enable it in your Zudoku configuration under ",
    /* @__PURE__ */ e.jsx("code", { children: "authentication" }),
    "."
  ] }) });
}, _ = ({ service: t }) => {
  const n = h(), i = g(), { data: r } = C({
    queryFn: () => t.getKeys(n),
    queryKey: ["api-keys"],
    retry: !1
  }), a = d({
    mutationFn: (s) => {
      if (!t.deleteKey)
        throw new Error("deleteKey not implemented");
      return t.deleteKey(s, n);
    },
    onSuccess: () => {
      i.invalidateQueries({ queryKey: ["api-keys"] });
    }
  }), o = d({
    mutationFn: (s) => {
      if (!t.rollKey)
        throw new Error("rollKey not implemented");
      return t.rollKey(s, n);
    },
    onSuccess: () => i.invalidateQueries({ queryKey: ["api-keys"] })
  });
  return /* @__PURE__ */ e.jsxs("div", { className: "max-w-screen-lg h-full pt-[--padding-content-top] pb-[--padding-content-bottom]", children: [
    /* @__PURE__ */ e.jsx(x, { name: "api-keys-list-page" }),
    /* @__PURE__ */ e.jsxs("div", { className: "flex justify-between mb-4 border-b pb-3", children: [
      /* @__PURE__ */ e.jsx("h1", { className: "font-medium text-2xl", children: "API Keys" }),
      t.createKey && /* @__PURE__ */ e.jsx(l, { asChild: !0, children: /* @__PURE__ */ e.jsx(u, { to: "/settings/api-keys/new", children: "Create API Key" }) })
    ] }),
    /* @__PURE__ */ e.jsx(x, { name: "api-keys-list-page-before-keys" }),
    r.length === 0 ? /* @__PURE__ */ e.jsxs("div", { className: "flex flex-col justify-center gap-4 items-center p-8 border rounded bg-muted/30 text-muted-foreground", children: [
      /* @__PURE__ */ e.jsxs("p", { className: "text-center", children: [
        "No API keys created yet.",
        /* @__PURE__ */ e.jsx("br", {}),
        "Get started and create your first key."
      ] }),
      t.createKey && /* @__PURE__ */ e.jsx(l, { asChild: !0, variant: "outline", children: /* @__PURE__ */ e.jsx(u, { to: "/settings/api-keys/new", children: "Create API Key" }) })
    ] }) : /* @__PURE__ */ e.jsx(
      "ul",
      {
        className: L(
          "grid grid-cols-1 rounded border divide-y divide-border",
          "lg:grid-cols-[minmax(250px,min-content)_1fr_min-content]"
        ),
        children: r.map((s) => /* @__PURE__ */ e.jsxs(
          "li",
          {
            className: "p-5 grid grid-cols-subgrid col-span-full gap-2 items-center",
            children: [
              /* @__PURE__ */ e.jsxs("div", { className: "flex flex-col gap-1 text-sm", children: [
                s.description ?? s.id,
                /* @__PURE__ */ e.jsxs("div", { className: "text-muted-foreground text-xs", children: [
                  s.createdOn && /* @__PURE__ */ e.jsxs("div", { children: [
                    "Created on ",
                    new Date(s.createdOn).toLocaleDateString()
                  ] }),
                  s.expiresOn && /* @__PURE__ */ e.jsxs("div", { children: [
                    "Expires on ",
                    new Date(s.expiresOn).toLocaleDateString()
                  ] })
                ] })
              ] }),
              /* @__PURE__ */ e.jsx("div", { className: "items-center flex lg:justify-center", children: /* @__PURE__ */ e.jsx(G, { apiKey: s.key }) }),
              /* @__PURE__ */ e.jsxs("div", { className: "flex gap-2", children: [
                t.rollKey && /* @__PURE__ */ e.jsx(
                  l,
                  {
                    size: "icon",
                    title: "Roll this key",
                    variant: "ghost",
                    onClick: () => {
                      confirm("Do you want to roll this key?") && o.mutate(s.id);
                    },
                    children: /* @__PURE__ */ e.jsx(j, { size: 16 })
                  }
                ),
                t.deleteKey && /* @__PURE__ */ e.jsx(
                  l,
                  {
                    variant: "ghost",
                    size: "icon",
                    onClick: () => {
                      confirm("Do you want to delete this key?") && a.mutate(s.id);
                    },
                    disabled: a.isPending,
                    children: /* @__PURE__ */ e.jsx(v, { size: 16 })
                  }
                )
              ] })
            ]
          },
          s.id
        ))
      }
    )
  ] });
}, G = ({ apiKey: t }) => {
  const [n, i] = y(!1), [r, a] = y(!1);
  return /* @__PURE__ */ e.jsxs("div", { className: "flex gap-2 items-center text-sm", children: [
    /* @__PURE__ */ e.jsx("div", { className: "border rounded bg-gray-100 dark:bg-gray-950 p-1 font-mono truncate h-9 items-center flex px-2", children: n ? t : "â€¢".repeat(t.length) }),
    /* @__PURE__ */ e.jsx(
      l,
      {
        variant: "outline",
        onClick: () => i((o) => !o),
        size: "icon",
        children: n ? /* @__PURE__ */ e.jsx(w, { size: 16 }) : /* @__PURE__ */ e.jsx(K, { size: 16 })
      }
    ),
    /* @__PURE__ */ e.jsx(
      l,
      {
        variant: "outline",
        onClick: () => {
          navigator.clipboard.writeText(t).then(() => {
            a(!0), setTimeout(() => a(!1), 2e3);
          });
        },
        size: "icon",
        children: r ? /* @__PURE__ */ e.jsx(b, { size: 16 }) : /* @__PURE__ */ e.jsx(k, { size: 16 })
      }
    )
  ] });
}, $ = "https://zudoku-rewiringamerica-main-ef9c9c0.d2.zuplo.dev", B = (t) => ({
  deleteKey: async (n, i) => {
    const r = new Request(t + `/v1/developer/api-keys/${n}`, {
      method: "DELETE"
    });
    await i.signRequest(r);
    const a = await fetch(r);
    c(a.ok, "Failed to delete API key");
  },
  rollKey: async (n, i) => {
    const r = await fetch(
      await i.signRequest(
        new Request(t + `/v1/developer/api-keys/${n}/key`, {
          method: "DELETE"
        })
      )
    );
    c(r.ok, "Failed to delete API key");
  },
  createKey: async (n, i) => {
    const r = new Request(t + "/v1/developer/api-keys", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(n)
    });
    await i.signRequest(r);
    const a = await fetch(r);
    c(a.ok, "Failed to create API key");
  },
  getKeys: async (n) => {
    const i = new Request(t + "/v1/developer/api-keys");
    await n.signRequest(i);
    const r = await fetch(i);
    return c(r.ok, "Failed to fetch API keys"), await r.json();
  }
}), re = (t) => t, ae = (t) => {
  const n = "endpoint" in t ? t.endpoint : $, i = "getKeys" in t ? t : B(n);
  return {
    getProfileMenuItems: () => [
      {
        label: "API Keys",
        path: "/settings/api-keys",
        category: "middle",
        icon: N
      }
    ],
    getIdentities: async (r) => {
      try {
        return (await i.getKeys(r)).map((o) => ({
          authorizeRequest: (s) => (s.headers.set("Authorization", `Bearer ${o.key}`), s),
          id: o.id,
          label: o.description ?? o.id
        }));
      } catch {
        return [];
      }
    },
    getRoutes: () => [
      {
        element: /* @__PURE__ */ e.jsx(Q, {}),
        errorElement: /* @__PURE__ */ e.jsx(S, {}),
        children: [
          {
            path: "/settings/api-keys",
            element: /* @__PURE__ */ e.jsx(_, { service: i })
          },
          {
            path: "/settings/api-keys/new",
            element: /* @__PURE__ */ e.jsx(V, { service: i })
          }
        ]
      }
    ]
  };
};
export {
  ae as apiKeyPlugin,
  re as createApiKeyService
};
//# sourceMappingURL=zudoku.plugin-api-keys.js.map
