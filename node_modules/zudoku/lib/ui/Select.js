import { j as t } from "../jsx-runtime-C5mzlN2N.js";
import * as e from "@radix-ui/react-select";
import { ChevronDown as n, ChevronUp as p, Check as f } from "lucide-react";
import * as l from "react";
import { c as r } from "../cn-qaFjX9_3.js";
const b = e.Root, S = e.Group, v = e.Value, u = l.forwardRef(({ className: s, children: o, ...a }, d) => /* @__PURE__ */ t.jsxs(
  e.Trigger,
  {
    ref: d,
    className: r(
      "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
      s
    ),
    ...a,
    children: [
      /* @__PURE__ */ t.jsx("span", { className: "truncate", children: o }),
      /* @__PURE__ */ t.jsx(e.Icon, { asChild: !0, children: /* @__PURE__ */ t.jsx(n, { className: "flex-shrink-0 h-4 w-4 opacity-50" }) })
    ]
  }
));
u.displayName = e.Trigger.displayName;
const i = l.forwardRef(({ className: s, ...o }, a) => /* @__PURE__ */ t.jsx(
  e.ScrollUpButton,
  {
    ref: a,
    className: r(
      "flex cursor-default items-center justify-center py-1",
      s
    ),
    ...o,
    children: /* @__PURE__ */ t.jsx(p, { className: "h-4 w-4" })
  }
));
i.displayName = e.ScrollUpButton.displayName;
const c = l.forwardRef(({ className: s, ...o }, a) => /* @__PURE__ */ t.jsx(
  e.ScrollDownButton,
  {
    ref: a,
    className: r(
      "flex cursor-default items-center justify-center py-1",
      s
    ),
    ...o,
    children: /* @__PURE__ */ t.jsx(n, { className: "h-4 w-4" })
  }
));
c.displayName = e.ScrollDownButton.displayName;
const x = l.forwardRef(({ className: s, children: o, position: a = "popper", ...d }, m) => /* @__PURE__ */ t.jsx(e.Portal, { children: /* @__PURE__ */ t.jsxs(
  e.Content,
  {
    ref: m,
    className: r(
      "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      a === "popper" && "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
      s
    ),
    position: a,
    ...d,
    children: [
      /* @__PURE__ */ t.jsx(i, {}),
      /* @__PURE__ */ t.jsx(
        e.Viewport,
        {
          className: r(
            a === "popper" && "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]",
            "divide-y"
          ),
          children: o
        }
      ),
      /* @__PURE__ */ t.jsx(c, {})
    ]
  }
) }));
x.displayName = e.Content.displayName;
const h = l.forwardRef(({ className: s, ...o }, a) => /* @__PURE__ */ t.jsx(
  e.Label,
  {
    ref: a,
    className: r("py-1.5 pl-8 pr-2 text-sm font-semibold", s),
    ...o
  }
));
h.displayName = e.Label.displayName;
const y = l.forwardRef(({ className: s, children: o, ...a }, d) => /* @__PURE__ */ t.jsxs(
  e.Item,
  {
    ref: d,
    className: r(
      "relative flex w-full cursor-default select-none items-center py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      s
    ),
    ...a,
    children: [
      /* @__PURE__ */ t.jsx("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: /* @__PURE__ */ t.jsx(e.ItemIndicator, { children: /* @__PURE__ */ t.jsx(f, { className: "h-4 w-4" }) }) }),
      /* @__PURE__ */ t.jsx(e.ItemText, { children: o })
    ]
  }
));
y.displayName = e.Item.displayName;
const g = l.forwardRef(({ className: s, ...o }, a) => /* @__PURE__ */ t.jsx(
  e.Separator,
  {
    ref: a,
    className: r("-mx-1 my-1 h-px bg-muted", s),
    ...o
  }
));
g.displayName = e.Separator.displayName;
export {
  b as Select,
  x as SelectContent,
  S as SelectGroup,
  y as SelectItem,
  h as SelectLabel,
  c as SelectScrollDownButton,
  i as SelectScrollUpButton,
  g as SelectSeparator,
  u as SelectTrigger,
  v as SelectValue
};
//# sourceMappingURL=Select.js.map
