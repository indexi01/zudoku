{"version":3,"file":"Carousel.js","sources":["../../../../node_modules/.pnpm/embla-carousel-reactive-utils@8.6.0_embla-carousel@8.6.0/node_modules/embla-carousel-reactive-utils/esm/embla-carousel-reactive-utils.esm.js","../../../../node_modules/.pnpm/embla-carousel@8.6.0/node_modules/embla-carousel/esm/embla-carousel.esm.js","../../../../node_modules/.pnpm/embla-carousel-react@8.6.0_react@19.1.0/node_modules/embla-carousel-react/esm/embla-carousel-react.esm.js","../../src/lib/ui/Carousel.tsx"],"sourcesContent":["function isObject(subject) {\n  return Object.prototype.toString.call(subject) === '[object Object]';\n}\nfunction isRecord(subject) {\n  return isObject(subject) || Array.isArray(subject);\n}\nfunction canUseDOM() {\n  return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n}\nfunction areOptionsEqual(optionsA, optionsB) {\n  const optionsAKeys = Object.keys(optionsA);\n  const optionsBKeys = Object.keys(optionsB);\n  if (optionsAKeys.length !== optionsBKeys.length) return false;\n  const breakpointsA = JSON.stringify(Object.keys(optionsA.breakpoints || {}));\n  const breakpointsB = JSON.stringify(Object.keys(optionsB.breakpoints || {}));\n  if (breakpointsA !== breakpointsB) return false;\n  return optionsAKeys.every(key => {\n    const valueA = optionsA[key];\n    const valueB = optionsB[key];\n    if (typeof valueA === 'function') return `${valueA}` === `${valueB}`;\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB;\n    return areOptionsEqual(valueA, valueB);\n  });\n}\nfunction sortAndMapPluginToOptions(plugins) {\n  return plugins.concat().sort((a, b) => a.name > b.name ? 1 : -1).map(plugin => plugin.options);\n}\nfunction arePluginsEqual(pluginsA, pluginsB) {\n  if (pluginsA.length !== pluginsB.length) return false;\n  const optionsA = sortAndMapPluginToOptions(pluginsA);\n  const optionsB = sortAndMapPluginToOptions(pluginsB);\n  return optionsA.every((optionA, index) => {\n    const optionB = optionsB[index];\n    return areOptionsEqual(optionA, optionB);\n  });\n}\n\nexport { areOptionsEqual, arePluginsEqual, canUseDOM, sortAndMapPluginToOptions };\n//# sourceMappingURL=embla-carousel-reactive-utils.esm.js.map\n","function isNumber(subject) {\n  return typeof subject === 'number';\n}\nfunction isString(subject) {\n  return typeof subject === 'string';\n}\nfunction isBoolean(subject) {\n  return typeof subject === 'boolean';\n}\nfunction isObject(subject) {\n  return Object.prototype.toString.call(subject) === '[object Object]';\n}\nfunction mathAbs(n) {\n  return Math.abs(n);\n}\nfunction mathSign(n) {\n  return Math.sign(n);\n}\nfunction deltaAbs(valueB, valueA) {\n  return mathAbs(valueB - valueA);\n}\nfunction factorAbs(valueB, valueA) {\n  if (valueB === 0 || valueA === 0) return 0;\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0;\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA));\n  return mathAbs(diff / valueB);\n}\nfunction roundToTwoDecimals(num) {\n  return Math.round(num * 100) / 100;\n}\nfunction arrayKeys(array) {\n  return objectKeys(array).map(Number);\n}\nfunction arrayLast(array) {\n  return array[arrayLastIndex(array)];\n}\nfunction arrayLastIndex(array) {\n  return Math.max(0, array.length - 1);\n}\nfunction arrayIsLastIndex(array, index) {\n  return index === arrayLastIndex(array);\n}\nfunction arrayFromNumber(n, startAt = 0) {\n  return Array.from(Array(n), (_, i) => startAt + i);\n}\nfunction objectKeys(object) {\n  return Object.keys(object);\n}\nfunction objectsMergeDeep(objectA, objectB) {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach(key => {\n      const valueA = mergedObjects[key];\n      const valueB = currentObject[key];\n      const areObjects = isObject(valueA) && isObject(valueB);\n      mergedObjects[key] = areObjects ? objectsMergeDeep(valueA, valueB) : valueB;\n    });\n    return mergedObjects;\n  }, {});\n}\nfunction isMouseEvent(evt, ownerWindow) {\n  return typeof ownerWindow.MouseEvent !== 'undefined' && evt instanceof ownerWindow.MouseEvent;\n}\n\nfunction Alignment(align, viewSize) {\n  const predefined = {\n    start,\n    center,\n    end\n  };\n  function start() {\n    return 0;\n  }\n  function center(n) {\n    return end(n) / 2;\n  }\n  function end(n) {\n    return viewSize - n;\n  }\n  function measure(n, index) {\n    if (isString(align)) return predefined[align](n);\n    return align(viewSize, n, index);\n  }\n  const self = {\n    measure\n  };\n  return self;\n}\n\nfunction EventStore() {\n  let listeners = [];\n  function add(node, type, handler, options = {\n    passive: true\n  }) {\n    let removeListener;\n    if ('addEventListener' in node) {\n      node.addEventListener(type, handler, options);\n      removeListener = () => node.removeEventListener(type, handler, options);\n    } else {\n      const legacyMediaQueryList = node;\n      legacyMediaQueryList.addListener(handler);\n      removeListener = () => legacyMediaQueryList.removeListener(handler);\n    }\n    listeners.push(removeListener);\n    return self;\n  }\n  function clear() {\n    listeners = listeners.filter(remove => remove());\n  }\n  const self = {\n    add,\n    clear\n  };\n  return self;\n}\n\nfunction Animations(ownerDocument, ownerWindow, update, render) {\n  const documentVisibleHandler = EventStore();\n  const fixedTimeStep = 1000 / 60;\n  let lastTimeStamp = null;\n  let accumulatedTime = 0;\n  let animationId = 0;\n  function init() {\n    documentVisibleHandler.add(ownerDocument, 'visibilitychange', () => {\n      if (ownerDocument.hidden) reset();\n    });\n  }\n  function destroy() {\n    stop();\n    documentVisibleHandler.clear();\n  }\n  function animate(timeStamp) {\n    if (!animationId) return;\n    if (!lastTimeStamp) {\n      lastTimeStamp = timeStamp;\n      update();\n      update();\n    }\n    const timeElapsed = timeStamp - lastTimeStamp;\n    lastTimeStamp = timeStamp;\n    accumulatedTime += timeElapsed;\n    while (accumulatedTime >= fixedTimeStep) {\n      update();\n      accumulatedTime -= fixedTimeStep;\n    }\n    const alpha = accumulatedTime / fixedTimeStep;\n    render(alpha);\n    if (animationId) {\n      animationId = ownerWindow.requestAnimationFrame(animate);\n    }\n  }\n  function start() {\n    if (animationId) return;\n    animationId = ownerWindow.requestAnimationFrame(animate);\n  }\n  function stop() {\n    ownerWindow.cancelAnimationFrame(animationId);\n    lastTimeStamp = null;\n    accumulatedTime = 0;\n    animationId = 0;\n  }\n  function reset() {\n    lastTimeStamp = null;\n    accumulatedTime = 0;\n  }\n  const self = {\n    init,\n    destroy,\n    start,\n    stop,\n    update,\n    render\n  };\n  return self;\n}\n\nfunction Axis(axis, contentDirection) {\n  const isRightToLeft = contentDirection === 'rtl';\n  const isVertical = axis === 'y';\n  const scroll = isVertical ? 'y' : 'x';\n  const cross = isVertical ? 'x' : 'y';\n  const sign = !isVertical && isRightToLeft ? -1 : 1;\n  const startEdge = getStartEdge();\n  const endEdge = getEndEdge();\n  function measureSize(nodeRect) {\n    const {\n      height,\n      width\n    } = nodeRect;\n    return isVertical ? height : width;\n  }\n  function getStartEdge() {\n    if (isVertical) return 'top';\n    return isRightToLeft ? 'right' : 'left';\n  }\n  function getEndEdge() {\n    if (isVertical) return 'bottom';\n    return isRightToLeft ? 'left' : 'right';\n  }\n  function direction(n) {\n    return n * sign;\n  }\n  const self = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n    direction\n  };\n  return self;\n}\n\nfunction Limit(min = 0, max = 0) {\n  const length = mathAbs(min - max);\n  function reachedMin(n) {\n    return n < min;\n  }\n  function reachedMax(n) {\n    return n > max;\n  }\n  function reachedAny(n) {\n    return reachedMin(n) || reachedMax(n);\n  }\n  function constrain(n) {\n    if (!reachedAny(n)) return n;\n    return reachedMin(n) ? min : max;\n  }\n  function removeOffset(n) {\n    if (!length) return n;\n    return n - length * Math.ceil((n - max) / length);\n  }\n  const self = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset\n  };\n  return self;\n}\n\nfunction Counter(max, start, loop) {\n  const {\n    constrain\n  } = Limit(0, max);\n  const loopEnd = max + 1;\n  let counter = withinLimit(start);\n  function withinLimit(n) {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd);\n  }\n  function get() {\n    return counter;\n  }\n  function set(n) {\n    counter = withinLimit(n);\n    return self;\n  }\n  function add(n) {\n    return clone().set(get() + n);\n  }\n  function clone() {\n    return Counter(max, get(), loop);\n  }\n  const self = {\n    get,\n    set,\n    add,\n    clone\n  };\n  return self;\n}\n\nfunction DragHandler(axis, rootNode, ownerDocument, ownerWindow, target, dragTracker, location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, baseFriction, watchDrag) {\n  const {\n    cross: crossAxis,\n    direction\n  } = axis;\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA'];\n  const nonPassiveEvent = {\n    passive: false\n  };\n  const initEvents = EventStore();\n  const dragEvents = EventStore();\n  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20));\n  const snapForceBoost = {\n    mouse: 300,\n    touch: 400\n  };\n  const freeForceBoost = {\n    mouse: 500,\n    touch: 600\n  };\n  const baseSpeed = dragFree ? 43 : 25;\n  let isMoving = false;\n  let startScroll = 0;\n  let startCross = 0;\n  let pointerIsDown = false;\n  let preventScroll = false;\n  let preventClick = false;\n  let isMouse = false;\n  function init(emblaApi) {\n    if (!watchDrag) return;\n    function downIfAllowed(evt) {\n      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt);\n    }\n    const node = rootNode;\n    initEvents.add(node, 'dragstart', evt => evt.preventDefault(), nonPassiveEvent).add(node, 'touchmove', () => undefined, nonPassiveEvent).add(node, 'touchend', () => undefined).add(node, 'touchstart', downIfAllowed).add(node, 'mousedown', downIfAllowed).add(node, 'touchcancel', up).add(node, 'contextmenu', up).add(node, 'click', click, true);\n  }\n  function destroy() {\n    initEvents.clear();\n    dragEvents.clear();\n  }\n  function addDragEvents() {\n    const node = isMouse ? ownerDocument : rootNode;\n    dragEvents.add(node, 'touchmove', move, nonPassiveEvent).add(node, 'touchend', up).add(node, 'mousemove', move, nonPassiveEvent).add(node, 'mouseup', up);\n  }\n  function isFocusNode(node) {\n    const nodeName = node.nodeName || '';\n    return focusNodes.includes(nodeName);\n  }\n  function forceBoost() {\n    const boost = dragFree ? freeForceBoost : snapForceBoost;\n    const type = isMouse ? 'mouse' : 'touch';\n    return boost[type];\n  }\n  function allowedForce(force, targetChanged) {\n    const next = index.add(mathSign(force) * -1);\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance;\n    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce;\n    if (skipSnaps && targetChanged) return baseForce * 0.5;\n    return scrollTarget.byIndex(next.get(), 0).distance;\n  }\n  function down(evt) {\n    const isMouseEvt = isMouseEvent(evt, ownerWindow);\n    isMouse = isMouseEvt;\n    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving;\n    isMoving = deltaAbs(target.get(), location.get()) >= 2;\n    if (isMouseEvt && evt.button !== 0) return;\n    if (isFocusNode(evt.target)) return;\n    pointerIsDown = true;\n    dragTracker.pointerDown(evt);\n    scrollBody.useFriction(0).useDuration(0);\n    target.set(location);\n    addDragEvents();\n    startScroll = dragTracker.readPoint(evt);\n    startCross = dragTracker.readPoint(evt, crossAxis);\n    eventHandler.emit('pointerDown');\n  }\n  function move(evt) {\n    const isTouchEvt = !isMouseEvent(evt, ownerWindow);\n    if (isTouchEvt && evt.touches.length >= 2) return up(evt);\n    const lastScroll = dragTracker.readPoint(evt);\n    const lastCross = dragTracker.readPoint(evt, crossAxis);\n    const diffScroll = deltaAbs(lastScroll, startScroll);\n    const diffCross = deltaAbs(lastCross, startCross);\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt);\n      preventScroll = diffScroll > diffCross;\n      if (!preventScroll) return up(evt);\n    }\n    const diff = dragTracker.pointerMove(evt);\n    if (diffScroll > dragThreshold) preventClick = true;\n    scrollBody.useFriction(0.3).useDuration(0.75);\n    animation.start();\n    target.add(direction(diff));\n    evt.preventDefault();\n  }\n  function up(evt) {\n    const currentLocation = scrollTarget.byDistance(0, false);\n    const targetChanged = currentLocation.index !== index.get();\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost();\n    const force = allowedForce(direction(rawForce), targetChanged);\n    const forceFactor = factorAbs(rawForce, force);\n    const speed = baseSpeed - 10 * forceFactor;\n    const friction = baseFriction + forceFactor / 50;\n    preventScroll = false;\n    pointerIsDown = false;\n    dragEvents.clear();\n    scrollBody.useDuration(speed).useFriction(friction);\n    scrollTo.distance(force, !dragFree);\n    isMouse = false;\n    eventHandler.emit('pointerUp');\n  }\n  function click(evt) {\n    if (preventClick) {\n      evt.stopPropagation();\n      evt.preventDefault();\n      preventClick = false;\n    }\n  }\n  function pointerDown() {\n    return pointerIsDown;\n  }\n  const self = {\n    init,\n    destroy,\n    pointerDown\n  };\n  return self;\n}\n\nfunction DragTracker(axis, ownerWindow) {\n  const logInterval = 170;\n  let startEvent;\n  let lastEvent;\n  function readTime(evt) {\n    return evt.timeStamp;\n  }\n  function readPoint(evt, evtAxis) {\n    const property = evtAxis || axis.scroll;\n    const coord = `client${property === 'x' ? 'X' : 'Y'}`;\n    return (isMouseEvent(evt, ownerWindow) ? evt : evt.touches[0])[coord];\n  }\n  function pointerDown(evt) {\n    startEvent = evt;\n    lastEvent = evt;\n    return readPoint(evt);\n  }\n  function pointerMove(evt) {\n    const diff = readPoint(evt) - readPoint(lastEvent);\n    const expired = readTime(evt) - readTime(startEvent) > logInterval;\n    lastEvent = evt;\n    if (expired) startEvent = evt;\n    return diff;\n  }\n  function pointerUp(evt) {\n    if (!startEvent || !lastEvent) return 0;\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent);\n    const diffTime = readTime(evt) - readTime(startEvent);\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval;\n    const force = diffDrag / diffTime;\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1;\n    return isFlick ? force : 0;\n  }\n  const self = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint\n  };\n  return self;\n}\n\nfunction NodeRects() {\n  function measure(node) {\n    const {\n      offsetTop,\n      offsetLeft,\n      offsetWidth,\n      offsetHeight\n    } = node;\n    const offset = {\n      top: offsetTop,\n      right: offsetLeft + offsetWidth,\n      bottom: offsetTop + offsetHeight,\n      left: offsetLeft,\n      width: offsetWidth,\n      height: offsetHeight\n    };\n    return offset;\n  }\n  const self = {\n    measure\n  };\n  return self;\n}\n\nfunction PercentOfView(viewSize) {\n  function measure(n) {\n    return viewSize * (n / 100);\n  }\n  const self = {\n    measure\n  };\n  return self;\n}\n\nfunction ResizeHandler(container, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects) {\n  const observeNodes = [container].concat(slides);\n  let resizeObserver;\n  let containerSize;\n  let slideSizes = [];\n  let destroyed = false;\n  function readSize(node) {\n    return axis.measureSize(nodeRects.measure(node));\n  }\n  function init(emblaApi) {\n    if (!watchResize) return;\n    containerSize = readSize(container);\n    slideSizes = slides.map(readSize);\n    function defaultCallback(entries) {\n      for (const entry of entries) {\n        if (destroyed) return;\n        const isContainer = entry.target === container;\n        const slideIndex = slides.indexOf(entry.target);\n        const lastSize = isContainer ? containerSize : slideSizes[slideIndex];\n        const newSize = readSize(isContainer ? container : slides[slideIndex]);\n        const diffSize = mathAbs(newSize - lastSize);\n        if (diffSize >= 0.5) {\n          emblaApi.reInit();\n          eventHandler.emit('resize');\n          break;\n        }\n      }\n    }\n    resizeObserver = new ResizeObserver(entries => {\n      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {\n        defaultCallback(entries);\n      }\n    });\n    ownerWindow.requestAnimationFrame(() => {\n      observeNodes.forEach(node => resizeObserver.observe(node));\n    });\n  }\n  function destroy() {\n    destroyed = true;\n    if (resizeObserver) resizeObserver.disconnect();\n  }\n  const self = {\n    init,\n    destroy\n  };\n  return self;\n}\n\nfunction ScrollBody(location, offsetLocation, previousLocation, target, baseDuration, baseFriction) {\n  let scrollVelocity = 0;\n  let scrollDirection = 0;\n  let scrollDuration = baseDuration;\n  let scrollFriction = baseFriction;\n  let rawLocation = location.get();\n  let rawLocationPrevious = 0;\n  function seek() {\n    const displacement = target.get() - location.get();\n    const isInstant = !scrollDuration;\n    let scrollDistance = 0;\n    if (isInstant) {\n      scrollVelocity = 0;\n      previousLocation.set(target);\n      location.set(target);\n      scrollDistance = displacement;\n    } else {\n      previousLocation.set(location);\n      scrollVelocity += displacement / scrollDuration;\n      scrollVelocity *= scrollFriction;\n      rawLocation += scrollVelocity;\n      location.add(scrollVelocity);\n      scrollDistance = rawLocation - rawLocationPrevious;\n    }\n    scrollDirection = mathSign(scrollDistance);\n    rawLocationPrevious = rawLocation;\n    return self;\n  }\n  function settled() {\n    const diff = target.get() - offsetLocation.get();\n    return mathAbs(diff) < 0.001;\n  }\n  function duration() {\n    return scrollDuration;\n  }\n  function direction() {\n    return scrollDirection;\n  }\n  function velocity() {\n    return scrollVelocity;\n  }\n  function useBaseDuration() {\n    return useDuration(baseDuration);\n  }\n  function useBaseFriction() {\n    return useFriction(baseFriction);\n  }\n  function useDuration(n) {\n    scrollDuration = n;\n    return self;\n  }\n  function useFriction(n) {\n    scrollFriction = n;\n    return self;\n  }\n  const self = {\n    direction,\n    duration,\n    velocity,\n    seek,\n    settled,\n    useBaseFriction,\n    useBaseDuration,\n    useFriction,\n    useDuration\n  };\n  return self;\n}\n\nfunction ScrollBounds(limit, location, target, scrollBody, percentOfView) {\n  const pullBackThreshold = percentOfView.measure(10);\n  const edgeOffsetTolerance = percentOfView.measure(50);\n  const frictionLimit = Limit(0.1, 0.99);\n  let disabled = false;\n  function shouldConstrain() {\n    if (disabled) return false;\n    if (!limit.reachedAny(target.get())) return false;\n    if (!limit.reachedAny(location.get())) return false;\n    return true;\n  }\n  function constrain(pointerDown) {\n    if (!shouldConstrain()) return;\n    const edge = limit.reachedMin(location.get()) ? 'min' : 'max';\n    const diffToEdge = mathAbs(limit[edge] - location.get());\n    const diffToTarget = target.get() - location.get();\n    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance);\n    target.subtract(diffToTarget * friction);\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()));\n      scrollBody.useDuration(25).useBaseFriction();\n    }\n  }\n  function toggleActive(active) {\n    disabled = !active;\n  }\n  const self = {\n    shouldConstrain,\n    constrain,\n    toggleActive\n  };\n  return self;\n}\n\nfunction ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance) {\n  const scrollBounds = Limit(-contentSize + viewSize, 0);\n  const snapsBounded = measureBounded();\n  const scrollContainLimit = findScrollContainLimit();\n  const snapsContained = measureContained();\n  function usePixelTolerance(bound, snap) {\n    return deltaAbs(bound, snap) <= 1;\n  }\n  function findScrollContainLimit() {\n    const startSnap = snapsBounded[0];\n    const endSnap = arrayLast(snapsBounded);\n    const min = snapsBounded.lastIndexOf(startSnap);\n    const max = snapsBounded.indexOf(endSnap) + 1;\n    return Limit(min, max);\n  }\n  function measureBounded() {\n    return snapsAligned.map((snapAligned, index) => {\n      const {\n        min,\n        max\n      } = scrollBounds;\n      const snap = scrollBounds.constrain(snapAligned);\n      const isFirst = !index;\n      const isLast = arrayIsLastIndex(snapsAligned, index);\n      if (isFirst) return max;\n      if (isLast) return min;\n      if (usePixelTolerance(min, snap)) return min;\n      if (usePixelTolerance(max, snap)) return max;\n      return snap;\n    }).map(scrollBound => parseFloat(scrollBound.toFixed(3)));\n  }\n  function measureContained() {\n    if (contentSize <= viewSize + pixelTolerance) return [scrollBounds.max];\n    if (containScroll === 'keepSnaps') return snapsBounded;\n    const {\n      min,\n      max\n    } = scrollContainLimit;\n    return snapsBounded.slice(min, max);\n  }\n  const self = {\n    snapsContained,\n    scrollContainLimit\n  };\n  return self;\n}\n\nfunction ScrollLimit(contentSize, scrollSnaps, loop) {\n  const max = scrollSnaps[0];\n  const min = loop ? max - contentSize : arrayLast(scrollSnaps);\n  const limit = Limit(min, max);\n  const self = {\n    limit\n  };\n  return self;\n}\n\nfunction ScrollLooper(contentSize, limit, location, vectors) {\n  const jointSafety = 0.1;\n  const min = limit.min + jointSafety;\n  const max = limit.max + jointSafety;\n  const {\n    reachedMin,\n    reachedMax\n  } = Limit(min, max);\n  function shouldLoop(direction) {\n    if (direction === 1) return reachedMax(location.get());\n    if (direction === -1) return reachedMin(location.get());\n    return false;\n  }\n  function loop(direction) {\n    if (!shouldLoop(direction)) return;\n    const loopDistance = contentSize * (direction * -1);\n    vectors.forEach(v => v.add(loopDistance));\n  }\n  const self = {\n    loop\n  };\n  return self;\n}\n\nfunction ScrollProgress(limit) {\n  const {\n    max,\n    length\n  } = limit;\n  function get(n) {\n    const currentLocation = n - max;\n    return length ? currentLocation / -length : 0;\n  }\n  const self = {\n    get\n  };\n  return self;\n}\n\nfunction ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll) {\n  const {\n    startEdge,\n    endEdge\n  } = axis;\n  const {\n    groupSlides\n  } = slidesToScroll;\n  const alignments = measureSizes().map(alignment.measure);\n  const snaps = measureUnaligned();\n  const snapsAligned = measureAligned();\n  function measureSizes() {\n    return groupSlides(slideRects).map(rects => arrayLast(rects)[endEdge] - rects[0][startEdge]).map(mathAbs);\n  }\n  function measureUnaligned() {\n    return slideRects.map(rect => containerRect[startEdge] - rect[startEdge]).map(snap => -mathAbs(snap));\n  }\n  function measureAligned() {\n    return groupSlides(snaps).map(g => g[0]).map((snap, index) => snap + alignments[index]);\n  }\n  const self = {\n    snaps,\n    snapsAligned\n  };\n  return self;\n}\n\nfunction SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes) {\n  const {\n    groupSlides\n  } = slidesToScroll;\n  const {\n    min,\n    max\n  } = scrollContainLimit;\n  const slideRegistry = createSlideRegistry();\n  function createSlideRegistry() {\n    const groupedSlideIndexes = groupSlides(slideIndexes);\n    const doNotContain = !containSnaps || containScroll === 'keepSnaps';\n    if (scrollSnaps.length === 1) return [slideIndexes];\n    if (doNotContain) return groupedSlideIndexes;\n    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {\n      const isFirst = !index;\n      const isLast = arrayIsLastIndex(groups, index);\n      if (isFirst) {\n        const range = arrayLast(groups[0]) + 1;\n        return arrayFromNumber(range);\n      }\n      if (isLast) {\n        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1;\n        return arrayFromNumber(range, arrayLast(groups)[0]);\n      }\n      return group;\n    });\n  }\n  const self = {\n    slideRegistry\n  };\n  return self;\n}\n\nfunction ScrollTarget(loop, scrollSnaps, contentSize, limit, targetVector) {\n  const {\n    reachedAny,\n    removeOffset,\n    constrain\n  } = limit;\n  function minDistance(distances) {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0];\n  }\n  function findTargetSnap(target) {\n    const distance = loop ? removeOffset(target) : constrain(target);\n    const ascDiffsToSnaps = scrollSnaps.map((snap, index) => ({\n      diff: shortcut(snap - distance, 0),\n      index\n    })).sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff));\n    const {\n      index\n    } = ascDiffsToSnaps[0];\n    return {\n      index,\n      distance\n    };\n  }\n  function shortcut(target, direction) {\n    const targets = [target, target + contentSize, target - contentSize];\n    if (!loop) return target;\n    if (!direction) return minDistance(targets);\n    const matchingTargets = targets.filter(t => mathSign(t) === direction);\n    if (matchingTargets.length) return minDistance(matchingTargets);\n    return arrayLast(targets) - contentSize;\n  }\n  function byIndex(index, direction) {\n    const diffToSnap = scrollSnaps[index] - targetVector.get();\n    const distance = shortcut(diffToSnap, direction);\n    return {\n      index,\n      distance\n    };\n  }\n  function byDistance(distance, snap) {\n    const target = targetVector.get() + distance;\n    const {\n      index,\n      distance: targetSnapDistance\n    } = findTargetSnap(target);\n    const reachedBound = !loop && reachedAny(target);\n    if (!snap || reachedBound) return {\n      index,\n      distance\n    };\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance;\n    const snapDistance = distance + shortcut(diffToSnap, 0);\n    return {\n      index,\n      distance: snapDistance\n    };\n  }\n  const self = {\n    byDistance,\n    byIndex,\n    shortcut\n  };\n  return self;\n}\n\nfunction ScrollTo(animation, indexCurrent, indexPrevious, scrollBody, scrollTarget, targetVector, eventHandler) {\n  function scrollTo(target) {\n    const distanceDiff = target.distance;\n    const indexDiff = target.index !== indexCurrent.get();\n    targetVector.add(distanceDiff);\n    if (distanceDiff) {\n      if (scrollBody.duration()) {\n        animation.start();\n      } else {\n        animation.update();\n        animation.render(1);\n        animation.update();\n      }\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get());\n      indexCurrent.set(target.index);\n      eventHandler.emit('select');\n    }\n  }\n  function distance(n, snap) {\n    const target = scrollTarget.byDistance(n, snap);\n    scrollTo(target);\n  }\n  function index(n, direction) {\n    const targetIndex = indexCurrent.clone().set(n);\n    const target = scrollTarget.byIndex(targetIndex.get(), direction);\n    scrollTo(target);\n  }\n  const self = {\n    distance,\n    index\n  };\n  return self;\n}\n\nfunction SlideFocus(root, slides, slideRegistry, scrollTo, scrollBody, eventStore, eventHandler, watchFocus) {\n  const focusListenerOptions = {\n    passive: true,\n    capture: true\n  };\n  let lastTabPressTime = 0;\n  function init(emblaApi) {\n    if (!watchFocus) return;\n    function defaultCallback(index) {\n      const nowTime = new Date().getTime();\n      const diffTime = nowTime - lastTabPressTime;\n      if (diffTime > 10) return;\n      eventHandler.emit('slideFocusStart');\n      root.scrollLeft = 0;\n      const group = slideRegistry.findIndex(group => group.includes(index));\n      if (!isNumber(group)) return;\n      scrollBody.useDuration(0);\n      scrollTo.index(group, 0);\n      eventHandler.emit('slideFocus');\n    }\n    eventStore.add(document, 'keydown', registerTabPress, false);\n    slides.forEach((slide, slideIndex) => {\n      eventStore.add(slide, 'focus', evt => {\n        if (isBoolean(watchFocus) || watchFocus(emblaApi, evt)) {\n          defaultCallback(slideIndex);\n        }\n      }, focusListenerOptions);\n    });\n  }\n  function registerTabPress(event) {\n    if (event.code === 'Tab') lastTabPressTime = new Date().getTime();\n  }\n  const self = {\n    init\n  };\n  return self;\n}\n\nfunction Vector1D(initialValue) {\n  let value = initialValue;\n  function get() {\n    return value;\n  }\n  function set(n) {\n    value = normalizeInput(n);\n  }\n  function add(n) {\n    value += normalizeInput(n);\n  }\n  function subtract(n) {\n    value -= normalizeInput(n);\n  }\n  function normalizeInput(n) {\n    return isNumber(n) ? n : n.get();\n  }\n  const self = {\n    get,\n    set,\n    add,\n    subtract\n  };\n  return self;\n}\n\nfunction Translate(axis, container) {\n  const translate = axis.scroll === 'x' ? x : y;\n  const containerStyle = container.style;\n  let previousTarget = null;\n  let disabled = false;\n  function x(n) {\n    return `translate3d(${n}px,0px,0px)`;\n  }\n  function y(n) {\n    return `translate3d(0px,${n}px,0px)`;\n  }\n  function to(target) {\n    if (disabled) return;\n    const newTarget = roundToTwoDecimals(axis.direction(target));\n    if (newTarget === previousTarget) return;\n    containerStyle.transform = translate(newTarget);\n    previousTarget = newTarget;\n  }\n  function toggleActive(active) {\n    disabled = !active;\n  }\n  function clear() {\n    if (disabled) return;\n    containerStyle.transform = '';\n    if (!container.getAttribute('style')) container.removeAttribute('style');\n  }\n  const self = {\n    clear,\n    to,\n    toggleActive\n  };\n  return self;\n}\n\nfunction SlideLooper(axis, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, location, slides) {\n  const roundingSafety = 0.5;\n  const ascItems = arrayKeys(slideSizesWithGaps);\n  const descItems = arrayKeys(slideSizesWithGaps).reverse();\n  const loopPoints = startPoints().concat(endPoints());\n  function removeSlideSizes(indexes, from) {\n    return indexes.reduce((a, i) => {\n      return a - slideSizesWithGaps[i];\n    }, from);\n  }\n  function slidesInGap(indexes, gap) {\n    return indexes.reduce((a, i) => {\n      const remainingGap = removeSlideSizes(a, gap);\n      return remainingGap > 0 ? a.concat([i]) : a;\n    }, []);\n  }\n  function findSlideBounds(offset) {\n    return snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + roundingSafety + offset,\n      end: snap + viewSize - roundingSafety + offset\n    }));\n  }\n  function findLoopPoints(indexes, offset, isEndEdge) {\n    const slideBounds = findSlideBounds(offset);\n    return indexes.map(index => {\n      const initial = isEndEdge ? 0 : -contentSize;\n      const altered = isEndEdge ? contentSize : 0;\n      const boundEdge = isEndEdge ? 'end' : 'start';\n      const loopPoint = slideBounds[index][boundEdge];\n      return {\n        index,\n        loopPoint,\n        slideLocation: Vector1D(-1),\n        translate: Translate(axis, slides[index]),\n        target: () => location.get() > loopPoint ? initial : altered\n      };\n    });\n  }\n  function startPoints() {\n    const gap = scrollSnaps[0];\n    const indexes = slidesInGap(descItems, gap);\n    return findLoopPoints(indexes, contentSize, false);\n  }\n  function endPoints() {\n    const gap = viewSize - scrollSnaps[0] - 1;\n    const indexes = slidesInGap(ascItems, gap);\n    return findLoopPoints(indexes, -contentSize, true);\n  }\n  function canLoop() {\n    return loopPoints.every(({\n      index\n    }) => {\n      const otherIndexes = ascItems.filter(i => i !== index);\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1;\n    });\n  }\n  function loop() {\n    loopPoints.forEach(loopPoint => {\n      const {\n        target,\n        translate,\n        slideLocation\n      } = loopPoint;\n      const shiftLocation = target();\n      if (shiftLocation === slideLocation.get()) return;\n      translate.to(shiftLocation);\n      slideLocation.set(shiftLocation);\n    });\n  }\n  function clear() {\n    loopPoints.forEach(loopPoint => loopPoint.translate.clear());\n  }\n  const self = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints\n  };\n  return self;\n}\n\nfunction SlidesHandler(container, eventHandler, watchSlides) {\n  let mutationObserver;\n  let destroyed = false;\n  function init(emblaApi) {\n    if (!watchSlides) return;\n    function defaultCallback(mutations) {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          emblaApi.reInit();\n          eventHandler.emit('slidesChanged');\n          break;\n        }\n      }\n    }\n    mutationObserver = new MutationObserver(mutations => {\n      if (destroyed) return;\n      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {\n        defaultCallback(mutations);\n      }\n    });\n    mutationObserver.observe(container, {\n      childList: true\n    });\n  }\n  function destroy() {\n    if (mutationObserver) mutationObserver.disconnect();\n    destroyed = true;\n  }\n  const self = {\n    init,\n    destroy\n  };\n  return self;\n}\n\nfunction SlidesInView(container, slides, eventHandler, threshold) {\n  const intersectionEntryMap = {};\n  let inViewCache = null;\n  let notInViewCache = null;\n  let intersectionObserver;\n  let destroyed = false;\n  function init() {\n    intersectionObserver = new IntersectionObserver(entries => {\n      if (destroyed) return;\n      entries.forEach(entry => {\n        const index = slides.indexOf(entry.target);\n        intersectionEntryMap[index] = entry;\n      });\n      inViewCache = null;\n      notInViewCache = null;\n      eventHandler.emit('slidesInView');\n    }, {\n      root: container.parentElement,\n      threshold\n    });\n    slides.forEach(slide => intersectionObserver.observe(slide));\n  }\n  function destroy() {\n    if (intersectionObserver) intersectionObserver.disconnect();\n    destroyed = true;\n  }\n  function createInViewList(inView) {\n    return objectKeys(intersectionEntryMap).reduce((list, slideIndex) => {\n      const index = parseInt(slideIndex);\n      const {\n        isIntersecting\n      } = intersectionEntryMap[index];\n      const inViewMatch = inView && isIntersecting;\n      const notInViewMatch = !inView && !isIntersecting;\n      if (inViewMatch || notInViewMatch) list.push(index);\n      return list;\n    }, []);\n  }\n  function get(inView = true) {\n    if (inView && inViewCache) return inViewCache;\n    if (!inView && notInViewCache) return notInViewCache;\n    const slideIndexes = createInViewList(inView);\n    if (inView) inViewCache = slideIndexes;\n    if (!inView) notInViewCache = slideIndexes;\n    return slideIndexes;\n  }\n  const self = {\n    init,\n    destroy,\n    get\n  };\n  return self;\n}\n\nfunction SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow) {\n  const {\n    measureSize,\n    startEdge,\n    endEdge\n  } = axis;\n  const withEdgeGap = slideRects[0] && readEdgeGap;\n  const startGap = measureStartGap();\n  const endGap = measureEndGap();\n  const slideSizes = slideRects.map(measureSize);\n  const slideSizesWithGaps = measureWithGaps();\n  function measureStartGap() {\n    if (!withEdgeGap) return 0;\n    const slideRect = slideRects[0];\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge]);\n  }\n  function measureEndGap() {\n    if (!withEdgeGap) return 0;\n    const style = ownerWindow.getComputedStyle(arrayLast(slides));\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`));\n  }\n  function measureWithGaps() {\n    return slideRects.map((rect, index, rects) => {\n      const isFirst = !index;\n      const isLast = arrayIsLastIndex(rects, index);\n      if (isFirst) return slideSizes[index] + startGap;\n      if (isLast) return slideSizes[index] + endGap;\n      return rects[index + 1][startEdge] - rect[startEdge];\n    }).map(mathAbs);\n  }\n  const self = {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  };\n  return self;\n}\n\nfunction SlidesToScroll(axis, viewSize, slidesToScroll, loop, containerRect, slideRects, startGap, endGap, pixelTolerance) {\n  const {\n    startEdge,\n    endEdge,\n    direction\n  } = axis;\n  const groupByNumber = isNumber(slidesToScroll);\n  function byNumber(array, groupSize) {\n    return arrayKeys(array).filter(i => i % groupSize === 0).map(i => array.slice(i, i + groupSize));\n  }\n  function bySize(array) {\n    if (!array.length) return [];\n    return arrayKeys(array).reduce((groups, rectB, index) => {\n      const rectA = arrayLast(groups) || 0;\n      const isFirst = rectA === 0;\n      const isLast = rectB === arrayLastIndex(array);\n      const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge];\n      const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge];\n      const gapA = !loop && isFirst ? direction(startGap) : 0;\n      const gapB = !loop && isLast ? direction(endGap) : 0;\n      const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA));\n      if (index && chunkSize > viewSize + pixelTolerance) groups.push(rectB);\n      if (isLast) groups.push(array.length);\n      return groups;\n    }, []).map((currentSize, index, groups) => {\n      const previousSize = Math.max(groups[index - 1] || 0);\n      return array.slice(previousSize, currentSize);\n    });\n  }\n  function groupSlides(array) {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array);\n  }\n  const self = {\n    groupSlides\n  };\n  return self;\n}\n\nfunction Engine(root, container, slides, ownerDocument, ownerWindow, options, eventHandler) {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction,\n    startIndex,\n    loop,\n    duration,\n    dragFree,\n    dragThreshold,\n    inViewThreshold,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n    watchResize,\n    watchSlides,\n    watchDrag,\n    watchFocus\n  } = options;\n  // Measurements\n  const pixelTolerance = 2;\n  const nodeRects = NodeRects();\n  const containerRect = nodeRects.measure(container);\n  const slideRects = slides.map(nodeRects.measure);\n  const axis = Axis(scrollAxis, direction);\n  const viewSize = axis.measureSize(containerRect);\n  const percentOfView = PercentOfView(viewSize);\n  const alignment = Alignment(align, viewSize);\n  const containSnaps = !loop && !!containScroll;\n  const readEdgeGap = loop || !!containScroll;\n  const {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  } = SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow);\n  const slidesToScroll = SlidesToScroll(axis, viewSize, groupSlides, loop, containerRect, slideRects, startGap, endGap, pixelTolerance);\n  const {\n    snaps,\n    snapsAligned\n  } = ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll);\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps);\n  const {\n    snapsContained,\n    scrollContainLimit\n  } = ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance);\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned;\n  const {\n    limit\n  } = ScrollLimit(contentSize, scrollSnaps, loop);\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop);\n  const indexPrevious = index.clone();\n  const slideIndexes = arrayKeys(slides);\n  // Animation\n  const update = ({\n    dragHandler,\n    scrollBody,\n    scrollBounds,\n    options: {\n      loop\n    }\n  }) => {\n    if (!loop) scrollBounds.constrain(dragHandler.pointerDown());\n    scrollBody.seek();\n  };\n  const render = ({\n    scrollBody,\n    translate,\n    location,\n    offsetLocation,\n    previousLocation,\n    scrollLooper,\n    slideLooper,\n    dragHandler,\n    animation,\n    eventHandler,\n    scrollBounds,\n    options: {\n      loop\n    }\n  }, alpha) => {\n    const shouldSettle = scrollBody.settled();\n    const withinBounds = !scrollBounds.shouldConstrain();\n    const hasSettled = loop ? shouldSettle : shouldSettle && withinBounds;\n    const hasSettledAndIdle = hasSettled && !dragHandler.pointerDown();\n    if (hasSettledAndIdle) animation.stop();\n    const interpolatedLocation = location.get() * alpha + previousLocation.get() * (1 - alpha);\n    offsetLocation.set(interpolatedLocation);\n    if (loop) {\n      scrollLooper.loop(scrollBody.direction());\n      slideLooper.loop();\n    }\n    translate.to(offsetLocation.get());\n    if (hasSettledAndIdle) eventHandler.emit('settle');\n    if (!hasSettled) eventHandler.emit('scroll');\n  };\n  const animation = Animations(ownerDocument, ownerWindow, () => update(engine), alpha => render(engine, alpha));\n  // Shared\n  const friction = 0.68;\n  const startLocation = scrollSnaps[index.get()];\n  const location = Vector1D(startLocation);\n  const previousLocation = Vector1D(startLocation);\n  const offsetLocation = Vector1D(startLocation);\n  const target = Vector1D(startLocation);\n  const scrollBody = ScrollBody(location, offsetLocation, previousLocation, target, duration, friction);\n  const scrollTarget = ScrollTarget(loop, scrollSnaps, contentSize, limit, target);\n  const scrollTo = ScrollTo(animation, index, indexPrevious, scrollBody, scrollTarget, target, eventHandler);\n  const scrollProgress = ScrollProgress(limit);\n  const eventStore = EventStore();\n  const slidesInView = SlidesInView(container, slides, eventHandler, inViewThreshold);\n  const {\n    slideRegistry\n  } = SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes);\n  const slideFocus = SlideFocus(root, slides, slideRegistry, scrollTo, scrollBody, eventStore, eventHandler, watchFocus);\n  // Engine\n  const engine = {\n    ownerDocument,\n    ownerWindow,\n    eventHandler,\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    dragHandler: DragHandler(axis, root, ownerDocument, ownerWindow, target, DragTracker(axis, ownerWindow), location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, friction, watchDrag),\n    eventStore,\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    offsetLocation,\n    previousLocation,\n    options,\n    resizeHandler: ResizeHandler(container, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects),\n    scrollBody,\n    scrollBounds: ScrollBounds(limit, offsetLocation, target, scrollBody, percentOfView),\n    scrollLooper: ScrollLooper(contentSize, limit, offsetLocation, [location, offsetLocation, previousLocation, target]),\n    scrollProgress,\n    scrollSnapList: scrollSnaps.map(scrollProgress.get),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(axis, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, offsetLocation, slides),\n    slideFocus,\n    slidesHandler: SlidesHandler(container, eventHandler, watchSlides),\n    slidesInView,\n    slideIndexes,\n    slideRegistry,\n    slidesToScroll,\n    target,\n    translate: Translate(axis, container)\n  };\n  return engine;\n}\n\nfunction EventHandler() {\n  let listeners = {};\n  let api;\n  function init(emblaApi) {\n    api = emblaApi;\n  }\n  function getListeners(evt) {\n    return listeners[evt] || [];\n  }\n  function emit(evt) {\n    getListeners(evt).forEach(e => e(api, evt));\n    return self;\n  }\n  function on(evt, cb) {\n    listeners[evt] = getListeners(evt).concat([cb]);\n    return self;\n  }\n  function off(evt, cb) {\n    listeners[evt] = getListeners(evt).filter(e => e !== cb);\n    return self;\n  }\n  function clear() {\n    listeners = {};\n  }\n  const self = {\n    init,\n    emit,\n    off,\n    on,\n    clear\n  };\n  return self;\n}\n\nconst defaultOptions = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: 'trimSnaps',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  inViewThreshold: 0,\n  breakpoints: {},\n  dragFree: false,\n  dragThreshold: 10,\n  loop: false,\n  skipSnaps: false,\n  duration: 25,\n  startIndex: 0,\n  active: true,\n  watchDrag: true,\n  watchResize: true,\n  watchSlides: true,\n  watchFocus: true\n};\n\nfunction OptionsHandler(ownerWindow) {\n  function mergeOptions(optionsA, optionsB) {\n    return objectsMergeDeep(optionsA, optionsB || {});\n  }\n  function optionsAtMedia(options) {\n    const optionsAtMedia = options.breakpoints || {};\n    const matchedMediaOptions = objectKeys(optionsAtMedia).filter(media => ownerWindow.matchMedia(media).matches).map(media => optionsAtMedia[media]).reduce((a, mediaOption) => mergeOptions(a, mediaOption), {});\n    return mergeOptions(options, matchedMediaOptions);\n  }\n  function optionsMediaQueries(optionsList) {\n    return optionsList.map(options => objectKeys(options.breakpoints || {})).reduce((acc, mediaQueries) => acc.concat(mediaQueries), []).map(ownerWindow.matchMedia);\n  }\n  const self = {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  };\n  return self;\n}\n\nfunction PluginsHandler(optionsHandler) {\n  let activePlugins = [];\n  function init(emblaApi, plugins) {\n    activePlugins = plugins.filter(({\n      options\n    }) => optionsHandler.optionsAtMedia(options).active !== false);\n    activePlugins.forEach(plugin => plugin.init(emblaApi, optionsHandler));\n    return plugins.reduce((map, plugin) => Object.assign(map, {\n      [plugin.name]: plugin\n    }), {});\n  }\n  function destroy() {\n    activePlugins = activePlugins.filter(plugin => plugin.destroy());\n  }\n  const self = {\n    init,\n    destroy\n  };\n  return self;\n}\n\nfunction EmblaCarousel(root, userOptions, userPlugins) {\n  const ownerDocument = root.ownerDocument;\n  const ownerWindow = ownerDocument.defaultView;\n  const optionsHandler = OptionsHandler(ownerWindow);\n  const pluginsHandler = PluginsHandler(optionsHandler);\n  const mediaHandlers = EventStore();\n  const eventHandler = EventHandler();\n  const {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  } = optionsHandler;\n  const {\n    on,\n    off,\n    emit\n  } = eventHandler;\n  const reInit = reActivate;\n  let destroyed = false;\n  let engine;\n  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions);\n  let options = mergeOptions(optionsBase);\n  let pluginList = [];\n  let pluginApis;\n  let container;\n  let slides;\n  function storeElements() {\n    const {\n      container: userContainer,\n      slides: userSlides\n    } = options;\n    const customContainer = isString(userContainer) ? root.querySelector(userContainer) : userContainer;\n    container = customContainer || root.children[0];\n    const customSlides = isString(userSlides) ? container.querySelectorAll(userSlides) : userSlides;\n    slides = [].slice.call(customSlides || container.children);\n  }\n  function createEngine(options) {\n    const engine = Engine(root, container, slides, ownerDocument, ownerWindow, options, eventHandler);\n    if (options.loop && !engine.slideLooper.canLoop()) {\n      const optionsWithoutLoop = Object.assign({}, options, {\n        loop: false\n      });\n      return createEngine(optionsWithoutLoop);\n    }\n    return engine;\n  }\n  function activate(withOptions, withPlugins) {\n    if (destroyed) return;\n    optionsBase = mergeOptions(optionsBase, withOptions);\n    options = optionsAtMedia(optionsBase);\n    pluginList = withPlugins || pluginList;\n    storeElements();\n    engine = createEngine(options);\n    optionsMediaQueries([optionsBase, ...pluginList.map(({\n      options\n    }) => options)]).forEach(query => mediaHandlers.add(query, 'change', reActivate));\n    if (!options.active) return;\n    engine.translate.to(engine.location.get());\n    engine.animation.init();\n    engine.slidesInView.init();\n    engine.slideFocus.init(self);\n    engine.eventHandler.init(self);\n    engine.resizeHandler.init(self);\n    engine.slidesHandler.init(self);\n    if (engine.options.loop) engine.slideLooper.loop();\n    if (container.offsetParent && slides.length) engine.dragHandler.init(self);\n    pluginApis = pluginsHandler.init(self, pluginList);\n  }\n  function reActivate(withOptions, withPlugins) {\n    const startIndex = selectedScrollSnap();\n    deActivate();\n    activate(mergeOptions({\n      startIndex\n    }, withOptions), withPlugins);\n    eventHandler.emit('reInit');\n  }\n  function deActivate() {\n    engine.dragHandler.destroy();\n    engine.eventStore.clear();\n    engine.translate.clear();\n    engine.slideLooper.clear();\n    engine.resizeHandler.destroy();\n    engine.slidesHandler.destroy();\n    engine.slidesInView.destroy();\n    engine.animation.destroy();\n    pluginsHandler.destroy();\n    mediaHandlers.clear();\n  }\n  function destroy() {\n    if (destroyed) return;\n    destroyed = true;\n    mediaHandlers.clear();\n    deActivate();\n    eventHandler.emit('destroy');\n    eventHandler.clear();\n  }\n  function scrollTo(index, jump, direction) {\n    if (!options.active || destroyed) return;\n    engine.scrollBody.useBaseFriction().useDuration(jump === true ? 0 : options.duration);\n    engine.scrollTo.index(index, direction || 0);\n  }\n  function scrollNext(jump) {\n    const next = engine.index.add(1).get();\n    scrollTo(next, jump, -1);\n  }\n  function scrollPrev(jump) {\n    const prev = engine.index.add(-1).get();\n    scrollTo(prev, jump, 1);\n  }\n  function canScrollNext() {\n    const next = engine.index.add(1).get();\n    return next !== selectedScrollSnap();\n  }\n  function canScrollPrev() {\n    const prev = engine.index.add(-1).get();\n    return prev !== selectedScrollSnap();\n  }\n  function scrollSnapList() {\n    return engine.scrollSnapList;\n  }\n  function scrollProgress() {\n    return engine.scrollProgress.get(engine.offsetLocation.get());\n  }\n  function selectedScrollSnap() {\n    return engine.index.get();\n  }\n  function previousScrollSnap() {\n    return engine.indexPrevious.get();\n  }\n  function slidesInView() {\n    return engine.slidesInView.get();\n  }\n  function slidesNotInView() {\n    return engine.slidesInView.get(false);\n  }\n  function plugins() {\n    return pluginApis;\n  }\n  function internalEngine() {\n    return engine;\n  }\n  function rootNode() {\n    return root;\n  }\n  function containerNode() {\n    return container;\n  }\n  function slideNodes() {\n    return slides;\n  }\n  const self = {\n    canScrollNext,\n    canScrollPrev,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    emit,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView\n  };\n  activate(userOptions, userPlugins);\n  setTimeout(() => eventHandler.emit('init'), 0);\n  return self;\n}\nEmblaCarousel.globalOptions = undefined;\n\nexport { EmblaCarousel as default };\n//# sourceMappingURL=embla-carousel.esm.js.map\n","import { useRef, useState, useCallback, useEffect } from 'react';\nimport { areOptionsEqual, arePluginsEqual, canUseDOM } from 'embla-carousel-reactive-utils';\nimport EmblaCarousel from 'embla-carousel';\n\nfunction useEmblaCarousel(options = {}, plugins = []) {\n  const storedOptions = useRef(options);\n  const storedPlugins = useRef(plugins);\n  const [emblaApi, setEmblaApi] = useState();\n  const [viewport, setViewport] = useState();\n  const reInit = useCallback(() => {\n    if (emblaApi) emblaApi.reInit(storedOptions.current, storedPlugins.current);\n  }, [emblaApi]);\n  useEffect(() => {\n    if (areOptionsEqual(storedOptions.current, options)) return;\n    storedOptions.current = options;\n    reInit();\n  }, [options, reInit]);\n  useEffect(() => {\n    if (arePluginsEqual(storedPlugins.current, plugins)) return;\n    storedPlugins.current = plugins;\n    reInit();\n  }, [plugins, reInit]);\n  useEffect(() => {\n    if (canUseDOM() && viewport) {\n      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions;\n      const newEmblaApi = EmblaCarousel(viewport, storedOptions.current, storedPlugins.current);\n      setEmblaApi(newEmblaApi);\n      return () => newEmblaApi.destroy();\n    } else {\n      setEmblaApi(undefined);\n    }\n  }, [viewport, setEmblaApi]);\n  return [setViewport, emblaApi];\n}\nuseEmblaCarousel.globalOptions = undefined;\n\nexport { useEmblaCarousel as default };\n//# sourceMappingURL=embla-carousel-react.esm.js.map\n","import useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\";\nimport { ArrowLeft, ArrowRight } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"../util/cn.js\";\nimport { Button } from \"./Button.js\";\n\ntype CarouselApi = UseEmblaCarouselType[1];\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>;\ntype CarouselOptions = UseCarouselParameters[0];\ntype CarouselPlugin = UseCarouselParameters[1];\n\ntype CarouselProps = {\n  opts?: CarouselOptions;\n  plugins?: CarouselPlugin;\n  orientation?: \"horizontal\" | \"vertical\";\n  setApi?: (api: CarouselApi) => void;\n};\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0];\n  api: ReturnType<typeof useEmblaCarousel>[1];\n  scrollPrev: () => void;\n  scrollNext: () => void;\n  canScrollPrev: boolean;\n  canScrollNext: boolean;\n} & CarouselProps;\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null);\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext);\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\");\n  }\n\n  return context;\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins,\n    );\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false);\n    const [canScrollNext, setCanScrollNext] = React.useState(false);\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return;\n      }\n\n      setCanScrollPrev(api.canScrollPrev());\n      setCanScrollNext(api.canScrollNext());\n    }, []);\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev();\n    }, [api]);\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext();\n    }, [api]);\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault();\n          scrollPrev();\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault();\n          scrollNext();\n        }\n      },\n      [scrollPrev, scrollNext],\n    );\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return;\n      }\n\n      setApi(api);\n    }, [api, setApi]);\n\n    React.useEffect(() => {\n      if (!api) {\n        return;\n      }\n\n      onSelect(api);\n      api.on(\"reInit\", onSelect);\n      api.on(\"select\", onSelect);\n\n      return () => {\n        api.off(\"select\", onSelect);\n      };\n    }, [api, onSelect]);\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    );\n  },\n);\nCarousel.displayName = \"Carousel\";\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel();\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className,\n        )}\n        {...props}\n      />\n    </div>\n  );\n});\nCarouselContent.displayName = \"CarouselContent\";\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel();\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nCarouselItem.displayName = \"CarouselItem\";\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel();\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className,\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  );\n});\nCarouselPrevious.displayName = \"CarouselPrevious\";\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel();\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className,\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  );\n});\nCarouselNext.displayName = \"CarouselNext\";\n\nexport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n  type CarouselApi,\n};\n"],"names":["isObject","subject","isRecord","canUseDOM","areOptionsEqual","optionsA","optionsB","optionsAKeys","optionsBKeys","breakpointsA","breakpointsB","key","valueA","valueB","sortAndMapPluginToOptions","plugins","a","b","plugin","arePluginsEqual","pluginsA","pluginsB","optionA","index","optionB","isNumber","isString","isBoolean","mathAbs","n","mathSign","deltaAbs","factorAbs","diff","roundToTwoDecimals","num","arrayKeys","array","objectKeys","arrayLast","arrayLastIndex","arrayIsLastIndex","arrayFromNumber","startAt","_","i","object","objectsMergeDeep","objectA","objectB","mergedObjects","currentObject","areObjects","isMouseEvent","evt","ownerWindow","Alignment","align","viewSize","predefined","start","center","end","measure","EventStore","listeners","add","node","type","handler","options","removeListener","legacyMediaQueryList","self","clear","remove","Animations","ownerDocument","update","render","documentVisibleHandler","fixedTimeStep","lastTimeStamp","accumulatedTime","animationId","init","reset","destroy","stop","animate","timeStamp","timeElapsed","alpha","Axis","axis","contentDirection","isRightToLeft","isVertical","scroll","cross","sign","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","nodeRect","height","width","direction","Limit","min","max","length","reachedMin","reachedMax","reachedAny","constrain","removeOffset","Counter","loop","loopEnd","counter","withinLimit","get","set","clone","DragHandler","rootNode","target","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","eventHandler","percentOfView","dragFree","dragThreshold","skipSnaps","baseFriction","watchDrag","crossAxis","focusNodes","nonPassiveEvent","initEvents","dragEvents","goToNextThreshold","snapForceBoost","freeForceBoost","baseSpeed","isMoving","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","emblaApi","downIfAllowed","down","up","click","addDragEvents","move","isFocusNode","nodeName","forceBoost","allowedForce","force","targetChanged","next","baseForce","isMouseEvt","lastScroll","lastCross","diffScroll","diffCross","rawForce","forceFactor","speed","friction","pointerDown","DragTracker","startEvent","lastEvent","readTime","readPoint","evtAxis","coord","pointerMove","expired","pointerUp","diffDrag","diffTime","NodeRects","offsetTop","offsetLeft","offsetWidth","offsetHeight","PercentOfView","ResizeHandler","container","slides","watchResize","nodeRects","observeNodes","resizeObserver","containerSize","slideSizes","destroyed","readSize","defaultCallback","entries","entry","isContainer","slideIndex","lastSize","newSize","ScrollBody","offsetLocation","previousLocation","baseDuration","scrollVelocity","scrollDirection","scrollDuration","scrollFriction","rawLocation","rawLocationPrevious","seek","displacement","isInstant","scrollDistance","settled","duration","velocity","useBaseDuration","useDuration","useBaseFriction","useFriction","ScrollBounds","limit","pullBackThreshold","edgeOffsetTolerance","frictionLimit","disabled","shouldConstrain","edge","diffToEdge","diffToTarget","toggleActive","active","ScrollContain","contentSize","snapsAligned","containScroll","pixelTolerance","scrollBounds","snapsBounded","measureBounded","scrollContainLimit","findScrollContainLimit","snapsContained","measureContained","usePixelTolerance","bound","snap","startSnap","endSnap","snapAligned","isFirst","isLast","scrollBound","ScrollLimit","scrollSnaps","ScrollLooper","vectors","shouldLoop","loopDistance","v","ScrollProgress","currentLocation","ScrollSnaps","alignment","containerRect","slideRects","slidesToScroll","groupSlides","alignments","measureSizes","snaps","measureUnaligned","measureAligned","rects","rect","g","SlideRegistry","containSnaps","slideIndexes","slideRegistry","createSlideRegistry","groupedSlideIndexes","doNotContain","group","groups","range","ScrollTarget","targetVector","minDistance","distances","findTargetSnap","distance","ascDiffsToSnaps","shortcut","d1","d2","targets","matchingTargets","t","byIndex","diffToSnap","byDistance","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","SlideFocus","root","eventStore","watchFocus","focusListenerOptions","lastTabPressTime","registerTabPress","slide","event","Vector1D","initialValue","value","normalizeInput","subtract","Translate","translate","x","y","containerStyle","previousTarget","to","newTarget","SlideLooper","slideSizesWithGaps","ascItems","descItems","loopPoints","startPoints","endPoints","removeSlideSizes","indexes","from","slidesInGap","gap","findSlideBounds","offset","findLoopPoints","isEndEdge","slideBounds","initial","altered","boundEdge","loopPoint","canLoop","otherIndexes","slideLocation","shiftLocation","SlidesHandler","watchSlides","mutationObserver","mutations","mutation","SlidesInView","threshold","intersectionEntryMap","inViewCache","notInViewCache","intersectionObserver","createInViewList","inView","list","isIntersecting","SlideSizes","readEdgeGap","withEdgeGap","startGap","measureStartGap","endGap","measureEndGap","measureWithGaps","slideRect","style","SlidesToScroll","groupByNumber","byNumber","groupSize","bySize","rectB","rectA","edgeA","edgeB","gapA","gapB","chunkSize","currentSize","previousSize","Engine","scrollAxis","startIndex","inViewThreshold","dragHandler","scrollLooper","slideLooper","shouldSettle","withinBounds","hasSettled","hasSettledAndIdle","interpolatedLocation","engine","startLocation","scrollProgress","slidesInView","slideFocus","EventHandler","api","getListeners","emit","e","on","cb","off","defaultOptions","OptionsHandler","mergeOptions","optionsAtMedia","matchedMediaOptions","media","mediaOption","optionsMediaQueries","optionsList","acc","mediaQueries","PluginsHandler","optionsHandler","activePlugins","map","EmblaCarousel","userOptions","userPlugins","pluginsHandler","mediaHandlers","reInit","reActivate","optionsBase","pluginList","pluginApis","storeElements","userContainer","userSlides","customSlides","createEngine","optionsWithoutLoop","activate","withOptions","withPlugins","query","selectedScrollSnap","deActivate","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","scrollSnapList","previousScrollSnap","slidesNotInView","internalEngine","containerNode","slideNodes","useEmblaCarousel","storedOptions","useRef","storedPlugins","setEmblaApi","useState","viewport","setViewport","useCallback","useEffect","newEmblaApi","CarouselContext","React","useCarousel","context","Carousel","orientation","opts","setApi","className","children","props","ref","carouselRef","setCanScrollPrev","setCanScrollNext","onSelect","handleKeyDown","jsx","cn","CarouselContent","CarouselItem","CarouselPrevious","variant","size","jsxs","Button","ArrowLeft","CarouselNext","ArrowRight"],"mappings":"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","x_google_ignoreList":[0,1,2]}