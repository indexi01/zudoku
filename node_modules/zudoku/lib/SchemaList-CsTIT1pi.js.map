{"version":3,"file":"SchemaList-CsTIT1pi.js","sources":["../src/lib/plugins/openapi/SchemaList.tsx"],"sourcesContent":["import slugify from \"@sindresorhus/slugify\";\nimport { useSuspenseQuery } from \"@tanstack/react-query\";\nimport {\n  ChevronRightIcon,\n  ChevronsDownUpIcon,\n  ChevronsUpDownIcon,\n} from \"lucide-react\";\nimport { Button } from \"zudoku/ui/Button.js\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"zudoku/ui/Collapsible.js\";\nimport { CategoryHeading } from \"../../components/CategoryHeading.js\";\nimport { Heading } from \"../../components/Heading.js\";\nimport { Markdown, ProseClasses } from \"../../components/Markdown.js\";\nimport { Toc } from \"../../components/navigation/Toc.js\";\nimport { cn } from \"../../util/cn.js\";\nimport { useCreateQuery } from \"./client/useCreateQuery.js\";\nimport { useOasConfig } from \"./context.js\";\nimport { graphql } from \"./graphql/gql.js\";\nimport { SchemaView } from \"./schema/SchemaView.js\";\n\nconst GET_SCHEMAS = graphql(/* GraphQL */ `\n  query GetSchemas($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      title\n      description\n      summary\n      components {\n        schemas {\n          name\n          schema\n          extensions\n        }\n      }\n    }\n  }\n`);\n\nexport function SchemaList() {\n  const { input, type, versions, version, options } = useOasConfig();\n  const schemasQuery = useCreateQuery(GET_SCHEMAS, {\n    input,\n    type,\n  });\n  const { data } = useSuspenseQuery(schemasQuery);\n\n  const schemas = data.schema.components?.schemas ?? [];\n\n  if (!schemas.length) {\n    return <div>No schemas found</div>;\n  }\n\n  const hasMultipleVersions = Object.entries(versions).length > 1;\n  const showVersions =\n    options?.showVersionSelect === \"always\" ||\n    (hasMultipleVersions && options?.showVersionSelect !== \"hide\");\n\n  return (\n    <div\n      className=\"grid grid-cols-[--sidecar-grid-cols] gap-8 justify-between\"\n      data-pagefind-filter=\"section:openapi\"\n      data-pagefind-meta=\"section:openapi\"\n    >\n      <div className=\"pt-[--padding-content-top] pb-[--padding-content-bottom]\">\n        <Collapsible className=\"w-full\">\n          <div className=\"flex flex-col gap-y-4 sm:flex-row justify-around items-start sm:items-end\">\n            <div className=\"flex-1\">\n              <CategoryHeading>{data.schema.title}</CategoryHeading>\n              <Heading\n                level={1}\n                id=\"schemas\"\n                registerSidebarAnchor\n                className=\"mb-0\"\n              >\n                Schemas\n                {showVersions && (\n                  <span className=\"text-xl text-muted-foreground ml-1.5\">\n                    ({version})\n                  </span>\n                )}\n              </Heading>\n            </div>\n            {data.schema.description && (\n              <CollapsibleTrigger className=\"flex items-center gap-1 text-sm font-medium text-muted-foreground group\">\n                <span>API information</span>\n                <ChevronsUpDownIcon\n                  className=\"group-data-[state=open]:hidden translate-y-px\"\n                  size={14}\n                />\n                <ChevronsDownUpIcon\n                  className=\"group-data-[state=closed]:hidden translate-y-px\"\n                  size={13}\n                />\n              </CollapsibleTrigger>\n            )}\n          </div>\n          {data.schema.description && (\n            <CollapsibleContent className=\"CollapsibleContent\">\n              <div\n                className={cn(\n                  ProseClasses,\n                  \"pt-4 max-w-full prose-img:max-w-prose\",\n                )}\n              >\n                <Markdown\n                  className=\"border rounded bg-muted/25 border-border px-2.5 md:px-4\"\n                  content={data.schema.description}\n                />\n              </div>\n            </CollapsibleContent>\n          )}\n        </Collapsible>\n        <hr className=\"my-8\" />\n        <div className=\"flex flex-col gap-y-5\">\n          {schemas.map((schema) => (\n            <Collapsible key={schema.name} className=\"group\" defaultOpen>\n              <Heading\n                registerSidebarAnchor\n                level={2}\n                className=\"flex items-center gap-1 justify-between w-fit\"\n                id={slugify(schema.name)}\n              >\n                {schema.name}{\" \"}\n                <CollapsibleTrigger asChild>\n                  <Button variant=\"ghost\" size=\"icon\" className=\"size-6\">\n                    <ChevronRightIcon\n                      size={16}\n                      className=\"group-data-[state=open]:rotate-90 transition cursor-pointer\"\n                    />\n                  </Button>\n                </CollapsibleTrigger>\n              </Heading>\n              <CollapsibleContent className=\"mt-4 CollapsibleContent\">\n                <SchemaView schema={schema.schema} />\n              </CollapsibleContent>\n            </Collapsible>\n          ))}\n        </div>\n      </div>\n      <Toc\n        entries={schemas.map((schema) => ({\n          id: slugify(schema.name),\n          value: schema.name,\n          depth: 1,\n        }))}\n      />\n    </div>\n  );\n}\n"],"names":["GET_SCHEMAS","graphql","SchemaList","input","type","versions","version","options","useOasConfig","schemasQuery","useCreateQuery","data","useSuspenseQuery","schemas","_a","jsx","hasMultipleVersions","showVersions","jsxs","Collapsible","CategoryHeading","Heading","CollapsibleTrigger","ChevronsUpDownIcon","ChevronsDownUpIcon","CollapsibleContent","cn","ProseClasses","Markdown","schema","slugify","Button","ChevronRightIcon","SchemaView","Toc"],"mappings":"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"}