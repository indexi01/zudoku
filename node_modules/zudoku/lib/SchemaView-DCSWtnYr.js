import { use as L, isValidElement as S, useState as p, useCallback as E } from "react";
import { a as R } from "./context-Lrf2Y9bR.js";
import { i as z, S as A, L as T, T as f, a as B, p as $, C as D } from "./circular-ByJI6Mci.js";
import { j as s } from "./jsx-runtime-C5mzlN2N.js";
import { I as O, S as u, M as I, P as k } from "./Markdown-C5h6bxbE.js";
import { Card as d, CardHeader as q, CardTitle as G, CardContent as M } from "./ui/Card.js";
import { c } from "./cn-qaFjX9_3.js";
import { ChevronsLeftRightIcon as K, ChevronUpIcon as F, ChevronDownIcon as v, CircleIcon as Q, CircleDotIcon as H, CircleFadingPlusIcon as J, SquareMinusIcon as U, SquarePlusIcon as _, MinusIcon as V, PlusIcon as W, RefreshCcwDotIcon as X } from "lucide-react";
import { B as Y } from "./Button-BBNrKpQd.js";
import * as a from "@radix-ui/react-collapsible";
import { Button as Z } from "./ui/Button.js";
import { o as ee } from "./objectEntries-yMIkr2mI.js";
function se(e) {
  const t = z(e) ? e : new A(e), r = t.body, i = new T(t);
  let n = "", o = !1;
  for (; i.advance().kind !== f.EOF; ) {
    const l = i.token, m = l.kind, h = !B(l.kind);
    o && (h || l.kind === f.SPREAD) && (n += " ");
    const w = r.slice(l.start, l.end);
    m === f.BLOCK_STRING ? n += $(l.value, {
      minimize: !0
    }) : n += w, o = h;
  }
  return n;
}
const we = (e, ...[t]) => {
  const r = L(R);
  if (r === void 0)
    throw new Error("useGraphQL must be used within a GraphQLProvider");
  return {
    queryFn: () => r.fetch(e, t),
    queryKey: [se(e.toString()), t]
  };
}, te = (e, t) => e.reduce(
  (r, i) => {
    const n = t(i);
    return r[n] || (r[n] = []), r[n].push(i), r;
  },
  {}
), re = ({ pattern: e }) => {
  const [t, r] = p(!1), i = e.length > 20, n = i ? `${e.slice(0, 20)}…` : e;
  return /* @__PURE__ */ s.jsxs(
    O,
    {
      className: c("text-xs", i && "cursor-pointer"),
      onClick: () => r(!t),
      selectOnClick: !1,
      children: [
        t ? e : n,
        i && /* @__PURE__ */ s.jsx("button", { type: "button", className: "p-1 translate-y-[2px]", children: !t && /* @__PURE__ */ s.jsx(K, { size: 12 }) })
      ]
    }
  );
}, ne = (e) => e ? [
  e.type === "array" && e.items.type ? `${e.items.type}[]` : Array.isArray(e.type) ? e.type.join(" | ") : e.type,
  e.enum && "enum",
  e.format,
  e.minimum && `min: ${e.minimum}`,
  e.maximum && `max: ${e.maximum}`,
  e.minLength && `minLength: ${e.minLength}`,
  e.maxLength && `maxLength: ${e.maxLength}`,
  e.minItems && `minItems: ${e.minItems}`,
  e.maxItems && `maxItems: ${e.maxItems}`,
  e.uniqueItems && "unique",
  e.minProperties && `minProps: ${e.minProperties}`,
  e.maxProperties && `maxProps: ${e.maxProperties}`,
  e.readOnly && "readOnly",
  e.writeOnly && "writeOnly",
  e.deprecated && "deprecated",
  e.pattern && /* @__PURE__ */ s.jsxs(s.Fragment, { children: [
    "pattern: ",
    /* @__PURE__ */ s.jsx(re, { pattern: e.pattern })
  ] })
] : [], j = ({
  schema: e,
  extraItems: t = [],
  className: r
}) => {
  const i = [...ne(e), ...t].flatMap(
    (n) => typeof n == "string" || S(n) ? n : []
  );
  return /* @__PURE__ */ s.jsx("span", { className: r, children: i.map((n, o) => /* @__PURE__ */ s.jsxs("span", { className: "text-muted-foreground", children: [
    n,
    o < i.length - 1 && /* @__PURE__ */ s.jsx("span", { className: "text-muted-foreground/50", children: " · " })
  ] }, o)) });
}, y = ({
  values: e,
  className: t,
  maxVisibleValues: r = 8
}) => {
  const [i, n] = p(!1);
  if (!e.length) return null;
  const o = e.length > r, l = o && !i ? e.slice(0, r) : e;
  return /* @__PURE__ */ s.jsxs("div", { className: c("flex flex-wrap gap-1.5 text-xs", t), children: [
    /* @__PURE__ */ s.jsx("span", { className: "text-muted-foreground", children: "Enum values: " }),
    l.map((m) => /* @__PURE__ */ s.jsx("div", { children: /* @__PURE__ */ s.jsx(u, { className: "border rounded px-1 font-mono", children: m }) }, m)),
    o && /* @__PURE__ */ s.jsx(
      Y,
      {
        variant: "ghost",
        size: "sm",
        className: "h-fit px-0",
        onClick: () => n(!i),
        children: i ? /* @__PURE__ */ s.jsxs("div", { className: "flex items-center gap-1", children: [
          /* @__PURE__ */ s.jsx(F, { size: 12 }),
          /* @__PURE__ */ s.jsx("span", { className: "text-muted-foreground", children: "show less" })
        ] }) : /* @__PURE__ */ s.jsxs("div", { className: "flex items-center gap-1", children: [
          /* @__PURE__ */ s.jsx(v, { size: 12 }),
          /* @__PURE__ */ s.jsxs("span", { className: "text-muted-foreground", children: [
            "show ",
            e.length - r,
            " more"
          ] })
        ] })
      }
    )
  ] });
}, N = ({
  schema: e
}) => {
  var i;
  const t = (i = e.examples) == null ? void 0 : i.at(0), r = e.default;
  return !t && !r ? null : /* @__PURE__ */ s.jsxs("div", { className: "flex flex-col gap-1 text-xs", children: [
    t && /* @__PURE__ */ s.jsxs("div", { children: [
      /* @__PURE__ */ s.jsx("span", { className: "text-muted-foreground", children: "Example: " }),
      /* @__PURE__ */ s.jsx(u, { className: "border rounded px-1 font-mono", children: typeof t == "object" ? JSON.stringify(t) : t })
    ] }),
    r && /* @__PURE__ */ s.jsxs("div", { children: [
      /* @__PURE__ */ s.jsx("span", { className: "text-muted-foreground", children: "Default: " }),
      /* @__PURE__ */ s.jsx(u, { className: "border rounded px-1 font-mono", children: typeof r == "object" ? JSON.stringify(r) : r })
    ] })
  ] });
}, ie = {
  AND: /* @__PURE__ */ s.jsx(J, { size: 16, className: "fill-card" }),
  OR: /* @__PURE__ */ s.jsx(H, { size: 16, className: "fill-card" }),
  ONE: /* @__PURE__ */ s.jsx(Q, { size: 14, className: "fill-card" })
}, oe = {
  AND: "text-green-500 dark:text-green-300/60",
  OR: "text-blue-400 dark:text-blue-500",
  ONE: "text-purple-500 dark:text-purple-300/60"
}, le = ({
  type: e,
  isOpen: t,
  className: r,
  schemeName: i
}) => /* @__PURE__ */ s.jsx(
  "div",
  {
    className: c(
      oe[e],
      "relative text-sm flex py-2",
      "before:border-l before:absolute before:-top-2 before:-bottom-2 before:border-border before:border-dashed before:content-['']",
      r
    ),
    children: /* @__PURE__ */ s.jsxs("div", { className: "-translate-x-[7px] flex gap-1 items-center", children: [
      ie[e],
      /* @__PURE__ */ s.jsx(
        "div",
        {
          className: c(
            "translate-y-px mx-px opacity-0 group-hover:opacity-100 transition",
            !t && "-rotate-90"
          ),
          children: /* @__PURE__ */ s.jsx(v, { size: 16 })
        }
      ),
      /* @__PURE__ */ s.jsx("span", { className: "text-sm text-foreground", children: i })
    ] })
  }
), ae = (e) => {
  const [t, r] = p(!0);
  return /* @__PURE__ */ s.jsxs(
    a.Root,
    {
      open: t,
      onOpenChange: () => r((i) => !i),
      className: "group",
      children: [
        /* @__PURE__ */ s.jsx(a.Trigger, { children: /* @__PURE__ */ s.jsx(
          le,
          {
            type: e.type,
            isOpen: t,
            schemeName: e.schema.title
          }
        ) }),
        !t && /* @__PURE__ */ s.jsx("div", { className: "wavy-line bg-border translate-y-1" }),
        /* @__PURE__ */ s.jsx(a.Content, { children: /* @__PURE__ */ s.jsx(x, { schema: e.schema }) })
      ]
    }
  );
}, de = {
  AND: "All of",
  OR: "Any of",
  ONE: "One of"
}, ce = ({
  schemas: e,
  type: t,
  isOpen: r,
  toggleOpen: i
}) => /* @__PURE__ */ s.jsx(a.Root, { open: r, onOpenChange: i, asChild: !0, children: /* @__PURE__ */ s.jsxs(d, { className: "px-6", children: [
  /* @__PURE__ */ s.jsxs(a.Trigger, { className: "flex gap-2 items-center py-2 w-full text-sm text-muted-foreground -translate-x-1.5", children: [
    r ? /* @__PURE__ */ s.jsx(U, { size: 14 }) : /* @__PURE__ */ s.jsx(_, { size: 14 }),
    /* @__PURE__ */ s.jsx("span", { children: de[t] })
  ] }),
  /* @__PURE__ */ s.jsx(a.Content, { className: "pb-4", children: e.map((n, o) => (
    // eslint-disable-next-line react/no-array-index-key
    /* @__PURE__ */ s.jsx(ae, { type: t, schema: n }, o)
  )) })
] }) }), xe = (e) => typeof e == "string" && ["string", "number", "boolean", "integer", "null"].includes(e), pe = (e) => e.type === "object" && Object.keys(e.properties ?? {}).length > 0 || e.type === "array" && typeof e.items == "object" && (!e.items.type || e.items.type === "object"), b = (e) => !!(e.oneOf ?? e.allOf ?? e.anyOf), me = {
  allOf: "AND",
  anyOf: "OR",
  oneOf: "ONE"
}, g = (e) => e === D, P = ({ schema: e }) => {
  const [t, r] = p(!0), i = E(() => r((n) => !n), []);
  for (const [n, o] of ee(me))
    if (e[n])
      return /* @__PURE__ */ s.jsx(
        ce,
        {
          schemas: e[n],
          type: o,
          isOpen: t,
          toggleOpen: i
        }
      );
}, C = () => /* @__PURE__ */ s.jsxs(
  O,
  {
    className: "inline-flex items-center gap-1.5 italic text-xs translate-y-0.5",
    selectOnClick: !1,
    children: [
      /* @__PURE__ */ s.jsx(X, { size: 13 }),
      /* @__PURE__ */ s.jsx("span", { children: "circular" })
    ]
  }
), ue = ({
  name: e,
  schema: t,
  group: r,
  defaultOpen: i = !1,
  showCollapseButton: n = !0
}) => {
  const [o, l] = p(i);
  return g(t) ? /* @__PURE__ */ s.jsx("li", { className: "p-4 bg-border/20 hover:bg-border/30", children: /* @__PURE__ */ s.jsxs("div", { className: "flex flex-col gap-2.5 justify-between text-sm", children: [
    /* @__PURE__ */ s.jsxs("div", { className: "space-x-2", children: [
      /* @__PURE__ */ s.jsx("code", { children: e }),
      /* @__PURE__ */ s.jsx(
        j,
        {
          schema: t,
          extraItems: [/* @__PURE__ */ s.jsx(C, {}, "circular-ref")]
        }
      )
    ] }),
    /* @__PURE__ */ s.jsx(N, { schema: t })
  ] }) }) : /* @__PURE__ */ s.jsx("li", { className: "p-4 bg-border/20 hover:bg-border/30", children: /* @__PURE__ */ s.jsxs("div", { className: "flex flex-col gap-2.5 justify-between text-sm", children: [
    /* @__PURE__ */ s.jsxs("div", { className: "space-x-2", children: [
      /* @__PURE__ */ s.jsx(u, { asChild: !0, children: /* @__PURE__ */ s.jsx("code", { children: e }) }),
      /* @__PURE__ */ s.jsx(
        j,
        {
          schema: t,
          extraItems: [
            r !== "optional" && /* @__PURE__ */ s.jsx("span", { className: "text-primary", children: "required" }),
            t.type === "array" && "items" in t && g(t.items) && /* @__PURE__ */ s.jsx(C, {})
          ]
        }
      )
    ] }),
    t.description && /* @__PURE__ */ s.jsx(
      I,
      {
        className: c(k, "text-sm leading-normal line-clamp-4"),
        content: t.description
      }
    ),
    t.type === "array" && "items" in t && t.items.enum && /* @__PURE__ */ s.jsx(y, { values: t.items.enum }),
    t.enum && /* @__PURE__ */ s.jsx(y, { values: t.enum }),
    /* @__PURE__ */ s.jsx(N, { schema: t }),
    (b(t) || pe(t)) && /* @__PURE__ */ s.jsxs(
      a.Root,
      {
        defaultOpen: i,
        open: o,
        onOpenChange: () => l(!o),
        children: [
          n && /* @__PURE__ */ s.jsx(a.Trigger, { asChild: !0, children: /* @__PURE__ */ s.jsxs(Z, { variant: "expand", size: "sm", className: "h-7", children: [
            o ? /* @__PURE__ */ s.jsx(V, { size: 12 }) : /* @__PURE__ */ s.jsx(W, { size: 12 }),
            o ? "Hide properties" : "Show properties"
          ] }) }),
          /* @__PURE__ */ s.jsx(a.Content, { children: /* @__PURE__ */ s.jsx("div", { className: "mt-2", children: b(t) ? /* @__PURE__ */ s.jsx(P, { schema: t }) : t.type === "object" ? /* @__PURE__ */ s.jsx(x, { schema: t }) : t.type === "array" && "items" in t && typeof t.items == "object" && !g(t.items) && /* @__PURE__ */ s.jsx(x, { schema: t.items }) }) })
        ]
      }
    )
  ] }) });
}, je = (e) => e && /* @__PURE__ */ s.jsx(
  I,
  {
    className: c(k, "text-sm leading-normal line-clamp-4"),
    content: e
  }
), fe = (e) => /* @__PURE__ */ s.jsxs(d, { className: "p-4 space-y-2", children: [
  /* @__PURE__ */ s.jsx("span", { className: "text-sm text-muted-foreground", children: /* @__PURE__ */ s.jsx(j, { schema: e }) }),
  e.enum && /* @__PURE__ */ s.jsx(y, { values: e.enum }),
  je(e.description),
  /* @__PURE__ */ s.jsx(N, { schema: e })
] }), x = ({
  schema: e,
  defaultOpen: t = !1
}) => {
  if (!e || Object.keys(e).length === 0)
    return /* @__PURE__ */ s.jsx(d, { className: "p-4", children: /* @__PURE__ */ s.jsx("span", { className: "text-sm text-muted-foreground italic", children: "No schema specified" }) });
  if (b(e))
    return /* @__PURE__ */ s.jsx(P, { schema: e });
  if (xe(e.type))
    return fe(e);
  if (e.type === "array" && typeof e.items == "object")
    return /* @__PURE__ */ s.jsxs(d, { className: "p-4 space-y-2 text-sm", children: [
      /* @__PURE__ */ s.jsx(j, { schema: e }),
      /* @__PURE__ */ s.jsx(x, { schema: e.items })
    ] });
  if (e.type === "object") {
    const r = te(
      Object.entries(e.properties ?? {}),
      ([n, o]) => {
        var l;
        return o.deprecated ? "deprecated" : (l = e.required) != null && l.includes(n) ? "required" : "optional";
      }
    ), i = ["required", "optional", "deprecated"];
    return /* @__PURE__ */ s.jsx(d, { className: "divide-y overflow-hidden", children: i.map(
      (n) => r[n] && /* @__PURE__ */ s.jsx("ul", { className: "divide-y", children: r[n].map(([o, l]) => /* @__PURE__ */ s.jsx(
        ue,
        {
          name: o,
          schema: l,
          group: n,
          defaultOpen: t
        },
        o
      )) }, n)
    ) });
  }
  return e.additionalProperties ? /* @__PURE__ */ s.jsxs(d, { className: "my-2", children: [
    /* @__PURE__ */ s.jsx(q, { children: /* @__PURE__ */ s.jsx(G, { children: "Additional Properties:" }) }),
    /* @__PURE__ */ s.jsx(M, { children: /* @__PURE__ */ s.jsx(x, { schema: e.additionalProperties }) })
  ] }) : null;
};
export {
  y as E,
  j as P,
  x as S,
  N as a,
  te as g,
  we as u
};
//# sourceMappingURL=SchemaView-DCSWtnYr.js.map
