{"version":3,"file":"zudoku.plugin-api-keys.js","sources":["../src/lib/plugins/api-keys/CreateApiKey.tsx","../src/lib/plugins/api-keys/ProtectedRoute.tsx","../src/lib/plugins/api-keys/SettingsApiKeys.tsx","../src/lib/plugins/api-keys/index.tsx"],"sourcesContent":["import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate } from \"react-router\";\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"zudoku/ui/Select.js\";\nimport { useZudoku } from \"../../components/context/ZudokuContext.js\";\nimport { Button } from \"../../ui/Button.js\";\nimport { Input } from \"../../ui/Input.js\";\nimport { ApiKeyService } from \"./index.js\";\n\ntype CreateApiKey = { description: string; expiresOn?: string };\n\nexport const CreateApiKey = ({ service }: { service: ApiKeyService }) => {\n  const context = useZudoku();\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n  const form = useForm<CreateApiKey>({\n    defaultValues: {\n      expiresOn: \"30\",\n    },\n  });\n  const createKeyMutation = useMutation({\n    mutationFn: ({ description, expiresOn }: CreateApiKey) => {\n      if (!service.createKey) {\n        throw new Error(\"createKey not implemented\");\n      }\n\n      const expiresOnDate =\n        expiresOn !== \"never\" ? addDaysToDate(Number(expiresOn)) : undefined;\n\n      return service.createKey(\n        { description: description, expiresOn: expiresOnDate },\n        context,\n      );\n    },\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({ queryKey: [\"api-keys\"] });\n      await navigate(\"/settings/api-keys/\");\n    },\n  });\n\n  if (!service.createKey) {\n    return null;\n  }\n\n  return (\n    <div className=\"max-w-screen-lg pt-[--padding-content-top] pb-[--padding-content-bottom]\">\n      <div className=\"flex justify-between mb-4 border-b pb-1\">\n        <h1 className=\"font-medium text-2xl\">New API Key</h1>\n      </div>\n      <form\n        onSubmit={form.handleSubmit((data) => createKeyMutation.mutate(data))}\n      >\n        <div className=\"flex gap-2 flex-col\">\n          Note\n          <Input {...form.register(\"description\")} />\n          Expiration\n          <Select\n            onValueChange={(value) => form.setValue(\"expiresOn\", value)}\n            defaultValue={form.getValues(\"expiresOn\")}\n          >\n            <SelectTrigger>\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectGroup>\n                {[7, 30, 60, 90].map((option) => (\n                  <SelectItem value={String(option)} key={option}>\n                    {option} days\n                  </SelectItem>\n                ))}\n                <SelectItem value=\"never\">Never</SelectItem>\n              </SelectGroup>\n            </SelectContent>\n          </Select>\n          <div className=\"flex gap-2\">\n            <Button>Generate Key</Button>\n            <Button variant=\"outline\" asChild>\n              <Link to=\"/settings/api-keys/\">Cancel</Link>\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst addDaysToDate = (days: number): string => {\n  const date = new Date();\n  date.setDate(date.getDate() + days);\n  return date.toISOString();\n};\n","import { Outlet } from \"react-router\";\nimport { useAuth } from \"../../authentication/hook.js\";\nimport { DeveloperHint } from \"../../components/DeveloperHint.js\";\nimport { Button } from \"../../ui/Button.js\";\n\nexport const ProtectedRoute = () => {\n  const auth = useAuth();\n\n  // TODO: should we suspend here somehow?\n  if (auth.isAuthEnabled && auth.isPending) {\n    return null;\n  }\n\n  return auth.isAuthenticated ? (\n    <Outlet />\n  ) : !auth.isAuthEnabled ? (\n    <div className=\"flex flex-col justify-center gap-2 items-center h-1/2\">\n      <DeveloperHint className=\"max-w-[600px]\">\n        Authentication needs to be enabled for API keys to work. Enable it in\n        your Zudoku configuration under <code>authentication</code>.\n      </DeveloperHint>\n    </div>\n  ) : (\n    <div className=\"flex flex-col justify-center gap-2 items-center h-1/2\">\n      Please login first to view this page\n      <Button onClick={() => auth.login()}>Login</Button>\n    </div>\n  );\n};\n","import {\n  useMutation,\n  useQueryClient,\n  useSuspenseQuery,\n} from \"@tanstack/react-query\";\nimport {\n  CheckIcon,\n  CopyIcon,\n  EyeIcon,\n  EyeOffIcon,\n  RotateCwIcon,\n  TrashIcon,\n} from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router\";\nimport { useZudoku } from \"../../components/context/ZudokuContext.js\";\nimport { Slotlet } from \"../../components/SlotletProvider.js\";\nimport { Button } from \"../../ui/Button.js\";\nimport { cn } from \"../../util/cn.js\";\nimport { ApiKeyService } from \"./index.js\";\n\nexport const SettingsApiKeys = ({ service }: { service: ApiKeyService }) => {\n  const context = useZudoku();\n  const queryClient = useQueryClient();\n  const { data } = useSuspenseQuery({\n    queryFn: () => service.getKeys(context),\n    queryKey: [\"api-keys\"],\n    retry: false,\n  });\n\n  const deleteKeyMutation = useMutation({\n    mutationFn: (id: string) => {\n      if (!service.deleteKey) {\n        throw new Error(\"deleteKey not implemented\");\n      }\n\n      return service.deleteKey(id, context);\n    },\n    onSuccess: () => {\n      void queryClient.invalidateQueries({ queryKey: [\"api-keys\"] });\n    },\n  });\n\n  const rollKeyMutation = useMutation({\n    mutationFn: (id: string) => {\n      if (!service.rollKey) {\n        throw new Error(\"rollKey not implemented\");\n      }\n\n      return service.rollKey(id, context);\n    },\n    onSuccess: () => queryClient.invalidateQueries({ queryKey: [\"api-keys\"] }),\n  });\n\n  return (\n    <div className=\"max-w-screen-lg h-full pt-[--padding-content-top] pb-[--padding-content-bottom]\">\n      <Slotlet name=\"api-keys-list-page\" />\n\n      <div className=\"flex justify-between mb-4 border-b pb-3\">\n        <h1 className=\"font-medium text-2xl\">API Keys</h1>\n        {service.createKey && (\n          <Button asChild>\n            <Link to=\"/settings/api-keys/new\">Create API Key</Link>\n          </Button>\n        )}\n      </div>\n\n      <Slotlet name=\"api-keys-list-page-before-keys\" />\n\n      {data.length === 0 ? (\n        <div className=\"flex flex-col justify-center gap-4 items-center p-8 border rounded bg-muted/30 text-muted-foreground\">\n          <p className=\"text-center\">\n            No API keys created yet.\n            <br />\n            Get started and create your first key.\n          </p>\n          {service.createKey && (\n            <Button asChild variant=\"outline\">\n              <Link to=\"/settings/api-keys/new\">Create API Key</Link>\n            </Button>\n          )}\n        </div>\n      ) : (\n        <ul\n          className={cn(\n            \"grid grid-cols-1 rounded border divide-y divide-border\",\n            \"lg:grid-cols-[minmax(250px,min-content)_1fr_min-content]\",\n          )}\n        >\n          {data.map((key) => (\n            <li\n              className=\"p-5 grid grid-cols-subgrid col-span-full gap-2 items-center\"\n              key={key.id}\n            >\n              <div className=\"flex flex-col gap-1 text-sm\">\n                {key.description ?? key.id}\n                <div className=\"text-muted-foreground text-xs\">\n                  {key.createdOn && (\n                    <div>\n                      Created on {new Date(key.createdOn).toLocaleDateString()}\n                    </div>\n                  )}\n                  {key.expiresOn && (\n                    <div>\n                      Expires on {new Date(key.expiresOn).toLocaleDateString()}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"items-center flex lg:justify-center\">\n                <RevealApiKey apiKey={key.key} />\n              </div>\n              <div className=\"flex gap-2\">\n                {service.rollKey && (\n                  <Button\n                    size=\"icon\"\n                    title=\"Roll this key\"\n                    variant=\"ghost\"\n                    onClick={() => {\n                      if (!confirm(\"Do you want to roll this key?\")) {\n                        return;\n                      }\n\n                      rollKeyMutation.mutate(key.id);\n                    }}\n                  >\n                    <RotateCwIcon size={16} />\n                  </Button>\n                )}\n                {service.deleteKey && (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => {\n                      if (!confirm(\"Do you want to delete this key?\")) {\n                        return;\n                      }\n\n                      deleteKeyMutation.mutate(key.id);\n                    }}\n                    disabled={deleteKeyMutation.isPending}\n                  >\n                    <TrashIcon size={16} />\n                  </Button>\n                )}\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nconst RevealApiKey = ({ apiKey }: { apiKey: string }) => {\n  const [revealed, setRevealed] = useState(false);\n  const [copied, setCopied] = useState(false);\n\n  return (\n    <div className=\"flex gap-2 items-center text-sm\">\n      <div className=\"border rounded bg-gray-100 dark:bg-gray-950 p-1 font-mono truncate h-9 items-center flex px-2\">\n        {revealed ? apiKey : \"â€¢\".repeat(apiKey.length)}\n      </div>\n      <Button\n        variant=\"outline\"\n        onClick={() => setRevealed((prev) => !prev)}\n        size=\"icon\"\n      >\n        {revealed ? <EyeOffIcon size={16} /> : <EyeIcon size={16} />}\n      </Button>\n      <Button\n        variant=\"outline\"\n        onClick={() => {\n          void navigator.clipboard.writeText(apiKey).then(() => {\n            setCopied(true);\n            setTimeout(() => setCopied(false), 2000);\n          });\n        }}\n        size=\"icon\"\n      >\n        {copied ? <CheckIcon size={16} /> : <CopyIcon size={16} />}\n      </Button>\n    </div>\n  );\n};\n","import { FileKey2Icon } from \"lucide-react\";\nimport { type RouteObject } from \"react-router\";\nimport { ZudokuContext } from \"../../core/ZudokuContext.js\";\nimport {\n  type ApiIdentityPlugin,\n  type ZudokuPlugin,\n  ProfileMenuPlugin,\n} from \"../../core/plugins.js\";\nimport { RouterError } from \"../../errors/RouterError.js\";\nimport invariant from \"../../util/invariant.js\";\nimport { CreateApiKey } from \"./CreateApiKey.js\";\nimport { ProtectedRoute } from \"./ProtectedRoute.js\";\nimport { SettingsApiKeys } from \"./SettingsApiKeys.js\";\n\nconst DEFAULT_API_KEY_ENDPOINT =\n  \"https://zudoku-rewiringamerica-main-ef9c9c0.d2.zuplo.dev\";\n\nexport type ApiKeyService = {\n  getKeys: (context: ZudokuContext) => Promise<ApiKey[]>;\n  rollKey?: (id: string, context: ZudokuContext) => Promise<void>;\n  deleteKey?: (id: string, context: ZudokuContext) => Promise<void>;\n  updateKeyDescription?: (\n    apiKey: { id: string; description: string },\n    context: ZudokuContext,\n  ) => Promise<void>;\n  getUsage?: (apiKeys: string[], context: ZudokuContext) => Promise<void>;\n  createKey?: (\n    apiKey: { description: string; expiresOn?: string },\n    context: ZudokuContext,\n  ) => Promise<void>;\n};\n\nexport type GetApiKeysOptions = ApiKeyService | { endpoint: string } | object;\n\nexport type ApiKeyPluginOptions = object & GetApiKeysOptions;\n\nexport interface ApiKey {\n  id: string;\n  description?: string;\n  createdOn?: string;\n  updatedOn?: string;\n  expiresOn?: string;\n  key: string;\n}\n\nconst createDefaultHandler = (endpoint: string): ApiKeyService => {\n  return {\n    deleteKey: async (id, context) => {\n      const request = new Request(endpoint + `/v1/developer/api-keys/${id}`, {\n        method: \"DELETE\",\n      });\n\n      await context.signRequest(request);\n\n      const response = await fetch(request);\n      invariant(response.ok, \"Failed to delete API key\");\n    },\n    rollKey: async (id, context) => {\n      const response = await fetch(\n        await context.signRequest(\n          new Request(endpoint + `/v1/developer/api-keys/${id}/key`, {\n            method: \"DELETE\",\n          }),\n        ),\n      );\n      invariant(response.ok, \"Failed to delete API key\");\n    },\n    createKey: async (apiKey, context) => {\n      const request = new Request(endpoint + `/v1/developer/api-keys`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(apiKey),\n      });\n\n      await context.signRequest(request);\n\n      const response = await fetch(request);\n      invariant(response.ok, \"Failed to create API key\");\n    },\n    getKeys: async (context) => {\n      const request = new Request(endpoint + `/v1/developer/api-keys`);\n\n      await context.signRequest(request);\n\n      const keys = await fetch(request);\n      invariant(keys.ok, \"Failed to fetch API keys\");\n\n      return await keys.json();\n    },\n  };\n};\n\nexport const createApiKeyService = <T extends ApiKeyService>(service: T): T =>\n  service;\n\nexport const apiKeyPlugin = (\n  options: ApiKeyPluginOptions,\n): ZudokuPlugin & ApiIdentityPlugin & ProfileMenuPlugin => {\n  const endpoint =\n    \"endpoint\" in options ? options.endpoint : DEFAULT_API_KEY_ENDPOINT;\n\n  const service =\n    \"getKeys\" in options ? options : createDefaultHandler(endpoint);\n\n  return {\n    getProfileMenuItems: () => [\n      {\n        label: \"API Keys\",\n        path: \"/settings/api-keys\",\n        category: \"middle\",\n        icon: FileKey2Icon,\n      },\n    ],\n    getIdentities: async (context) => {\n      try {\n        const keys = await service.getKeys(context);\n\n        return keys.map((key) => ({\n          authorizeRequest: (request) => {\n            request.headers.set(\"Authorization\", `Bearer ${key.key}`);\n            return request;\n          },\n          id: key.id,\n          label: key.description ?? key.id,\n        }));\n      } catch {\n        return [];\n      }\n    },\n    getRoutes: (): RouteObject[] => {\n      // TODO: Make lazy\n      return [\n        {\n          element: <ProtectedRoute />,\n          errorElement: <RouterError />,\n          children: [\n            {\n              path: \"/settings/api-keys\",\n              element: <SettingsApiKeys service={service} />,\n            },\n            {\n              path: \"/settings/api-keys/new\",\n              element: <CreateApiKey service={service} />,\n            },\n          ],\n        },\n      ];\n    },\n  };\n};\n"],"names":["CreateApiKey","service","context","useZudoku","queryClient","useQueryClient","navigate","useNavigate","form","useForm","createKeyMutation","useMutation","description","expiresOn","expiresOnDate","addDaysToDate","jsxs","jsx","data","Input","Select","value","SelectTrigger","SelectValue","SelectContent","SelectGroup","option","SelectItem","Button","Link","days","date","ProtectedRoute","auth","useAuth","Outlet","DeveloperHint","SettingsApiKeys","useSuspenseQuery","deleteKeyMutation","id","rollKeyMutation","Slotlet","cn","key","RevealApiKey","RotateCwIcon","TrashIcon","apiKey","revealed","setRevealed","useState","copied","setCopied","prev","EyeOffIcon","EyeIcon","CheckIcon","CopyIcon","DEFAULT_API_KEY_ENDPOINT","createDefaultHandler","endpoint","request","response","invariant","keys","createApiKeyService","apiKeyPlugin","options","FileKey2Icon","RouterError"],"mappings":"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"}