{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\ninterface SpinDelayOptions {\n  /**\n   * The delay in milliseconds before the spinner is displayed.\n   * @default 500\n   */\n  delay?: number;\n  /**\n   * The minimum duration in milliseconds the spinner is displayed.\n   * @default 200\n   */\n  minDuration?: number;\n  /**\n   * Whether to enable the spinner on the server side. If true, `delay` will be\n   * ignored, and the spinner will be shown immediately if `loading` is true.\n   * @default true\n   */\n  ssr?: boolean;\n}\n\ntype State = 'IDLE' | 'DELAY' | 'DISPLAY' | 'EXPIRE';\n\nexport const defaultOptions = {\n  delay: 500,\n  minDuration: 200,\n  ssr: true,\n};\n\nfunction useIsSSR() {\n  const [isSSR, setIsSSR] = useState(true);\n\n  useEffect(() => {\n    setIsSSR(false);\n  }, []);\n\n  return isSSR;\n}\n\nexport function useSpinDelay(\n  loading: boolean,\n  options?: SpinDelayOptions,\n): boolean {\n  options = Object.assign({}, defaultOptions, options);\n\n  const isSSR = useIsSSR() && options.ssr;\n  const initialState = isSSR && loading ? 'DISPLAY' : 'IDLE';\n  const [state, setState] = useState<State>(initialState);\n  const timeout = useRef(null);\n\n  useEffect(() => {\n    if (loading && (state === 'IDLE' || isSSR)) {\n      clearTimeout(timeout.current);\n\n      const delay = isSSR ? 0 : options.delay;\n      timeout.current = setTimeout(() => {\n        if (!loading) {\n          return setState('IDLE');\n        }\n\n        timeout.current = setTimeout(() => {\n          setState('EXPIRE');\n        }, options.minDuration);\n\n        setState('DISPLAY');\n      }, delay);\n\n      if (!isSSR) {\n        setState('DELAY');\n      }\n    }\n\n    if (!loading && state !== 'DISPLAY') {\n      clearTimeout(timeout.current);\n      setState('IDLE');\n    }\n  }, [loading, state, options.delay, options.minDuration, isSSR]);\n\n  useEffect(() => {\n    return () => clearTimeout(timeout.current);\n  }, []);\n\n  return state === 'DISPLAY' || state === 'EXPIRE';\n}\n"],"names":["defaultOptions","delay","minDuration","ssr","useIsSSR","isSSR","setIsSSR","useState","useEffect","useSpinDelay","loading","options","Object","assign","initialState","state","setState","timeout","useRef","clearTimeout","current","setTimeout"],"mappings":";;;;;QAuBaA,cAAc,GAAG;EAC5BC,EAAAA,KAAK,EAAE,GADqB;EAE5BC,EAAAA,WAAW,EAAE,GAFe;EAG5BC,EAAAA,GAAG,EAAE;EAHuB;;EAM9B,SAASC,QAAT;EACE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,cAAQ,CAAC,IAAD,CAAlC;EAEAC,EAAAA,eAAS,CAAC;EACRF,IAAAA,QAAQ,CAAC,KAAD,CAAR;EACD,GAFQ,EAEN,EAFM,CAAT;EAIA,SAAOD,KAAP;EACD;;WAEeI,aACdC,SACAC;EAEAA,EAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,cAAlB,EAAkCW,OAAlC,CAAV;EAEA,QAAMN,KAAK,GAAGD,QAAQ,MAAMO,OAAO,CAACR,GAApC;EACA,QAAMW,YAAY,GAAGT,KAAK,IAAIK,OAAT,GAAmB,SAAnB,GAA+B,MAApD;EACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,cAAQ,CAAQO,YAAR,CAAlC;EACA,QAAMG,OAAO,GAAGC,YAAM,CAAC,IAAD,CAAtB;EAEAV,EAAAA,eAAS,CAAC;EACR,QAAIE,OAAO,KAAKK,KAAK,KAAK,MAAV,IAAoBV,KAAzB,CAAX,EAA4C;EAC1Cc,MAAAA,YAAY,CAACF,OAAO,CAACG,OAAT,CAAZ;EAEA,YAAMnB,KAAK,GAAGI,KAAK,GAAG,CAAH,GAAOM,OAAO,CAACV,KAAlC;EACAgB,MAAAA,OAAO,CAACG,OAAR,GAAkBC,UAAU,CAAC;EAC3B,YAAI,CAACX,OAAL,EAAc;EACZ,iBAAOM,QAAQ,CAAC,MAAD,CAAf;EACD;;EAEDC,QAAAA,OAAO,CAACG,OAAR,GAAkBC,UAAU,CAAC;EAC3BL,UAAAA,QAAQ,CAAC,QAAD,CAAR;EACD,SAF2B,EAEzBL,OAAO,CAACT,WAFiB,CAA5B;EAIAc,QAAAA,QAAQ,CAAC,SAAD,CAAR;EACD,OAV2B,EAUzBf,KAVyB,CAA5B;;EAYA,UAAI,CAACI,KAAL,EAAY;EACVW,QAAAA,QAAQ,CAAC,OAAD,CAAR;EACD;EACF;;EAED,QAAI,CAACN,OAAD,IAAYK,KAAK,KAAK,SAA1B,EAAqC;EACnCI,MAAAA,YAAY,CAACF,OAAO,CAACG,OAAT,CAAZ;EACAJ,MAAAA,QAAQ,CAAC,MAAD,CAAR;EACD;EACF,GA1BQ,EA0BN,CAACN,OAAD,EAAUK,KAAV,EAAiBJ,OAAO,CAACV,KAAzB,EAAgCU,OAAO,CAACT,WAAxC,EAAqDG,KAArD,CA1BM,CAAT;EA4BAG,EAAAA,eAAS,CAAC;EACR,WAAO,MAAMW,YAAY,CAACF,OAAO,CAACG,OAAT,CAAzB;EACD,GAFQ,EAEN,EAFM,CAAT;EAIA,SAAOL,KAAK,KAAK,SAAV,IAAuBA,KAAK,KAAK,QAAxC;EACD;;;;;;;;;"}